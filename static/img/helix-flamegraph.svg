<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" height="1142" onload="init(evt)" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames &gt; *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1142" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1125.00">Function: std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="850.0000610351562" y="24.00">Search</text><text id="matched" x="850.0000610351562" y="1125.00"> </text><svg id="frames" x="10" width="940.0000610351562" total_samples="8389"><g><title>__GI___libc_free (123 samples, 1.47%)</title><rect x="0.0119%" y="1045" width="1.4662%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="123"/><text x="0.3310%" y="1055.50"/></g><g><title>__GI___libc_malloc (103 samples, 1.23%)</title><rect x="1.4781%" y="1045" width="1.2278%" height="15" fill="rgb(217,0,24)" fg:x="124" fg:w="103"/><text x="1.7972%" y="1055.50"/></g><g><title>_int_free (74 samples, 0.88%)</title><rect x="2.7059%" y="1045" width="0.8821%" height="15" fill="rgb(221,193,54)" fg:x="227" fg:w="74"/><text x="3.0250%" y="1055.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="3.5880%" y="1045" width="0.0596%" height="15" fill="rgb(248,212,6)" fg:x="301" fg:w="5"/><text x="3.9071%" y="1055.50"/></g><g><title>array__splice.constprop.0 (2 samples, 0.02%)</title><rect x="3.6476%" y="1045" width="0.0238%" height="15" fill="rgb(208,68,35)" fg:x="306" fg:w="2"/><text x="3.9667%" y="1055.50"/></g><g><title>operator new (51 samples, 0.61%)</title><rect x="3.6715%" y="1045" width="0.6079%" height="15" fill="rgb(232,128,0)" fg:x="308" fg:w="51"/><text x="3.9906%" y="1055.50"/></g><g><title>regex_syntax::escape_into (1 samples, 0.01%)</title><rect x="4.2794%" y="1045" width="0.0119%" height="15" fill="rgb(207,160,47)" fg:x="359" fg:w="1"/><text x="4.5985%" y="1055.50"/></g><g><title>state::column (1 samples, 0.01%)</title><rect x="4.2913%" y="1045" width="0.0119%" height="15" fill="rgb(228,23,34)" fg:x="360" fg:w="1"/><text x="4.6104%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), logic::nested_comment(unsigned short)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="4.3033%" y="1045" width="0.0119%" height="15" fill="rgb(218,30,26)" fg:x="361" fg:w="1"/><text x="4.6224%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="4.3152%" y="1045" width="0.2503%" height="15" fill="rgb(220,122,19)" fg:x="362" fg:w="21"/><text x="4.6343%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="4.5655%" y="1045" width="0.0119%" height="15" fill="rgb(250,228,42)" fg:x="383" fg:w="1"/><text x="4.8846%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (41 samples, 0.49%)</title><rect x="4.5774%" y="1045" width="0.4887%" height="15" fill="rgb(240,193,28)" fg:x="384" fg:w="41"/><text x="4.8965%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="5.0662%" y="1045" width="0.0119%" height="15" fill="rgb(216,20,37)" fg:x="425" fg:w="1"/><text x="5.3853%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="5.0781%" y="1045" width="0.1788%" height="15" fill="rgb(206,188,39)" fg:x="426" fg:w="15"/><text x="5.3972%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="5.2569%" y="1045" width="0.0358%" height="15" fill="rgb(217,207,13)" fg:x="441" fg:w="3"/><text x="5.5760%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="5.2926%" y="1045" width="0.1430%" height="15" fill="rgb(231,73,38)" fg:x="444" fg:w="12"/><text x="5.6117%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="5.4357%" y="1045" width="0.0119%" height="15" fill="rgb(225,20,46)" fg:x="456" fg:w="1"/><text x="5.7548%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (37 samples, 0.44%)</title><rect x="5.4476%" y="1045" width="0.4411%" height="15" fill="rgb(210,31,41)" fg:x="457" fg:w="37"/><text x="5.7667%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="5.8887%" y="1045" width="0.0119%" height="15" fill="rgb(221,200,47)" fg:x="494" fg:w="1"/><text x="6.2078%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="5.9006%" y="1045" width="0.0238%" height="15" fill="rgb(226,26,5)" fg:x="495" fg:w="2"/><text x="6.2197%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (18 samples, 0.21%)</title><rect x="5.9244%" y="1045" width="0.2146%" height="15" fill="rgb(249,33,26)" fg:x="497" fg:w="18"/><text x="6.2435%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="6.1390%" y="1045" width="0.1550%" height="15" fill="rgb(235,183,28)" fg:x="515" fg:w="13"/><text x="6.4581%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), bool const (*)(State&amp;)&gt;::_M_manager (1 samples, 0.01%)</title><rect x="6.2940%" y="1045" width="0.0119%" height="15" fill="rgb(221,5,38)" fg:x="528" fg:w="1"/><text x="6.6131%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="6.3059%" y="1045" width="0.0715%" height="15" fill="rgb(247,18,42)" fg:x="529" fg:w="6"/><text x="6.6250%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::column(unsigned int)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="6.3774%" y="1045" width="0.0119%" height="15" fill="rgb(241,131,45)" fg:x="535" fg:w="1"/><text x="6.6965%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="6.3893%" y="1045" width="0.1192%" height="15" fill="rgb(249,31,29)" fg:x="536" fg:w="10"/><text x="6.7084%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="6.5085%" y="1045" width="0.0834%" height="15" fill="rgb(225,111,53)" fg:x="546" fg:w="7"/><text x="6.8276%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="6.5920%" y="1045" width="0.0358%" height="15" fill="rgb(238,160,17)" fg:x="553" fg:w="3"/><text x="6.9111%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="6.6277%" y="1045" width="0.0119%" height="15" fill="rgb(214,148,48)" fg:x="556" fg:w="1"/><text x="6.9468%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="6.6396%" y="1045" width="0.1550%" height="15" fill="rgb(232,36,49)" fg:x="557" fg:w="13"/><text x="6.9587%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="6.7946%" y="1045" width="0.0715%" height="15" fill="rgb(209,103,24)" fg:x="570" fg:w="6"/><text x="7.1137%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="6.8661%" y="1045" width="0.0358%" height="15" fill="rgb(229,88,8)" fg:x="576" fg:w="3"/><text x="7.1852%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), bool (*)(unsigned int)&gt;::_M_manager (1 samples, 0.01%)</title><rect x="6.9019%" y="1045" width="0.0119%" height="15" fill="rgb(213,181,19)" fg:x="579" fg:w="1"/><text x="7.2210%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="6.9138%" y="1045" width="0.1073%" height="15" fill="rgb(254,191,54)" fg:x="580" fg:w="9"/><text x="7.2329%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="7.0211%" y="1045" width="0.0715%" height="15" fill="rgb(241,83,37)" fg:x="589" fg:w="6"/><text x="7.3402%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="7.0926%" y="1045" width="0.0954%" height="15" fill="rgb(233,36,39)" fg:x="595" fg:w="8"/><text x="7.4117%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="7.1880%" y="1045" width="0.0715%" height="15" fill="rgb(226,3,54)" fg:x="603" fg:w="6"/><text x="7.5071%" y="1055.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="7.2595%" y="1045" width="0.0119%" height="15" fill="rgb(245,192,40)" fg:x="609" fg:w="1"/><text x="7.5786%" y="1055.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="7.2714%" y="1045" width="0.0119%" height="15" fill="rgb(238,167,29)" fg:x="610" fg:w="1"/><text x="7.5905%" y="1055.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="7.2833%" y="1045" width="0.1430%" height="15" fill="rgb(232,182,51)" fg:x="611" fg:w="12"/><text x="7.6024%" y="1055.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="7.4264%" y="1045" width="0.0477%" height="15" fill="rgb(231,60,39)" fg:x="623" fg:w="4"/><text x="7.7455%" y="1055.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), parser::pop::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="7.4741%" y="1045" width="0.0596%" height="15" fill="rgb(208,69,12)" fg:x="627" fg:w="5"/><text x="7.7932%" y="1055.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), parser::push(unsigned short)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="7.5337%" y="1045" width="0.0119%" height="15" fill="rgb(235,93,37)" fg:x="632" fg:w="1"/><text x="7.8528%" y="1055.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), parser::skipspace::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="7.5456%" y="1045" width="0.0238%" height="15" fill="rgb(213,116,39)" fg:x="633" fg:w="2"/><text x="7.8647%" y="1055.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="7.5694%" y="1045" width="0.1669%" height="15" fill="rgb(222,207,29)" fg:x="635" fg:w="14"/><text x="7.8885%" y="1055.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (9 samples, 0.11%)</title><rect x="7.7363%" y="1045" width="0.1073%" height="15" fill="rgb(206,96,30)" fg:x="649" fg:w="9"/><text x="8.0554%" y="1055.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (20 samples, 0.24%)</title><rect x="7.8436%" y="1045" width="0.2384%" height="15" fill="rgb(218,138,4)" fg:x="658" fg:w="20"/><text x="8.1627%" y="1055.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2 samples, 0.02%)</title><rect x="8.0820%" y="1045" width="0.0238%" height="15" fill="rgb(250,191,14)" fg:x="678" fg:w="2"/><text x="8.4011%" y="1055.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (65 samples, 0.77%)</title><rect x="8.1059%" y="1045" width="0.7748%" height="15" fill="rgb(239,60,40)" fg:x="680" fg:w="65"/><text x="8.4250%" y="1055.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function&lt;std::function&lt;Result (State)&gt;, void, void&gt; (1 samples, 0.01%)</title><rect x="8.8807%" y="1045" width="0.0119%" height="15" fill="rgb(206,27,48)" fg:x="745" fg:w="1"/><text x="9.1998%" y="1055.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (26 samples, 0.31%)</title><rect x="8.8926%" y="1045" width="0.3099%" height="15" fill="rgb(225,35,8)" fg:x="746" fg:w="26"/><text x="9.2117%" y="1055.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (32 samples, 0.38%)</title><rect x="9.2025%" y="1045" width="0.3815%" height="15" fill="rgb(250,213,24)" fg:x="772" fg:w="32"/><text x="9.5216%" y="1055.50"/></g><g><title>ts_lexer_start (1 samples, 0.01%)</title><rect x="9.5840%" y="1045" width="0.0119%" height="15" fill="rgb(247,123,22)" fg:x="804" fg:w="1"/><text x="9.9031%" y="1055.50"/></g><g><title>ts_node_end_byte (1 samples, 0.01%)</title><rect x="9.5959%" y="1045" width="0.0119%" height="15" fill="rgb(231,138,38)" fg:x="805" fg:w="1"/><text x="9.9150%" y="1055.50"/></g><g><title>ts_stack_pop_count (1 samples, 0.01%)</title><rect x="9.6078%" y="1045" width="0.0119%" height="15" fill="rgb(231,145,46)" fg:x="806" fg:w="1"/><text x="9.9269%" y="1055.50"/></g><g><title>ts_stack_version_count (1 samples, 0.01%)</title><rect x="9.6197%" y="1045" width="0.0119%" height="15" fill="rgb(251,118,11)" fg:x="807" fg:w="1"/><text x="9.9388%" y="1055.50"/></g><g><title>ts_subtree_new_node (1 samples, 0.01%)</title><rect x="9.6317%" y="1045" width="0.0119%" height="15" fill="rgb(217,147,25)" fg:x="808" fg:w="1"/><text x="9.9508%" y="1055.50"/></g><g><title>[[heap]] (809 samples, 9.64%)</title><rect x="0.0119%" y="1061" width="9.6436%" height="15" fill="rgb(247,81,37)" fg:x="1" fg:w="809"/><text x="0.3310%" y="1071.50">[[heap]] </text></g><g><title>ts_subtree_release (1 samples, 0.01%)</title><rect x="9.6436%" y="1045" width="0.0119%" height="15" fill="rgb(209,12,38)" fg:x="809" fg:w="1"/><text x="9.9627%" y="1055.50"/></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="9.6555%" y="1045" width="0.0119%" height="15" fill="rgb(227,1,9)" fg:x="810" fg:w="1"/><text x="9.9746%" y="1055.50"/></g><g><title>__GI___libc_free (16 samples, 0.19%)</title><rect x="9.6674%" y="1045" width="0.1907%" height="15" fill="rgb(248,47,43)" fg:x="811" fg:w="16"/><text x="9.9865%" y="1055.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="9.8581%" y="1045" width="0.1073%" height="15" fill="rgb(221,10,30)" fg:x="827" fg:w="9"/><text x="10.1772%" y="1055.50"/></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="9.9654%" y="1045" width="0.0119%" height="15" fill="rgb(210,229,1)" fg:x="836" fg:w="1"/><text x="10.2845%" y="1055.50"/></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="9.9774%" y="1045" width="0.0119%" height="15" fill="rgb(222,148,37)" fg:x="837" fg:w="1"/><text x="10.2965%" y="1055.50"/></g><g><title>_int_free (118 samples, 1.41%)</title><rect x="9.9893%" y="1045" width="1.4066%" height="15" fill="rgb(234,67,33)" fg:x="838" fg:w="118"/><text x="10.3084%" y="1055.50"/></g><g><title>_int_malloc (13 samples, 0.15%)</title><rect x="11.3959%" y="1045" width="0.1550%" height="15" fill="rgb(247,98,35)" fg:x="956" fg:w="13"/><text x="11.7150%" y="1055.50"/></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="11.5508%" y="1045" width="0.0119%" height="15" fill="rgb(247,138,52)" fg:x="969" fg:w="1"/><text x="11.8699%" y="1055.50"/></g><g><title>cond::check_indent (1 samples, 0.01%)</title><rect x="11.5628%" y="1045" width="0.0119%" height="15" fill="rgb(213,79,30)" fg:x="970" fg:w="1"/><text x="11.8819%" y="1055.50"/></g><g><title>cond::consume_if (1 samples, 0.01%)</title><rect x="11.5747%" y="1045" width="0.0119%" height="15" fill="rgb(246,177,23)" fg:x="971" fg:w="1"/><text x="11.8938%" y="1055.50"/></g><g><title>cond::indent_lesseq (1 samples, 0.01%)</title><rect x="11.5866%" y="1045" width="0.0119%" height="15" fill="rgb(230,62,27)" fg:x="972" fg:w="1"/><text x="11.9057%" y="1055.50"/></g><g><title>cond::newline (1 samples, 0.01%)</title><rect x="11.5985%" y="1045" width="0.0119%" height="15" fill="rgb(216,154,8)" fg:x="973" fg:w="1"/><text x="11.9176%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="11.5985%" y="1029" width="0.0119%" height="15" fill="rgb(244,35,45)" fg:x="973" fg:w="1"/><text x="11.9176%" y="1039.50"/></g><g><title>cond::peek (1 samples, 0.01%)</title><rect x="11.6104%" y="1045" width="0.0119%" height="15" fill="rgb(251,115,12)" fg:x="974" fg:w="1"/><text x="11.9295%" y="1055.50"/></g><g><title>cond::peeks (1 samples, 0.01%)</title><rect x="11.6224%" y="1045" width="0.0119%" height="15" fill="rgb(240,54,50)" fg:x="975" fg:w="1"/><text x="11.9415%" y="1055.50"/></g><g><title>eval::eval (2 samples, 0.02%)</title><rect x="11.6343%" y="1045" width="0.0238%" height="15" fill="rgb(233,84,52)" fg:x="976" fg:w="2"/><text x="11.9534%" y="1055.50"/></g><g><title>helix_term::ui::editor::EditorView::render_text_highlights (1 samples, 0.01%)</title><rect x="11.6581%" y="1045" width="0.0119%" height="15" fill="rgb(207,117,47)" fg:x="978" fg:w="1"/><text x="11.9772%" y="1055.50"/></g><g><title>ignore::gitignore::GitignoreBuilder::add_line (1 samples, 0.01%)</title><rect x="11.6700%" y="1045" width="0.0119%" height="15" fill="rgb(249,43,39)" fg:x="979" fg:w="1"/><text x="11.9891%" y="1055.50"/></g><g><title>logic::layout_start (4 samples, 0.05%)</title><rect x="11.6820%" y="1045" width="0.0477%" height="15" fill="rgb(209,38,44)" fg:x="980" fg:w="4"/><text x="12.0011%" y="1055.50"/></g><g><title>logic::newline_semicolon (1 samples, 0.01%)</title><rect x="11.7296%" y="1045" width="0.0119%" height="15" fill="rgb(236,212,23)" fg:x="984" fg:w="1"/><text x="12.0487%" y="1055.50"/></g><g><title>logic::post_end_semicolon (4 samples, 0.05%)</title><rect x="11.7416%" y="1045" width="0.0477%" height="15" fill="rgb(242,79,21)" fg:x="985" fg:w="4"/><text x="12.0607%" y="1055.50"/></g><g><title>logic::repeat_end (2 samples, 0.02%)</title><rect x="11.7892%" y="1045" width="0.0238%" height="15" fill="rgb(211,96,35)" fg:x="989" fg:w="2"/><text x="12.1083%" y="1055.50"/></g><g><title>logic::symop (2 samples, 0.02%)</title><rect x="11.8131%" y="1045" width="0.0238%" height="15" fill="rgb(253,215,40)" fg:x="991" fg:w="2"/><text x="12.1322%" y="1055.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="11.8369%" y="1045" width="0.0715%" height="15" fill="rgb(211,81,21)" fg:x="993" fg:w="6"/><text x="12.1560%" y="1055.50"/></g><g><title>parser::as_char_parser (1 samples, 0.01%)</title><rect x="11.9085%" y="1045" width="0.0119%" height="15" fill="rgb(208,190,38)" fg:x="999" fg:w="1"/><text x="12.2276%" y="1055.50"/></g><g><title>parser::either (1 samples, 0.01%)</title><rect x="11.9204%" y="1045" width="0.0119%" height="15" fill="rgb(235,213,38)" fg:x="1000" fg:w="1"/><text x="12.2395%" y="1055.50"/></g><g><title>parser::fail (1 samples, 0.01%)</title><rect x="11.9323%" y="1045" width="0.0119%" height="15" fill="rgb(237,122,38)" fg:x="1001" fg:w="1"/><text x="12.2514%" y="1055.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.01%)</title><rect x="11.9323%" y="1029" width="0.0119%" height="15" fill="rgb(244,218,35)" fg:x="1001" fg:w="1"/><text x="12.2514%" y="1039.50"/></g><g><title>parser::finish (2 samples, 0.02%)</title><rect x="11.9442%" y="1045" width="0.0238%" height="15" fill="rgb(240,68,47)" fg:x="1002" fg:w="2"/><text x="12.2633%" y="1055.50"/></g><g><title>parser::iff (1 samples, 0.01%)</title><rect x="11.9681%" y="1045" width="0.0119%" height="15" fill="rgb(210,16,53)" fg:x="1004" fg:w="1"/><text x="12.2872%" y="1055.50"/></g><g><title>parser::operator+ (3 samples, 0.04%)</title><rect x="11.9800%" y="1045" width="0.0358%" height="15" fill="rgb(235,124,12)" fg:x="1005" fg:w="3"/><text x="12.2991%" y="1055.50"/></g><g><title>parser::when (1 samples, 0.01%)</title><rect x="12.0157%" y="1045" width="0.0119%" height="15" fill="rgb(224,169,11)" fg:x="1008" fg:w="1"/><text x="12.3348%" y="1055.50"/></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump_space (1 samples, 0.01%)</title><rect x="12.0277%" y="1045" width="0.0119%" height="15" fill="rgb(250,166,2)" fg:x="1009" fg:w="1"/><text x="12.3468%" y="1055.50"/></g><g><title>ropey::tree::text_info::TextInfo::from_str (1 samples, 0.01%)</title><rect x="12.0396%" y="1045" width="0.0119%" height="15" fill="rgb(242,216,29)" fg:x="1010" fg:w="1"/><text x="12.3587%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (4 samples, 0.05%)</title><rect x="12.0515%" y="1045" width="0.0477%" height="15" fill="rgb(230,116,27)" fg:x="1011" fg:w="4"/><text x="12.3706%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (20 samples, 0.24%)</title><rect x="12.0992%" y="1045" width="0.2384%" height="15" fill="rgb(228,99,48)" fg:x="1015" fg:w="20"/><text x="12.4183%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (4 samples, 0.05%)</title><rect x="12.3376%" y="1045" width="0.0477%" height="15" fill="rgb(253,11,6)" fg:x="1035" fg:w="4"/><text x="12.6567%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="12.3853%" y="1045" width="0.2742%" height="15" fill="rgb(247,143,39)" fg:x="1039" fg:w="23"/><text x="12.7044%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="12.6594%" y="1045" width="0.1430%" height="15" fill="rgb(236,97,10)" fg:x="1062" fg:w="12"/><text x="12.9785%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="12.8025%" y="1045" width="0.0358%" height="15" fill="rgb(233,208,19)" fg:x="1074" fg:w="3"/><text x="13.1216%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (20 samples, 0.24%)</title><rect x="12.8382%" y="1045" width="0.2384%" height="15" fill="rgb(216,164,2)" fg:x="1077" fg:w="20"/><text x="13.1573%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (7 samples, 0.08%)</title><rect x="13.0766%" y="1045" width="0.0834%" height="15" fill="rgb(220,129,5)" fg:x="1097" fg:w="7"/><text x="13.3957%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (31 samples, 0.37%)</title><rect x="13.1601%" y="1045" width="0.3695%" height="15" fill="rgb(242,17,10)" fg:x="1104" fg:w="31"/><text x="13.4792%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="13.5296%" y="1045" width="0.0238%" height="15" fill="rgb(242,107,0)" fg:x="1135" fg:w="2"/><text x="13.8487%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="13.5535%" y="1045" width="0.0119%" height="15" fill="rgb(251,28,31)" fg:x="1137" fg:w="1"/><text x="13.8726%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_invoke (2 samples, 0.02%)</title><rect x="13.5654%" y="1045" width="0.0238%" height="15" fill="rgb(233,223,10)" fg:x="1138" fg:w="2"/><text x="13.8845%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (42 samples, 0.50%)</title><rect x="13.5892%" y="1045" width="0.5007%" height="15" fill="rgb(215,21,27)" fg:x="1140" fg:w="42"/><text x="13.9083%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="14.0899%" y="1045" width="0.0119%" height="15" fill="rgb(232,23,21)" fg:x="1182" fg:w="1"/><text x="14.4090%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="14.1018%" y="1045" width="0.0596%" height="15" fill="rgb(244,5,23)" fg:x="1183" fg:w="5"/><text x="14.4209%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="14.1614%" y="1045" width="0.0238%" height="15" fill="rgb(226,81,46)" fg:x="1188" fg:w="2"/><text x="14.4805%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="14.1852%" y="1045" width="0.0358%" height="15" fill="rgb(247,70,30)" fg:x="1190" fg:w="3"/><text x="14.5043%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="14.2210%" y="1045" width="0.0596%" height="15" fill="rgb(212,68,19)" fg:x="1193" fg:w="5"/><text x="14.5401%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="14.2806%" y="1045" width="0.0238%" height="15" fill="rgb(240,187,13)" fg:x="1198" fg:w="2"/><text x="14.5997%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="14.3044%" y="1045" width="0.0477%" height="15" fill="rgb(223,113,26)" fg:x="1200" fg:w="4"/><text x="14.6235%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="14.3521%" y="1045" width="0.0119%" height="15" fill="rgb(206,192,2)" fg:x="1204" fg:w="1"/><text x="14.6712%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="14.3640%" y="1045" width="0.0834%" height="15" fill="rgb(241,108,4)" fg:x="1205" fg:w="7"/><text x="14.6831%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="14.4475%" y="1045" width="0.0238%" height="15" fill="rgb(247,173,49)" fg:x="1212" fg:w="2"/><text x="14.7666%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="14.4713%" y="1045" width="0.0238%" height="15" fill="rgb(224,114,35)" fg:x="1214" fg:w="2"/><text x="14.7904%" y="1055.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="14.4952%" y="1045" width="0.0238%" height="15" fill="rgb(245,159,27)" fg:x="1216" fg:w="2"/><text x="14.8143%" y="1055.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="14.5190%" y="1045" width="0.0119%" height="15" fill="rgb(245,172,44)" fg:x="1218" fg:w="1"/><text x="14.8381%" y="1055.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="14.5309%" y="1045" width="0.0238%" height="15" fill="rgb(236,23,11)" fg:x="1219" fg:w="2"/><text x="14.8500%" y="1055.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="14.5548%" y="1045" width="0.0119%" height="15" fill="rgb(205,117,38)" fg:x="1221" fg:w="1"/><text x="14.8739%" y="1055.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="14.5667%" y="1045" width="0.0119%" height="15" fill="rgb(237,72,25)" fg:x="1222" fg:w="1"/><text x="14.8858%" y="1055.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="14.5786%" y="1045" width="0.0119%" height="15" fill="rgb(244,70,9)" fg:x="1223" fg:w="1"/><text x="14.8977%" y="1055.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="14.5905%" y="1045" width="0.0596%" height="15" fill="rgb(217,125,39)" fg:x="1224" fg:w="5"/><text x="14.9096%" y="1055.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::consume_until(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#2}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="14.6501%" y="1045" width="0.0119%" height="15" fill="rgb(235,36,10)" fg:x="1229" fg:w="1"/><text x="14.9692%" y="1055.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="14.6621%" y="1045" width="0.0358%" height="15" fill="rgb(251,123,47)" fg:x="1230" fg:w="3"/><text x="14.9812%" y="1055.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="14.6978%" y="1045" width="0.1311%" height="15" fill="rgb(221,13,13)" fg:x="1233" fg:w="11"/><text x="15.0169%" y="1055.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (11 samples, 0.13%)</title><rect x="14.8289%" y="1045" width="0.1311%" height="15" fill="rgb(238,131,9)" fg:x="1244" fg:w="11"/><text x="15.1480%" y="1055.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.04%)</title><rect x="14.9601%" y="1045" width="0.0358%" height="15" fill="rgb(211,50,8)" fg:x="1255" fg:w="3"/><text x="15.2792%" y="1055.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="14.9958%" y="1045" width="0.0119%" height="15" fill="rgb(245,182,24)" fg:x="1258" fg:w="1"/><text x="15.3149%" y="1055.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.01%)</title><rect x="15.0077%" y="1045" width="0.0119%" height="15" fill="rgb(242,14,37)" fg:x="1259" fg:w="1"/><text x="15.3268%" y="1055.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="15.0197%" y="1045" width="0.0596%" height="15" fill="rgb(246,228,12)" fg:x="1260" fg:w="5"/><text x="15.3388%" y="1055.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function&lt;std::function&lt;Result (State)&gt;, void, void&gt; (2 samples, 0.02%)</title><rect x="15.0793%" y="1045" width="0.0238%" height="15" fill="rgb(213,55,15)" fg:x="1265" fg:w="2"/><text x="15.3984%" y="1055.50"/></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (1 samples, 0.01%)</title><rect x="15.1031%" y="1045" width="0.0119%" height="15" fill="rgb(209,9,3)" fg:x="1267" fg:w="1"/><text x="15.4222%" y="1055.50"/></g><g><title>syms::all (1 samples, 0.01%)</title><rect x="15.1150%" y="1045" width="0.0119%" height="15" fill="rgb(230,59,30)" fg:x="1268" fg:w="1"/><text x="15.4341%" y="1055.50"/></g><g><title>[[stack]] (460 samples, 5.48%)</title><rect x="9.6555%" y="1061" width="5.4834%" height="15" fill="rgb(209,121,21)" fg:x="810" fg:w="460"/><text x="9.9746%" y="1071.50">..tack]] </text></g><g><title>ts_lexer__get_lookahead (1 samples, 0.01%)</title><rect x="15.1270%" y="1045" width="0.0119%" height="15" fill="rgb(220,109,13)" fg:x="1269" fg:w="1"/><text x="15.4461%" y="1055.50"/></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.05%)</title><rect x="15.1389%" y="1045" width="0.0477%" height="15" fill="rgb(232,18,1)" fg:x="1270" fg:w="4"/><text x="15.4580%" y="1055.50"/></g><g><title>[anon] (5 samples, 0.06%)</title><rect x="15.1389%" y="1061" width="0.0596%" height="15" fill="rgb(215,41,42)" fg:x="1270" fg:w="5"/><text x="15.4580%" y="1071.50"/></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="15.1866%" y="1045" width="0.0119%" height="15" fill="rgb(224,123,36)" fg:x="1274" fg:w="1"/><text x="15.5057%" y="1055.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="15.1985%" y="1045" width="0.0238%" height="15" fill="rgb(240,125,3)" fg:x="1275" fg:w="2"/><text x="15.5176%" y="1055.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.2223%" y="1045" width="0.0119%" height="15" fill="rgb(205,98,50)" fg:x="1277" fg:w="1"/><text x="15.5414%" y="1055.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.2342%" y="1045" width="0.0119%" height="15" fill="rgb(205,185,37)" fg:x="1278" fg:w="1"/><text x="15.5533%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="15.2462%" y="1045" width="0.0119%" height="15" fill="rgb(238,207,15)" fg:x="1279" fg:w="1"/><text x="15.5653%" y="1055.50"/></g><g><title>[haskell.so] (7 samples, 0.08%)</title><rect x="15.1985%" y="1061" width="0.0834%" height="15" fill="rgb(213,199,42)" fg:x="1275" fg:w="7"/><text x="15.5176%" y="1071.50"/></g><g><title>ts_parser_parse (2 samples, 0.02%)</title><rect x="15.2581%" y="1045" width="0.0238%" height="15" fill="rgb(235,201,11)" fg:x="1280" fg:w="2"/><text x="15.5772%" y="1055.50"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="15.2819%" y="1045" width="0.0119%" height="15" fill="rgb(207,46,11)" fg:x="1282" fg:w="1"/><text x="15.6010%" y="1055.50"/></g><g><title>helix_term::application::Application::new (1 samples, 0.01%)</title><rect x="15.2938%" y="1029" width="0.0119%" height="15" fill="rgb(241,35,35)" fg:x="1283" fg:w="1"/><text x="15.6129%" y="1039.50"/></g><g><title>toml::de::from_slice (1 samples, 0.01%)</title><rect x="15.2938%" y="1013" width="0.0119%" height="15" fill="rgb(243,32,47)" fg:x="1283" fg:w="1"/><text x="15.6129%" y="1023.50"/></g><g><title>&lt;&amp;mut toml::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.01%)</title><rect x="15.2938%" y="997" width="0.0119%" height="15" fill="rgb(247,202,23)" fg:x="1283" fg:w="1"/><text x="15.6129%" y="1007.50"/></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.01%)</title><rect x="15.2938%" y="981" width="0.0119%" height="15" fill="rgb(219,102,11)" fg:x="1283" fg:w="1"/><text x="15.6129%" y="991.50"/></g><g><title>&lt;toml::de::MapVisitor as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.01%)</title><rect x="15.2938%" y="965" width="0.0119%" height="15" fill="rgb(243,110,44)" fg:x="1283" fg:w="1"/><text x="15.6129%" y="975.50"/></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.01%)</title><rect x="15.2938%" y="949" width="0.0119%" height="15" fill="rgb(222,74,54)" fg:x="1283" fg:w="1"/><text x="15.6129%" y="959.50"/></g><g><title>&lt;toml::de::MapVisitor as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.01%)</title><rect x="15.2938%" y="933" width="0.0119%" height="15" fill="rgb(216,99,12)" fg:x="1283" fg:w="1"/><text x="15.6129%" y="943.50"/></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.01%)</title><rect x="15.2938%" y="917" width="0.0119%" height="15" fill="rgb(226,22,26)" fg:x="1283" fg:w="1"/><text x="15.6129%" y="927.50"/></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (1 samples, 0.01%)</title><rect x="15.2938%" y="901" width="0.0119%" height="15" fill="rgb(217,163,10)" fg:x="1283" fg:w="1"/><text x="15.6129%" y="911.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.2938%" y="885" width="0.0119%" height="15" fill="rgb(213,25,53)" fg:x="1283" fg:w="1"/><text x="15.6129%" y="895.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.2938%" y="869" width="0.0119%" height="15" fill="rgb(252,105,26)" fg:x="1283" fg:w="1"/><text x="15.6129%" y="879.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="15.3058%" y="709" width="0.0119%" height="15" fill="rgb(220,39,43)" fg:x="1284" fg:w="1"/><text x="15.6249%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3058%" y="693" width="0.0119%" height="15" fill="rgb(229,68,48)" fg:x="1284" fg:w="1"/><text x="15.6249%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3058%" y="677" width="0.0119%" height="15" fill="rgb(252,8,32)" fg:x="1284" fg:w="1"/><text x="15.6249%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3058%" y="661" width="0.0119%" height="15" fill="rgb(223,20,43)" fg:x="1284" fg:w="1"/><text x="15.6249%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3058%" y="645" width="0.0119%" height="15" fill="rgb(229,81,49)" fg:x="1284" fg:w="1"/><text x="15.6249%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="15.3058%" y="629" width="0.0119%" height="15" fill="rgb(236,28,36)" fg:x="1284" fg:w="1"/><text x="15.6249%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.3058%" y="613" width="0.0119%" height="15" fill="rgb(249,185,26)" fg:x="1284" fg:w="1"/><text x="15.6249%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="15.3177%" y="677" width="0.0119%" height="15" fill="rgb(249,174,33)" fg:x="1285" fg:w="1"/><text x="15.6368%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3177%" y="661" width="0.0119%" height="15" fill="rgb(233,201,37)" fg:x="1285" fg:w="1"/><text x="15.6368%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3177%" y="645" width="0.0119%" height="15" fill="rgb(221,78,26)" fg:x="1285" fg:w="1"/><text x="15.6368%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3177%" y="629" width="0.0119%" height="15" fill="rgb(250,127,30)" fg:x="1285" fg:w="1"/><text x="15.6368%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3177%" y="613" width="0.0119%" height="15" fill="rgb(230,49,44)" fg:x="1285" fg:w="1"/><text x="15.6368%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3177%" y="597" width="0.0119%" height="15" fill="rgb(229,67,23)" fg:x="1285" fg:w="1"/><text x="15.6368%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3177%" y="581" width="0.0119%" height="15" fill="rgb(249,83,47)" fg:x="1285" fg:w="1"/><text x="15.6368%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="15.3177%" y="565" width="0.0119%" height="15" fill="rgb(215,43,3)" fg:x="1285" fg:w="1"/><text x="15.6368%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.3177%" y="549" width="0.0119%" height="15" fill="rgb(238,154,13)" fg:x="1285" fg:w="1"/><text x="15.6368%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="15.3058%" y="757" width="0.0358%" height="15" fill="rgb(219,56,2)" fg:x="1284" fg:w="3"/><text x="15.6249%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="15.3058%" y="741" width="0.0358%" height="15" fill="rgb(233,0,4)" fg:x="1284" fg:w="3"/><text x="15.6249%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="15.3058%" y="725" width="0.0358%" height="15" fill="rgb(235,30,7)" fg:x="1284" fg:w="3"/><text x="15.6249%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="15.3177%" y="709" width="0.0238%" height="15" fill="rgb(250,79,13)" fg:x="1285" fg:w="2"/><text x="15.6368%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="15.3177%" y="693" width="0.0238%" height="15" fill="rgb(211,146,34)" fg:x="1285" fg:w="2"/><text x="15.6368%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="15.3296%" y="677" width="0.0119%" height="15" fill="rgb(228,22,38)" fg:x="1286" fg:w="1"/><text x="15.6487%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="15.3296%" y="661" width="0.0119%" height="15" fill="rgb(235,168,5)" fg:x="1286" fg:w="1"/><text x="15.6487%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), bool (*)(unsigned int)&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="15.3296%" y="645" width="0.0119%" height="15" fill="rgb(221,155,16)" fg:x="1286" fg:w="1"/><text x="15.6487%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3415%" y="533" width="0.0119%" height="15" fill="rgb(215,215,53)" fg:x="1287" fg:w="1"/><text x="15.6606%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="15.3415%" y="517" width="0.0119%" height="15" fill="rgb(223,4,10)" fg:x="1287" fg:w="1"/><text x="15.6606%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.3415%" y="501" width="0.0119%" height="15" fill="rgb(234,103,6)" fg:x="1287" fg:w="1"/><text x="15.6606%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.3415%" y="581" width="0.0238%" height="15" fill="rgb(227,97,0)" fg:x="1287" fg:w="2"/><text x="15.6606%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.3415%" y="565" width="0.0238%" height="15" fill="rgb(234,150,53)" fg:x="1287" fg:w="2"/><text x="15.6606%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.3415%" y="549" width="0.0238%" height="15" fill="rgb(228,201,54)" fg:x="1287" fg:w="2"/><text x="15.6606%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3534%" y="533" width="0.0119%" height="15" fill="rgb(222,22,37)" fg:x="1288" fg:w="1"/><text x="15.6725%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3534%" y="517" width="0.0119%" height="15" fill="rgb(237,53,32)" fg:x="1288" fg:w="1"/><text x="15.6725%" y="527.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3534%" y="501" width="0.0119%" height="15" fill="rgb(233,25,53)" fg:x="1288" fg:w="1"/><text x="15.6725%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="15.3534%" y="485" width="0.0119%" height="15" fill="rgb(210,40,34)" fg:x="1288" fg:w="1"/><text x="15.6725%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.3534%" y="469" width="0.0119%" height="15" fill="rgb(241,220,44)" fg:x="1288" fg:w="1"/><text x="15.6725%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="15.3415%" y="757" width="0.0358%" height="15" fill="rgb(235,28,35)" fg:x="1287" fg:w="3"/><text x="15.6606%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="15.3415%" y="741" width="0.0358%" height="15" fill="rgb(210,56,17)" fg:x="1287" fg:w="3"/><text x="15.6606%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="15.3415%" y="725" width="0.0358%" height="15" fill="rgb(224,130,29)" fg:x="1287" fg:w="3"/><text x="15.6606%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="15.3415%" y="709" width="0.0358%" height="15" fill="rgb(235,212,8)" fg:x="1287" fg:w="3"/><text x="15.6606%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="15.3415%" y="693" width="0.0358%" height="15" fill="rgb(223,33,50)" fg:x="1287" fg:w="3"/><text x="15.6606%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="15.3415%" y="677" width="0.0358%" height="15" fill="rgb(219,149,13)" fg:x="1287" fg:w="3"/><text x="15.6606%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="15.3415%" y="661" width="0.0358%" height="15" fill="rgb(250,156,29)" fg:x="1287" fg:w="3"/><text x="15.6606%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="15.3415%" y="645" width="0.0358%" height="15" fill="rgb(216,193,19)" fg:x="1287" fg:w="3"/><text x="15.6606%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="15.3415%" y="629" width="0.0358%" height="15" fill="rgb(216,135,14)" fg:x="1287" fg:w="3"/><text x="15.6606%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="15.3415%" y="613" width="0.0358%" height="15" fill="rgb(241,47,5)" fg:x="1287" fg:w="3"/><text x="15.6606%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="15.3415%" y="597" width="0.0358%" height="15" fill="rgb(233,42,35)" fg:x="1287" fg:w="3"/><text x="15.6606%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3654%" y="581" width="0.0119%" height="15" fill="rgb(231,13,6)" fg:x="1289" fg:w="1"/><text x="15.6845%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3654%" y="565" width="0.0119%" height="15" fill="rgb(207,181,40)" fg:x="1289" fg:w="1"/><text x="15.6845%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3654%" y="549" width="0.0119%" height="15" fill="rgb(254,173,49)" fg:x="1289" fg:w="1"/><text x="15.6845%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3654%" y="533" width="0.0119%" height="15" fill="rgb(221,1,38)" fg:x="1289" fg:w="1"/><text x="15.6845%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="15.3654%" y="517" width="0.0119%" height="15" fill="rgb(206,124,46)" fg:x="1289" fg:w="1"/><text x="15.6845%" y="527.50"/></g><g><title>parser::operator+ (1 samples, 0.01%)</title><rect x="15.3773%" y="709" width="0.0119%" height="15" fill="rgb(249,21,11)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3773%" y="693" width="0.0119%" height="15" fill="rgb(222,201,40)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.3773%" y="677" width="0.0119%" height="15" fill="rgb(235,61,29)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3773%" y="661" width="0.0119%" height="15" fill="rgb(219,207,3)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.3773%" y="645" width="0.0119%" height="15" fill="rgb(222,56,46)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3773%" y="629" width="0.0119%" height="15" fill="rgb(239,76,54)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.3773%" y="613" width="0.0119%" height="15" fill="rgb(231,124,27)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3773%" y="597" width="0.0119%" height="15" fill="rgb(249,195,6)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.3773%" y="581" width="0.0119%" height="15" fill="rgb(237,174,47)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3773%" y="565" width="0.0119%" height="15" fill="rgb(206,201,31)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.3773%" y="549" width="0.0119%" height="15" fill="rgb(231,57,52)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3773%" y="533" width="0.0119%" height="15" fill="rgb(248,177,22)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.3773%" y="517" width="0.0119%" height="15" fill="rgb(215,211,37)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3773%" y="501" width="0.0119%" height="15" fill="rgb(241,128,51)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.3773%" y="485" width="0.0119%" height="15" fill="rgb(227,165,31)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3773%" y="469" width="0.0119%" height="15" fill="rgb(228,167,24)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.3773%" y="453" width="0.0119%" height="15" fill="rgb(228,143,12)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3773%" y="437" width="0.0119%" height="15" fill="rgb(249,149,8)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.3773%" y="421" width="0.0119%" height="15" fill="rgb(243,35,44)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="431.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.3773%" y="405" width="0.0119%" height="15" fill="rgb(246,89,9)" fg:x="1290" fg:w="1"/><text x="15.6964%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.3892%" y="709" width="0.0119%" height="15" fill="rgb(233,213,13)" fg:x="1291" fg:w="1"/><text x="15.7083%" y="719.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="15.3892%" y="693" width="0.0119%" height="15" fill="rgb(233,141,41)" fg:x="1291" fg:w="1"/><text x="15.7083%" y="703.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.3892%" y="677" width="0.0119%" height="15" fill="rgb(239,167,4)" fg:x="1291" fg:w="1"/><text x="15.7083%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4011%" y="693" width="0.0119%" height="15" fill="rgb(209,217,16)" fg:x="1292" fg:w="1"/><text x="15.7202%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4011%" y="677" width="0.0119%" height="15" fill="rgb(219,88,35)" fg:x="1292" fg:w="1"/><text x="15.7202%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4011%" y="661" width="0.0119%" height="15" fill="rgb(220,193,23)" fg:x="1292" fg:w="1"/><text x="15.7202%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4011%" y="645" width="0.0119%" height="15" fill="rgb(230,90,52)" fg:x="1292" fg:w="1"/><text x="15.7202%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4011%" y="629" width="0.0119%" height="15" fill="rgb(252,106,19)" fg:x="1292" fg:w="1"/><text x="15.7202%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4011%" y="613" width="0.0119%" height="15" fill="rgb(206,74,20)" fg:x="1292" fg:w="1"/><text x="15.7202%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="15.4011%" y="597" width="0.0119%" height="15" fill="rgb(230,138,44)" fg:x="1292" fg:w="1"/><text x="15.7202%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.4011%" y="581" width="0.0119%" height="15" fill="rgb(235,182,43)" fg:x="1292" fg:w="1"/><text x="15.7202%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.4011%" y="709" width="0.0238%" height="15" fill="rgb(242,16,51)" fg:x="1292" fg:w="2"/><text x="15.7202%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4130%" y="693" width="0.0119%" height="15" fill="rgb(248,9,4)" fg:x="1293" fg:w="1"/><text x="15.7321%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4130%" y="677" width="0.0119%" height="15" fill="rgb(210,31,22)" fg:x="1293" fg:w="1"/><text x="15.7321%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4130%" y="661" width="0.0119%" height="15" fill="rgb(239,54,39)" fg:x="1293" fg:w="1"/><text x="15.7321%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4130%" y="645" width="0.0119%" height="15" fill="rgb(230,99,41)" fg:x="1293" fg:w="1"/><text x="15.7321%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="15.4130%" y="629" width="0.0119%" height="15" fill="rgb(253,106,12)" fg:x="1293" fg:w="1"/><text x="15.7321%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.4130%" y="613" width="0.0119%" height="15" fill="rgb(213,46,41)" fg:x="1293" fg:w="1"/><text x="15.7321%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.4250%" y="709" width="0.0119%" height="15" fill="rgb(215,133,35)" fg:x="1294" fg:w="1"/><text x="15.7441%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4250%" y="693" width="0.0119%" height="15" fill="rgb(213,28,5)" fg:x="1294" fg:w="1"/><text x="15.7441%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.4250%" y="677" width="0.0119%" height="15" fill="rgb(215,77,49)" fg:x="1294" fg:w="1"/><text x="15.7441%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4250%" y="661" width="0.0119%" height="15" fill="rgb(248,100,22)" fg:x="1294" fg:w="1"/><text x="15.7441%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.4250%" y="645" width="0.0119%" height="15" fill="rgb(208,67,9)" fg:x="1294" fg:w="1"/><text x="15.7441%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.4250%" y="629" width="0.0119%" height="15" fill="rgb(219,133,21)" fg:x="1294" fg:w="1"/><text x="15.7441%" y="639.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.4250%" y="613" width="0.0119%" height="15" fill="rgb(246,46,29)" fg:x="1294" fg:w="1"/><text x="15.7441%" y="623.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.4369%" y="581" width="0.0119%" height="15" fill="rgb(246,185,52)" fg:x="1295" fg:w="1"/><text x="15.7560%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.4369%" y="565" width="0.0119%" height="15" fill="rgb(252,136,11)" fg:x="1295" fg:w="1"/><text x="15.7560%" y="575.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.4369%" y="549" width="0.0119%" height="15" fill="rgb(219,138,53)" fg:x="1295" fg:w="1"/><text x="15.7560%" y="559.50"/></g><g><title>parser::either (2 samples, 0.02%)</title><rect x="15.4369%" y="677" width="0.0238%" height="15" fill="rgb(211,51,23)" fg:x="1295" fg:w="2"/><text x="15.7560%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.4369%" y="661" width="0.0238%" height="15" fill="rgb(247,221,28)" fg:x="1295" fg:w="2"/><text x="15.7560%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="15.4369%" y="645" width="0.0238%" height="15" fill="rgb(251,222,45)" fg:x="1295" fg:w="2"/><text x="15.7560%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.4369%" y="629" width="0.0238%" height="15" fill="rgb(217,162,53)" fg:x="1295" fg:w="2"/><text x="15.7560%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="15.4369%" y="613" width="0.0238%" height="15" fill="rgb(229,93,14)" fg:x="1295" fg:w="2"/><text x="15.7560%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.4369%" y="597" width="0.0238%" height="15" fill="rgb(209,67,49)" fg:x="1295" fg:w="2"/><text x="15.7560%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.4488%" y="581" width="0.0119%" height="15" fill="rgb(213,87,29)" fg:x="1296" fg:w="1"/><text x="15.7679%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4488%" y="565" width="0.0119%" height="15" fill="rgb(205,151,52)" fg:x="1296" fg:w="1"/><text x="15.7679%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.4488%" y="549" width="0.0119%" height="15" fill="rgb(253,215,39)" fg:x="1296" fg:w="1"/><text x="15.7679%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4488%" y="533" width="0.0119%" height="15" fill="rgb(221,220,41)" fg:x="1296" fg:w="1"/><text x="15.7679%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.4488%" y="517" width="0.0119%" height="15" fill="rgb(218,133,21)" fg:x="1296" fg:w="1"/><text x="15.7679%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4488%" y="501" width="0.0119%" height="15" fill="rgb(221,193,43)" fg:x="1296" fg:w="1"/><text x="15.7679%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.4488%" y="485" width="0.0119%" height="15" fill="rgb(240,128,52)" fg:x="1296" fg:w="1"/><text x="15.7679%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.4488%" y="469" width="0.0119%" height="15" fill="rgb(253,114,12)" fg:x="1296" fg:w="1"/><text x="15.7679%" y="479.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.4488%" y="453" width="0.0119%" height="15" fill="rgb(215,223,47)" fg:x="1296" fg:w="1"/><text x="15.7679%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4607%" y="661" width="0.0119%" height="15" fill="rgb(248,225,23)" fg:x="1297" fg:w="1"/><text x="15.7798%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4607%" y="645" width="0.0119%" height="15" fill="rgb(250,108,0)" fg:x="1297" fg:w="1"/><text x="15.7798%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4607%" y="629" width="0.0119%" height="15" fill="rgb(228,208,7)" fg:x="1297" fg:w="1"/><text x="15.7798%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4607%" y="613" width="0.0119%" height="15" fill="rgb(244,45,10)" fg:x="1297" fg:w="1"/><text x="15.7798%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4607%" y="597" width="0.0119%" height="15" fill="rgb(207,125,25)" fg:x="1297" fg:w="1"/><text x="15.7798%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4607%" y="581" width="0.0119%" height="15" fill="rgb(210,195,18)" fg:x="1297" fg:w="1"/><text x="15.7798%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4607%" y="565" width="0.0119%" height="15" fill="rgb(249,80,12)" fg:x="1297" fg:w="1"/><text x="15.7798%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4607%" y="549" width="0.0119%" height="15" fill="rgb(221,65,9)" fg:x="1297" fg:w="1"/><text x="15.7798%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="15.4607%" y="533" width="0.0119%" height="15" fill="rgb(235,49,36)" fg:x="1297" fg:w="1"/><text x="15.7798%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4726%" y="549" width="0.0119%" height="15" fill="rgb(225,32,20)" fg:x="1298" fg:w="1"/><text x="15.7917%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.4726%" y="533" width="0.0119%" height="15" fill="rgb(215,141,46)" fg:x="1298" fg:w="1"/><text x="15.7917%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4726%" y="517" width="0.0119%" height="15" fill="rgb(250,160,47)" fg:x="1298" fg:w="1"/><text x="15.7917%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.4726%" y="501" width="0.0119%" height="15" fill="rgb(216,222,40)" fg:x="1298" fg:w="1"/><text x="15.7917%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4726%" y="485" width="0.0119%" height="15" fill="rgb(234,217,39)" fg:x="1298" fg:w="1"/><text x="15.7917%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.4726%" y="469" width="0.0119%" height="15" fill="rgb(207,178,40)" fg:x="1298" fg:w="1"/><text x="15.7917%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.4726%" y="453" width="0.0119%" height="15" fill="rgb(221,136,13)" fg:x="1298" fg:w="1"/><text x="15.7917%" y="463.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.4726%" y="437" width="0.0119%" height="15" fill="rgb(249,199,10)" fg:x="1298" fg:w="1"/><text x="15.7917%" y="447.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (5 samples, 0.06%)</title><rect x="15.4369%" y="693" width="0.0596%" height="15" fill="rgb(249,222,13)" fg:x="1295" fg:w="5"/><text x="15.7560%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="15.4607%" y="677" width="0.0358%" height="15" fill="rgb(244,185,38)" fg:x="1297" fg:w="3"/><text x="15.7798%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="15.4726%" y="661" width="0.0238%" height="15" fill="rgb(236,202,9)" fg:x="1298" fg:w="2"/><text x="15.7917%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.4726%" y="645" width="0.0238%" height="15" fill="rgb(250,229,37)" fg:x="1298" fg:w="2"/><text x="15.7917%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="15.4726%" y="629" width="0.0238%" height="15" fill="rgb(206,174,23)" fg:x="1298" fg:w="2"/><text x="15.7917%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.4726%" y="613" width="0.0238%" height="15" fill="rgb(211,33,43)" fg:x="1298" fg:w="2"/><text x="15.7917%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="15.4726%" y="597" width="0.0238%" height="15" fill="rgb(245,58,50)" fg:x="1298" fg:w="2"/><text x="15.7917%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.4726%" y="581" width="0.0238%" height="15" fill="rgb(244,68,36)" fg:x="1298" fg:w="2"/><text x="15.7917%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="15.4726%" y="565" width="0.0238%" height="15" fill="rgb(232,229,15)" fg:x="1298" fg:w="2"/><text x="15.7917%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4846%" y="549" width="0.0119%" height="15" fill="rgb(254,30,23)" fg:x="1299" fg:w="1"/><text x="15.8037%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.4846%" y="533" width="0.0119%" height="15" fill="rgb(235,160,14)" fg:x="1299" fg:w="1"/><text x="15.8037%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4846%" y="517" width="0.0119%" height="15" fill="rgb(212,155,44)" fg:x="1299" fg:w="1"/><text x="15.8037%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.4846%" y="501" width="0.0119%" height="15" fill="rgb(226,2,50)" fg:x="1299" fg:w="1"/><text x="15.8037%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4846%" y="485" width="0.0119%" height="15" fill="rgb(234,177,6)" fg:x="1299" fg:w="1"/><text x="15.8037%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.4846%" y="469" width="0.0119%" height="15" fill="rgb(217,24,9)" fg:x="1299" fg:w="1"/><text x="15.8037%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4846%" y="453" width="0.0119%" height="15" fill="rgb(220,13,46)" fg:x="1299" fg:w="1"/><text x="15.8037%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.4846%" y="437" width="0.0119%" height="15" fill="rgb(239,221,27)" fg:x="1299" fg:w="1"/><text x="15.8037%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4846%" y="421" width="0.0119%" height="15" fill="rgb(222,198,25)" fg:x="1299" fg:w="1"/><text x="15.8037%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.4846%" y="405" width="0.0119%" height="15" fill="rgb(211,99,13)" fg:x="1299" fg:w="1"/><text x="15.8037%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4846%" y="389" width="0.0119%" height="15" fill="rgb(232,111,31)" fg:x="1299" fg:w="1"/><text x="15.8037%" y="399.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4846%" y="373" width="0.0119%" height="15" fill="rgb(245,82,37)" fg:x="1299" fg:w="1"/><text x="15.8037%" y="383.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="15.4846%" y="357" width="0.0119%" height="15" fill="rgb(227,149,46)" fg:x="1299" fg:w="1"/><text x="15.8037%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4846%" y="341" width="0.0119%" height="15" fill="rgb(218,36,50)" fg:x="1299" fg:w="1"/><text x="15.8037%" y="351.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="15.4846%" y="325" width="0.0119%" height="15" fill="rgb(226,80,48)" fg:x="1299" fg:w="1"/><text x="15.8037%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.4846%" y="309" width="0.0119%" height="15" fill="rgb(238,224,15)" fg:x="1299" fg:w="1"/><text x="15.8037%" y="319.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.4846%" y="293" width="0.0119%" height="15" fill="rgb(241,136,10)" fg:x="1299" fg:w="1"/><text x="15.8037%" y="303.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.4846%" y="277" width="0.0119%" height="15" fill="rgb(208,32,45)" fg:x="1299" fg:w="1"/><text x="15.8037%" y="287.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.4846%" y="261" width="0.0119%" height="15" fill="rgb(207,135,9)" fg:x="1299" fg:w="1"/><text x="15.8037%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.4965%" y="677" width="0.0238%" height="15" fill="rgb(206,86,44)" fg:x="1300" fg:w="2"/><text x="15.8156%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.4965%" y="661" width="0.0238%" height="15" fill="rgb(245,177,15)" fg:x="1300" fg:w="2"/><text x="15.8156%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.4965%" y="645" width="0.0238%" height="15" fill="rgb(206,64,50)" fg:x="1300" fg:w="2"/><text x="15.8156%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.4965%" y="629" width="0.0238%" height="15" fill="rgb(234,36,40)" fg:x="1300" fg:w="2"/><text x="15.8156%" y="639.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.5084%" y="613" width="0.0119%" height="15" fill="rgb(213,64,8)" fg:x="1301" fg:w="1"/><text x="15.8275%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="15.5084%" y="597" width="0.0119%" height="15" fill="rgb(210,75,36)" fg:x="1301" fg:w="1"/><text x="15.8275%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.5084%" y="581" width="0.0119%" height="15" fill="rgb(229,88,21)" fg:x="1301" fg:w="1"/><text x="15.8275%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.5203%" y="677" width="0.0119%" height="15" fill="rgb(252,204,47)" fg:x="1302" fg:w="1"/><text x="15.8394%" y="687.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="15.5203%" y="661" width="0.0119%" height="15" fill="rgb(208,77,27)" fg:x="1302" fg:w="1"/><text x="15.8394%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.5322%" y="629" width="0.0119%" height="15" fill="rgb(221,76,26)" fg:x="1303" fg:w="1"/><text x="15.8513%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.5322%" y="613" width="0.0119%" height="15" fill="rgb(225,139,18)" fg:x="1303" fg:w="1"/><text x="15.8513%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.5322%" y="597" width="0.0119%" height="15" fill="rgb(230,137,11)" fg:x="1303" fg:w="1"/><text x="15.8513%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.5322%" y="581" width="0.0119%" height="15" fill="rgb(212,28,1)" fg:x="1303" fg:w="1"/><text x="15.8513%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.5322%" y="565" width="0.0119%" height="15" fill="rgb(248,164,17)" fg:x="1303" fg:w="1"/><text x="15.8513%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.5322%" y="549" width="0.0119%" height="15" fill="rgb(222,171,42)" fg:x="1303" fg:w="1"/><text x="15.8513%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.5322%" y="533" width="0.0119%" height="15" fill="rgb(243,84,45)" fg:x="1303" fg:w="1"/><text x="15.8513%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.5322%" y="517" width="0.0119%" height="15" fill="rgb(252,49,23)" fg:x="1303" fg:w="1"/><text x="15.8513%" y="527.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.5322%" y="501" width="0.0119%" height="15" fill="rgb(215,19,7)" fg:x="1303" fg:w="1"/><text x="15.8513%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.5322%" y="661" width="0.0238%" height="15" fill="rgb(238,81,41)" fg:x="1303" fg:w="2"/><text x="15.8513%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="15.5322%" y="645" width="0.0238%" height="15" fill="rgb(210,199,37)" fg:x="1303" fg:w="2"/><text x="15.8513%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.5442%" y="629" width="0.0119%" height="15" fill="rgb(244,192,49)" fg:x="1304" fg:w="1"/><text x="15.8633%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.5442%" y="613" width="0.0119%" height="15" fill="rgb(226,211,11)" fg:x="1304" fg:w="1"/><text x="15.8633%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.5442%" y="597" width="0.0119%" height="15" fill="rgb(236,162,54)" fg:x="1304" fg:w="1"/><text x="15.8633%" y="607.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.5442%" y="581" width="0.0119%" height="15" fill="rgb(220,229,9)" fg:x="1304" fg:w="1"/><text x="15.8633%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.5561%" y="533" width="0.0238%" height="15" fill="rgb(250,87,22)" fg:x="1305" fg:w="2"/><text x="15.8752%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="15.5561%" y="517" width="0.0238%" height="15" fill="rgb(239,43,17)" fg:x="1305" fg:w="2"/><text x="15.8752%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.5561%" y="501" width="0.0238%" height="15" fill="rgb(231,177,25)" fg:x="1305" fg:w="2"/><text x="15.8752%" y="511.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="15.5561%" y="485" width="0.0238%" height="15" fill="rgb(219,179,1)" fg:x="1305" fg:w="2"/><text x="15.8752%" y="495.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="15.5561%" y="469" width="0.0238%" height="15" fill="rgb(238,219,53)" fg:x="1305" fg:w="2"/><text x="15.8752%" y="479.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="15.5561%" y="453" width="0.0238%" height="15" fill="rgb(232,167,36)" fg:x="1305" fg:w="2"/><text x="15.8752%" y="463.50"/></g><g><title>logic::layout_start (18 samples, 0.21%)</title><rect x="15.3773%" y="725" width="0.2146%" height="15" fill="rgb(244,19,51)" fg:x="1290" fg:w="18"/><text x="15.6964%" y="735.50"/></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (13 samples, 0.15%)</title><rect x="15.4369%" y="709" width="0.1550%" height="15" fill="rgb(224,6,22)" fg:x="1295" fg:w="13"/><text x="15.7560%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (8 samples, 0.10%)</title><rect x="15.4965%" y="693" width="0.0954%" height="15" fill="rgb(224,145,5)" fg:x="1300" fg:w="8"/><text x="15.8156%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="15.5322%" y="677" width="0.0596%" height="15" fill="rgb(234,130,49)" fg:x="1303" fg:w="5"/><text x="15.8513%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="15.5561%" y="661" width="0.0358%" height="15" fill="rgb(254,6,2)" fg:x="1305" fg:w="3"/><text x="15.8752%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="15.5561%" y="645" width="0.0358%" height="15" fill="rgb(208,96,46)" fg:x="1305" fg:w="3"/><text x="15.8752%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="15.5561%" y="629" width="0.0358%" height="15" fill="rgb(239,3,39)" fg:x="1305" fg:w="3"/><text x="15.8752%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="15.5561%" y="613" width="0.0358%" height="15" fill="rgb(233,210,1)" fg:x="1305" fg:w="3"/><text x="15.8752%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="15.5561%" y="597" width="0.0358%" height="15" fill="rgb(244,137,37)" fg:x="1305" fg:w="3"/><text x="15.8752%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="15.5561%" y="581" width="0.0358%" height="15" fill="rgb(240,136,2)" fg:x="1305" fg:w="3"/><text x="15.8752%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="15.5561%" y="565" width="0.0358%" height="15" fill="rgb(239,18,37)" fg:x="1305" fg:w="3"/><text x="15.8752%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="15.5561%" y="549" width="0.0358%" height="15" fill="rgb(218,185,22)" fg:x="1305" fg:w="3"/><text x="15.8752%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.5799%" y="533" width="0.0119%" height="15" fill="rgb(225,218,4)" fg:x="1307" fg:w="1"/><text x="15.8990%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.5799%" y="517" width="0.0119%" height="15" fill="rgb(230,182,32)" fg:x="1307" fg:w="1"/><text x="15.8990%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.5799%" y="501" width="0.0119%" height="15" fill="rgb(242,56,43)" fg:x="1307" fg:w="1"/><text x="15.8990%" y="511.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.5799%" y="485" width="0.0119%" height="15" fill="rgb(233,99,24)" fg:x="1307" fg:w="1"/><text x="15.8990%" y="495.50"/></g><g><title>logic::post_end_semicolon (1 samples, 0.01%)</title><rect x="15.5918%" y="725" width="0.0119%" height="15" fill="rgb(234,209,42)" fg:x="1308" fg:w="1"/><text x="15.9109%" y="735.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="15.5918%" y="709" width="0.0119%" height="15" fill="rgb(227,7,12)" fg:x="1308" fg:w="1"/><text x="15.9109%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.5918%" y="693" width="0.0119%" height="15" fill="rgb(245,203,43)" fg:x="1308" fg:w="1"/><text x="15.9109%" y="703.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.5918%" y="677" width="0.0119%" height="15" fill="rgb(238,205,33)" fg:x="1308" fg:w="1"/><text x="15.9109%" y="687.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="15.5918%" y="661" width="0.0119%" height="15" fill="rgb(231,56,7)" fg:x="1308" fg:w="1"/><text x="15.9109%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.6038%" y="613" width="0.0119%" height="15" fill="rgb(244,186,29)" fg:x="1309" fg:w="1"/><text x="15.9229%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.6038%" y="597" width="0.0119%" height="15" fill="rgb(234,111,31)" fg:x="1309" fg:w="1"/><text x="15.9229%" y="607.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.6038%" y="581" width="0.0119%" height="15" fill="rgb(241,149,10)" fg:x="1309" fg:w="1"/><text x="15.9229%" y="591.50"/></g><g><title>parser::layout_end (2 samples, 0.02%)</title><rect x="15.6038%" y="709" width="0.0238%" height="15" fill="rgb(249,206,44)" fg:x="1309" fg:w="2"/><text x="15.9229%" y="719.50"/></g><g><title>parser::operator+ (2 samples, 0.02%)</title><rect x="15.6038%" y="693" width="0.0238%" height="15" fill="rgb(251,153,30)" fg:x="1309" fg:w="2"/><text x="15.9229%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.6038%" y="677" width="0.0238%" height="15" fill="rgb(239,152,38)" fg:x="1309" fg:w="2"/><text x="15.9229%" y="687.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.6038%" y="661" width="0.0238%" height="15" fill="rgb(249,139,47)" fg:x="1309" fg:w="2"/><text x="15.9229%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="15.6038%" y="645" width="0.0238%" height="15" fill="rgb(244,64,35)" fg:x="1309" fg:w="2"/><text x="15.9229%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.6038%" y="629" width="0.0238%" height="15" fill="rgb(216,46,15)" fg:x="1309" fg:w="2"/><text x="15.9229%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6157%" y="613" width="0.0119%" height="15" fill="rgb(250,74,19)" fg:x="1310" fg:w="1"/><text x="15.9348%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6157%" y="597" width="0.0119%" height="15" fill="rgb(249,42,33)" fg:x="1310" fg:w="1"/><text x="15.9348%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.6157%" y="581" width="0.0119%" height="15" fill="rgb(242,149,17)" fg:x="1310" fg:w="1"/><text x="15.9348%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.6157%" y="565" width="0.0119%" height="15" fill="rgb(244,29,21)" fg:x="1310" fg:w="1"/><text x="15.9348%" y="575.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.6157%" y="549" width="0.0119%" height="15" fill="rgb(220,130,37)" fg:x="1310" fg:w="1"/><text x="15.9348%" y="559.50"/></g><g><title>logic::repeat_end (3 samples, 0.04%)</title><rect x="15.6038%" y="725" width="0.0358%" height="15" fill="rgb(211,67,2)" fg:x="1309" fg:w="3"/><text x="15.9229%" y="735.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="15.6276%" y="709" width="0.0119%" height="15" fill="rgb(235,68,52)" fg:x="1311" fg:w="1"/><text x="15.9467%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6276%" y="693" width="0.0119%" height="15" fill="rgb(246,142,3)" fg:x="1311" fg:w="1"/><text x="15.9467%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="15.6276%" y="677" width="0.0119%" height="15" fill="rgb(241,25,7)" fg:x="1311" fg:w="1"/><text x="15.9467%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.6276%" y="661" width="0.0119%" height="15" fill="rgb(242,119,39)" fg:x="1311" fg:w="1"/><text x="15.9467%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6395%" y="709" width="0.0119%" height="15" fill="rgb(241,98,45)" fg:x="1312" fg:w="1"/><text x="15.9586%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6395%" y="693" width="0.0119%" height="15" fill="rgb(254,28,30)" fg:x="1312" fg:w="1"/><text x="15.9586%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6395%" y="677" width="0.0119%" height="15" fill="rgb(241,142,54)" fg:x="1312" fg:w="1"/><text x="15.9586%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6395%" y="661" width="0.0119%" height="15" fill="rgb(222,85,15)" fg:x="1312" fg:w="1"/><text x="15.9586%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6395%" y="645" width="0.0119%" height="15" fill="rgb(210,85,47)" fg:x="1312" fg:w="1"/><text x="15.9586%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6395%" y="629" width="0.0119%" height="15" fill="rgb(224,206,25)" fg:x="1312" fg:w="1"/><text x="15.9586%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6395%" y="613" width="0.0119%" height="15" fill="rgb(243,201,19)" fg:x="1312" fg:w="1"/><text x="15.9586%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6395%" y="597" width="0.0119%" height="15" fill="rgb(236,59,4)" fg:x="1312" fg:w="1"/><text x="15.9586%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6395%" y="581" width="0.0119%" height="15" fill="rgb(254,179,45)" fg:x="1312" fg:w="1"/><text x="15.9586%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6395%" y="565" width="0.0119%" height="15" fill="rgb(226,14,10)" fg:x="1312" fg:w="1"/><text x="15.9586%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6395%" y="549" width="0.0119%" height="15" fill="rgb(244,27,41)" fg:x="1312" fg:w="1"/><text x="15.9586%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6395%" y="533" width="0.0119%" height="15" fill="rgb(235,35,32)" fg:x="1312" fg:w="1"/><text x="15.9586%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6395%" y="517" width="0.0119%" height="15" fill="rgb(218,68,31)" fg:x="1312" fg:w="1"/><text x="15.9586%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6395%" y="501" width="0.0119%" height="15" fill="rgb(207,120,37)" fg:x="1312" fg:w="1"/><text x="15.9586%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6395%" y="485" width="0.0119%" height="15" fill="rgb(227,98,0)" fg:x="1312" fg:w="1"/><text x="15.9586%" y="495.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="15.6395%" y="469" width="0.0119%" height="15" fill="rgb(207,7,3)" fg:x="1312" fg:w="1"/><text x="15.9586%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.6514%" y="693" width="0.0119%" height="15" fill="rgb(206,98,19)" fg:x="1313" fg:w="1"/><text x="15.9705%" y="703.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.6514%" y="677" width="0.0119%" height="15" fill="rgb(217,5,26)" fg:x="1313" fg:w="1"/><text x="15.9705%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6634%" y="645" width="0.0119%" height="15" fill="rgb(235,190,38)" fg:x="1314" fg:w="1"/><text x="15.9825%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6634%" y="629" width="0.0119%" height="15" fill="rgb(247,86,24)" fg:x="1314" fg:w="1"/><text x="15.9825%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6634%" y="613" width="0.0119%" height="15" fill="rgb(205,101,16)" fg:x="1314" fg:w="1"/><text x="15.9825%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6634%" y="597" width="0.0119%" height="15" fill="rgb(246,168,33)" fg:x="1314" fg:w="1"/><text x="15.9825%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6634%" y="581" width="0.0119%" height="15" fill="rgb(231,114,1)" fg:x="1314" fg:w="1"/><text x="15.9825%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.6634%" y="565" width="0.0119%" height="15" fill="rgb(207,184,53)" fg:x="1314" fg:w="1"/><text x="15.9825%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.6634%" y="549" width="0.0119%" height="15" fill="rgb(224,95,51)" fg:x="1314" fg:w="1"/><text x="15.9825%" y="559.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.6634%" y="533" width="0.0119%" height="15" fill="rgb(212,188,45)" fg:x="1314" fg:w="1"/><text x="15.9825%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.6634%" y="677" width="0.0238%" height="15" fill="rgb(223,154,38)" fg:x="1314" fg:w="2"/><text x="15.9825%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="15.6634%" y="661" width="0.0238%" height="15" fill="rgb(251,22,52)" fg:x="1314" fg:w="2"/><text x="15.9825%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6753%" y="645" width="0.0119%" height="15" fill="rgb(229,209,22)" fg:x="1315" fg:w="1"/><text x="15.9944%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6753%" y="629" width="0.0119%" height="15" fill="rgb(234,138,34)" fg:x="1315" fg:w="1"/><text x="15.9944%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6753%" y="613" width="0.0119%" height="15" fill="rgb(212,95,11)" fg:x="1315" fg:w="1"/><text x="15.9944%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6753%" y="597" width="0.0119%" height="15" fill="rgb(240,179,47)" fg:x="1315" fg:w="1"/><text x="15.9944%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6753%" y="581" width="0.0119%" height="15" fill="rgb(240,163,11)" fg:x="1315" fg:w="1"/><text x="15.9944%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6753%" y="565" width="0.0119%" height="15" fill="rgb(236,37,12)" fg:x="1315" fg:w="1"/><text x="15.9944%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6753%" y="549" width="0.0119%" height="15" fill="rgb(232,164,16)" fg:x="1315" fg:w="1"/><text x="15.9944%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.6753%" y="533" width="0.0119%" height="15" fill="rgb(244,205,15)" fg:x="1315" fg:w="1"/><text x="15.9944%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.6753%" y="517" width="0.0119%" height="15" fill="rgb(223,117,47)" fg:x="1315" fg:w="1"/><text x="15.9944%" y="527.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.6753%" y="501" width="0.0119%" height="15" fill="rgb(244,107,35)" fg:x="1315" fg:w="1"/><text x="15.9944%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6872%" y="645" width="0.0119%" height="15" fill="rgb(205,140,8)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6872%" y="629" width="0.0119%" height="15" fill="rgb(228,84,46)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6872%" y="613" width="0.0119%" height="15" fill="rgb(254,188,9)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6872%" y="597" width="0.0119%" height="15" fill="rgb(206,112,54)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6872%" y="581" width="0.0119%" height="15" fill="rgb(216,84,49)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6872%" y="565" width="0.0119%" height="15" fill="rgb(214,194,35)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6872%" y="549" width="0.0119%" height="15" fill="rgb(249,28,3)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6872%" y="533" width="0.0119%" height="15" fill="rgb(222,56,52)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6872%" y="517" width="0.0119%" height="15" fill="rgb(245,217,50)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6872%" y="501" width="0.0119%" height="15" fill="rgb(213,201,24)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6872%" y="485" width="0.0119%" height="15" fill="rgb(248,116,28)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6872%" y="469" width="0.0119%" height="15" fill="rgb(219,72,43)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6872%" y="453" width="0.0119%" height="15" fill="rgb(209,138,14)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6872%" y="437" width="0.0119%" height="15" fill="rgb(222,18,33)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6872%" y="421" width="0.0119%" height="15" fill="rgb(213,199,7)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6872%" y="405" width="0.0119%" height="15" fill="rgb(250,110,10)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6872%" y="389" width="0.0119%" height="15" fill="rgb(248,123,6)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6872%" y="373" width="0.0119%" height="15" fill="rgb(206,91,31)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6872%" y="357" width="0.0119%" height="15" fill="rgb(211,154,13)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.6872%" y="341" width="0.0119%" height="15" fill="rgb(225,148,7)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6872%" y="325" width="0.0119%" height="15" fill="rgb(220,160,43)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="335.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6872%" y="309" width="0.0119%" height="15" fill="rgb(213,52,39)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="319.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="15.6872%" y="293" width="0.0119%" height="15" fill="rgb(243,137,7)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="303.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6872%" y="277" width="0.0119%" height="15" fill="rgb(230,79,13)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="287.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="15.6872%" y="261" width="0.0119%" height="15" fill="rgb(247,105,23)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="271.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6872%" y="245" width="0.0119%" height="15" fill="rgb(223,179,41)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="255.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="15.6872%" y="229" width="0.0119%" height="15" fill="rgb(218,9,34)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="239.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.6872%" y="213" width="0.0119%" height="15" fill="rgb(222,106,8)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="223.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.6872%" y="197" width="0.0119%" height="15" fill="rgb(211,220,0)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="207.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.6872%" y="181" width="0.0119%" height="15" fill="rgb(229,52,16)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="191.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.6872%" y="165" width="0.0119%" height="15" fill="rgb(212,155,18)" fg:x="1316" fg:w="1"/><text x="16.0063%" y="175.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.6991%" y="645" width="0.0238%" height="15" fill="rgb(242,21,14)" fg:x="1317" fg:w="2"/><text x="16.0182%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="15.6991%" y="629" width="0.0238%" height="15" fill="rgb(222,19,48)" fg:x="1317" fg:w="2"/><text x="16.0182%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.6991%" y="613" width="0.0238%" height="15" fill="rgb(232,45,27)" fg:x="1317" fg:w="2"/><text x="16.0182%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="15.6991%" y="597" width="0.0238%" height="15" fill="rgb(249,103,42)" fg:x="1317" fg:w="2"/><text x="16.0182%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.6991%" y="581" width="0.0238%" height="15" fill="rgb(246,81,33)" fg:x="1317" fg:w="2"/><text x="16.0182%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="15.6991%" y="565" width="0.0238%" height="15" fill="rgb(252,33,42)" fg:x="1317" fg:w="2"/><text x="16.0182%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.6991%" y="549" width="0.0238%" height="15" fill="rgb(209,212,41)" fg:x="1317" fg:w="2"/><text x="16.0182%" y="559.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="15.6991%" y="533" width="0.0238%" height="15" fill="rgb(207,154,6)" fg:x="1317" fg:w="2"/><text x="16.0182%" y="543.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="15.6991%" y="517" width="0.0238%" height="15" fill="rgb(223,64,47)" fg:x="1317" fg:w="2"/><text x="16.0182%" y="527.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="15.6991%" y="501" width="0.0238%" height="15" fill="rgb(211,161,38)" fg:x="1317" fg:w="2"/><text x="16.0182%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7230%" y="613" width="0.0119%" height="15" fill="rgb(219,138,40)" fg:x="1319" fg:w="1"/><text x="16.0421%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.7230%" y="597" width="0.0119%" height="15" fill="rgb(241,228,46)" fg:x="1319" fg:w="1"/><text x="16.0421%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7230%" y="581" width="0.0119%" height="15" fill="rgb(223,209,38)" fg:x="1319" fg:w="1"/><text x="16.0421%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.7230%" y="565" width="0.0119%" height="15" fill="rgb(236,164,45)" fg:x="1319" fg:w="1"/><text x="16.0421%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7230%" y="549" width="0.0119%" height="15" fill="rgb(231,15,5)" fg:x="1319" fg:w="1"/><text x="16.0421%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.7230%" y="533" width="0.0119%" height="15" fill="rgb(252,35,15)" fg:x="1319" fg:w="1"/><text x="16.0421%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7230%" y="517" width="0.0119%" height="15" fill="rgb(248,181,18)" fg:x="1319" fg:w="1"/><text x="16.0421%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.7230%" y="501" width="0.0119%" height="15" fill="rgb(233,39,42)" fg:x="1319" fg:w="1"/><text x="16.0421%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7230%" y="485" width="0.0119%" height="15" fill="rgb(238,110,33)" fg:x="1319" fg:w="1"/><text x="16.0421%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.7230%" y="469" width="0.0119%" height="15" fill="rgb(233,195,10)" fg:x="1319" fg:w="1"/><text x="16.0421%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7230%" y="453" width="0.0119%" height="15" fill="rgb(254,105,3)" fg:x="1319" fg:w="1"/><text x="16.0421%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.7230%" y="437" width="0.0119%" height="15" fill="rgb(221,225,9)" fg:x="1319" fg:w="1"/><text x="16.0421%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.7230%" y="421" width="0.0119%" height="15" fill="rgb(224,227,45)" fg:x="1319" fg:w="1"/><text x="16.0421%" y="431.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.7230%" y="405" width="0.0119%" height="15" fill="rgb(229,198,43)" fg:x="1319" fg:w="1"/><text x="16.0421%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7349%" y="581" width="0.0119%" height="15" fill="rgb(206,209,35)" fg:x="1320" fg:w="1"/><text x="16.0540%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.7349%" y="565" width="0.0119%" height="15" fill="rgb(245,195,53)" fg:x="1320" fg:w="1"/><text x="16.0540%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7349%" y="549" width="0.0119%" height="15" fill="rgb(240,92,26)" fg:x="1320" fg:w="1"/><text x="16.0540%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.7349%" y="533" width="0.0119%" height="15" fill="rgb(207,40,23)" fg:x="1320" fg:w="1"/><text x="16.0540%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7349%" y="517" width="0.0119%" height="15" fill="rgb(223,111,35)" fg:x="1320" fg:w="1"/><text x="16.0540%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.7349%" y="501" width="0.0119%" height="15" fill="rgb(229,147,28)" fg:x="1320" fg:w="1"/><text x="16.0540%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7349%" y="485" width="0.0119%" height="15" fill="rgb(211,29,28)" fg:x="1320" fg:w="1"/><text x="16.0540%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.7349%" y="469" width="0.0119%" height="15" fill="rgb(228,72,33)" fg:x="1320" fg:w="1"/><text x="16.0540%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7349%" y="453" width="0.0119%" height="15" fill="rgb(205,214,31)" fg:x="1320" fg:w="1"/><text x="16.0540%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.7349%" y="437" width="0.0119%" height="15" fill="rgb(224,111,15)" fg:x="1320" fg:w="1"/><text x="16.0540%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7349%" y="421" width="0.0119%" height="15" fill="rgb(253,21,26)" fg:x="1320" fg:w="1"/><text x="16.0540%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.7349%" y="405" width="0.0119%" height="15" fill="rgb(245,139,43)" fg:x="1320" fg:w="1"/><text x="16.0540%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.7349%" y="389" width="0.0119%" height="15" fill="rgb(252,170,7)" fg:x="1320" fg:w="1"/><text x="16.0540%" y="399.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.7349%" y="373" width="0.0119%" height="15" fill="rgb(231,118,14)" fg:x="1320" fg:w="1"/><text x="16.0540%" y="383.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7468%" y="469" width="0.0119%" height="15" fill="rgb(238,83,0)" fg:x="1321" fg:w="1"/><text x="16.0659%" y="479.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="15.7468%" y="453" width="0.0119%" height="15" fill="rgb(221,39,39)" fg:x="1321" fg:w="1"/><text x="16.0659%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.7587%" y="405" width="0.0119%" height="15" fill="rgb(222,119,46)" fg:x="1322" fg:w="1"/><text x="16.0778%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.7587%" y="389" width="0.0119%" height="15" fill="rgb(222,165,49)" fg:x="1322" fg:w="1"/><text x="16.0778%" y="399.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.7587%" y="373" width="0.0119%" height="15" fill="rgb(219,113,52)" fg:x="1322" fg:w="1"/><text x="16.0778%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.7587%" y="421" width="0.0238%" height="15" fill="rgb(214,7,15)" fg:x="1322" fg:w="2"/><text x="16.0778%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.7707%" y="405" width="0.0119%" height="15" fill="rgb(235,32,4)" fg:x="1323" fg:w="1"/><text x="16.0898%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7707%" y="389" width="0.0119%" height="15" fill="rgb(238,90,54)" fg:x="1323" fg:w="1"/><text x="16.0898%" y="399.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.7707%" y="373" width="0.0119%" height="15" fill="rgb(213,208,19)" fg:x="1323" fg:w="1"/><text x="16.0898%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7707%" y="357" width="0.0119%" height="15" fill="rgb(233,156,4)" fg:x="1323" fg:w="1"/><text x="16.0898%" y="367.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.7707%" y="341" width="0.0119%" height="15" fill="rgb(207,194,5)" fg:x="1323" fg:w="1"/><text x="16.0898%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7707%" y="325" width="0.0119%" height="15" fill="rgb(206,111,30)" fg:x="1323" fg:w="1"/><text x="16.0898%" y="335.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.7707%" y="309" width="0.0119%" height="15" fill="rgb(243,70,54)" fg:x="1323" fg:w="1"/><text x="16.0898%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7707%" y="293" width="0.0119%" height="15" fill="rgb(242,28,8)" fg:x="1323" fg:w="1"/><text x="16.0898%" y="303.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7707%" y="277" width="0.0119%" height="15" fill="rgb(219,106,18)" fg:x="1323" fg:w="1"/><text x="16.0898%" y="287.50"/></g><g><title>parser::operator+ (13 samples, 0.15%)</title><rect x="15.6395%" y="725" width="0.1550%" height="15" fill="rgb(244,222,10)" fg:x="1312" fg:w="13"/><text x="15.9586%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="15.6514%" y="709" width="0.1430%" height="15" fill="rgb(236,179,52)" fg:x="1313" fg:w="12"/><text x="15.9705%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="15.6634%" y="693" width="0.1311%" height="15" fill="rgb(213,23,39)" fg:x="1314" fg:w="11"/><text x="15.9825%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="15.6872%" y="677" width="0.1073%" height="15" fill="rgb(238,48,10)" fg:x="1316" fg:w="9"/><text x="16.0063%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="15.6872%" y="661" width="0.1073%" height="15" fill="rgb(251,196,23)" fg:x="1316" fg:w="9"/><text x="16.0063%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="15.7230%" y="645" width="0.0715%" height="15" fill="rgb(250,152,24)" fg:x="1319" fg:w="6"/><text x="16.0421%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="15.7230%" y="629" width="0.0715%" height="15" fill="rgb(209,150,17)" fg:x="1319" fg:w="6"/><text x="16.0421%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="15.7349%" y="613" width="0.0596%" height="15" fill="rgb(234,202,34)" fg:x="1320" fg:w="5"/><text x="16.0540%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="15.7349%" y="597" width="0.0596%" height="15" fill="rgb(253,148,53)" fg:x="1320" fg:w="5"/><text x="16.0540%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="15.7468%" y="581" width="0.0477%" height="15" fill="rgb(218,129,16)" fg:x="1321" fg:w="4"/><text x="16.0659%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="15.7468%" y="565" width="0.0477%" height="15" fill="rgb(216,85,19)" fg:x="1321" fg:w="4"/><text x="16.0659%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="15.7468%" y="549" width="0.0477%" height="15" fill="rgb(235,228,7)" fg:x="1321" fg:w="4"/><text x="16.0659%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="15.7468%" y="533" width="0.0477%" height="15" fill="rgb(245,175,0)" fg:x="1321" fg:w="4"/><text x="16.0659%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="15.7468%" y="517" width="0.0477%" height="15" fill="rgb(208,168,36)" fg:x="1321" fg:w="4"/><text x="16.0659%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="15.7468%" y="501" width="0.0477%" height="15" fill="rgb(246,171,24)" fg:x="1321" fg:w="4"/><text x="16.0659%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="15.7468%" y="485" width="0.0477%" height="15" fill="rgb(215,142,24)" fg:x="1321" fg:w="4"/><text x="16.0659%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="15.7587%" y="469" width="0.0358%" height="15" fill="rgb(250,187,7)" fg:x="1322" fg:w="3"/><text x="16.0778%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="15.7587%" y="453" width="0.0358%" height="15" fill="rgb(228,66,33)" fg:x="1322" fg:w="3"/><text x="16.0778%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="15.7587%" y="437" width="0.0358%" height="15" fill="rgb(234,215,21)" fg:x="1322" fg:w="3"/><text x="16.0778%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7826%" y="421" width="0.0119%" height="15" fill="rgb(222,191,20)" fg:x="1324" fg:w="1"/><text x="16.1017%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.7826%" y="405" width="0.0119%" height="15" fill="rgb(245,79,54)" fg:x="1324" fg:w="1"/><text x="16.1017%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.7826%" y="389" width="0.0119%" height="15" fill="rgb(240,10,37)" fg:x="1324" fg:w="1"/><text x="16.1017%" y="399.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.7826%" y="373" width="0.0119%" height="15" fill="rgb(214,192,32)" fg:x="1324" fg:w="1"/><text x="16.1017%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7945%" y="709" width="0.0119%" height="15" fill="rgb(209,36,54)" fg:x="1325" fg:w="1"/><text x="16.1136%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7945%" y="693" width="0.0119%" height="15" fill="rgb(220,10,11)" fg:x="1325" fg:w="1"/><text x="16.1136%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7945%" y="677" width="0.0119%" height="15" fill="rgb(221,106,17)" fg:x="1325" fg:w="1"/><text x="16.1136%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7945%" y="661" width="0.0119%" height="15" fill="rgb(251,142,44)" fg:x="1325" fg:w="1"/><text x="16.1136%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7945%" y="645" width="0.0119%" height="15" fill="rgb(238,13,15)" fg:x="1325" fg:w="1"/><text x="16.1136%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7945%" y="629" width="0.0119%" height="15" fill="rgb(208,107,27)" fg:x="1325" fg:w="1"/><text x="16.1136%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7945%" y="613" width="0.0119%" height="15" fill="rgb(205,136,37)" fg:x="1325" fg:w="1"/><text x="16.1136%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7945%" y="597" width="0.0119%" height="15" fill="rgb(250,205,27)" fg:x="1325" fg:w="1"/><text x="16.1136%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7945%" y="581" width="0.0119%" height="15" fill="rgb(210,80,43)" fg:x="1325" fg:w="1"/><text x="16.1136%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.7945%" y="565" width="0.0119%" height="15" fill="rgb(247,160,36)" fg:x="1325" fg:w="1"/><text x="16.1136%" y="575.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="15.7945%" y="549" width="0.0119%" height="15" fill="rgb(234,13,49)" fg:x="1325" fg:w="1"/><text x="16.1136%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8064%" y="693" width="0.0119%" height="15" fill="rgb(234,122,0)" fg:x="1326" fg:w="1"/><text x="16.1255%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8064%" y="677" width="0.0119%" height="15" fill="rgb(207,146,38)" fg:x="1326" fg:w="1"/><text x="16.1255%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8064%" y="661" width="0.0119%" height="15" fill="rgb(207,177,25)" fg:x="1326" fg:w="1"/><text x="16.1255%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8064%" y="645" width="0.0119%" height="15" fill="rgb(211,178,42)" fg:x="1326" fg:w="1"/><text x="16.1255%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8064%" y="629" width="0.0119%" height="15" fill="rgb(230,69,54)" fg:x="1326" fg:w="1"/><text x="16.1255%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8064%" y="613" width="0.0119%" height="15" fill="rgb(214,135,41)" fg:x="1326" fg:w="1"/><text x="16.1255%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8064%" y="597" width="0.0119%" height="15" fill="rgb(237,67,25)" fg:x="1326" fg:w="1"/><text x="16.1255%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8064%" y="581" width="0.0119%" height="15" fill="rgb(222,189,50)" fg:x="1326" fg:w="1"/><text x="16.1255%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8064%" y="565" width="0.0119%" height="15" fill="rgb(245,148,34)" fg:x="1326" fg:w="1"/><text x="16.1255%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8064%" y="549" width="0.0119%" height="15" fill="rgb(222,29,6)" fg:x="1326" fg:w="1"/><text x="16.1255%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="15.8064%" y="533" width="0.0119%" height="15" fill="rgb(221,189,43)" fg:x="1326" fg:w="1"/><text x="16.1255%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="15.8183%" y="677" width="0.0119%" height="15" fill="rgb(207,36,27)" fg:x="1327" fg:w="1"/><text x="16.1374%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.8183%" y="661" width="0.0119%" height="15" fill="rgb(217,90,24)" fg:x="1327" fg:w="1"/><text x="16.1374%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8303%" y="645" width="0.0119%" height="15" fill="rgb(224,66,35)" fg:x="1328" fg:w="1"/><text x="16.1494%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8303%" y="629" width="0.0119%" height="15" fill="rgb(221,13,50)" fg:x="1328" fg:w="1"/><text x="16.1494%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8303%" y="613" width="0.0119%" height="15" fill="rgb(236,68,49)" fg:x="1328" fg:w="1"/><text x="16.1494%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8303%" y="597" width="0.0119%" height="15" fill="rgb(229,146,28)" fg:x="1328" fg:w="1"/><text x="16.1494%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8303%" y="581" width="0.0119%" height="15" fill="rgb(225,31,38)" fg:x="1328" fg:w="1"/><text x="16.1494%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8303%" y="565" width="0.0119%" height="15" fill="rgb(250,208,3)" fg:x="1328" fg:w="1"/><text x="16.1494%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8303%" y="549" width="0.0119%" height="15" fill="rgb(246,54,23)" fg:x="1328" fg:w="1"/><text x="16.1494%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8303%" y="533" width="0.0119%" height="15" fill="rgb(243,76,11)" fg:x="1328" fg:w="1"/><text x="16.1494%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="15.8303%" y="517" width="0.0119%" height="15" fill="rgb(245,21,50)" fg:x="1328" fg:w="1"/><text x="16.1494%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.8303%" y="501" width="0.0119%" height="15" fill="rgb(228,9,43)" fg:x="1328" fg:w="1"/><text x="16.1494%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="15.8422%" y="549" width="0.0119%" height="15" fill="rgb(208,100,47)" fg:x="1329" fg:w="1"/><text x="16.1613%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.8422%" y="533" width="0.0119%" height="15" fill="rgb(232,26,8)" fg:x="1329" fg:w="1"/><text x="16.1613%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.8422%" y="629" width="0.0238%" height="15" fill="rgb(216,166,38)" fg:x="1329" fg:w="2"/><text x="16.1613%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.8422%" y="613" width="0.0238%" height="15" fill="rgb(251,202,51)" fg:x="1329" fg:w="2"/><text x="16.1613%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.8422%" y="597" width="0.0238%" height="15" fill="rgb(254,216,34)" fg:x="1329" fg:w="2"/><text x="16.1613%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.8422%" y="581" width="0.0238%" height="15" fill="rgb(251,32,27)" fg:x="1329" fg:w="2"/><text x="16.1613%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.8422%" y="565" width="0.0238%" height="15" fill="rgb(208,127,28)" fg:x="1329" fg:w="2"/><text x="16.1613%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8541%" y="549" width="0.0119%" height="15" fill="rgb(224,137,22)" fg:x="1330" fg:w="1"/><text x="16.1732%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8541%" y="533" width="0.0119%" height="15" fill="rgb(254,70,32)" fg:x="1330" fg:w="1"/><text x="16.1732%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8541%" y="517" width="0.0119%" height="15" fill="rgb(229,75,37)" fg:x="1330" fg:w="1"/><text x="16.1732%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="15.8541%" y="501" width="0.0119%" height="15" fill="rgb(252,64,23)" fg:x="1330" fg:w="1"/><text x="16.1732%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8660%" y="565" width="0.0119%" height="15" fill="rgb(232,162,48)" fg:x="1331" fg:w="1"/><text x="16.1851%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8660%" y="549" width="0.0119%" height="15" fill="rgb(246,160,12)" fg:x="1331" fg:w="1"/><text x="16.1851%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8660%" y="533" width="0.0119%" height="15" fill="rgb(247,166,0)" fg:x="1331" fg:w="1"/><text x="16.1851%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8660%" y="517" width="0.0119%" height="15" fill="rgb(249,219,21)" fg:x="1331" fg:w="1"/><text x="16.1851%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8660%" y="501" width="0.0119%" height="15" fill="rgb(205,209,3)" fg:x="1331" fg:w="1"/><text x="16.1851%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8660%" y="485" width="0.0119%" height="15" fill="rgb(243,44,1)" fg:x="1331" fg:w="1"/><text x="16.1851%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8660%" y="469" width="0.0119%" height="15" fill="rgb(206,159,16)" fg:x="1331" fg:w="1"/><text x="16.1851%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8660%" y="453" width="0.0119%" height="15" fill="rgb(244,77,30)" fg:x="1331" fg:w="1"/><text x="16.1851%" y="463.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8660%" y="437" width="0.0119%" height="15" fill="rgb(218,69,12)" fg:x="1331" fg:w="1"/><text x="16.1851%" y="447.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="15.8660%" y="421" width="0.0119%" height="15" fill="rgb(212,87,7)" fg:x="1331" fg:w="1"/><text x="16.1851%" y="431.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.8660%" y="405" width="0.0119%" height="15" fill="rgb(245,114,25)" fg:x="1331" fg:w="1"/><text x="16.1851%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="15.8064%" y="709" width="0.0834%" height="15" fill="rgb(210,61,42)" fg:x="1326" fg:w="7"/><text x="16.1255%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="15.8183%" y="693" width="0.0715%" height="15" fill="rgb(211,52,33)" fg:x="1327" fg:w="6"/><text x="16.1374%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="15.8303%" y="677" width="0.0596%" height="15" fill="rgb(234,58,33)" fg:x="1328" fg:w="5"/><text x="16.1494%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="15.8303%" y="661" width="0.0596%" height="15" fill="rgb(220,115,36)" fg:x="1328" fg:w="5"/><text x="16.1494%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="15.8422%" y="645" width="0.0477%" height="15" fill="rgb(243,153,54)" fg:x="1329" fg:w="4"/><text x="16.1613%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.8660%" y="629" width="0.0238%" height="15" fill="rgb(251,47,18)" fg:x="1331" fg:w="2"/><text x="16.1851%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.8660%" y="613" width="0.0238%" height="15" fill="rgb(242,102,42)" fg:x="1331" fg:w="2"/><text x="16.1851%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.8660%" y="597" width="0.0238%" height="15" fill="rgb(234,31,38)" fg:x="1331" fg:w="2"/><text x="16.1851%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.8660%" y="581" width="0.0238%" height="15" fill="rgb(221,117,51)" fg:x="1331" fg:w="2"/><text x="16.1851%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8779%" y="565" width="0.0119%" height="15" fill="rgb(212,20,18)" fg:x="1332" fg:w="1"/><text x="16.1970%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8779%" y="549" width="0.0119%" height="15" fill="rgb(245,133,36)" fg:x="1332" fg:w="1"/><text x="16.1970%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="15.8779%" y="533" width="0.0119%" height="15" fill="rgb(212,6,19)" fg:x="1332" fg:w="1"/><text x="16.1970%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8899%" y="629" width="0.0119%" height="15" fill="rgb(218,1,36)" fg:x="1333" fg:w="1"/><text x="16.2090%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.8899%" y="613" width="0.0119%" height="15" fill="rgb(246,84,54)" fg:x="1333" fg:w="1"/><text x="16.2090%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8899%" y="597" width="0.0119%" height="15" fill="rgb(242,110,6)" fg:x="1333" fg:w="1"/><text x="16.2090%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.8899%" y="581" width="0.0119%" height="15" fill="rgb(214,47,5)" fg:x="1333" fg:w="1"/><text x="16.2090%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8899%" y="565" width="0.0119%" height="15" fill="rgb(218,159,25)" fg:x="1333" fg:w="1"/><text x="16.2090%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.8899%" y="549" width="0.0119%" height="15" fill="rgb(215,211,28)" fg:x="1333" fg:w="1"/><text x="16.2090%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8899%" y="533" width="0.0119%" height="15" fill="rgb(238,59,32)" fg:x="1333" fg:w="1"/><text x="16.2090%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.8899%" y="517" width="0.0119%" height="15" fill="rgb(226,82,3)" fg:x="1333" fg:w="1"/><text x="16.2090%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8899%" y="501" width="0.0119%" height="15" fill="rgb(240,164,32)" fg:x="1333" fg:w="1"/><text x="16.2090%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.8899%" y="485" width="0.0119%" height="15" fill="rgb(232,46,7)" fg:x="1333" fg:w="1"/><text x="16.2090%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.8899%" y="469" width="0.0119%" height="15" fill="rgb(229,129,53)" fg:x="1333" fg:w="1"/><text x="16.2090%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.8899%" y="453" width="0.0119%" height="15" fill="rgb(234,188,29)" fg:x="1333" fg:w="1"/><text x="16.2090%" y="463.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.8899%" y="437" width="0.0119%" height="15" fill="rgb(246,141,4)" fg:x="1333" fg:w="1"/><text x="16.2090%" y="447.50"/></g><g><title>logic::immediate (45 samples, 0.54%)</title><rect x="15.3773%" y="741" width="0.5364%" height="15" fill="rgb(229,23,39)" fg:x="1290" fg:w="45"/><text x="15.6964%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="15.7945%" y="725" width="0.1192%" height="15" fill="rgb(206,12,3)" fg:x="1325" fg:w="10"/><text x="16.1136%" y="735.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="15.8899%" y="709" width="0.0238%" height="15" fill="rgb(252,226,20)" fg:x="1333" fg:w="2"/><text x="16.2090%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.8899%" y="693" width="0.0238%" height="15" fill="rgb(216,123,35)" fg:x="1333" fg:w="2"/><text x="16.2090%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="15.8899%" y="677" width="0.0238%" height="15" fill="rgb(212,68,40)" fg:x="1333" fg:w="2"/><text x="16.2090%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.8899%" y="661" width="0.0238%" height="15" fill="rgb(254,125,32)" fg:x="1333" fg:w="2"/><text x="16.2090%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="15.8899%" y="645" width="0.0238%" height="15" fill="rgb(253,97,22)" fg:x="1333" fg:w="2"/><text x="16.2090%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9018%" y="629" width="0.0119%" height="15" fill="rgb(241,101,14)" fg:x="1334" fg:w="1"/><text x="16.2209%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.9018%" y="613" width="0.0119%" height="15" fill="rgb(238,103,29)" fg:x="1334" fg:w="1"/><text x="16.2209%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9018%" y="597" width="0.0119%" height="15" fill="rgb(233,195,47)" fg:x="1334" fg:w="1"/><text x="16.2209%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.9018%" y="581" width="0.0119%" height="15" fill="rgb(246,218,30)" fg:x="1334" fg:w="1"/><text x="16.2209%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9018%" y="565" width="0.0119%" height="15" fill="rgb(219,145,47)" fg:x="1334" fg:w="1"/><text x="16.2209%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.9018%" y="549" width="0.0119%" height="15" fill="rgb(243,12,26)" fg:x="1334" fg:w="1"/><text x="16.2209%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9018%" y="533" width="0.0119%" height="15" fill="rgb(214,87,16)" fg:x="1334" fg:w="1"/><text x="16.2209%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.9018%" y="517" width="0.0119%" height="15" fill="rgb(208,99,42)" fg:x="1334" fg:w="1"/><text x="16.2209%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9018%" y="501" width="0.0119%" height="15" fill="rgb(253,99,2)" fg:x="1334" fg:w="1"/><text x="16.2209%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.9018%" y="485" width="0.0119%" height="15" fill="rgb(220,168,23)" fg:x="1334" fg:w="1"/><text x="16.2209%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9018%" y="469" width="0.0119%" height="15" fill="rgb(242,38,24)" fg:x="1334" fg:w="1"/><text x="16.2209%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.9018%" y="453" width="0.0119%" height="15" fill="rgb(225,182,9)" fg:x="1334" fg:w="1"/><text x="16.2209%" y="463.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.9018%" y="437" width="0.0119%" height="15" fill="rgb(243,178,37)" fg:x="1334" fg:w="1"/><text x="16.2209%" y="447.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.9018%" y="421" width="0.0119%" height="15" fill="rgb(232,139,19)" fg:x="1334" fg:w="1"/><text x="16.2209%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9137%" y="661" width="0.0119%" height="15" fill="rgb(225,201,24)" fg:x="1335" fg:w="1"/><text x="16.2328%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.9137%" y="645" width="0.0119%" height="15" fill="rgb(221,47,46)" fg:x="1335" fg:w="1"/><text x="16.2328%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.9137%" y="629" width="0.0119%" height="15" fill="rgb(249,23,13)" fg:x="1335" fg:w="1"/><text x="16.2328%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9256%" y="645" width="0.0119%" height="15" fill="rgb(219,9,5)" fg:x="1336" fg:w="1"/><text x="16.2447%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9256%" y="629" width="0.0119%" height="15" fill="rgb(254,171,16)" fg:x="1336" fg:w="1"/><text x="16.2447%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9256%" y="613" width="0.0119%" height="15" fill="rgb(230,171,20)" fg:x="1336" fg:w="1"/><text x="16.2447%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9256%" y="597" width="0.0119%" height="15" fill="rgb(210,71,41)" fg:x="1336" fg:w="1"/><text x="16.2447%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="15.9256%" y="581" width="0.0119%" height="15" fill="rgb(206,173,20)" fg:x="1336" fg:w="1"/><text x="16.2447%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.9256%" y="565" width="0.0119%" height="15" fill="rgb(233,88,34)" fg:x="1336" fg:w="1"/><text x="16.2447%" y="575.50"/></g><g><title>parser::token (3 samples, 0.04%)</title><rect x="15.9137%" y="709" width="0.0358%" height="15" fill="rgb(223,209,46)" fg:x="1335" fg:w="3"/><text x="16.2328%" y="719.50"/></g><g><title>cond::token (3 samples, 0.04%)</title><rect x="15.9137%" y="693" width="0.0358%" height="15" fill="rgb(250,43,18)" fg:x="1335" fg:w="3"/><text x="16.2328%" y="703.50"/></g><g><title>operator&amp; (3 samples, 0.04%)</title><rect x="15.9137%" y="677" width="0.0358%" height="15" fill="rgb(208,13,10)" fg:x="1335" fg:w="3"/><text x="16.2328%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="15.9256%" y="661" width="0.0238%" height="15" fill="rgb(212,200,36)" fg:x="1336" fg:w="2"/><text x="16.2447%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.9375%" y="645" width="0.0119%" height="15" fill="rgb(225,90,30)" fg:x="1337" fg:w="1"/><text x="16.2566%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9375%" y="629" width="0.0119%" height="15" fill="rgb(236,182,39)" fg:x="1337" fg:w="1"/><text x="16.2566%" y="639.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9375%" y="613" width="0.0119%" height="15" fill="rgb(212,144,35)" fg:x="1337" fg:w="1"/><text x="16.2566%" y="623.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.9375%" y="597" width="0.0119%" height="15" fill="rgb(228,63,44)" fg:x="1337" fg:w="1"/><text x="16.2566%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.9375%" y="581" width="0.0119%" height="15" fill="rgb(228,109,6)" fg:x="1337" fg:w="1"/><text x="16.2566%" y="591.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.9375%" y="565" width="0.0119%" height="15" fill="rgb(238,117,24)" fg:x="1337" fg:w="1"/><text x="16.2566%" y="575.50"/></g><g><title>logic::initialize (4 samples, 0.05%)</title><rect x="15.9137%" y="725" width="0.0477%" height="15" fill="rgb(242,26,26)" fg:x="1335" fg:w="4"/><text x="16.2328%" y="735.50"/></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (1 samples, 0.01%)</title><rect x="15.9495%" y="709" width="0.0119%" height="15" fill="rgb(221,92,48)" fg:x="1338" fg:w="1"/><text x="16.2686%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="15.9495%" y="693" width="0.0119%" height="15" fill="rgb(209,209,32)" fg:x="1338" fg:w="1"/><text x="16.2686%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9495%" y="677" width="0.0119%" height="15" fill="rgb(221,70,22)" fg:x="1338" fg:w="1"/><text x="16.2686%" y="687.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.9495%" y="661" width="0.0119%" height="15" fill="rgb(248,145,5)" fg:x="1338" fg:w="1"/><text x="16.2686%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9495%" y="645" width="0.0119%" height="15" fill="rgb(226,116,26)" fg:x="1338" fg:w="1"/><text x="16.2686%" y="655.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.9495%" y="629" width="0.0119%" height="15" fill="rgb(244,5,17)" fg:x="1338" fg:w="1"/><text x="16.2686%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9495%" y="613" width="0.0119%" height="15" fill="rgb(252,159,33)" fg:x="1338" fg:w="1"/><text x="16.2686%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.9495%" y="597" width="0.0119%" height="15" fill="rgb(206,71,0)" fg:x="1338" fg:w="1"/><text x="16.2686%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9495%" y="581" width="0.0119%" height="15" fill="rgb(233,118,54)" fg:x="1338" fg:w="1"/><text x="16.2686%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.9495%" y="565" width="0.0119%" height="15" fill="rgb(234,83,48)" fg:x="1338" fg:w="1"/><text x="16.2686%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9495%" y="549" width="0.0119%" height="15" fill="rgb(228,3,54)" fg:x="1338" fg:w="1"/><text x="16.2686%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.9495%" y="533" width="0.0119%" height="15" fill="rgb(226,155,13)" fg:x="1338" fg:w="1"/><text x="16.2686%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9495%" y="517" width="0.0119%" height="15" fill="rgb(241,28,37)" fg:x="1338" fg:w="1"/><text x="16.2686%" y="527.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9495%" y="501" width="0.0119%" height="15" fill="rgb(233,93,10)" fg:x="1338" fg:w="1"/><text x="16.2686%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.9495%" y="485" width="0.0119%" height="15" fill="rgb(225,113,19)" fg:x="1338" fg:w="1"/><text x="16.2686%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.9495%" y="469" width="0.0119%" height="15" fill="rgb(241,2,18)" fg:x="1338" fg:w="1"/><text x="16.2686%" y="479.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.9495%" y="453" width="0.0119%" height="15" fill="rgb(228,207,21)" fg:x="1338" fg:w="1"/><text x="16.2686%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9614%" y="693" width="0.0119%" height="15" fill="rgb(213,211,35)" fg:x="1339" fg:w="1"/><text x="16.2805%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.9614%" y="677" width="0.0119%" height="15" fill="rgb(209,83,10)" fg:x="1339" fg:w="1"/><text x="16.2805%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9614%" y="661" width="0.0119%" height="15" fill="rgb(209,164,1)" fg:x="1339" fg:w="1"/><text x="16.2805%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.9614%" y="645" width="0.0119%" height="15" fill="rgb(213,184,43)" fg:x="1339" fg:w="1"/><text x="16.2805%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9614%" y="629" width="0.0119%" height="15" fill="rgb(231,61,34)" fg:x="1339" fg:w="1"/><text x="16.2805%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.9614%" y="613" width="0.0119%" height="15" fill="rgb(235,75,3)" fg:x="1339" fg:w="1"/><text x="16.2805%" y="623.50"/></g><g><title>logic::newline_indent (2 samples, 0.02%)</title><rect x="15.9614%" y="725" width="0.0238%" height="15" fill="rgb(220,106,47)" fg:x="1339" fg:w="2"/><text x="16.2805%" y="735.50"/></g><g><title>parser::operator+ (2 samples, 0.02%)</title><rect x="15.9614%" y="709" width="0.0238%" height="15" fill="rgb(210,196,33)" fg:x="1339" fg:w="2"/><text x="16.2805%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9733%" y="693" width="0.0119%" height="15" fill="rgb(229,154,42)" fg:x="1340" fg:w="1"/><text x="16.2924%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.9733%" y="677" width="0.0119%" height="15" fill="rgb(228,114,26)" fg:x="1340" fg:w="1"/><text x="16.2924%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9733%" y="661" width="0.0119%" height="15" fill="rgb(208,144,1)" fg:x="1340" fg:w="1"/><text x="16.2924%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.9733%" y="645" width="0.0119%" height="15" fill="rgb(239,112,37)" fg:x="1340" fg:w="1"/><text x="16.2924%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9733%" y="629" width="0.0119%" height="15" fill="rgb(210,96,50)" fg:x="1340" fg:w="1"/><text x="16.2924%" y="639.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9733%" y="613" width="0.0119%" height="15" fill="rgb(222,178,2)" fg:x="1340" fg:w="1"/><text x="16.2924%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.9733%" y="597" width="0.0119%" height="15" fill="rgb(226,74,18)" fg:x="1340" fg:w="1"/><text x="16.2924%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9733%" y="581" width="0.0119%" height="15" fill="rgb(225,67,54)" fg:x="1340" fg:w="1"/><text x="16.2924%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="15.9733%" y="565" width="0.0119%" height="15" fill="rgb(251,92,32)" fg:x="1340" fg:w="1"/><text x="16.2924%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9733%" y="549" width="0.0119%" height="15" fill="rgb(228,149,22)" fg:x="1340" fg:w="1"/><text x="16.2924%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.9733%" y="533" width="0.0119%" height="15" fill="rgb(243,54,13)" fg:x="1340" fg:w="1"/><text x="16.2924%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.9733%" y="517" width="0.0119%" height="15" fill="rgb(243,180,28)" fg:x="1340" fg:w="1"/><text x="16.2924%" y="527.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.9733%" y="501" width="0.0119%" height="15" fill="rgb(208,167,24)" fg:x="1340" fg:w="1"/><text x="16.2924%" y="511.50"/></g><g><title>logic::newline_where (1 samples, 0.01%)</title><rect x="15.9852%" y="709" width="0.0119%" height="15" fill="rgb(245,73,45)" fg:x="1341" fg:w="1"/><text x="16.3043%" y="719.50"/></g><g><title>parser::end_or_semicolon (1 samples, 0.01%)</title><rect x="15.9852%" y="693" width="0.0119%" height="15" fill="rgb(237,203,48)" fg:x="1341" fg:w="1"/><text x="16.3043%" y="703.50"/></g><g><title>parser::operator+ (1 samples, 0.01%)</title><rect x="15.9852%" y="677" width="0.0119%" height="15" fill="rgb(211,197,16)" fg:x="1341" fg:w="1"/><text x="16.3043%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9852%" y="661" width="0.0119%" height="15" fill="rgb(243,99,51)" fg:x="1341" fg:w="1"/><text x="16.3043%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="15.9852%" y="645" width="0.0119%" height="15" fill="rgb(215,123,29)" fg:x="1341" fg:w="1"/><text x="16.3043%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.9852%" y="629" width="0.0119%" height="15" fill="rgb(239,186,37)" fg:x="1341" fg:w="1"/><text x="16.3043%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9971%" y="709" width="0.0119%" height="15" fill="rgb(252,136,39)" fg:x="1342" fg:w="1"/><text x="16.3162%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9971%" y="693" width="0.0119%" height="15" fill="rgb(223,213,32)" fg:x="1342" fg:w="1"/><text x="16.3162%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9971%" y="677" width="0.0119%" height="15" fill="rgb(233,115,5)" fg:x="1342" fg:w="1"/><text x="16.3162%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9971%" y="661" width="0.0119%" height="15" fill="rgb(207,226,44)" fg:x="1342" fg:w="1"/><text x="16.3162%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9971%" y="645" width="0.0119%" height="15" fill="rgb(208,126,0)" fg:x="1342" fg:w="1"/><text x="16.3162%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9971%" y="629" width="0.0119%" height="15" fill="rgb(244,66,21)" fg:x="1342" fg:w="1"/><text x="16.3162%" y="639.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="15.9971%" y="613" width="0.0119%" height="15" fill="rgb(222,97,12)" fg:x="1342" fg:w="1"/><text x="16.3162%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="15.9971%" y="597" width="0.0119%" height="15" fill="rgb(219,213,19)" fg:x="1342" fg:w="1"/><text x="16.3162%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="15.9971%" y="581" width="0.0119%" height="15" fill="rgb(252,169,30)" fg:x="1342" fg:w="1"/><text x="16.3162%" y="591.50"/></g><g><title>logic::newline_token (4 samples, 0.05%)</title><rect x="15.9852%" y="725" width="0.0477%" height="15" fill="rgb(206,32,51)" fg:x="1341" fg:w="4"/><text x="16.3043%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.0091%" y="709" width="0.0238%" height="15" fill="rgb(250,172,42)" fg:x="1343" fg:w="2"/><text x="16.3282%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.0091%" y="693" width="0.0238%" height="15" fill="rgb(209,34,43)" fg:x="1343" fg:w="2"/><text x="16.3282%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.0091%" y="677" width="0.0238%" height="15" fill="rgb(223,11,35)" fg:x="1343" fg:w="2"/><text x="16.3282%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.0091%" y="661" width="0.0238%" height="15" fill="rgb(251,219,26)" fg:x="1343" fg:w="2"/><text x="16.3282%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.0091%" y="645" width="0.0238%" height="15" fill="rgb(231,119,3)" fg:x="1343" fg:w="2"/><text x="16.3282%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.0091%" y="629" width="0.0238%" height="15" fill="rgb(216,97,11)" fg:x="1343" fg:w="2"/><text x="16.3282%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.0091%" y="613" width="0.0238%" height="15" fill="rgb(223,59,9)" fg:x="1343" fg:w="2"/><text x="16.3282%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.0091%" y="597" width="0.0238%" height="15" fill="rgb(233,93,31)" fg:x="1343" fg:w="2"/><text x="16.3282%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.0091%" y="581" width="0.0238%" height="15" fill="rgb(239,81,33)" fg:x="1343" fg:w="2"/><text x="16.3282%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.0091%" y="565" width="0.0238%" height="15" fill="rgb(213,120,34)" fg:x="1343" fg:w="2"/><text x="16.3282%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0210%" y="549" width="0.0119%" height="15" fill="rgb(243,49,53)" fg:x="1344" fg:w="1"/><text x="16.3401%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0210%" y="533" width="0.0119%" height="15" fill="rgb(247,216,33)" fg:x="1344" fg:w="1"/><text x="16.3401%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.0210%" y="517" width="0.0119%" height="15" fill="rgb(226,26,14)" fg:x="1344" fg:w="1"/><text x="16.3401%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="16.0210%" y="501" width="0.0119%" height="15" fill="rgb(215,49,53)" fg:x="1344" fg:w="1"/><text x="16.3401%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.0329%" y="709" width="0.0119%" height="15" fill="rgb(245,162,40)" fg:x="1345" fg:w="1"/><text x="16.3520%" y="719.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.0329%" y="693" width="0.0119%" height="15" fill="rgb(229,68,17)" fg:x="1345" fg:w="1"/><text x="16.3520%" y="703.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="16.0329%" y="677" width="0.0119%" height="15" fill="rgb(213,182,10)" fg:x="1345" fg:w="1"/><text x="16.3520%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0448%" y="549" width="0.0119%" height="15" fill="rgb(245,125,30)" fg:x="1346" fg:w="1"/><text x="16.3639%" y="559.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0448%" y="533" width="0.0119%" height="15" fill="rgb(232,202,2)" fg:x="1346" fg:w="1"/><text x="16.3639%" y="543.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="16.0448%" y="517" width="0.0119%" height="15" fill="rgb(237,140,51)" fg:x="1346" fg:w="1"/><text x="16.3639%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.0448%" y="677" width="0.0238%" height="15" fill="rgb(236,157,25)" fg:x="1346" fg:w="2"/><text x="16.3639%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.0448%" y="661" width="0.0238%" height="15" fill="rgb(219,209,0)" fg:x="1346" fg:w="2"/><text x="16.3639%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.0448%" y="645" width="0.0238%" height="15" fill="rgb(240,116,54)" fg:x="1346" fg:w="2"/><text x="16.3639%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.0448%" y="629" width="0.0238%" height="15" fill="rgb(216,10,36)" fg:x="1346" fg:w="2"/><text x="16.3639%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.0448%" y="613" width="0.0238%" height="15" fill="rgb(222,72,44)" fg:x="1346" fg:w="2"/><text x="16.3639%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.0448%" y="597" width="0.0238%" height="15" fill="rgb(232,159,9)" fg:x="1346" fg:w="2"/><text x="16.3639%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.0448%" y="581" width="0.0238%" height="15" fill="rgb(210,39,32)" fg:x="1346" fg:w="2"/><text x="16.3639%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.0448%" y="565" width="0.0238%" height="15" fill="rgb(216,194,45)" fg:x="1346" fg:w="2"/><text x="16.3639%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0567%" y="549" width="0.0119%" height="15" fill="rgb(218,18,35)" fg:x="1347" fg:w="1"/><text x="16.3758%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.0567%" y="533" width="0.0119%" height="15" fill="rgb(207,83,51)" fg:x="1347" fg:w="1"/><text x="16.3758%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0567%" y="517" width="0.0119%" height="15" fill="rgb(225,63,43)" fg:x="1347" fg:w="1"/><text x="16.3758%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.0567%" y="501" width="0.0119%" height="15" fill="rgb(207,57,36)" fg:x="1347" fg:w="1"/><text x="16.3758%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0567%" y="485" width="0.0119%" height="15" fill="rgb(216,99,33)" fg:x="1347" fg:w="1"/><text x="16.3758%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.0567%" y="469" width="0.0119%" height="15" fill="rgb(225,42,16)" fg:x="1347" fg:w="1"/><text x="16.3758%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0567%" y="453" width="0.0119%" height="15" fill="rgb(220,201,45)" fg:x="1347" fg:w="1"/><text x="16.3758%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.0567%" y="437" width="0.0119%" height="15" fill="rgb(225,33,4)" fg:x="1347" fg:w="1"/><text x="16.3758%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0567%" y="421" width="0.0119%" height="15" fill="rgb(224,33,50)" fg:x="1347" fg:w="1"/><text x="16.3758%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.0567%" y="405" width="0.0119%" height="15" fill="rgb(246,198,51)" fg:x="1347" fg:w="1"/><text x="16.3758%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0567%" y="389" width="0.0119%" height="15" fill="rgb(205,22,4)" fg:x="1347" fg:w="1"/><text x="16.3758%" y="399.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.0567%" y="373" width="0.0119%" height="15" fill="rgb(206,3,8)" fg:x="1347" fg:w="1"/><text x="16.3758%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.0687%" y="597" width="0.0119%" height="15" fill="rgb(251,23,15)" fg:x="1348" fg:w="1"/><text x="16.3878%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0687%" y="581" width="0.0119%" height="15" fill="rgb(252,88,28)" fg:x="1348" fg:w="1"/><text x="16.3878%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.0687%" y="565" width="0.0119%" height="15" fill="rgb(212,127,14)" fg:x="1348" fg:w="1"/><text x="16.3878%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.0687%" y="549" width="0.0119%" height="15" fill="rgb(247,145,37)" fg:x="1348" fg:w="1"/><text x="16.3878%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.0687%" y="645" width="0.0238%" height="15" fill="rgb(209,117,53)" fg:x="1348" fg:w="2"/><text x="16.3878%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.0687%" y="629" width="0.0238%" height="15" fill="rgb(212,90,42)" fg:x="1348" fg:w="2"/><text x="16.3878%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.0687%" y="613" width="0.0238%" height="15" fill="rgb(218,164,37)" fg:x="1348" fg:w="2"/><text x="16.3878%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.0806%" y="597" width="0.0119%" height="15" fill="rgb(246,65,34)" fg:x="1349" fg:w="1"/><text x="16.3997%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0806%" y="581" width="0.0119%" height="15" fill="rgb(231,100,33)" fg:x="1349" fg:w="1"/><text x="16.3997%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.0806%" y="565" width="0.0119%" height="15" fill="rgb(228,126,14)" fg:x="1349" fg:w="1"/><text x="16.3997%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0806%" y="549" width="0.0119%" height="15" fill="rgb(215,173,21)" fg:x="1349" fg:w="1"/><text x="16.3997%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.0806%" y="533" width="0.0119%" height="15" fill="rgb(210,6,40)" fg:x="1349" fg:w="1"/><text x="16.3997%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0806%" y="517" width="0.0119%" height="15" fill="rgb(212,48,18)" fg:x="1349" fg:w="1"/><text x="16.3997%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.0806%" y="501" width="0.0119%" height="15" fill="rgb(230,214,11)" fg:x="1349" fg:w="1"/><text x="16.3997%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0806%" y="485" width="0.0119%" height="15" fill="rgb(254,105,39)" fg:x="1349" fg:w="1"/><text x="16.3997%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.0806%" y="469" width="0.0119%" height="15" fill="rgb(245,158,5)" fg:x="1349" fg:w="1"/><text x="16.3997%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0806%" y="453" width="0.0119%" height="15" fill="rgb(249,208,11)" fg:x="1349" fg:w="1"/><text x="16.3997%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.0806%" y="437" width="0.0119%" height="15" fill="rgb(210,39,28)" fg:x="1349" fg:w="1"/><text x="16.3997%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0806%" y="421" width="0.0119%" height="15" fill="rgb(211,56,53)" fg:x="1349" fg:w="1"/><text x="16.3997%" y="431.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0806%" y="405" width="0.0119%" height="15" fill="rgb(226,201,30)" fg:x="1349" fg:w="1"/><text x="16.3997%" y="415.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="16.0806%" y="389" width="0.0119%" height="15" fill="rgb(239,101,34)" fg:x="1349" fg:w="1"/><text x="16.3997%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0806%" y="373" width="0.0119%" height="15" fill="rgb(226,209,5)" fg:x="1349" fg:w="1"/><text x="16.3997%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="16.0687%" y="677" width="0.0358%" height="15" fill="rgb(250,105,47)" fg:x="1348" fg:w="3"/><text x="16.3878%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="16.0687%" y="661" width="0.0358%" height="15" fill="rgb(230,72,3)" fg:x="1348" fg:w="3"/><text x="16.3878%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0925%" y="645" width="0.0119%" height="15" fill="rgb(232,218,39)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.0925%" y="629" width="0.0119%" height="15" fill="rgb(248,166,6)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0925%" y="613" width="0.0119%" height="15" fill="rgb(247,89,20)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.0925%" y="597" width="0.0119%" height="15" fill="rgb(248,130,54)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0925%" y="581" width="0.0119%" height="15" fill="rgb(234,196,4)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.0925%" y="565" width="0.0119%" height="15" fill="rgb(250,143,31)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0925%" y="549" width="0.0119%" height="15" fill="rgb(211,110,34)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.0925%" y="533" width="0.0119%" height="15" fill="rgb(215,124,48)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0925%" y="517" width="0.0119%" height="15" fill="rgb(216,46,13)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.0925%" y="501" width="0.0119%" height="15" fill="rgb(205,184,25)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0925%" y="485" width="0.0119%" height="15" fill="rgb(228,1,10)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0925%" y="469" width="0.0119%" height="15" fill="rgb(213,116,27)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="479.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="16.0925%" y="453" width="0.0119%" height="15" fill="rgb(241,95,50)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0925%" y="437" width="0.0119%" height="15" fill="rgb(238,48,32)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="447.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="16.0925%" y="421" width="0.0119%" height="15" fill="rgb(235,113,49)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0925%" y="405" width="0.0119%" height="15" fill="rgb(205,127,43)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="415.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="16.0925%" y="389" width="0.0119%" height="15" fill="rgb(250,162,2)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.0925%" y="373" width="0.0119%" height="15" fill="rgb(220,13,41)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.0925%" y="357" width="0.0119%" height="15" fill="rgb(249,221,25)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.0925%" y="341" width="0.0119%" height="15" fill="rgb(215,208,19)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="351.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="16.0925%" y="325" width="0.0119%" height="15" fill="rgb(236,175,2)" fg:x="1350" fg:w="1"/><text x="16.4116%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1044%" y="613" width="0.0119%" height="15" fill="rgb(241,52,2)" fg:x="1351" fg:w="1"/><text x="16.4235%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1044%" y="597" width="0.0119%" height="15" fill="rgb(248,140,14)" fg:x="1351" fg:w="1"/><text x="16.4235%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1044%" y="581" width="0.0119%" height="15" fill="rgb(253,22,42)" fg:x="1351" fg:w="1"/><text x="16.4235%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1044%" y="565" width="0.0119%" height="15" fill="rgb(234,61,47)" fg:x="1351" fg:w="1"/><text x="16.4235%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1044%" y="549" width="0.0119%" height="15" fill="rgb(208,226,15)" fg:x="1351" fg:w="1"/><text x="16.4235%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1044%" y="533" width="0.0119%" height="15" fill="rgb(217,221,4)" fg:x="1351" fg:w="1"/><text x="16.4235%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1044%" y="517" width="0.0119%" height="15" fill="rgb(212,174,34)" fg:x="1351" fg:w="1"/><text x="16.4235%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1044%" y="501" width="0.0119%" height="15" fill="rgb(253,83,4)" fg:x="1351" fg:w="1"/><text x="16.4235%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1044%" y="485" width="0.0119%" height="15" fill="rgb(250,195,49)" fg:x="1351" fg:w="1"/><text x="16.4235%" y="495.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1044%" y="469" width="0.0119%" height="15" fill="rgb(241,192,25)" fg:x="1351" fg:w="1"/><text x="16.4235%" y="479.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="16.1044%" y="453" width="0.0119%" height="15" fill="rgb(208,124,10)" fg:x="1351" fg:w="1"/><text x="16.4235%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.1044%" y="645" width="0.0238%" height="15" fill="rgb(222,33,0)" fg:x="1351" fg:w="2"/><text x="16.4235%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.1044%" y="629" width="0.0238%" height="15" fill="rgb(234,209,28)" fg:x="1351" fg:w="2"/><text x="16.4235%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1163%" y="613" width="0.0119%" height="15" fill="rgb(224,11,23)" fg:x="1352" fg:w="1"/><text x="16.4354%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1163%" y="597" width="0.0119%" height="15" fill="rgb(232,99,1)" fg:x="1352" fg:w="1"/><text x="16.4354%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1163%" y="581" width="0.0119%" height="15" fill="rgb(237,95,45)" fg:x="1352" fg:w="1"/><text x="16.4354%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1163%" y="565" width="0.0119%" height="15" fill="rgb(208,109,11)" fg:x="1352" fg:w="1"/><text x="16.4354%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1163%" y="549" width="0.0119%" height="15" fill="rgb(216,190,48)" fg:x="1352" fg:w="1"/><text x="16.4354%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1163%" y="533" width="0.0119%" height="15" fill="rgb(251,171,36)" fg:x="1352" fg:w="1"/><text x="16.4354%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1163%" y="517" width="0.0119%" height="15" fill="rgb(230,62,22)" fg:x="1352" fg:w="1"/><text x="16.4354%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1163%" y="501" width="0.0119%" height="15" fill="rgb(225,114,35)" fg:x="1352" fg:w="1"/><text x="16.4354%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1163%" y="485" width="0.0119%" height="15" fill="rgb(215,118,42)" fg:x="1352" fg:w="1"/><text x="16.4354%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.1163%" y="469" width="0.0119%" height="15" fill="rgb(243,119,21)" fg:x="1352" fg:w="1"/><text x="16.4354%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.1163%" y="453" width="0.0119%" height="15" fill="rgb(252,177,53)" fg:x="1352" fg:w="1"/><text x="16.4354%" y="463.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="16.1163%" y="437" width="0.0119%" height="15" fill="rgb(237,209,29)" fg:x="1352" fg:w="1"/><text x="16.4354%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1283%" y="613" width="0.0119%" height="15" fill="rgb(212,65,23)" fg:x="1353" fg:w="1"/><text x="16.4474%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1283%" y="597" width="0.0119%" height="15" fill="rgb(230,222,46)" fg:x="1353" fg:w="1"/><text x="16.4474%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1283%" y="581" width="0.0119%" height="15" fill="rgb(215,135,32)" fg:x="1353" fg:w="1"/><text x="16.4474%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1283%" y="565" width="0.0119%" height="15" fill="rgb(246,101,22)" fg:x="1353" fg:w="1"/><text x="16.4474%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1283%" y="549" width="0.0119%" height="15" fill="rgb(206,107,13)" fg:x="1353" fg:w="1"/><text x="16.4474%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1283%" y="533" width="0.0119%" height="15" fill="rgb(250,100,44)" fg:x="1353" fg:w="1"/><text x="16.4474%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1283%" y="517" width="0.0119%" height="15" fill="rgb(231,147,38)" fg:x="1353" fg:w="1"/><text x="16.4474%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.1283%" y="501" width="0.0119%" height="15" fill="rgb(229,8,40)" fg:x="1353" fg:w="1"/><text x="16.4474%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.1283%" y="485" width="0.0119%" height="15" fill="rgb(221,135,30)" fg:x="1353" fg:w="1"/><text x="16.4474%" y="495.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="16.1283%" y="469" width="0.0119%" height="15" fill="rgb(249,193,18)" fg:x="1353" fg:w="1"/><text x="16.4474%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1402%" y="613" width="0.0119%" height="15" fill="rgb(209,133,39)" fg:x="1354" fg:w="1"/><text x="16.4593%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1402%" y="597" width="0.0119%" height="15" fill="rgb(232,100,14)" fg:x="1354" fg:w="1"/><text x="16.4593%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1402%" y="581" width="0.0119%" height="15" fill="rgb(224,185,1)" fg:x="1354" fg:w="1"/><text x="16.4593%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1402%" y="565" width="0.0119%" height="15" fill="rgb(223,139,8)" fg:x="1354" fg:w="1"/><text x="16.4593%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1402%" y="549" width="0.0119%" height="15" fill="rgb(232,213,38)" fg:x="1354" fg:w="1"/><text x="16.4593%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1402%" y="533" width="0.0119%" height="15" fill="rgb(207,94,22)" fg:x="1354" fg:w="1"/><text x="16.4593%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1402%" y="517" width="0.0119%" height="15" fill="rgb(219,183,54)" fg:x="1354" fg:w="1"/><text x="16.4593%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.1402%" y="501" width="0.0119%" height="15" fill="rgb(216,185,54)" fg:x="1354" fg:w="1"/><text x="16.4593%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.1402%" y="485" width="0.0119%" height="15" fill="rgb(254,217,39)" fg:x="1354" fg:w="1"/><text x="16.4593%" y="495.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="16.1402%" y="469" width="0.0119%" height="15" fill="rgb(240,178,23)" fg:x="1354" fg:w="1"/><text x="16.4593%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1521%" y="613" width="0.0119%" height="15" fill="rgb(218,11,47)" fg:x="1355" fg:w="1"/><text x="16.4712%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1521%" y="597" width="0.0119%" height="15" fill="rgb(218,51,51)" fg:x="1355" fg:w="1"/><text x="16.4712%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.1521%" y="581" width="0.0119%" height="15" fill="rgb(238,126,27)" fg:x="1355" fg:w="1"/><text x="16.4712%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.1521%" y="565" width="0.0119%" height="15" fill="rgb(249,202,22)" fg:x="1355" fg:w="1"/><text x="16.4712%" y="575.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="16.1521%" y="549" width="0.0119%" height="15" fill="rgb(254,195,49)" fg:x="1355" fg:w="1"/><text x="16.4712%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1640%" y="517" width="0.0119%" height="15" fill="rgb(208,123,14)" fg:x="1356" fg:w="1"/><text x="16.4831%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1640%" y="501" width="0.0119%" height="15" fill="rgb(224,200,8)" fg:x="1356" fg:w="1"/><text x="16.4831%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1640%" y="485" width="0.0119%" height="15" fill="rgb(217,61,36)" fg:x="1356" fg:w="1"/><text x="16.4831%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1640%" y="469" width="0.0119%" height="15" fill="rgb(206,35,45)" fg:x="1356" fg:w="1"/><text x="16.4831%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1640%" y="453" width="0.0119%" height="15" fill="rgb(217,65,33)" fg:x="1356" fg:w="1"/><text x="16.4831%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1640%" y="437" width="0.0119%" height="15" fill="rgb(222,158,48)" fg:x="1356" fg:w="1"/><text x="16.4831%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1640%" y="421" width="0.0119%" height="15" fill="rgb(254,2,54)" fg:x="1356" fg:w="1"/><text x="16.4831%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1640%" y="405" width="0.0119%" height="15" fill="rgb(250,143,38)" fg:x="1356" fg:w="1"/><text x="16.4831%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1640%" y="389" width="0.0119%" height="15" fill="rgb(248,25,0)" fg:x="1356" fg:w="1"/><text x="16.4831%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.1640%" y="373" width="0.0119%" height="15" fill="rgb(206,152,27)" fg:x="1356" fg:w="1"/><text x="16.4831%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.1640%" y="357" width="0.0119%" height="15" fill="rgb(240,77,30)" fg:x="1356" fg:w="1"/><text x="16.4831%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.1640%" y="581" width="0.0238%" height="15" fill="rgb(231,5,3)" fg:x="1356" fg:w="2"/><text x="16.4831%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.1640%" y="565" width="0.0238%" height="15" fill="rgb(207,226,32)" fg:x="1356" fg:w="2"/><text x="16.4831%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.1640%" y="549" width="0.0238%" height="15" fill="rgb(222,207,47)" fg:x="1356" fg:w="2"/><text x="16.4831%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.1640%" y="533" width="0.0238%" height="15" fill="rgb(229,115,45)" fg:x="1356" fg:w="2"/><text x="16.4831%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1759%" y="517" width="0.0119%" height="15" fill="rgb(224,191,6)" fg:x="1357" fg:w="1"/><text x="16.4950%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1759%" y="501" width="0.0119%" height="15" fill="rgb(230,227,24)" fg:x="1357" fg:w="1"/><text x="16.4950%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1759%" y="485" width="0.0119%" height="15" fill="rgb(228,80,19)" fg:x="1357" fg:w="1"/><text x="16.4950%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1759%" y="469" width="0.0119%" height="15" fill="rgb(247,229,0)" fg:x="1357" fg:w="1"/><text x="16.4950%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1759%" y="453" width="0.0119%" height="15" fill="rgb(237,194,15)" fg:x="1357" fg:w="1"/><text x="16.4950%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1759%" y="437" width="0.0119%" height="15" fill="rgb(219,203,20)" fg:x="1357" fg:w="1"/><text x="16.4950%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1759%" y="421" width="0.0119%" height="15" fill="rgb(234,128,8)" fg:x="1357" fg:w="1"/><text x="16.4950%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1759%" y="405" width="0.0119%" height="15" fill="rgb(248,202,8)" fg:x="1357" fg:w="1"/><text x="16.4950%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1759%" y="389" width="0.0119%" height="15" fill="rgb(206,104,37)" fg:x="1357" fg:w="1"/><text x="16.4950%" y="399.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1759%" y="373" width="0.0119%" height="15" fill="rgb(223,8,27)" fg:x="1357" fg:w="1"/><text x="16.4950%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1759%" y="357" width="0.0119%" height="15" fill="rgb(216,217,28)" fg:x="1357" fg:w="1"/><text x="16.4950%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1759%" y="341" width="0.0119%" height="15" fill="rgb(249,199,1)" fg:x="1357" fg:w="1"/><text x="16.4950%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.1759%" y="325" width="0.0119%" height="15" fill="rgb(240,85,17)" fg:x="1357" fg:w="1"/><text x="16.4950%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1759%" y="309" width="0.0119%" height="15" fill="rgb(206,108,45)" fg:x="1357" fg:w="1"/><text x="16.4950%" y="319.50"/></g><g><title>parser::operator+ (14 samples, 0.17%)</title><rect x="16.0329%" y="725" width="0.1669%" height="15" fill="rgb(245,210,41)" fg:x="1345" fg:w="14"/><text x="16.3520%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="16.0448%" y="709" width="0.1550%" height="15" fill="rgb(206,13,37)" fg:x="1346" fg:w="13"/><text x="16.3639%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="16.0448%" y="693" width="0.1550%" height="15" fill="rgb(250,61,18)" fg:x="1346" fg:w="13"/><text x="16.3639%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="16.1044%" y="677" width="0.0954%" height="15" fill="rgb(235,172,48)" fg:x="1351" fg:w="8"/><text x="16.4235%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="16.1044%" y="661" width="0.0954%" height="15" fill="rgb(249,201,17)" fg:x="1351" fg:w="8"/><text x="16.4235%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="16.1283%" y="645" width="0.0715%" height="15" fill="rgb(219,208,6)" fg:x="1353" fg:w="6"/><text x="16.4474%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="16.1283%" y="629" width="0.0715%" height="15" fill="rgb(248,31,23)" fg:x="1353" fg:w="6"/><text x="16.4474%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="16.1640%" y="613" width="0.0358%" height="15" fill="rgb(245,15,42)" fg:x="1356" fg:w="3"/><text x="16.4831%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="16.1640%" y="597" width="0.0358%" height="15" fill="rgb(222,217,39)" fg:x="1356" fg:w="3"/><text x="16.4831%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1879%" y="581" width="0.0119%" height="15" fill="rgb(210,219,27)" fg:x="1358" fg:w="1"/><text x="16.5070%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1879%" y="565" width="0.0119%" height="15" fill="rgb(252,166,36)" fg:x="1358" fg:w="1"/><text x="16.5070%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.1879%" y="549" width="0.0119%" height="15" fill="rgb(245,132,34)" fg:x="1358" fg:w="1"/><text x="16.5070%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.1879%" y="533" width="0.0119%" height="15" fill="rgb(236,54,3)" fg:x="1358" fg:w="1"/><text x="16.5070%" y="543.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="16.1879%" y="517" width="0.0119%" height="15" fill="rgb(241,173,43)" fg:x="1358" fg:w="1"/><text x="16.5070%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1998%" y="725" width="0.0119%" height="15" fill="rgb(215,190,9)" fg:x="1359" fg:w="1"/><text x="16.5189%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1998%" y="709" width="0.0119%" height="15" fill="rgb(242,101,16)" fg:x="1359" fg:w="1"/><text x="16.5189%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1998%" y="693" width="0.0119%" height="15" fill="rgb(223,190,21)" fg:x="1359" fg:w="1"/><text x="16.5189%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1998%" y="677" width="0.0119%" height="15" fill="rgb(215,228,25)" fg:x="1359" fg:w="1"/><text x="16.5189%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1998%" y="661" width="0.0119%" height="15" fill="rgb(225,36,22)" fg:x="1359" fg:w="1"/><text x="16.5189%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1998%" y="645" width="0.0119%" height="15" fill="rgb(251,106,46)" fg:x="1359" fg:w="1"/><text x="16.5189%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1998%" y="629" width="0.0119%" height="15" fill="rgb(208,90,1)" fg:x="1359" fg:w="1"/><text x="16.5189%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.1998%" y="613" width="0.0119%" height="15" fill="rgb(243,10,4)" fg:x="1359" fg:w="1"/><text x="16.5189%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.1998%" y="597" width="0.0119%" height="15" fill="rgb(212,137,27)" fg:x="1359" fg:w="1"/><text x="16.5189%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.2117%" y="581" width="0.0119%" height="15" fill="rgb(231,220,49)" fg:x="1360" fg:w="1"/><text x="16.5308%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.2117%" y="565" width="0.0119%" height="15" fill="rgb(237,96,20)" fg:x="1360" fg:w="1"/><text x="16.5308%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.2117%" y="549" width="0.0119%" height="15" fill="rgb(239,229,30)" fg:x="1360" fg:w="1"/><text x="16.5308%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.2117%" y="533" width="0.0119%" height="15" fill="rgb(219,65,33)" fg:x="1360" fg:w="1"/><text x="16.5308%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.2117%" y="517" width="0.0119%" height="15" fill="rgb(243,134,7)" fg:x="1360" fg:w="1"/><text x="16.5308%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.2117%" y="501" width="0.0119%" height="15" fill="rgb(216,177,54)" fg:x="1360" fg:w="1"/><text x="16.5308%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.2117%" y="485" width="0.0119%" height="15" fill="rgb(211,160,20)" fg:x="1360" fg:w="1"/><text x="16.5308%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.2117%" y="469" width="0.0119%" height="15" fill="rgb(239,85,39)" fg:x="1360" fg:w="1"/><text x="16.5308%" y="479.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="16.2117%" y="453" width="0.0119%" height="15" fill="rgb(232,125,22)" fg:x="1360" fg:w="1"/><text x="16.5308%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.2117%" y="437" width="0.0119%" height="15" fill="rgb(244,57,34)" fg:x="1360" fg:w="1"/><text x="16.5308%" y="447.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="16.2117%" y="421" width="0.0119%" height="15" fill="rgb(214,203,32)" fg:x="1360" fg:w="1"/><text x="16.5308%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.2117%" y="405" width="0.0119%" height="15" fill="rgb(207,58,43)" fg:x="1360" fg:w="1"/><text x="16.5308%" y="415.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="16.2117%" y="389" width="0.0119%" height="15" fill="rgb(215,193,15)" fg:x="1360" fg:w="1"/><text x="16.5308%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.2117%" y="373" width="0.0119%" height="15" fill="rgb(232,15,44)" fg:x="1360" fg:w="1"/><text x="16.5308%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.2117%" y="357" width="0.0119%" height="15" fill="rgb(212,3,48)" fg:x="1360" fg:w="1"/><text x="16.5308%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.2117%" y="341" width="0.0119%" height="15" fill="rgb(218,128,7)" fg:x="1360" fg:w="1"/><text x="16.5308%" y="351.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="16.2117%" y="325" width="0.0119%" height="15" fill="rgb(226,216,39)" fg:x="1360" fg:w="1"/><text x="16.5308%" y="335.50"/></g><g><title>eval::eval (78 samples, 0.93%)</title><rect x="15.3058%" y="837" width="0.9298%" height="15" fill="rgb(243,47,51)" fg:x="1284" fg:w="78"/><text x="15.6249%" y="847.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (78 samples, 0.93%)</title><rect x="15.3058%" y="821" width="0.9298%" height="15" fill="rgb(241,183,40)" fg:x="1284" fg:w="78"/><text x="15.6249%" y="831.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (78 samples, 0.93%)</title><rect x="15.3058%" y="805" width="0.9298%" height="15" fill="rgb(231,217,32)" fg:x="1284" fg:w="78"/><text x="15.6249%" y="815.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (78 samples, 0.93%)</title><rect x="15.3058%" y="789" width="0.9298%" height="15" fill="rgb(229,61,38)" fg:x="1284" fg:w="78"/><text x="15.6249%" y="799.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (78 samples, 0.93%)</title><rect x="15.3058%" y="773" width="0.9298%" height="15" fill="rgb(225,210,5)" fg:x="1284" fg:w="78"/><text x="15.6249%" y="783.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;Result (State&amp;)&gt; (*)(unsigned int)&gt;::_M_invoke (72 samples, 0.86%)</title><rect x="15.3773%" y="757" width="0.8583%" height="15" fill="rgb(231,79,45)" fg:x="1290" fg:w="72"/><text x="15.6964%" y="767.50"/></g><g><title>logic::newline (27 samples, 0.32%)</title><rect x="15.9137%" y="741" width="0.3219%" height="15" fill="rgb(224,100,7)" fg:x="1335" fg:w="27"/><text x="16.2328%" y="751.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.2117%" y="725" width="0.0238%" height="15" fill="rgb(241,198,18)" fg:x="1360" fg:w="2"/><text x="16.5308%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.2117%" y="709" width="0.0238%" height="15" fill="rgb(252,97,53)" fg:x="1360" fg:w="2"/><text x="16.5308%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.2117%" y="693" width="0.0238%" height="15" fill="rgb(220,88,7)" fg:x="1360" fg:w="2"/><text x="16.5308%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.2117%" y="677" width="0.0238%" height="15" fill="rgb(213,176,14)" fg:x="1360" fg:w="2"/><text x="16.5308%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.2117%" y="661" width="0.0238%" height="15" fill="rgb(246,73,7)" fg:x="1360" fg:w="2"/><text x="16.5308%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.2117%" y="645" width="0.0238%" height="15" fill="rgb(245,64,36)" fg:x="1360" fg:w="2"/><text x="16.5308%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.2117%" y="629" width="0.0238%" height="15" fill="rgb(245,80,10)" fg:x="1360" fg:w="2"/><text x="16.5308%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.2117%" y="613" width="0.0238%" height="15" fill="rgb(232,107,50)" fg:x="1360" fg:w="2"/><text x="16.5308%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.2117%" y="597" width="0.0238%" height="15" fill="rgb(253,3,0)" fg:x="1360" fg:w="2"/><text x="16.5308%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.2236%" y="581" width="0.0119%" height="15" fill="rgb(212,99,53)" fg:x="1361" fg:w="1"/><text x="16.5427%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.2236%" y="565" width="0.0119%" height="15" fill="rgb(249,111,54)" fg:x="1361" fg:w="1"/><text x="16.5427%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.2236%" y="549" width="0.0119%" height="15" fill="rgb(249,55,30)" fg:x="1361" fg:w="1"/><text x="16.5427%" y="559.50"/></g><g><title>helix_term::ui::editor::EditorView::handle_keymap_event (80 samples, 0.95%)</title><rect x="15.3058%" y="965" width="0.9536%" height="15" fill="rgb(237,47,42)" fg:x="1284" fg:w="80"/><text x="15.6249%" y="975.50"/></g><g><title>helix_term::commands::open (80 samples, 0.95%)</title><rect x="15.3058%" y="949" width="0.9536%" height="15" fill="rgb(211,20,18)" fg:x="1284" fg:w="80"/><text x="15.6249%" y="959.50"/></g><g><title>helix_view::document::Document::apply (80 samples, 0.95%)</title><rect x="15.3058%" y="933" width="0.9536%" height="15" fill="rgb(231,203,46)" fg:x="1284" fg:w="80"/><text x="15.6249%" y="943.50"/></g><g><title>helix_view::document::Document::apply_impl (80 samples, 0.95%)</title><rect x="15.3058%" y="917" width="0.9536%" height="15" fill="rgb(237,142,3)" fg:x="1284" fg:w="80"/><text x="15.6249%" y="927.50"/></g><g><title>helix_core::syntax::LanguageLayer::update (80 samples, 0.95%)</title><rect x="15.3058%" y="901" width="0.9536%" height="15" fill="rgb(241,107,1)" fg:x="1284" fg:w="80"/><text x="15.6249%" y="911.50"/></g><g><title>helix_core::syntax::LanguageLayer::parse (80 samples, 0.95%)</title><rect x="15.3058%" y="885" width="0.9536%" height="15" fill="rgb(229,83,13)" fg:x="1284" fg:w="80"/><text x="15.6249%" y="895.50"/></g><g><title>ts_parser_parse (80 samples, 0.95%)</title><rect x="15.3058%" y="869" width="0.9536%" height="15" fill="rgb(241,91,40)" fg:x="1284" fg:w="80"/><text x="15.6249%" y="879.50"/></g><g><title>tree_sitter_haskell_external_scanner_scan (80 samples, 0.95%)</title><rect x="15.3058%" y="853" width="0.9536%" height="15" fill="rgb(225,3,45)" fg:x="1284" fg:w="80"/><text x="15.6249%" y="863.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.2355%" y="837" width="0.0238%" height="15" fill="rgb(244,223,14)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="847.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.2355%" y="821" width="0.0238%" height="15" fill="rgb(224,124,37)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="831.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.2355%" y="805" width="0.0238%" height="15" fill="rgb(251,171,30)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="815.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.2355%" y="789" width="0.0238%" height="15" fill="rgb(236,46,54)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="799.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.2355%" y="773" width="0.0238%" height="15" fill="rgb(245,213,5)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="783.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.2355%" y="757" width="0.0238%" height="15" fill="rgb(230,144,27)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="767.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.2355%" y="741" width="0.0238%" height="15" fill="rgb(220,86,6)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.2355%" y="725" width="0.0238%" height="15" fill="rgb(240,20,13)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="735.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.2355%" y="709" width="0.0238%" height="15" fill="rgb(217,89,34)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.2355%" y="693" width="0.0238%" height="15" fill="rgb(229,13,5)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.2355%" y="677" width="0.0238%" height="15" fill="rgb(244,67,35)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.2355%" y="661" width="0.0238%" height="15" fill="rgb(221,40,2)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.2355%" y="645" width="0.0238%" height="15" fill="rgb(237,157,21)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.2355%" y="629" width="0.0238%" height="15" fill="rgb(222,94,11)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.2355%" y="613" width="0.0238%" height="15" fill="rgb(249,113,6)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.2355%" y="597" width="0.0238%" height="15" fill="rgb(238,137,36)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.2355%" y="581" width="0.0238%" height="15" fill="rgb(210,102,26)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.2355%" y="565" width="0.0238%" height="15" fill="rgb(218,30,30)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.2355%" y="549" width="0.0238%" height="15" fill="rgb(214,67,26)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.2355%" y="533" width="0.0238%" height="15" fill="rgb(251,9,53)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="543.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="16.2355%" y="517" width="0.0238%" height="15" fill="rgb(228,204,25)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="527.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="16.2355%" y="501" width="0.0238%" height="15" fill="rgb(207,153,8)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="511.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="16.2355%" y="485" width="0.0238%" height="15" fill="rgb(242,9,16)" fg:x="1362" fg:w="2"/><text x="16.5546%" y="495.50"/></g><g><title>cond::consume (1 samples, 0.01%)</title><rect x="16.2594%" y="741" width="0.0119%" height="15" fill="rgb(217,211,10)" fg:x="1364" fg:w="1"/><text x="16.5785%" y="751.50"/></g><g><title>cond::consumes (1 samples, 0.01%)</title><rect x="16.2594%" y="725" width="0.0119%" height="15" fill="rgb(219,228,52)" fg:x="1364" fg:w="1"/><text x="16.5785%" y="735.50"/></g><g><title>cond::consume_if (1 samples, 0.01%)</title><rect x="16.2594%" y="709" width="0.0119%" height="15" fill="rgb(231,92,29)" fg:x="1364" fg:w="1"/><text x="16.5785%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.2594%" y="693" width="0.0119%" height="15" fill="rgb(232,8,23)" fg:x="1364" fg:w="1"/><text x="16.5785%" y="703.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="16.2713%" y="629" width="0.0358%" height="15" fill="rgb(216,211,34)" fg:x="1365" fg:w="3"/><text x="16.5904%" y="639.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="16.2713%" y="613" width="0.0358%" height="15" fill="rgb(236,151,0)" fg:x="1365" fg:w="3"/><text x="16.5904%" y="623.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="16.2713%" y="597" width="0.0358%" height="15" fill="rgb(209,168,3)" fg:x="1365" fg:w="3"/><text x="16.5904%" y="607.50"/></g><g><title>cond::consumes (4 samples, 0.05%)</title><rect x="16.2713%" y="741" width="0.0477%" height="15" fill="rgb(208,129,28)" fg:x="1365" fg:w="4"/><text x="16.5904%" y="751.50"/></g><g><title>operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt; (4 samples, 0.05%)</title><rect x="16.2713%" y="725" width="0.0477%" height="15" fill="rgb(229,78,22)" fg:x="1365" fg:w="4"/><text x="16.5904%" y="735.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="16.2713%" y="709" width="0.0477%" height="15" fill="rgb(228,187,13)" fg:x="1365" fg:w="4"/><text x="16.5904%" y="719.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (4 samples, 0.05%)</title><rect x="16.2713%" y="693" width="0.0477%" height="15" fill="rgb(240,119,24)" fg:x="1365" fg:w="4"/><text x="16.5904%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="16.2713%" y="677" width="0.0477%" height="15" fill="rgb(209,194,42)" fg:x="1365" fg:w="4"/><text x="16.5904%" y="687.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (4 samples, 0.05%)</title><rect x="16.2713%" y="661" width="0.0477%" height="15" fill="rgb(247,200,46)" fg:x="1365" fg:w="4"/><text x="16.5904%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="16.2713%" y="645" width="0.0477%" height="15" fill="rgb(218,76,16)" fg:x="1365" fg:w="4"/><text x="16.5904%" y="655.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="16.3071%" y="629" width="0.0119%" height="15" fill="rgb(225,21,48)" fg:x="1368" fg:w="1"/><text x="16.6262%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.3071%" y="613" width="0.0119%" height="15" fill="rgb(239,223,50)" fg:x="1368" fg:w="1"/><text x="16.6262%" y="623.50"/></g><g><title>cond::peeks (2 samples, 0.02%)</title><rect x="16.3190%" y="709" width="0.0238%" height="15" fill="rgb(244,45,21)" fg:x="1369" fg:w="2"/><text x="16.6381%" y="719.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.3309%" y="693" width="0.0119%" height="15" fill="rgb(232,33,43)" fg:x="1370" fg:w="1"/><text x="16.6500%" y="703.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.3309%" y="677" width="0.0119%" height="15" fill="rgb(209,8,3)" fg:x="1370" fg:w="1"/><text x="16.6500%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.3428%" y="693" width="0.0119%" height="15" fill="rgb(214,25,53)" fg:x="1371" fg:w="1"/><text x="16.6619%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.3428%" y="677" width="0.0119%" height="15" fill="rgb(254,186,54)" fg:x="1371" fg:w="1"/><text x="16.6619%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="16.3428%" y="661" width="0.0119%" height="15" fill="rgb(208,174,49)" fg:x="1371" fg:w="1"/><text x="16.6619%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.3428%" y="709" width="0.0238%" height="15" fill="rgb(233,191,51)" fg:x="1371" fg:w="2"/><text x="16.6619%" y="719.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="16.3548%" y="693" width="0.0119%" height="15" fill="rgb(222,134,10)" fg:x="1372" fg:w="1"/><text x="16.6739%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.3548%" y="677" width="0.0119%" height="15" fill="rgb(230,226,20)" fg:x="1372" fg:w="1"/><text x="16.6739%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="16.3667%" y="709" width="0.0119%" height="15" fill="rgb(251,111,25)" fg:x="1373" fg:w="1"/><text x="16.6858%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="16.3667%" y="693" width="0.0119%" height="15" fill="rgb(224,40,46)" fg:x="1373" fg:w="1"/><text x="16.6858%" y="703.50"/></g><g><title>logic::count_indent (11 samples, 0.13%)</title><rect x="16.2594%" y="757" width="0.1311%" height="15" fill="rgb(236,108,47)" fg:x="1364" fg:w="11"/><text x="16.5785%" y="767.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (6 samples, 0.07%)</title><rect x="16.3190%" y="741" width="0.0715%" height="15" fill="rgb(234,93,0)" fg:x="1369" fg:w="6"/><text x="16.6381%" y="751.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (6 samples, 0.07%)</title><rect x="16.3190%" y="725" width="0.0715%" height="15" fill="rgb(224,213,32)" fg:x="1369" fg:w="6"/><text x="16.6381%" y="735.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.3786%" y="709" width="0.0119%" height="15" fill="rgb(251,11,48)" fg:x="1374" fg:w="1"/><text x="16.6977%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.3786%" y="693" width="0.0119%" height="15" fill="rgb(236,173,5)" fg:x="1374" fg:w="1"/><text x="16.6977%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.3786%" y="677" width="0.0119%" height="15" fill="rgb(230,95,12)" fg:x="1374" fg:w="1"/><text x="16.6977%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4024%" y="661" width="0.0119%" height="15" fill="rgb(232,209,1)" fg:x="1376" fg:w="1"/><text x="16.7215%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4024%" y="645" width="0.0119%" height="15" fill="rgb(232,6,1)" fg:x="1376" fg:w="1"/><text x="16.7215%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4024%" y="629" width="0.0119%" height="15" fill="rgb(210,224,50)" fg:x="1376" fg:w="1"/><text x="16.7215%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4024%" y="613" width="0.0119%" height="15" fill="rgb(228,127,35)" fg:x="1376" fg:w="1"/><text x="16.7215%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4024%" y="597" width="0.0119%" height="15" fill="rgb(245,102,45)" fg:x="1376" fg:w="1"/><text x="16.7215%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4024%" y="581" width="0.0119%" height="15" fill="rgb(214,1,49)" fg:x="1376" fg:w="1"/><text x="16.7215%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.4024%" y="565" width="0.0119%" height="15" fill="rgb(226,163,40)" fg:x="1376" fg:w="1"/><text x="16.7215%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="16.4024%" y="549" width="0.0119%" height="15" fill="rgb(239,212,28)" fg:x="1376" fg:w="1"/><text x="16.7215%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.4144%" y="629" width="0.0119%" height="15" fill="rgb(220,20,13)" fg:x="1377" fg:w="1"/><text x="16.7335%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4144%" y="613" width="0.0119%" height="15" fill="rgb(210,164,35)" fg:x="1377" fg:w="1"/><text x="16.7335%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.4144%" y="597" width="0.0119%" height="15" fill="rgb(248,109,41)" fg:x="1377" fg:w="1"/><text x="16.7335%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4144%" y="581" width="0.0119%" height="15" fill="rgb(238,23,50)" fg:x="1377" fg:w="1"/><text x="16.7335%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.4144%" y="565" width="0.0119%" height="15" fill="rgb(211,48,49)" fg:x="1377" fg:w="1"/><text x="16.7335%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.4144%" y="549" width="0.0119%" height="15" fill="rgb(223,36,21)" fg:x="1377" fg:w="1"/><text x="16.7335%" y="559.50"/></g><g><title>parser::as_char_parser (4 samples, 0.05%)</title><rect x="16.3905%" y="693" width="0.0477%" height="15" fill="rgb(207,123,46)" fg:x="1375" fg:w="4"/><text x="16.7096%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="16.4024%" y="677" width="0.0358%" height="15" fill="rgb(240,218,32)" fg:x="1376" fg:w="3"/><text x="16.7215%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.4144%" y="661" width="0.0238%" height="15" fill="rgb(252,5,43)" fg:x="1377" fg:w="2"/><text x="16.7335%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.4144%" y="645" width="0.0238%" height="15" fill="rgb(252,84,19)" fg:x="1377" fg:w="2"/><text x="16.7335%" y="655.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.4263%" y="629" width="0.0119%" height="15" fill="rgb(243,152,39)" fg:x="1378" fg:w="1"/><text x="16.7454%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4263%" y="613" width="0.0119%" height="15" fill="rgb(234,160,15)" fg:x="1378" fg:w="1"/><text x="16.7454%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.4263%" y="597" width="0.0119%" height="15" fill="rgb(237,34,20)" fg:x="1378" fg:w="1"/><text x="16.7454%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4263%" y="581" width="0.0119%" height="15" fill="rgb(229,97,13)" fg:x="1378" fg:w="1"/><text x="16.7454%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.4263%" y="565" width="0.0119%" height="15" fill="rgb(234,71,50)" fg:x="1378" fg:w="1"/><text x="16.7454%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4263%" y="549" width="0.0119%" height="15" fill="rgb(253,155,4)" fg:x="1378" fg:w="1"/><text x="16.7454%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.4263%" y="533" width="0.0119%" height="15" fill="rgb(222,185,37)" fg:x="1378" fg:w="1"/><text x="16.7454%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4263%" y="517" width="0.0119%" height="15" fill="rgb(251,177,13)" fg:x="1378" fg:w="1"/><text x="16.7454%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.4263%" y="501" width="0.0119%" height="15" fill="rgb(250,179,40)" fg:x="1378" fg:w="1"/><text x="16.7454%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4263%" y="485" width="0.0119%" height="15" fill="rgb(242,44,2)" fg:x="1378" fg:w="1"/><text x="16.7454%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.4263%" y="469" width="0.0119%" height="15" fill="rgb(216,177,13)" fg:x="1378" fg:w="1"/><text x="16.7454%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.4263%" y="453" width="0.0119%" height="15" fill="rgb(216,106,43)" fg:x="1378" fg:w="1"/><text x="16.7454%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4382%" y="693" width="0.0119%" height="15" fill="rgb(216,183,2)" fg:x="1379" fg:w="1"/><text x="16.7573%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4382%" y="677" width="0.0119%" height="15" fill="rgb(249,75,3)" fg:x="1379" fg:w="1"/><text x="16.7573%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4382%" y="661" width="0.0119%" height="15" fill="rgb(219,67,39)" fg:x="1379" fg:w="1"/><text x="16.7573%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4382%" y="645" width="0.0119%" height="15" fill="rgb(253,228,2)" fg:x="1379" fg:w="1"/><text x="16.7573%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.4382%" y="629" width="0.0119%" height="15" fill="rgb(235,138,27)" fg:x="1379" fg:w="1"/><text x="16.7573%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="16.4382%" y="613" width="0.0119%" height="15" fill="rgb(236,97,51)" fg:x="1379" fg:w="1"/><text x="16.7573%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="16.4501%" y="693" width="0.0119%" height="15" fill="rgb(240,80,30)" fg:x="1380" fg:w="1"/><text x="16.7692%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4501%" y="677" width="0.0119%" height="15" fill="rgb(230,178,19)" fg:x="1380" fg:w="1"/><text x="16.7692%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.4501%" y="661" width="0.0119%" height="15" fill="rgb(210,190,27)" fg:x="1380" fg:w="1"/><text x="16.7692%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4501%" y="645" width="0.0119%" height="15" fill="rgb(222,107,31)" fg:x="1380" fg:w="1"/><text x="16.7692%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.4501%" y="629" width="0.0119%" height="15" fill="rgb(216,127,34)" fg:x="1380" fg:w="1"/><text x="16.7692%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4501%" y="613" width="0.0119%" height="15" fill="rgb(234,116,52)" fg:x="1380" fg:w="1"/><text x="16.7692%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4501%" y="597" width="0.0119%" height="15" fill="rgb(222,124,15)" fg:x="1380" fg:w="1"/><text x="16.7692%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.4501%" y="581" width="0.0119%" height="15" fill="rgb(231,179,28)" fg:x="1380" fg:w="1"/><text x="16.7692%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4501%" y="565" width="0.0119%" height="15" fill="rgb(226,93,45)" fg:x="1380" fg:w="1"/><text x="16.7692%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="16.4501%" y="549" width="0.0119%" height="15" fill="rgb(215,8,51)" fg:x="1380" fg:w="1"/><text x="16.7692%" y="559.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_invoke (1 samples, 0.01%)</title><rect x="16.4620%" y="693" width="0.0119%" height="15" fill="rgb(223,106,5)" fg:x="1381" fg:w="1"/><text x="16.7811%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State)&gt; &gt;(std::function&lt;Result (State)&gt;)::{lambda(auto:1)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="16.4620%" y="677" width="0.0119%" height="15" fill="rgb(250,191,5)" fg:x="1381" fg:w="1"/><text x="16.7811%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (8 samples, 0.10%)</title><rect x="16.3905%" y="709" width="0.0954%" height="15" fill="rgb(242,132,44)" fg:x="1375" fg:w="8"/><text x="16.7096%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.4740%" y="693" width="0.0119%" height="15" fill="rgb(251,152,29)" fg:x="1382" fg:w="1"/><text x="16.7931%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.4740%" y="677" width="0.0119%" height="15" fill="rgb(218,179,5)" fg:x="1382" fg:w="1"/><text x="16.7931%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="16.4740%" y="661" width="0.0119%" height="15" fill="rgb(227,67,19)" fg:x="1382" fg:w="1"/><text x="16.7931%" y="671.50"/></g><g><title>parser::as_char_parser (2 samples, 0.02%)</title><rect x="16.4859%" y="693" width="0.0238%" height="15" fill="rgb(233,119,31)" fg:x="1383" fg:w="2"/><text x="16.8050%" y="703.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.4978%" y="677" width="0.0119%" height="15" fill="rgb(241,120,22)" fg:x="1384" fg:w="1"/><text x="16.8169%" y="687.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.4978%" y="661" width="0.0119%" height="15" fill="rgb(224,102,30)" fg:x="1384" fg:w="1"/><text x="16.8169%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.5097%" y="549" width="0.0119%" height="15" fill="rgb(210,164,37)" fg:x="1385" fg:w="1"/><text x="16.8288%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.5097%" y="533" width="0.0119%" height="15" fill="rgb(226,191,16)" fg:x="1385" fg:w="1"/><text x="16.8288%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.5097%" y="629" width="0.0238%" height="15" fill="rgb(214,40,45)" fg:x="1385" fg:w="2"/><text x="16.8288%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.5097%" y="613" width="0.0238%" height="15" fill="rgb(244,29,26)" fg:x="1385" fg:w="2"/><text x="16.8288%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.5097%" y="597" width="0.0238%" height="15" fill="rgb(216,16,5)" fg:x="1385" fg:w="2"/><text x="16.8288%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.5097%" y="581" width="0.0238%" height="15" fill="rgb(249,76,35)" fg:x="1385" fg:w="2"/><text x="16.8288%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.5097%" y="565" width="0.0238%" height="15" fill="rgb(207,11,44)" fg:x="1385" fg:w="2"/><text x="16.8288%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.5216%" y="549" width="0.0119%" height="15" fill="rgb(228,190,49)" fg:x="1386" fg:w="1"/><text x="16.8407%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.5216%" y="533" width="0.0119%" height="15" fill="rgb(214,173,12)" fg:x="1386" fg:w="1"/><text x="16.8407%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.5216%" y="517" width="0.0119%" height="15" fill="rgb(218,26,35)" fg:x="1386" fg:w="1"/><text x="16.8407%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.5216%" y="501" width="0.0119%" height="15" fill="rgb(220,200,19)" fg:x="1386" fg:w="1"/><text x="16.8407%" y="511.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="16.5097%" y="693" width="0.0358%" height="15" fill="rgb(239,95,49)" fg:x="1385" fg:w="3"/><text x="16.8288%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="16.5097%" y="677" width="0.0358%" height="15" fill="rgb(235,85,53)" fg:x="1385" fg:w="3"/><text x="16.8288%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="16.5097%" y="661" width="0.0358%" height="15" fill="rgb(233,133,31)" fg:x="1385" fg:w="3"/><text x="16.8288%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="16.5097%" y="645" width="0.0358%" height="15" fill="rgb(218,25,20)" fg:x="1385" fg:w="3"/><text x="16.8288%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.5336%" y="629" width="0.0119%" height="15" fill="rgb(252,210,38)" fg:x="1387" fg:w="1"/><text x="16.8527%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.5336%" y="613" width="0.0119%" height="15" fill="rgb(242,134,21)" fg:x="1387" fg:w="1"/><text x="16.8527%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.5336%" y="597" width="0.0119%" height="15" fill="rgb(213,28,48)" fg:x="1387" fg:w="1"/><text x="16.8527%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_invoke (2 samples, 0.02%)</title><rect x="16.5455%" y="693" width="0.0238%" height="15" fill="rgb(250,196,2)" fg:x="1388" fg:w="2"/><text x="16.8646%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function&lt;std::function&lt;Result (State)&gt;, void, void&gt; (1 samples, 0.01%)</title><rect x="16.5574%" y="677" width="0.0119%" height="15" fill="rgb(227,5,17)" fg:x="1389" fg:w="1"/><text x="16.8765%" y="687.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.5574%" y="661" width="0.0119%" height="15" fill="rgb(221,226,24)" fg:x="1389" fg:w="1"/><text x="16.8765%" y="671.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="16.5574%" y="645" width="0.0119%" height="15" fill="rgb(211,5,48)" fg:x="1389" fg:w="1"/><text x="16.8765%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (10 samples, 0.12%)</title><rect x="16.4859%" y="709" width="0.1192%" height="15" fill="rgb(219,150,6)" fg:x="1383" fg:w="10"/><text x="16.8050%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="16.5693%" y="693" width="0.0358%" height="15" fill="rgb(251,46,16)" fg:x="1390" fg:w="3"/><text x="16.8884%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="16.5932%" y="677" width="0.0119%" height="15" fill="rgb(220,204,40)" fg:x="1392" fg:w="1"/><text x="16.9123%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="16.6051%" y="693" width="0.0119%" height="15" fill="rgb(211,85,2)" fg:x="1393" fg:w="1"/><text x="16.9242%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="16.6051%" y="677" width="0.0119%" height="15" fill="rgb(229,17,7)" fg:x="1393" fg:w="1"/><text x="16.9242%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="16.6051%" y="661" width="0.0119%" height="15" fill="rgb(239,72,28)" fg:x="1393" fg:w="1"/><text x="16.9242%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="16.6051%" y="645" width="0.0119%" height="15" fill="rgb(230,47,54)" fg:x="1393" fg:w="1"/><text x="16.9242%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="16.6051%" y="629" width="0.0119%" height="15" fill="rgb(214,50,8)" fg:x="1393" fg:w="1"/><text x="16.9242%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.6170%" y="661" width="0.0119%" height="15" fill="rgb(216,198,43)" fg:x="1394" fg:w="1"/><text x="16.9361%" y="671.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.6170%" y="645" width="0.0119%" height="15" fill="rgb(234,20,35)" fg:x="1394" fg:w="1"/><text x="16.9361%" y="655.50"/></g><g><title>parser::as_char_parser (2 samples, 0.02%)</title><rect x="16.6170%" y="677" width="0.0238%" height="15" fill="rgb(254,45,19)" fg:x="1394" fg:w="2"/><text x="16.9361%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.6289%" y="661" width="0.0119%" height="15" fill="rgb(219,14,44)" fg:x="1395" fg:w="1"/><text x="16.9480%" y="671.50"/></g><g><title>logic::read_symop (1 samples, 0.01%)</title><rect x="16.6408%" y="645" width="0.0119%" height="15" fill="rgb(217,220,26)" fg:x="1396" fg:w="1"/><text x="16.9599%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt; (State&amp;), cond::read_string[abi:cxx11](std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.6408%" y="629" width="0.0119%" height="15" fill="rgb(213,158,28)" fg:x="1396" fg:w="1"/><text x="16.9599%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.6408%" y="613" width="0.0119%" height="15" fill="rgb(252,51,52)" fg:x="1396" fg:w="1"/><text x="16.9599%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="16.6408%" y="597" width="0.0119%" height="15" fill="rgb(246,89,16)" fg:x="1396" fg:w="1"/><text x="16.9599%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.6528%" y="645" width="0.0119%" height="15" fill="rgb(216,158,49)" fg:x="1397" fg:w="1"/><text x="16.9719%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.6528%" y="629" width="0.0119%" height="15" fill="rgb(236,107,19)" fg:x="1397" fg:w="1"/><text x="16.9719%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.6528%" y="613" width="0.0119%" height="15" fill="rgb(228,185,30)" fg:x="1397" fg:w="1"/><text x="16.9719%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.6528%" y="597" width="0.0119%" height="15" fill="rgb(246,134,8)" fg:x="1397" fg:w="1"/><text x="16.9719%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="16.6528%" y="581" width="0.0119%" height="15" fill="rgb(214,143,50)" fg:x="1397" fg:w="1"/><text x="16.9719%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.6647%" y="581" width="0.0119%" height="15" fill="rgb(228,75,8)" fg:x="1398" fg:w="1"/><text x="16.9838%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="16.6647%" y="565" width="0.0119%" height="15" fill="rgb(207,175,4)" fg:x="1398" fg:w="1"/><text x="16.9838%" y="575.50"/></g><g><title>logic::end_on_infix (3 samples, 0.04%)</title><rect x="16.6647%" y="629" width="0.0358%" height="15" fill="rgb(205,108,24)" fg:x="1398" fg:w="3"/><text x="16.9838%" y="639.50"/></g><g><title>operator&amp; (3 samples, 0.04%)</title><rect x="16.6647%" y="613" width="0.0358%" height="15" fill="rgb(244,120,49)" fg:x="1398" fg:w="3"/><text x="16.9838%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="16.6647%" y="597" width="0.0358%" height="15" fill="rgb(223,47,38)" fg:x="1398" fg:w="3"/><text x="16.9838%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.6766%" y="581" width="0.0238%" height="15" fill="rgb(229,179,11)" fg:x="1399" fg:w="2"/><text x="16.9957%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.6766%" y="565" width="0.0238%" height="15" fill="rgb(231,122,1)" fg:x="1399" fg:w="2"/><text x="16.9957%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.6766%" y="549" width="0.0238%" height="15" fill="rgb(245,119,9)" fg:x="1399" fg:w="2"/><text x="16.9957%" y="559.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="16.6766%" y="533" width="0.0238%" height="15" fill="rgb(241,163,25)" fg:x="1399" fg:w="2"/><text x="16.9957%" y="543.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="16.6766%" y="517" width="0.0238%" height="15" fill="rgb(217,214,3)" fg:x="1399" fg:w="2"/><text x="16.9957%" y="527.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="16.6766%" y="501" width="0.0238%" height="15" fill="rgb(240,86,28)" fg:x="1399" fg:w="2"/><text x="16.9957%" y="511.50"/></g><g><title>parser::either (1 samples, 0.01%)</title><rect x="16.7004%" y="597" width="0.0119%" height="15" fill="rgb(215,47,9)" fg:x="1401" fg:w="1"/><text x="17.0195%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="16.7004%" y="613" width="0.0238%" height="15" fill="rgb(252,25,45)" fg:x="1401" fg:w="2"/><text x="17.0195%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.7124%" y="597" width="0.0119%" height="15" fill="rgb(251,164,9)" fg:x="1402" fg:w="1"/><text x="17.0315%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.7124%" y="581" width="0.0119%" height="15" fill="rgb(233,194,0)" fg:x="1402" fg:w="1"/><text x="17.0315%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.7124%" y="565" width="0.0119%" height="15" fill="rgb(249,111,24)" fg:x="1402" fg:w="1"/><text x="17.0315%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.7124%" y="549" width="0.0119%" height="15" fill="rgb(250,223,3)" fg:x="1402" fg:w="1"/><text x="17.0315%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.7124%" y="533" width="0.0119%" height="15" fill="rgb(236,178,37)" fg:x="1402" fg:w="1"/><text x="17.0315%" y="543.50"/></g><g><title>parser::layout_end (3 samples, 0.04%)</title><rect x="16.7004%" y="629" width="0.0358%" height="15" fill="rgb(241,158,50)" fg:x="1401" fg:w="3"/><text x="17.0195%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.7243%" y="613" width="0.0119%" height="15" fill="rgb(213,121,41)" fg:x="1403" fg:w="1"/><text x="17.0434%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.7243%" y="597" width="0.0119%" height="15" fill="rgb(240,92,3)" fg:x="1403" fg:w="1"/><text x="17.0434%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.7243%" y="581" width="0.0119%" height="15" fill="rgb(205,123,3)" fg:x="1403" fg:w="1"/><text x="17.0434%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.7243%" y="565" width="0.0119%" height="15" fill="rgb(205,97,47)" fg:x="1403" fg:w="1"/><text x="17.0434%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.7243%" y="549" width="0.0119%" height="15" fill="rgb(247,152,14)" fg:x="1403" fg:w="1"/><text x="17.0434%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.7243%" y="533" width="0.0119%" height="15" fill="rgb(248,195,53)" fg:x="1403" fg:w="1"/><text x="17.0434%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.7362%" y="565" width="0.0119%" height="15" fill="rgb(226,201,16)" fg:x="1404" fg:w="1"/><text x="17.0553%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.7362%" y="549" width="0.0119%" height="15" fill="rgb(205,98,0)" fg:x="1404" fg:w="1"/><text x="17.0553%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.7362%" y="533" width="0.0119%" height="15" fill="rgb(214,191,48)" fg:x="1404" fg:w="1"/><text x="17.0553%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.7362%" y="517" width="0.0119%" height="15" fill="rgb(237,112,39)" fg:x="1404" fg:w="1"/><text x="17.0553%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.7362%" y="501" width="0.0119%" height="15" fill="rgb(247,203,27)" fg:x="1404" fg:w="1"/><text x="17.0553%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.7362%" y="485" width="0.0119%" height="15" fill="rgb(235,124,28)" fg:x="1404" fg:w="1"/><text x="17.0553%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="16.7362%" y="469" width="0.0119%" height="15" fill="rgb(208,207,46)" fg:x="1404" fg:w="1"/><text x="17.0553%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.7362%" y="453" width="0.0119%" height="15" fill="rgb(234,176,4)" fg:x="1404" fg:w="1"/><text x="17.0553%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="16.7362%" y="437" width="0.0119%" height="15" fill="rgb(230,133,28)" fg:x="1404" fg:w="1"/><text x="17.0553%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="16.7362%" y="421" width="0.0119%" height="15" fill="rgb(211,137,40)" fg:x="1404" fg:w="1"/><text x="17.0553%" y="431.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="16.7362%" y="405" width="0.0119%" height="15" fill="rgb(254,35,13)" fg:x="1404" fg:w="1"/><text x="17.0553%" y="415.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="16.7362%" y="629" width="0.0238%" height="15" fill="rgb(225,49,51)" fg:x="1404" fg:w="2"/><text x="17.0553%" y="639.50"/></g><g><title>parser::either (2 samples, 0.02%)</title><rect x="16.7362%" y="613" width="0.0238%" height="15" fill="rgb(251,10,15)" fg:x="1404" fg:w="2"/><text x="17.0553%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.7362%" y="597" width="0.0238%" height="15" fill="rgb(228,207,15)" fg:x="1404" fg:w="2"/><text x="17.0553%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="16.7362%" y="581" width="0.0238%" height="15" fill="rgb(241,99,19)" fg:x="1404" fg:w="2"/><text x="17.0553%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.7481%" y="565" width="0.0119%" height="15" fill="rgb(207,104,49)" fg:x="1405" fg:w="1"/><text x="17.0672%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (11 samples, 0.13%)</title><rect x="16.6408%" y="677" width="0.1311%" height="15" fill="rgb(234,99,18)" fg:x="1396" fg:w="11"/><text x="16.9599%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (11 samples, 0.13%)</title><rect x="16.6408%" y="661" width="0.1311%" height="15" fill="rgb(213,191,49)" fg:x="1396" fg:w="11"/><text x="16.9599%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic), logic::newline_infix(unsigned int)::{lambda(auto:1)#1}&gt;::_M_invoke (9 samples, 0.11%)</title><rect x="16.6647%" y="645" width="0.1073%" height="15" fill="rgb(210,226,19)" fg:x="1398" fg:w="9"/><text x="16.9838%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.7600%" y="629" width="0.0119%" height="15" fill="rgb(229,97,18)" fg:x="1406" fg:w="1"/><text x="17.0791%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.7600%" y="613" width="0.0119%" height="15" fill="rgb(211,167,15)" fg:x="1406" fg:w="1"/><text x="17.0791%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.7600%" y="597" width="0.0119%" height="15" fill="rgb(210,169,34)" fg:x="1406" fg:w="1"/><text x="17.0791%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.7600%" y="581" width="0.0119%" height="15" fill="rgb(241,121,31)" fg:x="1406" fg:w="1"/><text x="17.0791%" y="591.50"/></g><g><title>logic::read_symop (1 samples, 0.01%)</title><rect x="16.7720%" y="661" width="0.0119%" height="15" fill="rgb(232,40,11)" fg:x="1407" fg:w="1"/><text x="17.0911%" y="671.50"/></g><g><title>cond::read_string[abi:cxx11] (1 samples, 0.01%)</title><rect x="16.7720%" y="645" width="0.0119%" height="15" fill="rgb(205,86,26)" fg:x="1407" fg:w="1"/><text x="17.0911%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="16.8077%" y="485" width="0.0119%" height="15" fill="rgb(231,126,28)" fg:x="1410" fg:w="1"/><text x="17.1268%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_invoke (1 samples, 0.01%)</title><rect x="16.8077%" y="469" width="0.0119%" height="15" fill="rgb(219,221,18)" fg:x="1410" fg:w="1"/><text x="17.1268%" y="479.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="16.8077%" y="453" width="0.0119%" height="15" fill="rgb(211,40,0)" fg:x="1410" fg:w="1"/><text x="17.1268%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (4 samples, 0.05%)</title><rect x="16.7839%" y="661" width="0.0477%" height="15" fill="rgb(239,85,43)" fg:x="1408" fg:w="4"/><text x="17.1030%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (4 samples, 0.05%)</title><rect x="16.7839%" y="645" width="0.0477%" height="15" fill="rgb(231,55,21)" fg:x="1408" fg:w="4"/><text x="17.1030%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (4 samples, 0.05%)</title><rect x="16.7839%" y="629" width="0.0477%" height="15" fill="rgb(225,184,43)" fg:x="1408" fg:w="4"/><text x="17.1030%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (4 samples, 0.05%)</title><rect x="16.7839%" y="613" width="0.0477%" height="15" fill="rgb(251,158,41)" fg:x="1408" fg:w="4"/><text x="17.1030%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (4 samples, 0.05%)</title><rect x="16.7839%" y="597" width="0.0477%" height="15" fill="rgb(234,159,37)" fg:x="1408" fg:w="4"/><text x="17.1030%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="16.7958%" y="581" width="0.0358%" height="15" fill="rgb(216,204,22)" fg:x="1409" fg:w="3"/><text x="17.1149%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="16.7958%" y="565" width="0.0358%" height="15" fill="rgb(214,17,3)" fg:x="1409" fg:w="3"/><text x="17.1149%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="16.7958%" y="549" width="0.0358%" height="15" fill="rgb(212,111,17)" fg:x="1409" fg:w="3"/><text x="17.1149%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="16.7958%" y="533" width="0.0358%" height="15" fill="rgb(221,157,24)" fg:x="1409" fg:w="3"/><text x="17.1149%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="16.8077%" y="517" width="0.0238%" height="15" fill="rgb(252,16,13)" fg:x="1410" fg:w="2"/><text x="17.1268%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="16.8077%" y="501" width="0.0238%" height="15" fill="rgb(221,62,2)" fg:x="1410" fg:w="2"/><text x="17.1268%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="16.8196%" y="485" width="0.0119%" height="15" fill="rgb(247,87,22)" fg:x="1411" fg:w="1"/><text x="17.1387%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="16.8196%" y="469" width="0.0119%" height="15" fill="rgb(215,73,9)" fg:x="1411" fg:w="1"/><text x="17.1387%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_invoke (1 samples, 0.01%)</title><rect x="16.8196%" y="453" width="0.0119%" height="15" fill="rgb(207,175,33)" fg:x="1411" fg:w="1"/><text x="17.1387%" y="463.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.8316%" y="613" width="0.0119%" height="15" fill="rgb(243,129,54)" fg:x="1412" fg:w="1"/><text x="17.1507%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="16.8316%" y="597" width="0.0119%" height="15" fill="rgb(227,119,45)" fg:x="1412" fg:w="1"/><text x="17.1507%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="16.8316%" y="629" width="0.0358%" height="15" fill="rgb(205,109,36)" fg:x="1412" fg:w="3"/><text x="17.1507%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.8435%" y="613" width="0.0238%" height="15" fill="rgb(205,6,39)" fg:x="1413" fg:w="2"/><text x="17.1626%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.8554%" y="597" width="0.0119%" height="15" fill="rgb(221,32,16)" fg:x="1414" fg:w="1"/><text x="17.1745%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="16.8554%" y="581" width="0.0119%" height="15" fill="rgb(228,144,50)" fg:x="1414" fg:w="1"/><text x="17.1745%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.8673%" y="613" width="0.0119%" height="15" fill="rgb(229,201,53)" fg:x="1415" fg:w="1"/><text x="17.1864%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="16.8673%" y="597" width="0.0119%" height="15" fill="rgb(249,153,27)" fg:x="1415" fg:w="1"/><text x="17.1864%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.8792%" y="613" width="0.0119%" height="15" fill="rgb(227,106,25)" fg:x="1416" fg:w="1"/><text x="17.1983%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.8792%" y="597" width="0.0119%" height="15" fill="rgb(230,65,29)" fg:x="1416" fg:w="1"/><text x="17.1983%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="16.8792%" y="581" width="0.0119%" height="15" fill="rgb(221,57,46)" fg:x="1416" fg:w="1"/><text x="17.1983%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="16.8912%" y="533" width="0.0119%" height="15" fill="rgb(229,161,17)" fg:x="1417" fg:w="1"/><text x="17.2103%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.9031%" y="517" width="0.0119%" height="15" fill="rgb(222,213,11)" fg:x="1418" fg:w="1"/><text x="17.2222%" y="527.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.9031%" y="501" width="0.0119%" height="15" fill="rgb(235,35,13)" fg:x="1418" fg:w="1"/><text x="17.2222%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.9031%" y="485" width="0.0119%" height="15" fill="rgb(233,158,34)" fg:x="1418" fg:w="1"/><text x="17.2222%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="16.9031%" y="469" width="0.0119%" height="15" fill="rgb(215,151,48)" fg:x="1418" fg:w="1"/><text x="17.2222%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="16.8912%" y="581" width="0.0358%" height="15" fill="rgb(229,84,14)" fg:x="1417" fg:w="3"/><text x="17.2103%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="16.8912%" y="565" width="0.0358%" height="15" fill="rgb(229,68,14)" fg:x="1417" fg:w="3"/><text x="17.2103%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="16.8912%" y="549" width="0.0358%" height="15" fill="rgb(243,106,26)" fg:x="1417" fg:w="3"/><text x="17.2103%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.9031%" y="533" width="0.0238%" height="15" fill="rgb(206,45,38)" fg:x="1418" fg:w="2"/><text x="17.2222%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.9150%" y="517" width="0.0119%" height="15" fill="rgb(226,6,15)" fg:x="1419" fg:w="1"/><text x="17.2341%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.9150%" y="501" width="0.0119%" height="15" fill="rgb(232,22,54)" fg:x="1419" fg:w="1"/><text x="17.2341%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="16.9150%" y="485" width="0.0119%" height="15" fill="rgb(229,222,32)" fg:x="1419" fg:w="1"/><text x="17.2341%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="16.8912%" y="597" width="0.0477%" height="15" fill="rgb(228,62,29)" fg:x="1417" fg:w="4"/><text x="17.2103%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.9269%" y="581" width="0.0119%" height="15" fill="rgb(251,103,34)" fg:x="1420" fg:w="1"/><text x="17.2460%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.9269%" y="565" width="0.0119%" height="15" fill="rgb(233,12,30)" fg:x="1420" fg:w="1"/><text x="17.2460%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="16.9269%" y="549" width="0.0119%" height="15" fill="rgb(238,52,0)" fg:x="1420" fg:w="1"/><text x="17.2460%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.9388%" y="581" width="0.0119%" height="15" fill="rgb(223,98,5)" fg:x="1421" fg:w="1"/><text x="17.2579%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="16.9388%" y="565" width="0.0119%" height="15" fill="rgb(228,75,37)" fg:x="1421" fg:w="1"/><text x="17.2579%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="16.9508%" y="533" width="0.0119%" height="15" fill="rgb(205,115,49)" fg:x="1422" fg:w="1"/><text x="17.2699%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.9508%" y="549" width="0.0238%" height="15" fill="rgb(250,154,43)" fg:x="1422" fg:w="2"/><text x="17.2699%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="16.9627%" y="533" width="0.0119%" height="15" fill="rgb(226,43,29)" fg:x="1423" fg:w="1"/><text x="17.2818%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.9627%" y="517" width="0.0119%" height="15" fill="rgb(249,228,39)" fg:x="1423" fg:w="1"/><text x="17.2818%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="16.9627%" y="501" width="0.0119%" height="15" fill="rgb(216,79,43)" fg:x="1423" fg:w="1"/><text x="17.2818%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="16.9746%" y="533" width="0.0119%" height="15" fill="rgb(228,95,12)" fg:x="1424" fg:w="1"/><text x="17.2937%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="16.9746%" y="517" width="0.0119%" height="15" fill="rgb(249,221,15)" fg:x="1424" fg:w="1"/><text x="17.2937%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="16.9508%" y="581" width="0.0477%" height="15" fill="rgb(233,34,13)" fg:x="1422" fg:w="4"/><text x="17.2699%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="16.9508%" y="565" width="0.0477%" height="15" fill="rgb(214,103,39)" fg:x="1422" fg:w="4"/><text x="17.2699%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="16.9746%" y="549" width="0.0238%" height="15" fill="rgb(251,126,39)" fg:x="1424" fg:w="2"/><text x="17.2937%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="16.9865%" y="533" width="0.0119%" height="15" fill="rgb(214,216,36)" fg:x="1425" fg:w="1"/><text x="17.3056%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="16.9985%" y="501" width="0.0119%" height="15" fill="rgb(220,221,8)" fg:x="1426" fg:w="1"/><text x="17.3176%" y="511.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.0104%" y="501" width="0.0119%" height="15" fill="rgb(240,216,3)" fg:x="1427" fg:w="1"/><text x="17.3295%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.0104%" y="485" width="0.0119%" height="15" fill="rgb(232,218,17)" fg:x="1427" fg:w="1"/><text x="17.3295%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.0104%" y="469" width="0.0119%" height="15" fill="rgb(229,163,45)" fg:x="1427" fg:w="1"/><text x="17.3295%" y="479.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.0104%" y="453" width="0.0119%" height="15" fill="rgb(231,110,42)" fg:x="1427" fg:w="1"/><text x="17.3295%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="16.9985%" y="549" width="0.0358%" height="15" fill="rgb(208,170,48)" fg:x="1426" fg:w="3"/><text x="17.3176%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="16.9985%" y="533" width="0.0358%" height="15" fill="rgb(239,116,25)" fg:x="1426" fg:w="3"/><text x="17.3176%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="16.9985%" y="517" width="0.0358%" height="15" fill="rgb(219,200,50)" fg:x="1426" fg:w="3"/><text x="17.3176%" y="527.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.0223%" y="501" width="0.0119%" height="15" fill="rgb(245,200,0)" fg:x="1428" fg:w="1"/><text x="17.3414%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.0223%" y="485" width="0.0119%" height="15" fill="rgb(245,119,33)" fg:x="1428" fg:w="1"/><text x="17.3414%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.0223%" y="469" width="0.0119%" height="15" fill="rgb(231,125,12)" fg:x="1428" fg:w="1"/><text x="17.3414%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="16.9985%" y="565" width="0.0477%" height="15" fill="rgb(216,96,41)" fg:x="1426" fg:w="4"/><text x="17.3176%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.0342%" y="549" width="0.0119%" height="15" fill="rgb(248,43,45)" fg:x="1429" fg:w="1"/><text x="17.3533%" y="559.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="17.0461%" y="549" width="0.0238%" height="15" fill="rgb(217,222,7)" fg:x="1430" fg:w="2"/><text x="17.3652%" y="559.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="17.0461%" y="533" width="0.0238%" height="15" fill="rgb(233,28,6)" fg:x="1430" fg:w="2"/><text x="17.3652%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.0700%" y="549" width="0.0119%" height="15" fill="rgb(231,218,15)" fg:x="1432" fg:w="1"/><text x="17.3891%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.0700%" y="533" width="0.0119%" height="15" fill="rgb(226,171,48)" fg:x="1432" fg:w="1"/><text x="17.3891%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.0700%" y="517" width="0.0119%" height="15" fill="rgb(235,201,9)" fg:x="1432" fg:w="1"/><text x="17.3891%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.0819%" y="469" width="0.0119%" height="15" fill="rgb(217,80,15)" fg:x="1433" fg:w="1"/><text x="17.4010%" y="479.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.0819%" y="453" width="0.0119%" height="15" fill="rgb(219,152,8)" fg:x="1433" fg:w="1"/><text x="17.4010%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="17.0819%" y="501" width="0.0358%" height="15" fill="rgb(243,107,38)" fg:x="1433" fg:w="3"/><text x="17.4010%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="17.0819%" y="485" width="0.0358%" height="15" fill="rgb(231,17,5)" fg:x="1433" fg:w="3"/><text x="17.4010%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.0938%" y="469" width="0.0238%" height="15" fill="rgb(209,25,54)" fg:x="1434" fg:w="2"/><text x="17.4129%" y="479.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.0938%" y="453" width="0.0238%" height="15" fill="rgb(219,0,2)" fg:x="1434" fg:w="2"/><text x="17.4129%" y="463.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2 samples, 0.02%)</title><rect x="17.0938%" y="437" width="0.0238%" height="15" fill="rgb(246,9,5)" fg:x="1434" fg:w="2"/><text x="17.4129%" y="447.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.1177%" y="485" width="0.0119%" height="15" fill="rgb(226,159,4)" fg:x="1436" fg:w="1"/><text x="17.4368%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.1177%" y="469" width="0.0119%" height="15" fill="rgb(219,175,34)" fg:x="1436" fg:w="1"/><text x="17.4368%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="17.0819%" y="517" width="0.0596%" height="15" fill="rgb(236,10,46)" fg:x="1433" fg:w="5"/><text x="17.4010%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.1177%" y="501" width="0.0238%" height="15" fill="rgb(240,211,16)" fg:x="1436" fg:w="2"/><text x="17.4368%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.1296%" y="485" width="0.0119%" height="15" fill="rgb(205,3,43)" fg:x="1437" fg:w="1"/><text x="17.4487%" y="495.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="17.1296%" y="469" width="0.0119%" height="15" fill="rgb(245,7,22)" fg:x="1437" fg:w="1"/><text x="17.4487%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="17.0819%" y="533" width="0.0715%" height="15" fill="rgb(239,132,32)" fg:x="1433" fg:w="6"/><text x="17.4010%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.1415%" y="517" width="0.0119%" height="15" fill="rgb(228,202,34)" fg:x="1438" fg:w="1"/><text x="17.4606%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.1415%" y="501" width="0.0119%" height="15" fill="rgb(254,200,22)" fg:x="1438" fg:w="1"/><text x="17.4606%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.1415%" y="485" width="0.0119%" height="15" fill="rgb(219,10,39)" fg:x="1438" fg:w="1"/><text x="17.4606%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.1534%" y="517" width="0.0119%" height="15" fill="rgb(226,210,39)" fg:x="1439" fg:w="1"/><text x="17.4725%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.1534%" y="501" width="0.0119%" height="15" fill="rgb(208,219,16)" fg:x="1439" fg:w="1"/><text x="17.4725%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.1534%" y="485" width="0.0119%" height="15" fill="rgb(216,158,51)" fg:x="1439" fg:w="1"/><text x="17.4725%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.1653%" y="453" width="0.0119%" height="15" fill="rgb(233,14,44)" fg:x="1440" fg:w="1"/><text x="17.4844%" y="463.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.1653%" y="437" width="0.0119%" height="15" fill="rgb(237,97,39)" fg:x="1440" fg:w="1"/><text x="17.4844%" y="447.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.1653%" y="421" width="0.0119%" height="15" fill="rgb(218,198,43)" fg:x="1440" fg:w="1"/><text x="17.4844%" y="431.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.1773%" y="437" width="0.0119%" height="15" fill="rgb(231,104,20)" fg:x="1441" fg:w="1"/><text x="17.4964%" y="447.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.1773%" y="421" width="0.0119%" height="15" fill="rgb(254,36,13)" fg:x="1441" fg:w="1"/><text x="17.4964%" y="431.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="17.1892%" y="437" width="0.0119%" height="15" fill="rgb(248,14,50)" fg:x="1442" fg:w="1"/><text x="17.5083%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="17.1653%" y="485" width="0.0477%" height="15" fill="rgb(217,107,29)" fg:x="1440" fg:w="4"/><text x="17.4844%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="17.1653%" y="469" width="0.0477%" height="15" fill="rgb(251,169,33)" fg:x="1440" fg:w="4"/><text x="17.4844%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="17.1773%" y="453" width="0.0358%" height="15" fill="rgb(217,108,32)" fg:x="1441" fg:w="3"/><text x="17.4964%" y="463.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="17.2011%" y="437" width="0.0119%" height="15" fill="rgb(219,66,42)" fg:x="1443" fg:w="1"/><text x="17.5202%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="17.1653%" y="501" width="0.0596%" height="15" fill="rgb(206,180,7)" fg:x="1440" fg:w="5"/><text x="17.4844%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.2130%" y="485" width="0.0119%" height="15" fill="rgb(208,226,31)" fg:x="1444" fg:w="1"/><text x="17.5321%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.2130%" y="469" width="0.0119%" height="15" fill="rgb(218,26,49)" fg:x="1444" fg:w="1"/><text x="17.5321%" y="479.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.2130%" y="453" width="0.0119%" height="15" fill="rgb(233,197,48)" fg:x="1444" fg:w="1"/><text x="17.5321%" y="463.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.2249%" y="485" width="0.0119%" height="15" fill="rgb(252,181,51)" fg:x="1445" fg:w="1"/><text x="17.5440%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.2249%" y="469" width="0.0119%" height="15" fill="rgb(253,90,19)" fg:x="1445" fg:w="1"/><text x="17.5440%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.2369%" y="485" width="0.0119%" height="15" fill="rgb(215,171,30)" fg:x="1446" fg:w="1"/><text x="17.5560%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.2369%" y="469" width="0.0119%" height="15" fill="rgb(214,222,9)" fg:x="1446" fg:w="1"/><text x="17.5560%" y="479.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.2369%" y="453" width="0.0119%" height="15" fill="rgb(223,3,22)" fg:x="1446" fg:w="1"/><text x="17.5560%" y="463.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.2369%" y="437" width="0.0119%" height="15" fill="rgb(225,196,46)" fg:x="1446" fg:w="1"/><text x="17.5560%" y="447.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.2488%" y="405" width="0.0119%" height="15" fill="rgb(209,110,37)" fg:x="1447" fg:w="1"/><text x="17.5679%" y="415.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.2488%" y="389" width="0.0119%" height="15" fill="rgb(249,89,12)" fg:x="1447" fg:w="1"/><text x="17.5679%" y="399.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="17.2607%" y="405" width="0.0119%" height="15" fill="rgb(226,27,33)" fg:x="1448" fg:w="1"/><text x="17.5798%" y="415.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.2726%" y="373" width="0.0119%" height="15" fill="rgb(213,82,22)" fg:x="1449" fg:w="1"/><text x="17.5917%" y="383.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="17.2726%" y="357" width="0.0119%" height="15" fill="rgb(248,140,0)" fg:x="1449" fg:w="1"/><text x="17.5917%" y="367.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="17.2845%" y="341" width="0.0119%" height="15" fill="rgb(228,106,3)" fg:x="1450" fg:w="1"/><text x="17.6036%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="17.2726%" y="405" width="0.0358%" height="15" fill="rgb(209,23,37)" fg:x="1449" fg:w="3"/><text x="17.5917%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="17.2726%" y="389" width="0.0358%" height="15" fill="rgb(241,93,50)" fg:x="1449" fg:w="3"/><text x="17.5917%" y="399.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.2845%" y="373" width="0.0238%" height="15" fill="rgb(253,46,43)" fg:x="1450" fg:w="2"/><text x="17.6036%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.2845%" y="357" width="0.0238%" height="15" fill="rgb(226,206,43)" fg:x="1450" fg:w="2"/><text x="17.6036%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.2965%" y="341" width="0.0119%" height="15" fill="rgb(217,54,7)" fg:x="1451" fg:w="1"/><text x="17.6156%" y="351.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="17.2965%" y="325" width="0.0119%" height="15" fill="rgb(223,5,52)" fg:x="1451" fg:w="1"/><text x="17.6156%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="17.2488%" y="453" width="0.0715%" height="15" fill="rgb(206,52,46)" fg:x="1447" fg:w="6"/><text x="17.5679%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="17.2488%" y="437" width="0.0715%" height="15" fill="rgb(253,136,11)" fg:x="1447" fg:w="6"/><text x="17.5679%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="17.2488%" y="421" width="0.0715%" height="15" fill="rgb(208,106,33)" fg:x="1447" fg:w="6"/><text x="17.5679%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.3084%" y="405" width="0.0119%" height="15" fill="rgb(206,54,4)" fg:x="1452" fg:w="1"/><text x="17.6275%" y="415.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="17.3084%" y="389" width="0.0119%" height="15" fill="rgb(213,3,15)" fg:x="1452" fg:w="1"/><text x="17.6275%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (47 samples, 0.56%)</title><rect x="16.7720%" y="677" width="0.5603%" height="15" fill="rgb(252,211,39)" fg:x="1407" fg:w="47"/><text x="17.0911%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (42 samples, 0.50%)</title><rect x="16.8316%" y="661" width="0.5007%" height="15" fill="rgb(223,6,36)" fg:x="1412" fg:w="42"/><text x="17.1507%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (42 samples, 0.50%)</title><rect x="16.8316%" y="645" width="0.5007%" height="15" fill="rgb(252,169,45)" fg:x="1412" fg:w="42"/><text x="17.1507%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (39 samples, 0.46%)</title><rect x="16.8673%" y="629" width="0.4649%" height="15" fill="rgb(212,48,26)" fg:x="1415" fg:w="39"/><text x="17.1864%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (37 samples, 0.44%)</title><rect x="16.8912%" y="613" width="0.4411%" height="15" fill="rgb(251,102,48)" fg:x="1417" fg:w="37"/><text x="17.2103%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (33 samples, 0.39%)</title><rect x="16.9388%" y="597" width="0.3934%" height="15" fill="rgb(243,208,16)" fg:x="1421" fg:w="33"/><text x="17.2579%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (28 samples, 0.33%)</title><rect x="16.9985%" y="581" width="0.3338%" height="15" fill="rgb(219,96,24)" fg:x="1426" fg:w="28"/><text x="17.3176%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="17.0461%" y="565" width="0.2861%" height="15" fill="rgb(219,33,29)" fg:x="1430" fg:w="24"/><text x="17.3652%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="17.0819%" y="549" width="0.2503%" height="15" fill="rgb(223,176,5)" fg:x="1433" fg:w="21"/><text x="17.4010%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="17.1534%" y="533" width="0.1788%" height="15" fill="rgb(228,140,14)" fg:x="1439" fg:w="15"/><text x="17.4725%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="17.1653%" y="517" width="0.1669%" height="15" fill="rgb(217,179,31)" fg:x="1440" fg:w="14"/><text x="17.4844%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="17.2249%" y="501" width="0.1073%" height="15" fill="rgb(230,9,30)" fg:x="1445" fg:w="9"/><text x="17.5440%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="17.2488%" y="485" width="0.0834%" height="15" fill="rgb(230,136,20)" fg:x="1447" fg:w="7"/><text x="17.5679%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="17.2488%" y="469" width="0.0834%" height="15" fill="rgb(215,210,22)" fg:x="1447" fg:w="7"/><text x="17.5679%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.3203%" y="453" width="0.0119%" height="15" fill="rgb(218,43,5)" fg:x="1453" fg:w="1"/><text x="17.6394%" y="463.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.3203%" y="437" width="0.0119%" height="15" fill="rgb(216,11,5)" fg:x="1453" fg:w="1"/><text x="17.6394%" y="447.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.3203%" y="421" width="0.0119%" height="15" fill="rgb(209,82,29)" fg:x="1453" fg:w="1"/><text x="17.6394%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.3322%" y="677" width="0.0238%" height="15" fill="rgb(244,115,12)" fg:x="1454" fg:w="2"/><text x="17.6513%" y="687.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="17.3322%" y="661" width="0.0238%" height="15" fill="rgb(222,82,18)" fg:x="1454" fg:w="2"/><text x="17.6513%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.3441%" y="645" width="0.0119%" height="15" fill="rgb(249,227,8)" fg:x="1455" fg:w="1"/><text x="17.6632%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.3561%" y="677" width="0.0119%" height="15" fill="rgb(253,141,45)" fg:x="1456" fg:w="1"/><text x="17.6752%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.3561%" y="661" width="0.0119%" height="15" fill="rgb(234,184,4)" fg:x="1456" fg:w="1"/><text x="17.6752%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="17.3680%" y="677" width="0.0119%" height="15" fill="rgb(218,194,23)" fg:x="1457" fg:w="1"/><text x="17.6871%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.3680%" y="661" width="0.0119%" height="15" fill="rgb(235,66,41)" fg:x="1457" fg:w="1"/><text x="17.6871%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.3799%" y="645" width="0.0119%" height="15" fill="rgb(245,217,1)" fg:x="1458" fg:w="1"/><text x="17.6990%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.3799%" y="677" width="0.0238%" height="15" fill="rgb(229,91,1)" fg:x="1458" fg:w="2"/><text x="17.6990%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State)&gt; &gt;(std::function&lt;Result (State)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.3799%" y="661" width="0.0238%" height="15" fill="rgb(207,101,30)" fg:x="1458" fg:w="2"/><text x="17.6990%" y="671.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="17.3918%" y="645" width="0.0119%" height="15" fill="rgb(223,82,49)" fg:x="1459" fg:w="1"/><text x="17.7109%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (67 samples, 0.80%)</title><rect x="16.6170%" y="693" width="0.7987%" height="15" fill="rgb(218,167,17)" fg:x="1394" fg:w="67"/><text x="16.9361%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="17.4037%" y="677" width="0.0119%" height="15" fill="rgb(208,103,14)" fg:x="1460" fg:w="1"/><text x="17.7228%" y="687.50"/></g><g><title>cond::symbolic (1 samples, 0.01%)</title><rect x="17.4037%" y="661" width="0.0119%" height="15" fill="rgb(238,20,8)" fg:x="1460" fg:w="1"/><text x="17.7228%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="17.4157%" y="677" width="0.0238%" height="15" fill="rgb(218,80,54)" fg:x="1461" fg:w="2"/><text x="17.7348%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.4157%" y="661" width="0.0238%" height="15" fill="rgb(240,144,17)" fg:x="1461" fg:w="2"/><text x="17.7348%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="17.4157%" y="645" width="0.0238%" height="15" fill="rgb(245,27,50)" fg:x="1461" fg:w="2"/><text x="17.7348%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.4157%" y="629" width="0.0238%" height="15" fill="rgb(251,51,7)" fg:x="1461" fg:w="2"/><text x="17.7348%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="17.4157%" y="613" width="0.0238%" height="15" fill="rgb(245,217,29)" fg:x="1461" fg:w="2"/><text x="17.7348%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.4157%" y="597" width="0.0238%" height="15" fill="rgb(221,176,29)" fg:x="1461" fg:w="2"/><text x="17.7348%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="17.4157%" y="581" width="0.0238%" height="15" fill="rgb(212,180,24)" fg:x="1461" fg:w="2"/><text x="17.7348%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.4157%" y="565" width="0.0238%" height="15" fill="rgb(254,24,2)" fg:x="1461" fg:w="2"/><text x="17.7348%" y="575.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="17.4157%" y="549" width="0.0238%" height="15" fill="rgb(230,100,2)" fg:x="1461" fg:w="2"/><text x="17.7348%" y="559.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="17.4157%" y="533" width="0.0238%" height="15" fill="rgb(219,142,25)" fg:x="1461" fg:w="2"/><text x="17.7348%" y="543.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="17.4157%" y="517" width="0.0238%" height="15" fill="rgb(240,73,43)" fg:x="1461" fg:w="2"/><text x="17.7348%" y="527.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_invoke (1 samples, 0.01%)</title><rect x="17.4395%" y="677" width="0.0119%" height="15" fill="rgb(214,114,15)" fg:x="1463" fg:w="1"/><text x="17.7586%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function&lt;std::function&lt;Result (State)&gt;, void, void&gt; (1 samples, 0.01%)</title><rect x="17.4395%" y="661" width="0.0119%" height="15" fill="rgb(207,130,4)" fg:x="1463" fg:w="1"/><text x="17.7586%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.4514%" y="677" width="0.0119%" height="15" fill="rgb(221,25,40)" fg:x="1464" fg:w="1"/><text x="17.7705%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State)&gt; &gt;(std::function&lt;Result (State)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.4514%" y="661" width="0.0119%" height="15" fill="rgb(241,184,7)" fg:x="1464" fg:w="1"/><text x="17.7705%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.4514%" y="645" width="0.0119%" height="15" fill="rgb(235,159,4)" fg:x="1464" fg:w="1"/><text x="17.7705%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.4514%" y="629" width="0.0119%" height="15" fill="rgb(214,87,48)" fg:x="1464" fg:w="1"/><text x="17.7705%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (5 samples, 0.06%)</title><rect x="17.4157%" y="693" width="0.0596%" height="15" fill="rgb(246,198,24)" fg:x="1461" fg:w="5"/><text x="17.7348%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="17.4633%" y="677" width="0.0119%" height="15" fill="rgb(209,66,40)" fg:x="1465" fg:w="1"/><text x="17.7824%" y="687.50"/></g><g><title>cond::peeks (1 samples, 0.01%)</title><rect x="17.4633%" y="661" width="0.0119%" height="15" fill="rgb(233,147,39)" fg:x="1465" fg:w="1"/><text x="17.7824%" y="671.50"/></g><g><title>parser::as_char_parser (2 samples, 0.02%)</title><rect x="17.4872%" y="645" width="0.0238%" height="15" fill="rgb(231,145,52)" fg:x="1467" fg:w="2"/><text x="17.8063%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.4991%" y="629" width="0.0119%" height="15" fill="rgb(206,20,26)" fg:x="1468" fg:w="1"/><text x="17.8182%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.4991%" y="613" width="0.0119%" height="15" fill="rgb(238,220,4)" fg:x="1468" fg:w="1"/><text x="17.8182%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.4991%" y="597" width="0.0119%" height="15" fill="rgb(252,195,42)" fg:x="1468" fg:w="1"/><text x="17.8182%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.4991%" y="581" width="0.0119%" height="15" fill="rgb(209,10,6)" fg:x="1468" fg:w="1"/><text x="17.8182%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.4991%" y="565" width="0.0119%" height="15" fill="rgb(229,3,52)" fg:x="1468" fg:w="1"/><text x="17.8182%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.4991%" y="549" width="0.0119%" height="15" fill="rgb(253,49,37)" fg:x="1468" fg:w="1"/><text x="17.8182%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.4991%" y="533" width="0.0119%" height="15" fill="rgb(240,103,49)" fg:x="1468" fg:w="1"/><text x="17.8182%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_invoke (1 samples, 0.01%)</title><rect x="17.5110%" y="645" width="0.0119%" height="15" fill="rgb(250,182,30)" fg:x="1469" fg:w="1"/><text x="17.8301%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.5229%" y="645" width="0.0119%" height="15" fill="rgb(248,8,30)" fg:x="1470" fg:w="1"/><text x="17.8420%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State)&gt; &gt;(std::function&lt;Result (State)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.5229%" y="629" width="0.0119%" height="15" fill="rgb(237,120,30)" fg:x="1470" fg:w="1"/><text x="17.8420%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.5229%" y="613" width="0.0119%" height="15" fill="rgb(221,146,34)" fg:x="1470" fg:w="1"/><text x="17.8420%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.5229%" y="597" width="0.0119%" height="15" fill="rgb(242,55,13)" fg:x="1470" fg:w="1"/><text x="17.8420%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (6 samples, 0.07%)</title><rect x="17.4753%" y="677" width="0.0715%" height="15" fill="rgb(242,112,31)" fg:x="1466" fg:w="6"/><text x="17.7944%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (6 samples, 0.07%)</title><rect x="17.4753%" y="661" width="0.0715%" height="15" fill="rgb(249,192,27)" fg:x="1466" fg:w="6"/><text x="17.7944%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="17.5349%" y="645" width="0.0119%" height="15" fill="rgb(208,204,44)" fg:x="1471" fg:w="1"/><text x="17.8540%" y="655.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="17.5587%" y="645" width="0.0119%" height="15" fill="rgb(208,93,54)" fg:x="1473" fg:w="1"/><text x="17.8778%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="17.5587%" y="629" width="0.0119%" height="15" fill="rgb(242,1,31)" fg:x="1473" fg:w="1"/><text x="17.8778%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.5706%" y="629" width="0.0119%" height="15" fill="rgb(241,83,25)" fg:x="1474" fg:w="1"/><text x="17.8897%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.5706%" y="613" width="0.0119%" height="15" fill="rgb(205,169,50)" fg:x="1474" fg:w="1"/><text x="17.8897%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.5706%" y="597" width="0.0119%" height="15" fill="rgb(239,186,37)" fg:x="1474" fg:w="1"/><text x="17.8897%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.5706%" y="581" width="0.0119%" height="15" fill="rgb(205,221,10)" fg:x="1474" fg:w="1"/><text x="17.8897%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.5706%" y="565" width="0.0119%" height="15" fill="rgb(218,196,15)" fg:x="1474" fg:w="1"/><text x="17.8897%" y="575.50"/></g><g><title>parser::as_char_parser (4 samples, 0.05%)</title><rect x="17.5468%" y="661" width="0.0477%" height="15" fill="rgb(218,196,35)" fg:x="1472" fg:w="4"/><text x="17.8659%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.5706%" y="645" width="0.0238%" height="15" fill="rgb(233,63,24)" fg:x="1474" fg:w="2"/><text x="17.8897%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="17.5825%" y="629" width="0.0119%" height="15" fill="rgb(225,8,4)" fg:x="1475" fg:w="1"/><text x="17.9016%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.5825%" y="613" width="0.0119%" height="15" fill="rgb(234,105,35)" fg:x="1475" fg:w="1"/><text x="17.9016%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="17.5825%" y="597" width="0.0119%" height="15" fill="rgb(236,21,32)" fg:x="1475" fg:w="1"/><text x="17.9016%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.5825%" y="581" width="0.0119%" height="15" fill="rgb(228,109,6)" fg:x="1475" fg:w="1"/><text x="17.9016%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="17.5825%" y="565" width="0.0119%" height="15" fill="rgb(229,215,31)" fg:x="1475" fg:w="1"/><text x="17.9016%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.5825%" y="549" width="0.0119%" height="15" fill="rgb(221,52,54)" fg:x="1475" fg:w="1"/><text x="17.9016%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="17.5825%" y="533" width="0.0119%" height="15" fill="rgb(252,129,43)" fg:x="1475" fg:w="1"/><text x="17.9016%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.5825%" y="517" width="0.0119%" height="15" fill="rgb(248,183,27)" fg:x="1475" fg:w="1"/><text x="17.9016%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="17.5825%" y="501" width="0.0119%" height="15" fill="rgb(250,0,22)" fg:x="1475" fg:w="1"/><text x="17.9016%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="17.5825%" y="485" width="0.0119%" height="15" fill="rgb(213,166,10)" fg:x="1475" fg:w="1"/><text x="17.9016%" y="495.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="17.5825%" y="469" width="0.0119%" height="15" fill="rgb(207,163,36)" fg:x="1475" fg:w="1"/><text x="17.9016%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="17.5945%" y="661" width="0.0119%" height="15" fill="rgb(208,122,22)" fg:x="1476" fg:w="1"/><text x="17.9136%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="17.5945%" y="645" width="0.0119%" height="15" fill="rgb(207,104,49)" fg:x="1476" fg:w="1"/><text x="17.9136%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="17.5945%" y="629" width="0.0119%" height="15" fill="rgb(248,211,50)" fg:x="1476" fg:w="1"/><text x="17.9136%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="17.5945%" y="613" width="0.0119%" height="15" fill="rgb(217,13,45)" fg:x="1476" fg:w="1"/><text x="17.9136%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="17.5945%" y="597" width="0.0119%" height="15" fill="rgb(211,216,49)" fg:x="1476" fg:w="1"/><text x="17.9136%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.5945%" y="581" width="0.0119%" height="15" fill="rgb(221,58,53)" fg:x="1476" fg:w="1"/><text x="17.9136%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State)&gt; &gt;(std::function&lt;Result (State)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.5945%" y="565" width="0.0119%" height="15" fill="rgb(220,112,41)" fg:x="1476" fg:w="1"/><text x="17.9136%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.5945%" y="549" width="0.0119%" height="15" fill="rgb(236,38,28)" fg:x="1476" fg:w="1"/><text x="17.9136%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="17.6064%" y="629" width="0.0119%" height="15" fill="rgb(227,195,22)" fg:x="1477" fg:w="1"/><text x="17.9255%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.6064%" y="661" width="0.0238%" height="15" fill="rgb(214,55,33)" fg:x="1477" fg:w="2"/><text x="17.9255%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.6064%" y="645" width="0.0238%" height="15" fill="rgb(248,80,13)" fg:x="1477" fg:w="2"/><text x="17.9255%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.6183%" y="629" width="0.0119%" height="15" fill="rgb(238,52,6)" fg:x="1478" fg:w="1"/><text x="17.9374%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.6183%" y="613" width="0.0119%" height="15" fill="rgb(224,198,47)" fg:x="1478" fg:w="1"/><text x="17.9374%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.6183%" y="597" width="0.0119%" height="15" fill="rgb(233,171,20)" fg:x="1478" fg:w="1"/><text x="17.9374%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.6183%" y="581" width="0.0119%" height="15" fill="rgb(241,30,25)" fg:x="1478" fg:w="1"/><text x="17.9374%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.6183%" y="565" width="0.0119%" height="15" fill="rgb(207,171,38)" fg:x="1478" fg:w="1"/><text x="17.9374%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.6183%" y="549" width="0.0119%" height="15" fill="rgb(234,70,1)" fg:x="1478" fg:w="1"/><text x="17.9374%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.6302%" y="661" width="0.0119%" height="15" fill="rgb(232,178,18)" fg:x="1479" fg:w="1"/><text x="17.9493%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.6302%" y="645" width="0.0119%" height="15" fill="rgb(241,78,40)" fg:x="1479" fg:w="1"/><text x="17.9493%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.6302%" y="629" width="0.0119%" height="15" fill="rgb(222,35,25)" fg:x="1479" fg:w="1"/><text x="17.9493%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (9 samples, 0.11%)</title><rect x="17.5468%" y="677" width="0.1073%" height="15" fill="rgb(207,92,16)" fg:x="1472" fg:w="9"/><text x="17.8659%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.6422%" y="661" width="0.0119%" height="15" fill="rgb(216,59,51)" fg:x="1480" fg:w="1"/><text x="17.9613%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State)&gt; &gt;(std::function&lt;Result (State)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.6422%" y="645" width="0.0119%" height="15" fill="rgb(213,80,28)" fg:x="1480" fg:w="1"/><text x="17.9613%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.6422%" y="629" width="0.0119%" height="15" fill="rgb(220,93,7)" fg:x="1480" fg:w="1"/><text x="17.9613%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.6422%" y="613" width="0.0119%" height="15" fill="rgb(225,24,44)" fg:x="1480" fg:w="1"/><text x="17.9613%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="17.6541%" y="677" width="0.0119%" height="15" fill="rgb(243,74,40)" fg:x="1481" fg:w="1"/><text x="17.9732%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="17.6541%" y="661" width="0.0119%" height="15" fill="rgb(228,39,7)" fg:x="1481" fg:w="1"/><text x="17.9732%" y="671.50"/></g><g><title>cond::peeks (1 samples, 0.01%)</title><rect x="17.6541%" y="645" width="0.0119%" height="15" fill="rgb(227,79,8)" fg:x="1481" fg:w="1"/><text x="17.9732%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.6660%" y="613" width="0.0238%" height="15" fill="rgb(236,58,11)" fg:x="1482" fg:w="2"/><text x="17.9851%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.6779%" y="597" width="0.0119%" height="15" fill="rgb(249,63,35)" fg:x="1483" fg:w="1"/><text x="17.9970%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.6779%" y="581" width="0.0119%" height="15" fill="rgb(252,114,16)" fg:x="1483" fg:w="1"/><text x="17.9970%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.6779%" y="565" width="0.0119%" height="15" fill="rgb(254,151,24)" fg:x="1483" fg:w="1"/><text x="17.9970%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.6779%" y="549" width="0.0119%" height="15" fill="rgb(253,54,39)" fg:x="1483" fg:w="1"/><text x="17.9970%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.6779%" y="533" width="0.0119%" height="15" fill="rgb(243,25,45)" fg:x="1483" fg:w="1"/><text x="17.9970%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.6779%" y="517" width="0.0119%" height="15" fill="rgb(234,134,9)" fg:x="1483" fg:w="1"/><text x="17.9970%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="17.6898%" y="549" width="0.0119%" height="15" fill="rgb(227,166,31)" fg:x="1484" fg:w="1"/><text x="18.0089%" y="559.50"/></g><g><title>parser::as_char_parser (4 samples, 0.05%)</title><rect x="17.6660%" y="645" width="0.0477%" height="15" fill="rgb(245,143,41)" fg:x="1482" fg:w="4"/><text x="17.9851%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="17.6660%" y="629" width="0.0477%" height="15" fill="rgb(238,181,32)" fg:x="1482" fg:w="4"/><text x="17.9851%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="17.6898%" y="613" width="0.0238%" height="15" fill="rgb(224,113,18)" fg:x="1484" fg:w="2"/><text x="18.0089%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.6898%" y="597" width="0.0238%" height="15" fill="rgb(240,229,28)" fg:x="1484" fg:w="2"/><text x="18.0089%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="17.6898%" y="581" width="0.0238%" height="15" fill="rgb(250,185,3)" fg:x="1484" fg:w="2"/><text x="18.0089%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.6898%" y="565" width="0.0238%" height="15" fill="rgb(212,59,25)" fg:x="1484" fg:w="2"/><text x="18.0089%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="17.7018%" y="549" width="0.0119%" height="15" fill="rgb(221,87,20)" fg:x="1485" fg:w="1"/><text x="18.0209%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.7018%" y="533" width="0.0119%" height="15" fill="rgb(213,74,28)" fg:x="1485" fg:w="1"/><text x="18.0209%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.7018%" y="517" width="0.0119%" height="15" fill="rgb(224,132,34)" fg:x="1485" fg:w="1"/><text x="18.0209%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="17.7018%" y="501" width="0.0119%" height="15" fill="rgb(222,101,24)" fg:x="1485" fg:w="1"/><text x="18.0209%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="17.7018%" y="485" width="0.0119%" height="15" fill="rgb(254,142,4)" fg:x="1485" fg:w="1"/><text x="18.0209%" y="495.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="17.7018%" y="469" width="0.0119%" height="15" fill="rgb(230,229,49)" fg:x="1485" fg:w="1"/><text x="18.0209%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.7137%" y="645" width="0.0119%" height="15" fill="rgb(238,70,47)" fg:x="1486" fg:w="1"/><text x="18.0328%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.7137%" y="629" width="0.0119%" height="15" fill="rgb(231,160,17)" fg:x="1486" fg:w="1"/><text x="18.0328%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.7137%" y="613" width="0.0119%" height="15" fill="rgb(218,68,53)" fg:x="1486" fg:w="1"/><text x="18.0328%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.7137%" y="597" width="0.0119%" height="15" fill="rgb(236,111,10)" fg:x="1486" fg:w="1"/><text x="18.0328%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.7137%" y="581" width="0.0119%" height="15" fill="rgb(224,34,41)" fg:x="1486" fg:w="1"/><text x="18.0328%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.7137%" y="565" width="0.0119%" height="15" fill="rgb(241,118,19)" fg:x="1486" fg:w="1"/><text x="18.0328%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.7137%" y="549" width="0.0119%" height="15" fill="rgb(238,129,25)" fg:x="1486" fg:w="1"/><text x="18.0328%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.7137%" y="533" width="0.0119%" height="15" fill="rgb(238,22,31)" fg:x="1486" fg:w="1"/><text x="18.0328%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.7137%" y="517" width="0.0119%" height="15" fill="rgb(222,174,48)" fg:x="1486" fg:w="1"/><text x="18.0328%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="17.7256%" y="645" width="0.0358%" height="15" fill="rgb(206,152,40)" fg:x="1487" fg:w="3"/><text x="18.0447%" y="655.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="17.7256%" y="629" width="0.0358%" height="15" fill="rgb(218,99,54)" fg:x="1487" fg:w="3"/><text x="18.0447%" y="639.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="17.7375%" y="613" width="0.0238%" height="15" fill="rgb(220,174,26)" fg:x="1488" fg:w="2"/><text x="18.0566%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="17.7614%" y="645" width="0.0119%" height="15" fill="rgb(245,116,9)" fg:x="1490" fg:w="1"/><text x="18.0805%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.7614%" y="629" width="0.0119%" height="15" fill="rgb(209,72,35)" fg:x="1490" fg:w="1"/><text x="18.0805%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="17.7614%" y="613" width="0.0119%" height="15" fill="rgb(226,126,21)" fg:x="1490" fg:w="1"/><text x="18.0805%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.7614%" y="597" width="0.0119%" height="15" fill="rgb(227,192,1)" fg:x="1490" fg:w="1"/><text x="18.0805%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="17.7614%" y="581" width="0.0119%" height="15" fill="rgb(237,180,29)" fg:x="1490" fg:w="1"/><text x="18.0805%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.7614%" y="565" width="0.0119%" height="15" fill="rgb(230,197,35)" fg:x="1490" fg:w="1"/><text x="18.0805%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="17.7614%" y="549" width="0.0119%" height="15" fill="rgb(246,193,31)" fg:x="1490" fg:w="1"/><text x="18.0805%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="17.7614%" y="533" width="0.0119%" height="15" fill="rgb(241,36,4)" fg:x="1490" fg:w="1"/><text x="18.0805%" y="543.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.7733%" y="645" width="0.0119%" height="15" fill="rgb(241,130,17)" fg:x="1491" fg:w="1"/><text x="18.0924%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.7733%" y="629" width="0.0119%" height="15" fill="rgb(206,137,32)" fg:x="1491" fg:w="1"/><text x="18.0924%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.7733%" y="613" width="0.0119%" height="15" fill="rgb(237,228,51)" fg:x="1491" fg:w="1"/><text x="18.0924%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.7733%" y="597" width="0.0119%" height="15" fill="rgb(243,6,42)" fg:x="1491" fg:w="1"/><text x="18.0924%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.7733%" y="581" width="0.0119%" height="15" fill="rgb(251,74,28)" fg:x="1491" fg:w="1"/><text x="18.0924%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_invoke (2 samples, 0.02%)</title><rect x="17.7852%" y="645" width="0.0238%" height="15" fill="rgb(218,20,49)" fg:x="1492" fg:w="2"/><text x="18.1043%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function&lt;std::function&lt;Result (State)&gt;, void, void&gt; (2 samples, 0.02%)</title><rect x="17.7852%" y="629" width="0.0238%" height="15" fill="rgb(238,28,14)" fg:x="1492" fg:w="2"/><text x="18.1043%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="17.7971%" y="613" width="0.0119%" height="15" fill="rgb(229,40,46)" fg:x="1493" fg:w="1"/><text x="18.1162%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="17.7971%" y="597" width="0.0119%" height="15" fill="rgb(244,195,20)" fg:x="1493" fg:w="1"/><text x="18.1162%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.8090%" y="645" width="0.0119%" height="15" fill="rgb(253,56,35)" fg:x="1494" fg:w="1"/><text x="18.1281%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.8090%" y="629" width="0.0119%" height="15" fill="rgb(210,149,44)" fg:x="1494" fg:w="1"/><text x="18.1281%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (14 samples, 0.17%)</title><rect x="17.6660%" y="661" width="0.1669%" height="15" fill="rgb(240,135,12)" fg:x="1482" fg:w="14"/><text x="17.9851%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="17.8210%" y="645" width="0.0119%" height="15" fill="rgb(251,24,50)" fg:x="1495" fg:w="1"/><text x="18.1401%" y="655.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="17.8329%" y="613" width="0.0119%" height="15" fill="rgb(243,200,47)" fg:x="1496" fg:w="1"/><text x="18.1520%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="17.8329%" y="597" width="0.0119%" height="15" fill="rgb(224,166,26)" fg:x="1496" fg:w="1"/><text x="18.1520%" y="607.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="17.8448%" y="501" width="0.0238%" height="15" fill="rgb(233,0,47)" fg:x="1497" fg:w="2"/><text x="18.1639%" y="511.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="17.8448%" y="485" width="0.0238%" height="15" fill="rgb(253,80,5)" fg:x="1497" fg:w="2"/><text x="18.1639%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.8686%" y="485" width="0.0119%" height="15" fill="rgb(214,133,25)" fg:x="1499" fg:w="1"/><text x="18.1877%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.8686%" y="469" width="0.0119%" height="15" fill="rgb(209,27,14)" fg:x="1499" fg:w="1"/><text x="18.1877%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="17.8448%" y="581" width="0.0477%" height="15" fill="rgb(219,102,51)" fg:x="1497" fg:w="4"/><text x="18.1639%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="17.8448%" y="565" width="0.0477%" height="15" fill="rgb(237,18,16)" fg:x="1497" fg:w="4"/><text x="18.1639%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="17.8448%" y="549" width="0.0477%" height="15" fill="rgb(241,85,17)" fg:x="1497" fg:w="4"/><text x="18.1639%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="17.8448%" y="533" width="0.0477%" height="15" fill="rgb(236,90,42)" fg:x="1497" fg:w="4"/><text x="18.1639%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="17.8448%" y="517" width="0.0477%" height="15" fill="rgb(249,57,21)" fg:x="1497" fg:w="4"/><text x="18.1639%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.8686%" y="501" width="0.0238%" height="15" fill="rgb(243,12,36)" fg:x="1499" fg:w="2"/><text x="18.1877%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.8806%" y="485" width="0.0119%" height="15" fill="rgb(253,128,47)" fg:x="1500" fg:w="1"/><text x="18.1997%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.8806%" y="469" width="0.0119%" height="15" fill="rgb(207,33,20)" fg:x="1500" fg:w="1"/><text x="18.1997%" y="479.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.8806%" y="453" width="0.0119%" height="15" fill="rgb(233,215,35)" fg:x="1500" fg:w="1"/><text x="18.1997%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="17.8448%" y="597" width="0.0596%" height="15" fill="rgb(249,188,52)" fg:x="1497" fg:w="5"/><text x="18.1639%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.8925%" y="581" width="0.0119%" height="15" fill="rgb(225,12,32)" fg:x="1501" fg:w="1"/><text x="18.2116%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.8925%" y="565" width="0.0119%" height="15" fill="rgb(247,98,14)" fg:x="1501" fg:w="1"/><text x="18.2116%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.8925%" y="549" width="0.0119%" height="15" fill="rgb(247,219,48)" fg:x="1501" fg:w="1"/><text x="18.2116%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.8925%" y="533" width="0.0119%" height="15" fill="rgb(253,60,48)" fg:x="1501" fg:w="1"/><text x="18.2116%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.8925%" y="517" width="0.0119%" height="15" fill="rgb(245,15,52)" fg:x="1501" fg:w="1"/><text x="18.2116%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.8925%" y="501" width="0.0119%" height="15" fill="rgb(220,133,28)" fg:x="1501" fg:w="1"/><text x="18.2116%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="17.8925%" y="485" width="0.0119%" height="15" fill="rgb(217,180,4)" fg:x="1501" fg:w="1"/><text x="18.2116%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.8925%" y="469" width="0.0119%" height="15" fill="rgb(251,24,1)" fg:x="1501" fg:w="1"/><text x="18.2116%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="17.9044%" y="501" width="0.0119%" height="15" fill="rgb(212,185,49)" fg:x="1502" fg:w="1"/><text x="18.2235%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="17.9044%" y="485" width="0.0119%" height="15" fill="rgb(215,175,22)" fg:x="1502" fg:w="1"/><text x="18.2235%" y="495.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="17.9044%" y="469" width="0.0119%" height="15" fill="rgb(250,205,14)" fg:x="1502" fg:w="1"/><text x="18.2235%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="17.9163%" y="437" width="0.0119%" height="15" fill="rgb(225,211,22)" fg:x="1503" fg:w="1"/><text x="18.2354%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="17.9163%" y="421" width="0.0119%" height="15" fill="rgb(251,179,42)" fg:x="1503" fg:w="1"/><text x="18.2354%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.9163%" y="453" width="0.0238%" height="15" fill="rgb(208,216,51)" fg:x="1503" fg:w="2"/><text x="18.2354%" y="463.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.9282%" y="437" width="0.0119%" height="15" fill="rgb(235,36,11)" fg:x="1504" fg:w="1"/><text x="18.2473%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="17.9282%" y="421" width="0.0119%" height="15" fill="rgb(213,189,28)" fg:x="1504" fg:w="1"/><text x="18.2473%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.9282%" y="405" width="0.0119%" height="15" fill="rgb(227,203,42)" fg:x="1504" fg:w="1"/><text x="18.2473%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="17.9282%" y="389" width="0.0119%" height="15" fill="rgb(244,72,36)" fg:x="1504" fg:w="1"/><text x="18.2473%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.9282%" y="373" width="0.0119%" height="15" fill="rgb(213,53,17)" fg:x="1504" fg:w="1"/><text x="18.2473%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="17.9282%" y="357" width="0.0119%" height="15" fill="rgb(207,167,3)" fg:x="1504" fg:w="1"/><text x="18.2473%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="17.9282%" y="341" width="0.0119%" height="15" fill="rgb(216,98,30)" fg:x="1504" fg:w="1"/><text x="18.2473%" y="351.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="17.9282%" y="325" width="0.0119%" height="15" fill="rgb(236,123,15)" fg:x="1504" fg:w="1"/><text x="18.2473%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="17.9163%" y="485" width="0.0358%" height="15" fill="rgb(248,81,50)" fg:x="1503" fg:w="3"/><text x="18.2354%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="17.9163%" y="469" width="0.0358%" height="15" fill="rgb(214,120,4)" fg:x="1503" fg:w="3"/><text x="18.2354%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.9402%" y="453" width="0.0119%" height="15" fill="rgb(208,179,34)" fg:x="1505" fg:w="1"/><text x="18.2593%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="17.9044%" y="565" width="0.0596%" height="15" fill="rgb(227,140,7)" fg:x="1502" fg:w="5"/><text x="18.2235%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="17.9044%" y="549" width="0.0596%" height="15" fill="rgb(214,22,6)" fg:x="1502" fg:w="5"/><text x="18.2235%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="17.9044%" y="533" width="0.0596%" height="15" fill="rgb(207,137,27)" fg:x="1502" fg:w="5"/><text x="18.2235%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="17.9044%" y="517" width="0.0596%" height="15" fill="rgb(210,8,46)" fg:x="1502" fg:w="5"/><text x="18.2235%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="17.9163%" y="501" width="0.0477%" height="15" fill="rgb(240,16,54)" fg:x="1503" fg:w="4"/><text x="18.2354%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.9521%" y="485" width="0.0119%" height="15" fill="rgb(211,209,29)" fg:x="1506" fg:w="1"/><text x="18.2712%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="17.9521%" y="469" width="0.0119%" height="15" fill="rgb(226,228,24)" fg:x="1506" fg:w="1"/><text x="18.2712%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="17.9521%" y="453" width="0.0119%" height="15" fill="rgb(222,84,9)" fg:x="1506" fg:w="1"/><text x="18.2712%" y="463.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="17.9521%" y="437" width="0.0119%" height="15" fill="rgb(234,203,30)" fg:x="1506" fg:w="1"/><text x="18.2712%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="17.9640%" y="357" width="0.0119%" height="15" fill="rgb(238,109,14)" fg:x="1507" fg:w="1"/><text x="18.2831%" y="367.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="17.9640%" y="341" width="0.0119%" height="15" fill="rgb(233,206,34)" fg:x="1507" fg:w="1"/><text x="18.2831%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.9640%" y="389" width="0.0238%" height="15" fill="rgb(220,167,47)" fg:x="1507" fg:w="2"/><text x="18.2831%" y="399.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="17.9640%" y="373" width="0.0238%" height="15" fill="rgb(238,105,10)" fg:x="1507" fg:w="2"/><text x="18.2831%" y="383.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="17.9759%" y="357" width="0.0119%" height="15" fill="rgb(213,227,17)" fg:x="1508" fg:w="1"/><text x="18.2950%" y="367.50"/></g><g><title>parser::as_char_parser (14 samples, 0.17%)</title><rect x="17.8329%" y="629" width="0.1669%" height="15" fill="rgb(217,132,38)" fg:x="1496" fg:w="14"/><text x="18.1520%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="17.8448%" y="613" width="0.1550%" height="15" fill="rgb(242,146,4)" fg:x="1497" fg:w="13"/><text x="18.1639%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="17.9044%" y="597" width="0.0954%" height="15" fill="rgb(212,61,9)" fg:x="1502" fg:w="8"/><text x="18.2235%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="17.9044%" y="581" width="0.0954%" height="15" fill="rgb(247,126,22)" fg:x="1502" fg:w="8"/><text x="18.2235%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="17.9640%" y="565" width="0.0358%" height="15" fill="rgb(220,196,2)" fg:x="1507" fg:w="3"/><text x="18.2831%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="17.9640%" y="549" width="0.0358%" height="15" fill="rgb(208,46,4)" fg:x="1507" fg:w="3"/><text x="18.2831%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="17.9640%" y="533" width="0.0358%" height="15" fill="rgb(252,104,46)" fg:x="1507" fg:w="3"/><text x="18.2831%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="17.9640%" y="517" width="0.0358%" height="15" fill="rgb(237,152,48)" fg:x="1507" fg:w="3"/><text x="18.2831%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="17.9640%" y="501" width="0.0358%" height="15" fill="rgb(221,59,37)" fg:x="1507" fg:w="3"/><text x="18.2831%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="17.9640%" y="485" width="0.0358%" height="15" fill="rgb(209,202,51)" fg:x="1507" fg:w="3"/><text x="18.2831%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="17.9640%" y="469" width="0.0358%" height="15" fill="rgb(228,81,30)" fg:x="1507" fg:w="3"/><text x="18.2831%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="17.9640%" y="453" width="0.0358%" height="15" fill="rgb(227,42,39)" fg:x="1507" fg:w="3"/><text x="18.2831%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="17.9640%" y="437" width="0.0358%" height="15" fill="rgb(221,26,2)" fg:x="1507" fg:w="3"/><text x="18.2831%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="17.9640%" y="421" width="0.0358%" height="15" fill="rgb(254,61,31)" fg:x="1507" fg:w="3"/><text x="18.2831%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="17.9640%" y="405" width="0.0358%" height="15" fill="rgb(222,173,38)" fg:x="1507" fg:w="3"/><text x="18.2831%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.9878%" y="389" width="0.0119%" height="15" fill="rgb(218,50,12)" fg:x="1509" fg:w="1"/><text x="18.3069%" y="399.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="17.9878%" y="373" width="0.0119%" height="15" fill="rgb(223,88,40)" fg:x="1509" fg:w="1"/><text x="18.3069%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.9878%" y="357" width="0.0119%" height="15" fill="rgb(237,54,19)" fg:x="1509" fg:w="1"/><text x="18.3069%" y="367.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="17.9878%" y="341" width="0.0119%" height="15" fill="rgb(251,129,25)" fg:x="1509" fg:w="1"/><text x="18.3069%" y="351.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="17.9878%" y="325" width="0.0119%" height="15" fill="rgb(238,97,19)" fg:x="1509" fg:w="1"/><text x="18.3069%" y="335.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="17.9878%" y="309" width="0.0119%" height="15" fill="rgb(240,169,18)" fg:x="1509" fg:w="1"/><text x="18.3069%" y="319.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="17.9878%" y="293" width="0.0119%" height="15" fill="rgb(230,187,49)" fg:x="1509" fg:w="1"/><text x="18.3069%" y="303.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="18.0117%" y="517" width="0.0358%" height="15" fill="rgb(209,44,26)" fg:x="1511" fg:w="3"/><text x="18.3308%" y="527.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="18.0117%" y="501" width="0.0358%" height="15" fill="rgb(244,0,6)" fg:x="1511" fg:w="3"/><text x="18.3308%" y="511.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="18.0355%" y="485" width="0.0119%" height="15" fill="rgb(248,18,21)" fg:x="1513" fg:w="1"/><text x="18.3546%" y="495.50"/></g><g><title>cond::consume (5 samples, 0.06%)</title><rect x="17.9998%" y="565" width="0.0596%" height="15" fill="rgb(245,180,19)" fg:x="1510" fg:w="5"/><text x="18.3189%" y="575.50"/></g><g><title>cond::consumes (5 samples, 0.06%)</title><rect x="17.9998%" y="549" width="0.0596%" height="15" fill="rgb(252,118,36)" fg:x="1510" fg:w="5"/><text x="18.3189%" y="559.50"/></g><g><title>operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt; (5 samples, 0.06%)</title><rect x="17.9998%" y="533" width="0.0596%" height="15" fill="rgb(210,224,19)" fg:x="1510" fg:w="5"/><text x="18.3189%" y="543.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.0474%" y="517" width="0.0119%" height="15" fill="rgb(218,30,24)" fg:x="1514" fg:w="1"/><text x="18.3665%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="18.0474%" y="501" width="0.0119%" height="15" fill="rgb(219,75,50)" fg:x="1514" fg:w="1"/><text x="18.3665%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="18.0474%" y="485" width="0.0119%" height="15" fill="rgb(234,72,50)" fg:x="1514" fg:w="1"/><text x="18.3665%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (7 samples, 0.08%)</title><rect x="17.9998%" y="629" width="0.0834%" height="15" fill="rgb(219,100,48)" fg:x="1510" fg:w="7"/><text x="18.3189%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (7 samples, 0.08%)</title><rect x="17.9998%" y="613" width="0.0834%" height="15" fill="rgb(253,5,41)" fg:x="1510" fg:w="7"/><text x="18.3189%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_invoke (7 samples, 0.08%)</title><rect x="17.9998%" y="597" width="0.0834%" height="15" fill="rgb(247,181,11)" fg:x="1510" fg:w="7"/><text x="18.3189%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_invoke (7 samples, 0.08%)</title><rect x="17.9998%" y="581" width="0.0834%" height="15" fill="rgb(222,223,25)" fg:x="1510" fg:w="7"/><text x="18.3189%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="18.0594%" y="565" width="0.0238%" height="15" fill="rgb(214,198,28)" fg:x="1515" fg:w="2"/><text x="18.3785%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="18.0594%" y="549" width="0.0238%" height="15" fill="rgb(230,46,43)" fg:x="1515" fg:w="2"/><text x="18.3785%" y="559.50"/></g><g><title>ts_lexer__get_lookahead (1 samples, 0.01%)</title><rect x="18.0713%" y="533" width="0.0119%" height="15" fill="rgb(233,65,53)" fg:x="1516" fg:w="1"/><text x="18.3904%" y="543.50"/></g><g><title>ts_decode_utf8 (1 samples, 0.01%)</title><rect x="18.0713%" y="517" width="0.0119%" height="15" fill="rgb(221,121,27)" fg:x="1516" fg:w="1"/><text x="18.3904%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.0832%" y="565" width="0.0119%" height="15" fill="rgb(247,70,47)" fg:x="1517" fg:w="1"/><text x="18.4023%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.0832%" y="549" width="0.0119%" height="15" fill="rgb(228,85,35)" fg:x="1517" fg:w="1"/><text x="18.4023%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="18.0832%" y="613" width="0.0238%" height="15" fill="rgb(209,50,18)" fg:x="1517" fg:w="2"/><text x="18.4023%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="18.0832%" y="597" width="0.0238%" height="15" fill="rgb(250,19,35)" fg:x="1517" fg:w="2"/><text x="18.4023%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="18.0832%" y="581" width="0.0238%" height="15" fill="rgb(253,107,29)" fg:x="1517" fg:w="2"/><text x="18.4023%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.0951%" y="565" width="0.0119%" height="15" fill="rgb(252,179,29)" fg:x="1518" fg:w="1"/><text x="18.4142%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.0951%" y="549" width="0.0119%" height="15" fill="rgb(238,194,6)" fg:x="1518" fg:w="1"/><text x="18.4142%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.0951%" y="533" width="0.0119%" height="15" fill="rgb(238,164,29)" fg:x="1518" fg:w="1"/><text x="18.4142%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="18.0951%" y="517" width="0.0119%" height="15" fill="rgb(224,25,9)" fg:x="1518" fg:w="1"/><text x="18.4142%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="18.0832%" y="629" width="0.0358%" height="15" fill="rgb(244,153,23)" fg:x="1517" fg:w="3"/><text x="18.4023%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.1070%" y="613" width="0.0119%" height="15" fill="rgb(212,203,14)" fg:x="1519" fg:w="1"/><text x="18.4261%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.1070%" y="597" width="0.0119%" height="15" fill="rgb(220,164,20)" fg:x="1519" fg:w="1"/><text x="18.4261%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="18.1190%" y="565" width="0.0238%" height="15" fill="rgb(222,203,48)" fg:x="1520" fg:w="2"/><text x="18.4381%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="18.1190%" y="549" width="0.0238%" height="15" fill="rgb(215,159,22)" fg:x="1520" fg:w="2"/><text x="18.4381%" y="559.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="18.1190%" y="533" width="0.0238%" height="15" fill="rgb(216,183,47)" fg:x="1520" fg:w="2"/><text x="18.4381%" y="543.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="18.1190%" y="517" width="0.0238%" height="15" fill="rgb(229,195,25)" fg:x="1520" fg:w="2"/><text x="18.4381%" y="527.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="18.1309%" y="501" width="0.0119%" height="15" fill="rgb(224,132,51)" fg:x="1521" fg:w="1"/><text x="18.4500%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="18.1428%" y="469" width="0.0119%" height="15" fill="rgb(240,63,7)" fg:x="1522" fg:w="1"/><text x="18.4619%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="18.1428%" y="453" width="0.0119%" height="15" fill="rgb(249,182,41)" fg:x="1522" fg:w="1"/><text x="18.4619%" y="463.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_invoke (5 samples, 0.06%)</title><rect x="18.1190%" y="629" width="0.0596%" height="15" fill="rgb(243,47,26)" fg:x="1520" fg:w="5"/><text x="18.4381%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="18.1190%" y="613" width="0.0596%" height="15" fill="rgb(233,48,2)" fg:x="1520" fg:w="5"/><text x="18.4381%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="18.1190%" y="597" width="0.0596%" height="15" fill="rgb(244,165,34)" fg:x="1520" fg:w="5"/><text x="18.4381%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="18.1190%" y="581" width="0.0596%" height="15" fill="rgb(207,89,7)" fg:x="1520" fg:w="5"/><text x="18.4381%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="18.1428%" y="565" width="0.0358%" height="15" fill="rgb(244,117,36)" fg:x="1522" fg:w="3"/><text x="18.4619%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="18.1428%" y="549" width="0.0358%" height="15" fill="rgb(226,144,34)" fg:x="1522" fg:w="3"/><text x="18.4619%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="18.1428%" y="533" width="0.0358%" height="15" fill="rgb(213,23,19)" fg:x="1522" fg:w="3"/><text x="18.4619%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="18.1428%" y="517" width="0.0358%" height="15" fill="rgb(217,75,12)" fg:x="1522" fg:w="3"/><text x="18.4619%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="18.1428%" y="501" width="0.0358%" height="15" fill="rgb(224,159,17)" fg:x="1522" fg:w="3"/><text x="18.4619%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="18.1428%" y="485" width="0.0358%" height="15" fill="rgb(217,118,1)" fg:x="1522" fg:w="3"/><text x="18.4619%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="18.1547%" y="469" width="0.0238%" height="15" fill="rgb(232,180,48)" fg:x="1523" fg:w="2"/><text x="18.4738%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="18.1547%" y="453" width="0.0238%" height="15" fill="rgb(230,27,33)" fg:x="1523" fg:w="2"/><text x="18.4738%" y="463.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="18.1547%" y="437" width="0.0238%" height="15" fill="rgb(205,31,21)" fg:x="1523" fg:w="2"/><text x="18.4738%" y="447.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="18.1547%" y="421" width="0.0238%" height="15" fill="rgb(253,59,4)" fg:x="1523" fg:w="2"/><text x="18.4738%" y="431.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="18.1666%" y="405" width="0.0119%" height="15" fill="rgb(224,201,9)" fg:x="1524" fg:w="1"/><text x="18.4857%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.1786%" y="581" width="0.0119%" height="15" fill="rgb(229,206,30)" fg:x="1525" fg:w="1"/><text x="18.4977%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.1786%" y="565" width="0.0119%" height="15" fill="rgb(212,67,47)" fg:x="1525" fg:w="1"/><text x="18.4977%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.1786%" y="549" width="0.0119%" height="15" fill="rgb(211,96,50)" fg:x="1525" fg:w="1"/><text x="18.4977%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="18.1786%" y="533" width="0.0119%" height="15" fill="rgb(252,114,18)" fg:x="1525" fg:w="1"/><text x="18.4977%" y="543.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="18.1786%" y="629" width="0.0238%" height="15" fill="rgb(223,58,37)" fg:x="1525" fg:w="2"/><text x="18.4977%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="18.1786%" y="613" width="0.0238%" height="15" fill="rgb(237,70,4)" fg:x="1525" fg:w="2"/><text x="18.4977%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="18.1786%" y="597" width="0.0238%" height="15" fill="rgb(244,85,46)" fg:x="1525" fg:w="2"/><text x="18.4977%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.1905%" y="581" width="0.0119%" height="15" fill="rgb(223,39,52)" fg:x="1526" fg:w="1"/><text x="18.5096%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.1905%" y="565" width="0.0119%" height="15" fill="rgb(218,200,14)" fg:x="1526" fg:w="1"/><text x="18.5096%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.1905%" y="549" width="0.0119%" height="15" fill="rgb(208,171,16)" fg:x="1526" fg:w="1"/><text x="18.5096%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.1905%" y="533" width="0.0119%" height="15" fill="rgb(234,200,18)" fg:x="1526" fg:w="1"/><text x="18.5096%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.1905%" y="517" width="0.0119%" height="15" fill="rgb(228,45,11)" fg:x="1526" fg:w="1"/><text x="18.5096%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.1905%" y="501" width="0.0119%" height="15" fill="rgb(237,182,11)" fg:x="1526" fg:w="1"/><text x="18.5096%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.1905%" y="485" width="0.0119%" height="15" fill="rgb(241,175,49)" fg:x="1526" fg:w="1"/><text x="18.5096%" y="495.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="18.1905%" y="469" width="0.0119%" height="15" fill="rgb(247,38,35)" fg:x="1526" fg:w="1"/><text x="18.5096%" y="479.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="18.2024%" y="629" width="0.0119%" height="15" fill="rgb(228,39,49)" fg:x="1527" fg:w="1"/><text x="18.5215%" y="639.50"/></g><g><title>state::next_char@plt (1 samples, 0.01%)</title><rect x="18.2024%" y="613" width="0.0119%" height="15" fill="rgb(226,101,26)" fg:x="1527" fg:w="1"/><text x="18.5215%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (33 samples, 0.39%)</title><rect x="17.8329%" y="645" width="0.3934%" height="15" fill="rgb(206,141,19)" fg:x="1496" fg:w="33"/><text x="18.1520%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="18.2143%" y="629" width="0.0119%" height="15" fill="rgb(211,200,13)" fg:x="1528" fg:w="1"/><text x="18.5334%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.2143%" y="613" width="0.0119%" height="15" fill="rgb(241,121,6)" fg:x="1528" fg:w="1"/><text x="18.5334%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="18.2143%" y="597" width="0.0119%" height="15" fill="rgb(234,221,29)" fg:x="1528" fg:w="1"/><text x="18.5334%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.2143%" y="581" width="0.0119%" height="15" fill="rgb(229,136,5)" fg:x="1528" fg:w="1"/><text x="18.5334%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="18.2143%" y="565" width="0.0119%" height="15" fill="rgb(238,36,11)" fg:x="1528" fg:w="1"/><text x="18.5334%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.2143%" y="549" width="0.0119%" height="15" fill="rgb(251,55,41)" fg:x="1528" fg:w="1"/><text x="18.5334%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="18.2143%" y="533" width="0.0119%" height="15" fill="rgb(242,34,40)" fg:x="1528" fg:w="1"/><text x="18.5334%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.2143%" y="517" width="0.0119%" height="15" fill="rgb(215,42,17)" fg:x="1528" fg:w="1"/><text x="18.5334%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="18.2143%" y="501" width="0.0119%" height="15" fill="rgb(207,44,46)" fg:x="1528" fg:w="1"/><text x="18.5334%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.2143%" y="485" width="0.0119%" height="15" fill="rgb(211,206,28)" fg:x="1528" fg:w="1"/><text x="18.5334%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="18.2143%" y="469" width="0.0119%" height="15" fill="rgb(237,167,16)" fg:x="1528" fg:w="1"/><text x="18.5334%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.2143%" y="453" width="0.0119%" height="15" fill="rgb(233,66,6)" fg:x="1528" fg:w="1"/><text x="18.5334%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="18.2143%" y="437" width="0.0119%" height="15" fill="rgb(246,123,29)" fg:x="1528" fg:w="1"/><text x="18.5334%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="18.2143%" y="421" width="0.0119%" height="15" fill="rgb(209,62,40)" fg:x="1528" fg:w="1"/><text x="18.5334%" y="431.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="18.2143%" y="405" width="0.0119%" height="15" fill="rgb(218,4,25)" fg:x="1528" fg:w="1"/><text x="18.5334%" y="415.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="18.2859%" y="597" width="0.0238%" height="15" fill="rgb(253,91,49)" fg:x="1534" fg:w="2"/><text x="18.6050%" y="607.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="18.2859%" y="581" width="0.0238%" height="15" fill="rgb(228,155,29)" fg:x="1534" fg:w="2"/><text x="18.6050%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="18.3097%" y="581" width="0.0119%" height="15" fill="rgb(243,57,37)" fg:x="1536" fg:w="1"/><text x="18.6288%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="18.3097%" y="565" width="0.0119%" height="15" fill="rgb(244,167,17)" fg:x="1536" fg:w="1"/><text x="18.6288%" y="575.50"/></g><g><title>parser::as_char_parser (6 samples, 0.07%)</title><rect x="18.2620%" y="613" width="0.0715%" height="15" fill="rgb(207,181,38)" fg:x="1532" fg:w="6"/><text x="18.5811%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="18.3097%" y="597" width="0.0238%" height="15" fill="rgb(211,8,23)" fg:x="1536" fg:w="2"/><text x="18.6288%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="18.3216%" y="581" width="0.0119%" height="15" fill="rgb(235,11,44)" fg:x="1537" fg:w="1"/><text x="18.6407%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.3216%" y="565" width="0.0119%" height="15" fill="rgb(248,18,52)" fg:x="1537" fg:w="1"/><text x="18.6407%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="18.3216%" y="549" width="0.0119%" height="15" fill="rgb(208,4,7)" fg:x="1537" fg:w="1"/><text x="18.6407%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.3216%" y="533" width="0.0119%" height="15" fill="rgb(240,17,39)" fg:x="1537" fg:w="1"/><text x="18.6407%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="18.3216%" y="517" width="0.0119%" height="15" fill="rgb(207,170,3)" fg:x="1537" fg:w="1"/><text x="18.6407%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.3216%" y="501" width="0.0119%" height="15" fill="rgb(236,100,52)" fg:x="1537" fg:w="1"/><text x="18.6407%" y="511.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="18.3216%" y="485" width="0.0119%" height="15" fill="rgb(246,78,51)" fg:x="1537" fg:w="1"/><text x="18.6407%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.3216%" y="469" width="0.0119%" height="15" fill="rgb(211,17,15)" fg:x="1537" fg:w="1"/><text x="18.6407%" y="479.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="18.3216%" y="453" width="0.0119%" height="15" fill="rgb(209,59,46)" fg:x="1537" fg:w="1"/><text x="18.6407%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.3216%" y="437" width="0.0119%" height="15" fill="rgb(210,92,25)" fg:x="1537" fg:w="1"/><text x="18.6407%" y="447.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.3216%" y="421" width="0.0119%" height="15" fill="rgb(238,174,52)" fg:x="1537" fg:w="1"/><text x="18.6407%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="18.3216%" y="405" width="0.0119%" height="15" fill="rgb(230,73,7)" fg:x="1537" fg:w="1"/><text x="18.6407%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="18.3216%" y="389" width="0.0119%" height="15" fill="rgb(243,124,40)" fg:x="1537" fg:w="1"/><text x="18.6407%" y="399.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="18.3216%" y="373" width="0.0119%" height="15" fill="rgb(244,170,11)" fg:x="1537" fg:w="1"/><text x="18.6407%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="18.3335%" y="613" width="0.0119%" height="15" fill="rgb(207,114,54)" fg:x="1538" fg:w="1"/><text x="18.6526%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="18.3335%" y="597" width="0.0119%" height="15" fill="rgb(205,42,20)" fg:x="1538" fg:w="1"/><text x="18.6526%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="18.3335%" y="581" width="0.0119%" height="15" fill="rgb(230,30,28)" fg:x="1538" fg:w="1"/><text x="18.6526%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="18.3335%" y="565" width="0.0119%" height="15" fill="rgb(205,73,54)" fg:x="1538" fg:w="1"/><text x="18.6526%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="18.3335%" y="549" width="0.0119%" height="15" fill="rgb(254,227,23)" fg:x="1538" fg:w="1"/><text x="18.6526%" y="559.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="18.3335%" y="533" width="0.0119%" height="15" fill="rgb(228,202,34)" fg:x="1538" fg:w="1"/><text x="18.6526%" y="543.50"/></g><g><title>cond::peeks (1 samples, 0.01%)</title><rect x="18.3335%" y="517" width="0.0119%" height="15" fill="rgb(222,225,37)" fg:x="1538" fg:w="1"/><text x="18.6526%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="18.3335%" y="501" width="0.0119%" height="15" fill="rgb(221,14,54)" fg:x="1538" fg:w="1"/><text x="18.6526%" y="511.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="18.3335%" y="485" width="0.0119%" height="15" fill="rgb(254,102,2)" fg:x="1538" fg:w="1"/><text x="18.6526%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.3455%" y="581" width="0.0119%" height="15" fill="rgb(232,104,17)" fg:x="1539" fg:w="1"/><text x="18.6646%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.3455%" y="565" width="0.0119%" height="15" fill="rgb(250,220,14)" fg:x="1539" fg:w="1"/><text x="18.6646%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.3455%" y="549" width="0.0119%" height="15" fill="rgb(241,158,9)" fg:x="1539" fg:w="1"/><text x="18.6646%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.3455%" y="533" width="0.0119%" height="15" fill="rgb(246,9,43)" fg:x="1539" fg:w="1"/><text x="18.6646%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.3574%" y="581" width="0.0119%" height="15" fill="rgb(206,73,33)" fg:x="1540" fg:w="1"/><text x="18.6765%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.3574%" y="565" width="0.0119%" height="15" fill="rgb(222,79,8)" fg:x="1540" fg:w="1"/><text x="18.6765%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="18.3574%" y="549" width="0.0119%" height="15" fill="rgb(234,8,54)" fg:x="1540" fg:w="1"/><text x="18.6765%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="18.3455%" y="613" width="0.0358%" height="15" fill="rgb(209,134,38)" fg:x="1539" fg:w="3"/><text x="18.6646%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="18.3455%" y="597" width="0.0358%" height="15" fill="rgb(230,127,29)" fg:x="1539" fg:w="3"/><text x="18.6646%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.3693%" y="581" width="0.0119%" height="15" fill="rgb(242,44,41)" fg:x="1541" fg:w="1"/><text x="18.6884%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.3693%" y="565" width="0.0119%" height="15" fill="rgb(222,56,43)" fg:x="1541" fg:w="1"/><text x="18.6884%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.3693%" y="549" width="0.0119%" height="15" fill="rgb(238,39,47)" fg:x="1541" fg:w="1"/><text x="18.6884%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.3693%" y="533" width="0.0119%" height="15" fill="rgb(226,79,43)" fg:x="1541" fg:w="1"/><text x="18.6884%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="18.3693%" y="517" width="0.0119%" height="15" fill="rgb(242,105,53)" fg:x="1541" fg:w="1"/><text x="18.6884%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="18.3812%" y="613" width="0.0238%" height="15" fill="rgb(251,132,46)" fg:x="1542" fg:w="2"/><text x="18.7003%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="18.3812%" y="597" width="0.0238%" height="15" fill="rgb(231,77,14)" fg:x="1542" fg:w="2"/><text x="18.7003%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="18.3812%" y="581" width="0.0238%" height="15" fill="rgb(240,135,9)" fg:x="1542" fg:w="2"/><text x="18.7003%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.4051%" y="613" width="0.0119%" height="15" fill="rgb(248,109,14)" fg:x="1544" fg:w="1"/><text x="18.7242%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.4051%" y="597" width="0.0119%" height="15" fill="rgb(227,146,52)" fg:x="1544" fg:w="1"/><text x="18.7242%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.4051%" y="581" width="0.0119%" height="15" fill="rgb(232,54,3)" fg:x="1544" fg:w="1"/><text x="18.7242%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.4051%" y="565" width="0.0119%" height="15" fill="rgb(229,201,43)" fg:x="1544" fg:w="1"/><text x="18.7242%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.4051%" y="549" width="0.0119%" height="15" fill="rgb(252,161,33)" fg:x="1544" fg:w="1"/><text x="18.7242%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.4051%" y="533" width="0.0119%" height="15" fill="rgb(226,146,40)" fg:x="1544" fg:w="1"/><text x="18.7242%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.4051%" y="517" width="0.0119%" height="15" fill="rgb(219,47,25)" fg:x="1544" fg:w="1"/><text x="18.7242%" y="527.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.4051%" y="501" width="0.0119%" height="15" fill="rgb(250,135,13)" fg:x="1544" fg:w="1"/><text x="18.7242%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.4051%" y="485" width="0.0119%" height="15" fill="rgb(219,229,18)" fg:x="1544" fg:w="1"/><text x="18.7242%" y="495.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="18.4051%" y="469" width="0.0119%" height="15" fill="rgb(217,152,27)" fg:x="1544" fg:w="1"/><text x="18.7242%" y="479.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_invoke (2 samples, 0.02%)</title><rect x="18.4170%" y="613" width="0.0238%" height="15" fill="rgb(225,71,47)" fg:x="1545" fg:w="2"/><text x="18.7361%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function&lt;std::function&lt;Result (State)&gt;, void, void&gt; (2 samples, 0.02%)</title><rect x="18.4170%" y="597" width="0.0238%" height="15" fill="rgb(220,139,14)" fg:x="1545" fg:w="2"/><text x="18.7361%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.4408%" y="597" width="0.0119%" height="15" fill="rgb(247,54,32)" fg:x="1547" fg:w="1"/><text x="18.7599%" y="607.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="18.4527%" y="597" width="0.0119%" height="15" fill="rgb(252,131,39)" fg:x="1548" fg:w="1"/><text x="18.7718%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.4647%" y="581" width="0.0119%" height="15" fill="rgb(210,108,39)" fg:x="1549" fg:w="1"/><text x="18.7838%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="18.4647%" y="565" width="0.0119%" height="15" fill="rgb(205,23,29)" fg:x="1549" fg:w="1"/><text x="18.7838%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="18.4408%" y="613" width="0.0477%" height="15" fill="rgb(246,139,46)" fg:x="1547" fg:w="4"/><text x="18.7599%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State)&gt; &gt;(std::function&lt;Result (State)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="18.4647%" y="597" width="0.0238%" height="15" fill="rgb(250,81,26)" fg:x="1549" fg:w="2"/><text x="18.7838%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="18.4766%" y="581" width="0.0119%" height="15" fill="rgb(214,104,7)" fg:x="1550" fg:w="1"/><text x="18.7957%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="18.4885%" y="613" width="0.0119%" height="15" fill="rgb(233,189,8)" fg:x="1551" fg:w="1"/><text x="18.8076%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (178 samples, 2.12%)</title><rect x="16.3905%" y="757" width="2.1218%" height="15" fill="rgb(228,141,17)" fg:x="1375" fg:w="178"/><text x="16.7096%" y="767.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (178 samples, 2.12%)</title><rect x="16.3905%" y="741" width="2.1218%" height="15" fill="rgb(247,157,1)" fg:x="1375" fg:w="178"/><text x="16.7096%" y="751.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (178 samples, 2.12%)</title><rect x="16.3905%" y="725" width="2.1218%" height="15" fill="rgb(249,225,5)" fg:x="1375" fg:w="178"/><text x="16.7096%" y="735.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (160 samples, 1.91%)</title><rect x="16.6051%" y="709" width="1.9073%" height="15" fill="rgb(242,55,13)" fg:x="1393" fg:w="160"/><text x="16.9242%" y="719.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (87 samples, 1.04%)</title><rect x="17.4753%" y="693" width="1.0371%" height="15" fill="rgb(230,49,50)" fg:x="1466" fg:w="87"/><text x="17.7944%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (71 samples, 0.85%)</title><rect x="17.6660%" y="677" width="0.8463%" height="15" fill="rgb(241,111,38)" fg:x="1482" fg:w="71"/><text x="17.9851%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (57 samples, 0.68%)</title><rect x="17.8329%" y="661" width="0.6795%" height="15" fill="rgb(252,155,4)" fg:x="1496" fg:w="57"/><text x="18.1520%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (24 samples, 0.29%)</title><rect x="18.2262%" y="645" width="0.2861%" height="15" fill="rgb(212,69,32)" fg:x="1529" fg:w="24"/><text x="18.5453%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (24 samples, 0.29%)</title><rect x="18.2262%" y="629" width="0.2861%" height="15" fill="rgb(243,107,47)" fg:x="1529" fg:w="24"/><text x="18.5453%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="18.5004%" y="613" width="0.0119%" height="15" fill="rgb(247,130,12)" fg:x="1552" fg:w="1"/><text x="18.8195%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.5004%" y="597" width="0.0119%" height="15" fill="rgb(233,74,16)" fg:x="1552" fg:w="1"/><text x="18.8195%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="18.5004%" y="581" width="0.0119%" height="15" fill="rgb(208,58,18)" fg:x="1552" fg:w="1"/><text x="18.8195%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.5004%" y="565" width="0.0119%" height="15" fill="rgb(242,225,1)" fg:x="1552" fg:w="1"/><text x="18.8195%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="18.5004%" y="549" width="0.0119%" height="15" fill="rgb(249,39,40)" fg:x="1552" fg:w="1"/><text x="18.8195%" y="559.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="18.5123%" y="613" width="0.0238%" height="15" fill="rgb(207,72,44)" fg:x="1553" fg:w="2"/><text x="18.8314%" y="623.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="18.5123%" y="597" width="0.0238%" height="15" fill="rgb(215,193,12)" fg:x="1553" fg:w="2"/><text x="18.8314%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="18.5123%" y="725" width="0.0358%" height="15" fill="rgb(248,41,39)" fg:x="1553" fg:w="3"/><text x="18.8314%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="18.5123%" y="709" width="0.0358%" height="15" fill="rgb(253,85,4)" fg:x="1553" fg:w="3"/><text x="18.8314%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="18.5123%" y="693" width="0.0358%" height="15" fill="rgb(243,70,31)" fg:x="1553" fg:w="3"/><text x="18.8314%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="18.5123%" y="677" width="0.0358%" height="15" fill="rgb(253,195,26)" fg:x="1553" fg:w="3"/><text x="18.8314%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="18.5123%" y="661" width="0.0358%" height="15" fill="rgb(243,42,11)" fg:x="1553" fg:w="3"/><text x="18.8314%" y="671.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="18.5123%" y="645" width="0.0358%" height="15" fill="rgb(239,66,17)" fg:x="1553" fg:w="3"/><text x="18.8314%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="18.5123%" y="629" width="0.0358%" height="15" fill="rgb(217,132,21)" fg:x="1553" fg:w="3"/><text x="18.8314%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.5362%" y="613" width="0.0119%" height="15" fill="rgb(252,202,21)" fg:x="1555" fg:w="1"/><text x="18.8553%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.5362%" y="597" width="0.0119%" height="15" fill="rgb(233,98,36)" fg:x="1555" fg:w="1"/><text x="18.8553%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="18.5362%" y="581" width="0.0119%" height="15" fill="rgb(216,153,54)" fg:x="1555" fg:w="1"/><text x="18.8553%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.5481%" y="581" width="0.0119%" height="15" fill="rgb(250,99,7)" fg:x="1556" fg:w="1"/><text x="18.8672%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="18.5481%" y="565" width="0.0119%" height="15" fill="rgb(207,56,50)" fg:x="1556" fg:w="1"/><text x="18.8672%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.5600%" y="549" width="0.0119%" height="15" fill="rgb(244,61,34)" fg:x="1557" fg:w="1"/><text x="18.8791%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="18.5600%" y="533" width="0.0119%" height="15" fill="rgb(241,50,38)" fg:x="1557" fg:w="1"/><text x="18.8791%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="18.5600%" y="581" width="0.0238%" height="15" fill="rgb(212,166,30)" fg:x="1557" fg:w="2"/><text x="18.8791%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="18.5600%" y="565" width="0.0238%" height="15" fill="rgb(249,127,32)" fg:x="1557" fg:w="2"/><text x="18.8791%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="18.5719%" y="549" width="0.0119%" height="15" fill="rgb(209,103,0)" fg:x="1558" fg:w="1"/><text x="18.8910%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.5839%" y="565" width="0.0119%" height="15" fill="rgb(238,209,51)" fg:x="1559" fg:w="1"/><text x="18.9030%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="18.5839%" y="549" width="0.0119%" height="15" fill="rgb(237,56,23)" fg:x="1559" fg:w="1"/><text x="18.9030%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.5958%" y="565" width="0.0119%" height="15" fill="rgb(215,153,46)" fg:x="1560" fg:w="1"/><text x="18.9149%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.5958%" y="549" width="0.0119%" height="15" fill="rgb(224,49,31)" fg:x="1560" fg:w="1"/><text x="18.9149%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="18.5958%" y="533" width="0.0119%" height="15" fill="rgb(250,18,42)" fg:x="1560" fg:w="1"/><text x="18.9149%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.6077%" y="549" width="0.0119%" height="15" fill="rgb(215,176,39)" fg:x="1561" fg:w="1"/><text x="18.9268%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="18.6077%" y="533" width="0.0119%" height="15" fill="rgb(223,77,29)" fg:x="1561" fg:w="1"/><text x="18.9268%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="18.5839%" y="581" width="0.0477%" height="15" fill="rgb(234,94,52)" fg:x="1559" fg:w="4"/><text x="18.9030%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="18.6077%" y="565" width="0.0238%" height="15" fill="rgb(220,154,50)" fg:x="1561" fg:w="2"/><text x="18.9268%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="18.6196%" y="549" width="0.0119%" height="15" fill="rgb(212,11,10)" fg:x="1562" fg:w="1"/><text x="18.9387%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.6315%" y="581" width="0.0119%" height="15" fill="rgb(205,166,19)" fg:x="1563" fg:w="1"/><text x="18.9506%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.6315%" y="565" width="0.0119%" height="15" fill="rgb(244,198,16)" fg:x="1563" fg:w="1"/><text x="18.9506%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="18.6315%" y="549" width="0.0119%" height="15" fill="rgb(219,69,12)" fg:x="1563" fg:w="1"/><text x="18.9506%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.6435%" y="549" width="0.0119%" height="15" fill="rgb(245,30,7)" fg:x="1564" fg:w="1"/><text x="18.9626%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="18.6435%" y="533" width="0.0119%" height="15" fill="rgb(218,221,48)" fg:x="1564" fg:w="1"/><text x="18.9626%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="18.6554%" y="533" width="0.0238%" height="15" fill="rgb(216,66,15)" fg:x="1565" fg:w="2"/><text x="18.9745%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.6792%" y="517" width="0.0119%" height="15" fill="rgb(226,122,50)" fg:x="1567" fg:w="1"/><text x="18.9983%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="18.6792%" y="501" width="0.0119%" height="15" fill="rgb(239,156,16)" fg:x="1567" fg:w="1"/><text x="18.9983%" y="511.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="18.6911%" y="501" width="0.0119%" height="15" fill="rgb(224,27,38)" fg:x="1568" fg:w="1"/><text x="19.0102%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="18.5481%" y="629" width="0.1788%" height="15" fill="rgb(224,39,27)" fg:x="1556" fg:w="15"/><text x="18.8672%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="18.5481%" y="613" width="0.1788%" height="15" fill="rgb(215,92,29)" fg:x="1556" fg:w="15"/><text x="18.8672%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="18.5481%" y="597" width="0.1788%" height="15" fill="rgb(207,159,16)" fg:x="1556" fg:w="15"/><text x="18.8672%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="18.6435%" y="581" width="0.0834%" height="15" fill="rgb(238,163,47)" fg:x="1564" fg:w="7"/><text x="18.9626%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="18.6435%" y="565" width="0.0834%" height="15" fill="rgb(219,91,49)" fg:x="1564" fg:w="7"/><text x="18.9626%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="18.6554%" y="549" width="0.0715%" height="15" fill="rgb(227,167,31)" fg:x="1565" fg:w="6"/><text x="18.9745%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="18.6792%" y="533" width="0.0477%" height="15" fill="rgb(234,80,54)" fg:x="1567" fg:w="4"/><text x="18.9983%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="18.6911%" y="517" width="0.0358%" height="15" fill="rgb(212,114,2)" fg:x="1568" fg:w="3"/><text x="19.0102%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="18.7031%" y="501" width="0.0238%" height="15" fill="rgb(234,50,24)" fg:x="1569" fg:w="2"/><text x="19.0222%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.7150%" y="485" width="0.0119%" height="15" fill="rgb(221,68,8)" fg:x="1570" fg:w="1"/><text x="19.0341%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="18.7150%" y="469" width="0.0119%" height="15" fill="rgb(254,180,31)" fg:x="1570" fg:w="1"/><text x="19.0341%" y="479.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="18.7269%" y="613" width="0.0238%" height="15" fill="rgb(247,130,50)" fg:x="1571" fg:w="2"/><text x="19.0460%" y="623.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="18.7269%" y="597" width="0.0238%" height="15" fill="rgb(211,109,4)" fg:x="1571" fg:w="2"/><text x="19.0460%" y="607.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="18.7507%" y="597" width="0.0238%" height="15" fill="rgb(238,50,21)" fg:x="1573" fg:w="2"/><text x="19.0698%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="18.7507%" y="581" width="0.0238%" height="15" fill="rgb(225,57,45)" fg:x="1573" fg:w="2"/><text x="19.0698%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.7746%" y="565" width="0.0119%" height="15" fill="rgb(209,196,50)" fg:x="1575" fg:w="1"/><text x="19.0937%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="18.7746%" y="549" width="0.0119%" height="15" fill="rgb(242,140,13)" fg:x="1575" fg:w="1"/><text x="19.0937%" y="559.50"/></g><g><title>__GI___libc_free (4 samples, 0.05%)</title><rect x="18.7865%" y="533" width="0.0477%" height="15" fill="rgb(217,111,7)" fg:x="1576" fg:w="4"/><text x="19.1056%" y="543.50"/></g><g><title>_int_free (4 samples, 0.05%)</title><rect x="18.7865%" y="517" width="0.0477%" height="15" fill="rgb(253,193,51)" fg:x="1576" fg:w="4"/><text x="19.1056%" y="527.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="18.8342%" y="501" width="0.0358%" height="15" fill="rgb(252,70,29)" fg:x="1580" fg:w="3"/><text x="19.1533%" y="511.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="18.8342%" y="485" width="0.0358%" height="15" fill="rgb(232,127,12)" fg:x="1580" fg:w="3"/><text x="19.1533%" y="495.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="18.8699%" y="501" width="0.0238%" height="15" fill="rgb(211,180,21)" fg:x="1583" fg:w="2"/><text x="19.1890%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.9057%" y="485" width="0.0119%" height="15" fill="rgb(229,72,13)" fg:x="1586" fg:w="1"/><text x="19.2248%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="18.9057%" y="469" width="0.0119%" height="15" fill="rgb(240,211,49)" fg:x="1586" fg:w="1"/><text x="19.2248%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="18.8938%" y="501" width="0.0358%" height="15" fill="rgb(219,149,40)" fg:x="1585" fg:w="3"/><text x="19.2129%" y="511.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="18.9176%" y="485" width="0.0119%" height="15" fill="rgb(210,127,46)" fg:x="1587" fg:w="1"/><text x="19.2367%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="18.7746%" y="581" width="0.1669%" height="15" fill="rgb(220,106,7)" fg:x="1575" fg:w="14"/><text x="19.0937%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="18.7865%" y="565" width="0.1550%" height="15" fill="rgb(249,31,22)" fg:x="1576" fg:w="13"/><text x="19.1056%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="18.7865%" y="549" width="0.1550%" height="15" fill="rgb(253,1,49)" fg:x="1576" fg:w="13"/><text x="19.1056%" y="559.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="18.8342%" y="533" width="0.1073%" height="15" fill="rgb(227,144,33)" fg:x="1580" fg:w="9"/><text x="19.1533%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="18.8342%" y="517" width="0.1073%" height="15" fill="rgb(249,163,44)" fg:x="1580" fg:w="9"/><text x="19.1533%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.9296%" y="501" width="0.0119%" height="15" fill="rgb(234,15,39)" fg:x="1588" fg:w="1"/><text x="19.2487%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.9296%" y="485" width="0.0119%" height="15" fill="rgb(207,66,16)" fg:x="1588" fg:w="1"/><text x="19.2487%" y="495.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="18.9296%" y="469" width="0.0119%" height="15" fill="rgb(233,112,24)" fg:x="1588" fg:w="1"/><text x="19.2487%" y="479.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="18.9415%" y="565" width="0.0238%" height="15" fill="rgb(230,90,22)" fg:x="1589" fg:w="2"/><text x="19.2606%" y="575.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="18.9415%" y="549" width="0.0238%" height="15" fill="rgb(229,61,13)" fg:x="1589" fg:w="2"/><text x="19.2606%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="18.7746%" y="597" width="0.2026%" height="15" fill="rgb(225,57,24)" fg:x="1575" fg:w="17"/><text x="19.0937%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="18.9415%" y="581" width="0.0358%" height="15" fill="rgb(208,169,48)" fg:x="1589" fg:w="3"/><text x="19.2606%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.9653%" y="565" width="0.0119%" height="15" fill="rgb(244,218,51)" fg:x="1591" fg:w="1"/><text x="19.2844%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.9653%" y="549" width="0.0119%" height="15" fill="rgb(214,148,10)" fg:x="1591" fg:w="1"/><text x="19.2844%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="18.9653%" y="533" width="0.0119%" height="15" fill="rgb(225,174,27)" fg:x="1591" fg:w="1"/><text x="19.2844%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.9772%" y="597" width="0.0119%" height="15" fill="rgb(230,96,26)" fg:x="1592" fg:w="1"/><text x="19.2963%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.9772%" y="581" width="0.0119%" height="15" fill="rgb(232,10,30)" fg:x="1592" fg:w="1"/><text x="19.2963%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="18.9772%" y="565" width="0.0119%" height="15" fill="rgb(222,8,50)" fg:x="1592" fg:w="1"/><text x="19.2963%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="18.7269%" y="629" width="0.2742%" height="15" fill="rgb(213,81,27)" fg:x="1571" fg:w="23"/><text x="19.0460%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="18.7507%" y="613" width="0.2503%" height="15" fill="rgb(245,50,10)" fg:x="1573" fg:w="21"/><text x="19.0698%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="18.9892%" y="597" width="0.0119%" height="15" fill="rgb(216,100,18)" fg:x="1593" fg:w="1"/><text x="19.3083%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="18.9892%" y="581" width="0.0119%" height="15" fill="rgb(236,147,54)" fg:x="1593" fg:w="1"/><text x="19.3083%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="18.9892%" y="565" width="0.0119%" height="15" fill="rgb(205,143,26)" fg:x="1593" fg:w="1"/><text x="19.3083%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (39 samples, 0.46%)</title><rect x="18.5481%" y="709" width="0.4649%" height="15" fill="rgb(236,26,9)" fg:x="1556" fg:w="39"/><text x="18.8672%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (39 samples, 0.46%)</title><rect x="18.5481%" y="693" width="0.4649%" height="15" fill="rgb(221,165,53)" fg:x="1556" fg:w="39"/><text x="18.8672%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (39 samples, 0.46%)</title><rect x="18.5481%" y="677" width="0.4649%" height="15" fill="rgb(214,110,17)" fg:x="1556" fg:w="39"/><text x="18.8672%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (39 samples, 0.46%)</title><rect x="18.5481%" y="661" width="0.4649%" height="15" fill="rgb(237,197,12)" fg:x="1556" fg:w="39"/><text x="18.8672%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (39 samples, 0.46%)</title><rect x="18.5481%" y="645" width="0.4649%" height="15" fill="rgb(205,84,17)" fg:x="1556" fg:w="39"/><text x="18.8672%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.0011%" y="629" width="0.0119%" height="15" fill="rgb(237,18,45)" fg:x="1594" fg:w="1"/><text x="19.3202%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.0011%" y="613" width="0.0119%" height="15" fill="rgb(221,87,14)" fg:x="1594" fg:w="1"/><text x="19.3202%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.0011%" y="597" width="0.0119%" height="15" fill="rgb(238,186,15)" fg:x="1594" fg:w="1"/><text x="19.3202%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.0130%" y="661" width="0.0119%" height="15" fill="rgb(208,115,11)" fg:x="1595" fg:w="1"/><text x="19.3321%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.0130%" y="645" width="0.0119%" height="15" fill="rgb(254,175,0)" fg:x="1595" fg:w="1"/><text x="19.3321%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.0130%" y="629" width="0.0119%" height="15" fill="rgb(227,24,42)" fg:x="1595" fg:w="1"/><text x="19.3321%" y="639.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.0130%" y="613" width="0.0119%" height="15" fill="rgb(223,211,37)" fg:x="1595" fg:w="1"/><text x="19.3321%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.0130%" y="597" width="0.0119%" height="15" fill="rgb(235,49,27)" fg:x="1595" fg:w="1"/><text x="19.3321%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.0130%" y="581" width="0.0119%" height="15" fill="rgb(254,97,51)" fg:x="1595" fg:w="1"/><text x="19.3321%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.0130%" y="565" width="0.0119%" height="15" fill="rgb(249,51,40)" fg:x="1595" fg:w="1"/><text x="19.3321%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.0130%" y="549" width="0.0119%" height="15" fill="rgb(210,128,45)" fg:x="1595" fg:w="1"/><text x="19.3321%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.0249%" y="629" width="0.0119%" height="15" fill="rgb(224,137,50)" fg:x="1596" fg:w="1"/><text x="19.3440%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.0249%" y="613" width="0.0119%" height="15" fill="rgb(242,15,9)" fg:x="1596" fg:w="1"/><text x="19.3440%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="19.0130%" y="709" width="0.0477%" height="15" fill="rgb(233,187,41)" fg:x="1595" fg:w="4"/><text x="19.3321%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="19.0130%" y="693" width="0.0477%" height="15" fill="rgb(227,2,29)" fg:x="1595" fg:w="4"/><text x="19.3321%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="19.0130%" y="677" width="0.0477%" height="15" fill="rgb(222,70,3)" fg:x="1595" fg:w="4"/><text x="19.3321%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="19.0249%" y="661" width="0.0358%" height="15" fill="rgb(213,11,42)" fg:x="1596" fg:w="3"/><text x="19.3440%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="19.0249%" y="645" width="0.0358%" height="15" fill="rgb(225,150,9)" fg:x="1596" fg:w="3"/><text x="19.3440%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.0368%" y="629" width="0.0238%" height="15" fill="rgb(230,162,45)" fg:x="1597" fg:w="2"/><text x="19.3559%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.0368%" y="613" width="0.0238%" height="15" fill="rgb(222,14,52)" fg:x="1597" fg:w="2"/><text x="19.3559%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.0368%" y="597" width="0.0238%" height="15" fill="rgb(254,198,14)" fg:x="1597" fg:w="2"/><text x="19.3559%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.0368%" y="581" width="0.0238%" height="15" fill="rgb(220,217,30)" fg:x="1597" fg:w="2"/><text x="19.3559%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.0368%" y="565" width="0.0238%" height="15" fill="rgb(215,146,41)" fg:x="1597" fg:w="2"/><text x="19.3559%" y="575.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="19.0368%" y="549" width="0.0238%" height="15" fill="rgb(217,27,36)" fg:x="1597" fg:w="2"/><text x="19.3559%" y="559.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="19.0368%" y="533" width="0.0238%" height="15" fill="rgb(219,218,39)" fg:x="1597" fg:w="2"/><text x="19.3559%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.0607%" y="629" width="0.0119%" height="15" fill="rgb(219,4,42)" fg:x="1599" fg:w="1"/><text x="19.3798%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.0607%" y="613" width="0.0119%" height="15" fill="rgb(249,119,36)" fg:x="1599" fg:w="1"/><text x="19.3798%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="19.0726%" y="597" width="0.0238%" height="15" fill="rgb(209,23,33)" fg:x="1600" fg:w="2"/><text x="19.3917%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="19.0726%" y="581" width="0.0238%" height="15" fill="rgb(211,10,0)" fg:x="1600" fg:w="2"/><text x="19.3917%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.0964%" y="581" width="0.0119%" height="15" fill="rgb(208,99,37)" fg:x="1602" fg:w="1"/><text x="19.4155%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.0964%" y="565" width="0.0119%" height="15" fill="rgb(213,132,31)" fg:x="1602" fg:w="1"/><text x="19.4155%" y="575.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="19.1084%" y="565" width="0.0358%" height="15" fill="rgb(243,129,40)" fg:x="1603" fg:w="3"/><text x="19.4275%" y="575.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="19.1203%" y="549" width="0.0238%" height="15" fill="rgb(210,66,33)" fg:x="1604" fg:w="2"/><text x="19.4394%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="19.0726%" y="629" width="0.0834%" height="15" fill="rgb(209,189,4)" fg:x="1600" fg:w="7"/><text x="19.3917%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="19.0726%" y="613" width="0.0834%" height="15" fill="rgb(214,107,37)" fg:x="1600" fg:w="7"/><text x="19.3917%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (5 samples, 0.06%)</title><rect x="19.0964%" y="597" width="0.0596%" height="15" fill="rgb(245,88,54)" fg:x="1602" fg:w="5"/><text x="19.4155%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="19.1084%" y="581" width="0.0477%" height="15" fill="rgb(205,146,20)" fg:x="1603" fg:w="4"/><text x="19.4275%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.1441%" y="565" width="0.0119%" height="15" fill="rgb(220,161,25)" fg:x="1606" fg:w="1"/><text x="19.4632%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.1441%" y="549" width="0.0119%" height="15" fill="rgb(215,152,15)" fg:x="1606" fg:w="1"/><text x="19.4632%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.1441%" y="533" width="0.0119%" height="15" fill="rgb(233,192,44)" fg:x="1606" fg:w="1"/><text x="19.4632%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="19.0607%" y="709" width="0.1073%" height="15" fill="rgb(240,170,46)" fg:x="1599" fg:w="9"/><text x="19.3798%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="19.0607%" y="693" width="0.1073%" height="15" fill="rgb(207,104,33)" fg:x="1599" fg:w="9"/><text x="19.3798%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="19.0607%" y="677" width="0.1073%" height="15" fill="rgb(219,21,39)" fg:x="1599" fg:w="9"/><text x="19.3798%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="19.0607%" y="661" width="0.1073%" height="15" fill="rgb(214,133,29)" fg:x="1599" fg:w="9"/><text x="19.3798%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="19.0607%" y="645" width="0.1073%" height="15" fill="rgb(226,93,6)" fg:x="1599" fg:w="9"/><text x="19.3798%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.1560%" y="629" width="0.0119%" height="15" fill="rgb(252,222,34)" fg:x="1607" fg:w="1"/><text x="19.4751%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.1560%" y="613" width="0.0119%" height="15" fill="rgb(252,92,48)" fg:x="1607" fg:w="1"/><text x="19.4751%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.1560%" y="597" width="0.0119%" height="15" fill="rgb(245,223,24)" fg:x="1607" fg:w="1"/><text x="19.4751%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.1680%" y="581" width="0.0119%" height="15" fill="rgb(205,176,3)" fg:x="1608" fg:w="1"/><text x="19.4871%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.1680%" y="565" width="0.0119%" height="15" fill="rgb(235,151,15)" fg:x="1608" fg:w="1"/><text x="19.4871%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.1799%" y="549" width="0.0119%" height="15" fill="rgb(237,209,11)" fg:x="1609" fg:w="1"/><text x="19.4990%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.1799%" y="533" width="0.0119%" height="15" fill="rgb(243,227,24)" fg:x="1609" fg:w="1"/><text x="19.4990%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.1918%" y="533" width="0.0119%" height="15" fill="rgb(239,193,16)" fg:x="1610" fg:w="1"/><text x="19.5109%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.1918%" y="517" width="0.0119%" height="15" fill="rgb(231,27,9)" fg:x="1610" fg:w="1"/><text x="19.5109%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="19.1799%" y="581" width="0.0358%" height="15" fill="rgb(219,169,10)" fg:x="1609" fg:w="3"/><text x="19.4990%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="19.1799%" y="565" width="0.0358%" height="15" fill="rgb(244,229,43)" fg:x="1609" fg:w="3"/><text x="19.4990%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.1918%" y="549" width="0.0238%" height="15" fill="rgb(254,38,20)" fg:x="1610" fg:w="2"/><text x="19.5109%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.2037%" y="533" width="0.0119%" height="15" fill="rgb(250,47,30)" fg:x="1611" fg:w="1"/><text x="19.5228%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.2037%" y="517" width="0.0119%" height="15" fill="rgb(224,124,36)" fg:x="1611" fg:w="1"/><text x="19.5228%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.2037%" y="501" width="0.0119%" height="15" fill="rgb(246,68,51)" fg:x="1611" fg:w="1"/><text x="19.5228%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="19.1680%" y="677" width="0.0596%" height="15" fill="rgb(253,43,49)" fg:x="1608" fg:w="5"/><text x="19.4871%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="19.1680%" y="661" width="0.0596%" height="15" fill="rgb(219,54,36)" fg:x="1608" fg:w="5"/><text x="19.4871%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="19.1680%" y="645" width="0.0596%" height="15" fill="rgb(227,133,34)" fg:x="1608" fg:w="5"/><text x="19.4871%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="19.1680%" y="629" width="0.0596%" height="15" fill="rgb(247,227,15)" fg:x="1608" fg:w="5"/><text x="19.4871%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="19.1680%" y="613" width="0.0596%" height="15" fill="rgb(229,96,14)" fg:x="1608" fg:w="5"/><text x="19.4871%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="19.1680%" y="597" width="0.0596%" height="15" fill="rgb(220,79,17)" fg:x="1608" fg:w="5"/><text x="19.4871%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.2156%" y="581" width="0.0119%" height="15" fill="rgb(205,131,53)" fg:x="1612" fg:w="1"/><text x="19.5347%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.2156%" y="565" width="0.0119%" height="15" fill="rgb(209,50,29)" fg:x="1612" fg:w="1"/><text x="19.5347%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.2156%" y="549" width="0.0119%" height="15" fill="rgb(245,86,46)" fg:x="1612" fg:w="1"/><text x="19.5347%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="19.1680%" y="693" width="0.0715%" height="15" fill="rgb(235,66,46)" fg:x="1608" fg:w="6"/><text x="19.4871%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.2276%" y="677" width="0.0119%" height="15" fill="rgb(232,148,31)" fg:x="1613" fg:w="1"/><text x="19.5467%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.2276%" y="661" width="0.0119%" height="15" fill="rgb(217,149,8)" fg:x="1613" fg:w="1"/><text x="19.5467%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.2276%" y="645" width="0.0119%" height="15" fill="rgb(209,183,11)" fg:x="1613" fg:w="1"/><text x="19.5467%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.2276%" y="629" width="0.0119%" height="15" fill="rgb(208,55,20)" fg:x="1613" fg:w="1"/><text x="19.5467%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.2276%" y="613" width="0.0119%" height="15" fill="rgb(218,39,14)" fg:x="1613" fg:w="1"/><text x="19.5467%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.2276%" y="597" width="0.0119%" height="15" fill="rgb(216,169,33)" fg:x="1613" fg:w="1"/><text x="19.5467%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.2395%" y="677" width="0.0119%" height="15" fill="rgb(233,80,24)" fg:x="1614" fg:w="1"/><text x="19.5586%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.2395%" y="661" width="0.0119%" height="15" fill="rgb(213,179,31)" fg:x="1614" fg:w="1"/><text x="19.5586%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.2395%" y="645" width="0.0119%" height="15" fill="rgb(209,19,5)" fg:x="1614" fg:w="1"/><text x="19.5586%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.2395%" y="629" width="0.0119%" height="15" fill="rgb(219,18,35)" fg:x="1614" fg:w="1"/><text x="19.5586%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.2395%" y="613" width="0.0119%" height="15" fill="rgb(209,169,16)" fg:x="1614" fg:w="1"/><text x="19.5586%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.2395%" y="597" width="0.0119%" height="15" fill="rgb(245,90,51)" fg:x="1614" fg:w="1"/><text x="19.5586%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.2514%" y="597" width="0.0119%" height="15" fill="rgb(220,99,45)" fg:x="1615" fg:w="1"/><text x="19.5705%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.2514%" y="581" width="0.0119%" height="15" fill="rgb(249,89,25)" fg:x="1615" fg:w="1"/><text x="19.5705%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.2633%" y="565" width="0.0119%" height="15" fill="rgb(239,193,0)" fg:x="1616" fg:w="1"/><text x="19.5824%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.2633%" y="549" width="0.0119%" height="15" fill="rgb(231,126,1)" fg:x="1616" fg:w="1"/><text x="19.5824%" y="559.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="19.2752%" y="549" width="0.0238%" height="15" fill="rgb(243,166,3)" fg:x="1617" fg:w="2"/><text x="19.5943%" y="559.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="19.2752%" y="533" width="0.0238%" height="15" fill="rgb(223,22,34)" fg:x="1617" fg:w="2"/><text x="19.5943%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="19.2991%" y="549" width="0.0119%" height="15" fill="rgb(251,52,51)" fg:x="1619" fg:w="1"/><text x="19.6182%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="19.2514%" y="629" width="0.0715%" height="15" fill="rgb(221,165,28)" fg:x="1615" fg:w="6"/><text x="19.5705%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="19.2514%" y="613" width="0.0715%" height="15" fill="rgb(218,121,47)" fg:x="1615" fg:w="6"/><text x="19.5705%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="19.2633%" y="597" width="0.0596%" height="15" fill="rgb(209,120,9)" fg:x="1616" fg:w="5"/><text x="19.5824%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="19.2633%" y="581" width="0.0596%" height="15" fill="rgb(236,68,12)" fg:x="1616" fg:w="5"/><text x="19.5824%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="19.2752%" y="565" width="0.0477%" height="15" fill="rgb(225,194,26)" fg:x="1617" fg:w="4"/><text x="19.5943%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.3110%" y="549" width="0.0119%" height="15" fill="rgb(231,84,39)" fg:x="1620" fg:w="1"/><text x="19.6301%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.3110%" y="533" width="0.0119%" height="15" fill="rgb(210,11,45)" fg:x="1620" fg:w="1"/><text x="19.6301%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.3110%" y="517" width="0.0119%" height="15" fill="rgb(224,54,52)" fg:x="1620" fg:w="1"/><text x="19.6301%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="19.2514%" y="645" width="0.0834%" height="15" fill="rgb(238,102,14)" fg:x="1615" fg:w="7"/><text x="19.5705%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.3229%" y="629" width="0.0119%" height="15" fill="rgb(243,160,52)" fg:x="1621" fg:w="1"/><text x="19.6420%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.3229%" y="613" width="0.0119%" height="15" fill="rgb(216,114,19)" fg:x="1621" fg:w="1"/><text x="19.6420%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.3229%" y="597" width="0.0119%" height="15" fill="rgb(244,166,37)" fg:x="1621" fg:w="1"/><text x="19.6420%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.3229%" y="581" width="0.0119%" height="15" fill="rgb(246,29,44)" fg:x="1621" fg:w="1"/><text x="19.6420%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.3348%" y="629" width="0.0119%" height="15" fill="rgb(215,56,53)" fg:x="1622" fg:w="1"/><text x="19.6539%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.3348%" y="613" width="0.0119%" height="15" fill="rgb(217,60,2)" fg:x="1622" fg:w="1"/><text x="19.6539%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.3468%" y="597" width="0.0119%" height="15" fill="rgb(207,26,24)" fg:x="1623" fg:w="1"/><text x="19.6659%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.3468%" y="581" width="0.0119%" height="15" fill="rgb(252,210,15)" fg:x="1623" fg:w="1"/><text x="19.6659%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="19.3468%" y="613" width="0.0358%" height="15" fill="rgb(253,209,26)" fg:x="1623" fg:w="3"/><text x="19.6659%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.3587%" y="597" width="0.0238%" height="15" fill="rgb(238,170,14)" fg:x="1624" fg:w="2"/><text x="19.6778%" y="607.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="19.3587%" y="581" width="0.0238%" height="15" fill="rgb(216,178,15)" fg:x="1624" fg:w="2"/><text x="19.6778%" y="591.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="19.3587%" y="565" width="0.0238%" height="15" fill="rgb(250,197,2)" fg:x="1624" fg:w="2"/><text x="19.6778%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.3825%" y="597" width="0.0119%" height="15" fill="rgb(212,70,42)" fg:x="1626" fg:w="1"/><text x="19.7016%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.3825%" y="581" width="0.0119%" height="15" fill="rgb(227,213,9)" fg:x="1626" fg:w="1"/><text x="19.7016%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.3825%" y="565" width="0.0119%" height="15" fill="rgb(245,99,25)" fg:x="1626" fg:w="1"/><text x="19.7016%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.3825%" y="613" width="0.0238%" height="15" fill="rgb(250,82,29)" fg:x="1626" fg:w="2"/><text x="19.7016%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.3944%" y="597" width="0.0119%" height="15" fill="rgb(241,226,54)" fg:x="1627" fg:w="1"/><text x="19.7135%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.3944%" y="581" width="0.0119%" height="15" fill="rgb(221,99,41)" fg:x="1627" fg:w="1"/><text x="19.7135%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.3944%" y="565" width="0.0119%" height="15" fill="rgb(213,90,21)" fg:x="1627" fg:w="1"/><text x="19.7135%" y="575.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="19.4064%" y="597" width="0.0238%" height="15" fill="rgb(205,208,24)" fg:x="1628" fg:w="2"/><text x="19.7255%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="19.4064%" y="581" width="0.0238%" height="15" fill="rgb(246,31,12)" fg:x="1628" fg:w="2"/><text x="19.7255%" y="591.50"/></g><g><title>__GI___libc_free (4 samples, 0.05%)</title><rect x="19.4302%" y="581" width="0.0477%" height="15" fill="rgb(213,154,6)" fg:x="1630" fg:w="4"/><text x="19.7493%" y="591.50"/></g><g><title>_int_free (4 samples, 0.05%)</title><rect x="19.4302%" y="565" width="0.0477%" height="15" fill="rgb(222,163,29)" fg:x="1630" fg:w="4"/><text x="19.7493%" y="575.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="19.4779%" y="565" width="0.0238%" height="15" fill="rgb(227,201,8)" fg:x="1634" fg:w="2"/><text x="19.7970%" y="575.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="19.4779%" y="549" width="0.0238%" height="15" fill="rgb(233,9,32)" fg:x="1634" fg:w="2"/><text x="19.7970%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.5017%" y="549" width="0.0119%" height="15" fill="rgb(217,54,24)" fg:x="1636" fg:w="1"/><text x="19.8208%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.5017%" y="533" width="0.0119%" height="15" fill="rgb(235,192,0)" fg:x="1636" fg:w="1"/><text x="19.8208%" y="543.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="19.5136%" y="517" width="0.0238%" height="15" fill="rgb(235,45,9)" fg:x="1637" fg:w="2"/><text x="19.8327%" y="527.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="19.5136%" y="501" width="0.0238%" height="15" fill="rgb(246,42,40)" fg:x="1637" fg:w="2"/><text x="19.8327%" y="511.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="19.4779%" y="581" width="0.0715%" height="15" fill="rgb(248,111,24)" fg:x="1634" fg:w="6"/><text x="19.7970%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="19.5017%" y="565" width="0.0477%" height="15" fill="rgb(249,65,22)" fg:x="1636" fg:w="4"/><text x="19.8208%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="19.5136%" y="549" width="0.0358%" height="15" fill="rgb(238,111,51)" fg:x="1637" fg:w="3"/><text x="19.8327%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="19.5136%" y="533" width="0.0358%" height="15" fill="rgb(250,118,22)" fg:x="1637" fg:w="3"/><text x="19.8327%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="19.5375%" y="517" width="0.0119%" height="15" fill="rgb(234,84,26)" fg:x="1639" fg:w="1"/><text x="19.8566%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (20 samples, 0.24%)</title><rect x="19.3348%" y="645" width="0.2384%" height="15" fill="rgb(243,172,12)" fg:x="1622" fg:w="20"/><text x="19.6539%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="19.3468%" y="629" width="0.2265%" height="15" fill="rgb(236,150,49)" fg:x="1623" fg:w="19"/><text x="19.6659%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="19.4064%" y="613" width="0.1669%" height="15" fill="rgb(225,197,26)" fg:x="1628" fg:w="14"/><text x="19.7255%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="19.4302%" y="597" width="0.1430%" height="15" fill="rgb(214,17,42)" fg:x="1630" fg:w="12"/><text x="19.7493%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.5494%" y="581" width="0.0238%" height="15" fill="rgb(224,165,40)" fg:x="1640" fg:w="2"/><text x="19.8685%" y="591.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="19.5494%" y="565" width="0.0238%" height="15" fill="rgb(246,100,4)" fg:x="1640" fg:w="2"/><text x="19.8685%" y="575.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="19.5494%" y="549" width="0.0238%" height="15" fill="rgb(222,103,0)" fg:x="1640" fg:w="2"/><text x="19.8685%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="19.5733%" y="645" width="0.0358%" height="15" fill="rgb(227,189,26)" fg:x="1642" fg:w="3"/><text x="19.8924%" y="655.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="19.5733%" y="629" width="0.0358%" height="15" fill="rgb(214,202,17)" fg:x="1642" fg:w="3"/><text x="19.8924%" y="639.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="19.5733%" y="613" width="0.0358%" height="15" fill="rgb(229,111,3)" fg:x="1642" fg:w="3"/><text x="19.8924%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (32 samples, 0.38%)</title><rect x="19.2395%" y="693" width="0.3815%" height="15" fill="rgb(229,172,15)" fg:x="1614" fg:w="32"/><text x="19.5586%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (31 samples, 0.37%)</title><rect x="19.2514%" y="677" width="0.3695%" height="15" fill="rgb(230,224,35)" fg:x="1615" fg:w="31"/><text x="19.5705%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (31 samples, 0.37%)</title><rect x="19.2514%" y="661" width="0.3695%" height="15" fill="rgb(251,141,6)" fg:x="1615" fg:w="31"/><text x="19.5705%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.6090%" y="645" width="0.0119%" height="15" fill="rgb(225,208,6)" fg:x="1645" fg:w="1"/><text x="19.9281%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.6090%" y="629" width="0.0119%" height="15" fill="rgb(246,181,16)" fg:x="1645" fg:w="1"/><text x="19.9281%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.6090%" y="613" width="0.0119%" height="15" fill="rgb(227,129,36)" fg:x="1645" fg:w="1"/><text x="19.9281%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.6209%" y="693" width="0.0119%" height="15" fill="rgb(248,117,24)" fg:x="1646" fg:w="1"/><text x="19.9400%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.6209%" y="677" width="0.0119%" height="15" fill="rgb(214,185,35)" fg:x="1646" fg:w="1"/><text x="19.9400%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.6209%" y="661" width="0.0119%" height="15" fill="rgb(236,150,34)" fg:x="1646" fg:w="1"/><text x="19.9400%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.6209%" y="645" width="0.0119%" height="15" fill="rgb(243,228,27)" fg:x="1646" fg:w="1"/><text x="19.9400%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.6209%" y="629" width="0.0119%" height="15" fill="rgb(245,77,44)" fg:x="1646" fg:w="1"/><text x="19.9400%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.6209%" y="613" width="0.0119%" height="15" fill="rgb(235,214,42)" fg:x="1646" fg:w="1"/><text x="19.9400%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.6209%" y="597" width="0.0119%" height="15" fill="rgb(221,74,3)" fg:x="1646" fg:w="1"/><text x="19.9400%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.6209%" y="581" width="0.0119%" height="15" fill="rgb(206,121,29)" fg:x="1646" fg:w="1"/><text x="19.9400%" y="591.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="19.6329%" y="629" width="0.0238%" height="15" fill="rgb(249,131,53)" fg:x="1647" fg:w="2"/><text x="19.9520%" y="639.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="19.6329%" y="613" width="0.0238%" height="15" fill="rgb(236,170,29)" fg:x="1647" fg:w="2"/><text x="19.9520%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.6567%" y="613" width="0.0119%" height="15" fill="rgb(247,96,15)" fg:x="1649" fg:w="1"/><text x="19.9758%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.6567%" y="597" width="0.0119%" height="15" fill="rgb(211,210,7)" fg:x="1649" fg:w="1"/><text x="19.9758%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.6686%" y="613" width="0.0119%" height="15" fill="rgb(240,88,50)" fg:x="1650" fg:w="1"/><text x="19.9877%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.6686%" y="597" width="0.0119%" height="15" fill="rgb(209,229,26)" fg:x="1650" fg:w="1"/><text x="19.9877%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.6686%" y="581" width="0.0119%" height="15" fill="rgb(210,68,23)" fg:x="1650" fg:w="1"/><text x="19.9877%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.6686%" y="565" width="0.0119%" height="15" fill="rgb(229,180,13)" fg:x="1650" fg:w="1"/><text x="19.9877%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.6805%" y="597" width="0.0119%" height="15" fill="rgb(236,53,44)" fg:x="1651" fg:w="1"/><text x="19.9996%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.6805%" y="581" width="0.0119%" height="15" fill="rgb(244,214,29)" fg:x="1651" fg:w="1"/><text x="19.9996%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.6925%" y="597" width="0.0119%" height="15" fill="rgb(220,75,29)" fg:x="1652" fg:w="1"/><text x="20.0116%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.6925%" y="581" width="0.0119%" height="15" fill="rgb(214,183,37)" fg:x="1652" fg:w="1"/><text x="20.0116%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.6925%" y="565" width="0.0119%" height="15" fill="rgb(239,117,29)" fg:x="1652" fg:w="1"/><text x="20.0116%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.6925%" y="549" width="0.0119%" height="15" fill="rgb(237,171,35)" fg:x="1652" fg:w="1"/><text x="20.0116%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.7044%" y="581" width="0.0119%" height="15" fill="rgb(229,178,53)" fg:x="1653" fg:w="1"/><text x="20.0235%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.7044%" y="565" width="0.0119%" height="15" fill="rgb(210,102,19)" fg:x="1653" fg:w="1"/><text x="20.0235%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.7163%" y="565" width="0.0119%" height="15" fill="rgb(235,127,22)" fg:x="1654" fg:w="1"/><text x="20.0354%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.7163%" y="549" width="0.0119%" height="15" fill="rgb(244,31,31)" fg:x="1654" fg:w="1"/><text x="20.0354%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="19.7163%" y="581" width="0.0358%" height="15" fill="rgb(231,43,21)" fg:x="1654" fg:w="3"/><text x="20.0354%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.7282%" y="565" width="0.0238%" height="15" fill="rgb(217,131,35)" fg:x="1655" fg:w="2"/><text x="20.0473%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base@plt (2 samples, 0.02%)</title><rect x="19.7282%" y="549" width="0.0238%" height="15" fill="rgb(221,149,4)" fg:x="1655" fg:w="2"/><text x="20.0473%" y="559.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="19.7521%" y="549" width="0.0358%" height="15" fill="rgb(232,170,28)" fg:x="1657" fg:w="3"/><text x="20.0712%" y="559.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="19.7521%" y="533" width="0.0358%" height="15" fill="rgb(238,56,10)" fg:x="1657" fg:w="3"/><text x="20.0712%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="19.6329%" y="677" width="0.1907%" height="15" fill="rgb(235,196,14)" fg:x="1647" fg:w="16"/><text x="19.9520%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="19.6329%" y="661" width="0.1907%" height="15" fill="rgb(216,45,48)" fg:x="1647" fg:w="16"/><text x="19.9520%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="19.6329%" y="645" width="0.1907%" height="15" fill="rgb(238,213,17)" fg:x="1647" fg:w="16"/><text x="19.9520%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="19.6567%" y="629" width="0.1669%" height="15" fill="rgb(212,13,2)" fg:x="1649" fg:w="14"/><text x="19.9758%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="19.6805%" y="613" width="0.1430%" height="15" fill="rgb(240,114,20)" fg:x="1651" fg:w="12"/><text x="19.9996%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="19.7044%" y="597" width="0.1192%" height="15" fill="rgb(228,41,40)" fg:x="1653" fg:w="10"/><text x="20.0235%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="19.7521%" y="581" width="0.0715%" height="15" fill="rgb(244,132,35)" fg:x="1657" fg:w="6"/><text x="20.0712%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="19.7521%" y="565" width="0.0715%" height="15" fill="rgb(253,189,4)" fg:x="1657" fg:w="6"/><text x="20.0712%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="19.7878%" y="549" width="0.0358%" height="15" fill="rgb(224,37,19)" fg:x="1660" fg:w="3"/><text x="20.1069%" y="559.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="19.7878%" y="533" width="0.0358%" height="15" fill="rgb(235,223,18)" fg:x="1660" fg:w="3"/><text x="20.1069%" y="543.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="19.7997%" y="517" width="0.0238%" height="15" fill="rgb(235,163,25)" fg:x="1661" fg:w="2"/><text x="20.1188%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.8236%" y="581" width="0.0119%" height="15" fill="rgb(217,145,28)" fg:x="1663" fg:w="1"/><text x="20.1427%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.8236%" y="565" width="0.0119%" height="15" fill="rgb(223,223,32)" fg:x="1663" fg:w="1"/><text x="20.1427%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.8355%" y="549" width="0.0119%" height="15" fill="rgb(227,189,39)" fg:x="1664" fg:w="1"/><text x="20.1546%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.8355%" y="533" width="0.0119%" height="15" fill="rgb(248,10,22)" fg:x="1664" fg:w="1"/><text x="20.1546%" y="543.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="19.8474%" y="549" width="0.0119%" height="15" fill="rgb(248,46,39)" fg:x="1665" fg:w="1"/><text x="20.1665%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="19.8236%" y="629" width="0.0477%" height="15" fill="rgb(248,113,48)" fg:x="1663" fg:w="4"/><text x="20.1427%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="19.8236%" y="613" width="0.0477%" height="15" fill="rgb(245,16,25)" fg:x="1663" fg:w="4"/><text x="20.1427%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="19.8236%" y="597" width="0.0477%" height="15" fill="rgb(249,152,16)" fg:x="1663" fg:w="4"/><text x="20.1427%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="19.8355%" y="581" width="0.0358%" height="15" fill="rgb(250,16,1)" fg:x="1664" fg:w="3"/><text x="20.1546%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="19.8355%" y="565" width="0.0358%" height="15" fill="rgb(249,138,3)" fg:x="1664" fg:w="3"/><text x="20.1546%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.8593%" y="549" width="0.0119%" height="15" fill="rgb(227,71,41)" fg:x="1666" fg:w="1"/><text x="20.1784%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.8593%" y="533" width="0.0119%" height="15" fill="rgb(209,184,23)" fg:x="1666" fg:w="1"/><text x="20.1784%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.8593%" y="517" width="0.0119%" height="15" fill="rgb(223,215,31)" fg:x="1666" fg:w="1"/><text x="20.1784%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="19.8593%" y="501" width="0.0119%" height="15" fill="rgb(210,146,28)" fg:x="1666" fg:w="1"/><text x="20.1784%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.8713%" y="581" width="0.0119%" height="15" fill="rgb(209,183,41)" fg:x="1667" fg:w="1"/><text x="20.1904%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.8713%" y="565" width="0.0119%" height="15" fill="rgb(209,224,45)" fg:x="1667" fg:w="1"/><text x="20.1904%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.8713%" y="549" width="0.0119%" height="15" fill="rgb(224,209,51)" fg:x="1667" fg:w="1"/><text x="20.1904%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="19.8713%" y="597" width="0.0358%" height="15" fill="rgb(223,17,39)" fg:x="1667" fg:w="3"/><text x="20.1904%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.8832%" y="581" width="0.0238%" height="15" fill="rgb(234,204,37)" fg:x="1668" fg:w="2"/><text x="20.2023%" y="591.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="19.8832%" y="565" width="0.0238%" height="15" fill="rgb(236,120,5)" fg:x="1668" fg:w="2"/><text x="20.2023%" y="575.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="19.8832%" y="549" width="0.0238%" height="15" fill="rgb(248,97,27)" fg:x="1668" fg:w="2"/><text x="20.2023%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.9070%" y="597" width="0.0119%" height="15" fill="rgb(240,66,17)" fg:x="1670" fg:w="1"/><text x="20.2261%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.9070%" y="581" width="0.0119%" height="15" fill="rgb(210,79,3)" fg:x="1670" fg:w="1"/><text x="20.2261%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.9070%" y="565" width="0.0119%" height="15" fill="rgb(214,176,27)" fg:x="1670" fg:w="1"/><text x="20.2261%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.9189%" y="549" width="0.0119%" height="15" fill="rgb(235,185,3)" fg:x="1671" fg:w="1"/><text x="20.2380%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.9189%" y="533" width="0.0119%" height="15" fill="rgb(227,24,12)" fg:x="1671" fg:w="1"/><text x="20.2380%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="19.8713%" y="629" width="0.0715%" height="15" fill="rgb(252,169,48)" fg:x="1667" fg:w="6"/><text x="20.1904%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="19.8713%" y="613" width="0.0715%" height="15" fill="rgb(212,65,1)" fg:x="1667" fg:w="6"/><text x="20.1904%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.9189%" y="597" width="0.0238%" height="15" fill="rgb(242,39,24)" fg:x="1671" fg:w="2"/><text x="20.2380%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.9189%" y="581" width="0.0238%" height="15" fill="rgb(249,32,23)" fg:x="1671" fg:w="2"/><text x="20.2380%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.9189%" y="565" width="0.0238%" height="15" fill="rgb(251,195,23)" fg:x="1671" fg:w="2"/><text x="20.2380%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.9309%" y="549" width="0.0119%" height="15" fill="rgb(236,174,8)" fg:x="1672" fg:w="1"/><text x="20.2500%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.9309%" y="533" width="0.0119%" height="15" fill="rgb(220,197,8)" fg:x="1672" fg:w="1"/><text x="20.2500%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.9309%" y="517" width="0.0119%" height="15" fill="rgb(240,108,37)" fg:x="1672" fg:w="1"/><text x="20.2500%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.9309%" y="501" width="0.0119%" height="15" fill="rgb(232,176,24)" fg:x="1672" fg:w="1"/><text x="20.2500%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="19.8236%" y="645" width="0.1311%" height="15" fill="rgb(243,35,29)" fg:x="1663" fg:w="11"/><text x="20.1427%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.9428%" y="629" width="0.0119%" height="15" fill="rgb(210,37,18)" fg:x="1673" fg:w="1"/><text x="20.2619%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.9428%" y="613" width="0.0119%" height="15" fill="rgb(224,184,40)" fg:x="1673" fg:w="1"/><text x="20.2619%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.9428%" y="597" width="0.0119%" height="15" fill="rgb(236,39,29)" fg:x="1673" fg:w="1"/><text x="20.2619%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="19.8236%" y="677" width="0.1430%" height="15" fill="rgb(232,48,39)" fg:x="1663" fg:w="12"/><text x="20.1427%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="19.8236%" y="661" width="0.1430%" height="15" fill="rgb(236,34,42)" fg:x="1663" fg:w="12"/><text x="20.1427%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.9547%" y="645" width="0.0119%" height="15" fill="rgb(243,106,37)" fg:x="1674" fg:w="1"/><text x="20.2738%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.9547%" y="629" width="0.0119%" height="15" fill="rgb(218,96,6)" fg:x="1674" fg:w="1"/><text x="20.2738%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.9547%" y="613" width="0.0119%" height="15" fill="rgb(235,130,12)" fg:x="1674" fg:w="1"/><text x="20.2738%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.9666%" y="581" width="0.0119%" height="15" fill="rgb(231,95,0)" fg:x="1675" fg:w="1"/><text x="20.2857%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.9666%" y="565" width="0.0119%" height="15" fill="rgb(228,12,23)" fg:x="1675" fg:w="1"/><text x="20.2857%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::consume_until(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#2}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.9666%" y="549" width="0.0119%" height="15" fill="rgb(216,12,1)" fg:x="1675" fg:w="1"/><text x="20.2857%" y="559.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="19.9666%" y="533" width="0.0119%" height="15" fill="rgb(219,59,3)" fg:x="1675" fg:w="1"/><text x="20.2857%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.9666%" y="677" width="0.0238%" height="15" fill="rgb(215,208,46)" fg:x="1675" fg:w="2"/><text x="20.2857%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.9666%" y="661" width="0.0238%" height="15" fill="rgb(254,224,29)" fg:x="1675" fg:w="2"/><text x="20.2857%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.9666%" y="645" width="0.0238%" height="15" fill="rgb(232,14,29)" fg:x="1675" fg:w="2"/><text x="20.2857%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.9666%" y="629" width="0.0238%" height="15" fill="rgb(208,45,52)" fg:x="1675" fg:w="2"/><text x="20.2857%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.9666%" y="613" width="0.0238%" height="15" fill="rgb(234,191,28)" fg:x="1675" fg:w="2"/><text x="20.2857%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.9666%" y="597" width="0.0238%" height="15" fill="rgb(244,67,43)" fg:x="1675" fg:w="2"/><text x="20.2857%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="19.9785%" y="581" width="0.0119%" height="15" fill="rgb(236,189,24)" fg:x="1676" fg:w="1"/><text x="20.2976%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.9785%" y="565" width="0.0119%" height="15" fill="rgb(239,214,33)" fg:x="1676" fg:w="1"/><text x="20.2976%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.9785%" y="549" width="0.0119%" height="15" fill="rgb(226,176,41)" fg:x="1676" fg:w="1"/><text x="20.2976%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="19.9905%" y="549" width="0.0238%" height="15" fill="rgb(248,47,8)" fg:x="1677" fg:w="2"/><text x="20.3096%" y="559.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="19.9905%" y="533" width="0.0238%" height="15" fill="rgb(218,81,44)" fg:x="1677" fg:w="2"/><text x="20.3096%" y="543.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="19.9905%" y="517" width="0.0238%" height="15" fill="rgb(213,98,6)" fg:x="1677" fg:w="2"/><text x="20.3096%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.0143%" y="533" width="0.0119%" height="15" fill="rgb(222,85,22)" fg:x="1679" fg:w="1"/><text x="20.3334%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.0143%" y="517" width="0.0119%" height="15" fill="rgb(239,46,39)" fg:x="1679" fg:w="1"/><text x="20.3334%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="19.9905%" y="661" width="0.0477%" height="15" fill="rgb(237,12,29)" fg:x="1677" fg:w="4"/><text x="20.3096%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="19.9905%" y="645" width="0.0477%" height="15" fill="rgb(214,77,8)" fg:x="1677" fg:w="4"/><text x="20.3096%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="19.9905%" y="629" width="0.0477%" height="15" fill="rgb(217,168,37)" fg:x="1677" fg:w="4"/><text x="20.3096%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="19.9905%" y="613" width="0.0477%" height="15" fill="rgb(221,217,23)" fg:x="1677" fg:w="4"/><text x="20.3096%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="19.9905%" y="597" width="0.0477%" height="15" fill="rgb(243,229,36)" fg:x="1677" fg:w="4"/><text x="20.3096%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="19.9905%" y="581" width="0.0477%" height="15" fill="rgb(251,163,40)" fg:x="1677" fg:w="4"/><text x="20.3096%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="19.9905%" y="565" width="0.0477%" height="15" fill="rgb(237,222,12)" fg:x="1677" fg:w="4"/><text x="20.3096%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="20.0143%" y="549" width="0.0238%" height="15" fill="rgb(248,132,6)" fg:x="1679" fg:w="2"/><text x="20.3334%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.0262%" y="533" width="0.0119%" height="15" fill="rgb(227,167,50)" fg:x="1680" fg:w="1"/><text x="20.3453%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.0262%" y="517" width="0.0119%" height="15" fill="rgb(242,84,37)" fg:x="1680" fg:w="1"/><text x="20.3453%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.0262%" y="501" width="0.0119%" height="15" fill="rgb(212,4,50)" fg:x="1680" fg:w="1"/><text x="20.3453%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.0262%" y="485" width="0.0119%" height="15" fill="rgb(230,228,32)" fg:x="1680" fg:w="1"/><text x="20.3453%" y="495.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="20.0262%" y="469" width="0.0119%" height="15" fill="rgb(248,217,23)" fg:x="1680" fg:w="1"/><text x="20.3453%" y="479.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.0381%" y="629" width="0.0119%" height="15" fill="rgb(238,197,32)" fg:x="1681" fg:w="1"/><text x="20.3572%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.0381%" y="613" width="0.0119%" height="15" fill="rgb(236,106,1)" fg:x="1681" fg:w="1"/><text x="20.3572%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.0501%" y="613" width="0.0119%" height="15" fill="rgb(219,228,13)" fg:x="1682" fg:w="1"/><text x="20.3692%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.0501%" y="597" width="0.0119%" height="15" fill="rgb(238,30,35)" fg:x="1682" fg:w="1"/><text x="20.3692%" y="607.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="20.0620%" y="597" width="0.0238%" height="15" fill="rgb(236,70,23)" fg:x="1683" fg:w="2"/><text x="20.3811%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="20.0620%" y="581" width="0.0238%" height="15" fill="rgb(249,104,48)" fg:x="1683" fg:w="2"/><text x="20.3811%" y="591.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="20.0858%" y="549" width="0.0238%" height="15" fill="rgb(254,117,50)" fg:x="1685" fg:w="2"/><text x="20.4049%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.0977%" y="533" width="0.0119%" height="15" fill="rgb(223,152,4)" fg:x="1686" fg:w="1"/><text x="20.4168%" y="543.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="20.1097%" y="549" width="0.0119%" height="15" fill="rgb(245,6,2)" fg:x="1687" fg:w="1"/><text x="20.4288%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="20.0501%" y="629" width="0.0834%" height="15" fill="rgb(249,150,24)" fg:x="1682" fg:w="7"/><text x="20.3692%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="20.0620%" y="613" width="0.0715%" height="15" fill="rgb(228,185,42)" fg:x="1683" fg:w="6"/><text x="20.3811%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="20.0858%" y="597" width="0.0477%" height="15" fill="rgb(226,39,33)" fg:x="1685" fg:w="4"/><text x="20.4049%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="20.0858%" y="581" width="0.0477%" height="15" fill="rgb(221,166,19)" fg:x="1685" fg:w="4"/><text x="20.4049%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="20.0858%" y="565" width="0.0477%" height="15" fill="rgb(209,109,2)" fg:x="1685" fg:w="4"/><text x="20.4049%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.1216%" y="549" width="0.0119%" height="15" fill="rgb(252,216,26)" fg:x="1688" fg:w="1"/><text x="20.4407%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="20.1216%" y="533" width="0.0119%" height="15" fill="rgb(227,173,36)" fg:x="1688" fg:w="1"/><text x="20.4407%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.1335%" y="613" width="0.0119%" height="15" fill="rgb(209,90,7)" fg:x="1689" fg:w="1"/><text x="20.4526%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.1335%" y="597" width="0.0119%" height="15" fill="rgb(250,194,11)" fg:x="1689" fg:w="1"/><text x="20.4526%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.1335%" y="581" width="0.0119%" height="15" fill="rgb(220,72,50)" fg:x="1689" fg:w="1"/><text x="20.4526%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.1454%" y="581" width="0.0119%" height="15" fill="rgb(222,106,48)" fg:x="1690" fg:w="1"/><text x="20.4645%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.1454%" y="565" width="0.0119%" height="15" fill="rgb(216,220,45)" fg:x="1690" fg:w="1"/><text x="20.4645%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.1573%" y="581" width="0.0119%" height="15" fill="rgb(234,112,18)" fg:x="1691" fg:w="1"/><text x="20.4764%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.1573%" y="565" width="0.0119%" height="15" fill="rgb(206,179,9)" fg:x="1691" fg:w="1"/><text x="20.4764%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.1573%" y="549" width="0.0119%" height="15" fill="rgb(215,115,40)" fg:x="1691" fg:w="1"/><text x="20.4764%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.1573%" y="533" width="0.0119%" height="15" fill="rgb(222,69,34)" fg:x="1691" fg:w="1"/><text x="20.4764%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.1573%" y="517" width="0.0119%" height="15" fill="rgb(209,161,10)" fg:x="1691" fg:w="1"/><text x="20.4764%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.1573%" y="501" width="0.0119%" height="15" fill="rgb(217,6,38)" fg:x="1691" fg:w="1"/><text x="20.4764%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="20.1335%" y="629" width="0.0477%" height="15" fill="rgb(229,229,48)" fg:x="1689" fg:w="4"/><text x="20.4526%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="20.1454%" y="613" width="0.0358%" height="15" fill="rgb(225,21,28)" fg:x="1690" fg:w="3"/><text x="20.4645%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="20.1454%" y="597" width="0.0358%" height="15" fill="rgb(206,33,13)" fg:x="1690" fg:w="3"/><text x="20.4645%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.1693%" y="581" width="0.0119%" height="15" fill="rgb(242,178,17)" fg:x="1692" fg:w="1"/><text x="20.4884%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.1693%" y="565" width="0.0119%" height="15" fill="rgb(220,162,5)" fg:x="1692" fg:w="1"/><text x="20.4884%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.1693%" y="549" width="0.0119%" height="15" fill="rgb(210,33,43)" fg:x="1692" fg:w="1"/><text x="20.4884%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="20.0381%" y="661" width="0.1550%" height="15" fill="rgb(216,116,54)" fg:x="1681" fg:w="13"/><text x="20.3572%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="20.0381%" y="645" width="0.1550%" height="15" fill="rgb(249,92,24)" fg:x="1681" fg:w="13"/><text x="20.3572%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.1812%" y="629" width="0.0119%" height="15" fill="rgb(231,189,14)" fg:x="1693" fg:w="1"/><text x="20.5003%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.1812%" y="613" width="0.0119%" height="15" fill="rgb(230,8,41)" fg:x="1693" fg:w="1"/><text x="20.5003%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.1812%" y="597" width="0.0119%" height="15" fill="rgb(249,7,27)" fg:x="1693" fg:w="1"/><text x="20.5003%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.1931%" y="581" width="0.0119%" height="15" fill="rgb(232,86,5)" fg:x="1694" fg:w="1"/><text x="20.5122%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.1931%" y="565" width="0.0119%" height="15" fill="rgb(224,175,18)" fg:x="1694" fg:w="1"/><text x="20.5122%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.2050%" y="565" width="0.0119%" height="15" fill="rgb(220,129,12)" fg:x="1695" fg:w="1"/><text x="20.5241%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.2050%" y="549" width="0.0119%" height="15" fill="rgb(210,19,36)" fg:x="1695" fg:w="1"/><text x="20.5241%" y="559.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="20.2170%" y="549" width="0.0238%" height="15" fill="rgb(219,96,14)" fg:x="1696" fg:w="2"/><text x="20.5361%" y="559.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="20.2170%" y="533" width="0.0238%" height="15" fill="rgb(249,106,1)" fg:x="1696" fg:w="2"/><text x="20.5361%" y="543.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="20.2408%" y="533" width="0.0358%" height="15" fill="rgb(249,155,20)" fg:x="1698" fg:w="3"/><text x="20.5599%" y="543.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="20.2408%" y="517" width="0.0358%" height="15" fill="rgb(244,168,9)" fg:x="1698" fg:w="3"/><text x="20.5599%" y="527.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="20.2766%" y="517" width="0.0119%" height="15" fill="rgb(216,23,50)" fg:x="1701" fg:w="1"/><text x="20.5957%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="20.2408%" y="549" width="0.0715%" height="15" fill="rgb(224,219,20)" fg:x="1698" fg:w="6"/><text x="20.5599%" y="559.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="20.2766%" y="533" width="0.0358%" height="15" fill="rgb(222,156,15)" fg:x="1701" fg:w="3"/><text x="20.5957%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="20.2885%" y="517" width="0.0238%" height="15" fill="rgb(231,97,17)" fg:x="1702" fg:w="2"/><text x="20.6076%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="20.2885%" y="501" width="0.0238%" height="15" fill="rgb(218,70,48)" fg:x="1702" fg:w="2"/><text x="20.6076%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="20.2170%" y="565" width="0.1073%" height="15" fill="rgb(212,196,52)" fg:x="1696" fg:w="9"/><text x="20.5361%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.3123%" y="549" width="0.0119%" height="15" fill="rgb(243,203,18)" fg:x="1704" fg:w="1"/><text x="20.6314%" y="559.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="20.3123%" y="533" width="0.0119%" height="15" fill="rgb(252,125,41)" fg:x="1704" fg:w="1"/><text x="20.6314%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="20.1931%" y="597" width="0.1550%" height="15" fill="rgb(223,180,33)" fg:x="1694" fg:w="13"/><text x="20.5122%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="20.2050%" y="581" width="0.1430%" height="15" fill="rgb(254,159,46)" fg:x="1695" fg:w="12"/><text x="20.5241%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="20.3242%" y="565" width="0.0238%" height="15" fill="rgb(254,38,10)" fg:x="1705" fg:w="2"/><text x="20.6433%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="20.3242%" y="549" width="0.0238%" height="15" fill="rgb(208,217,32)" fg:x="1705" fg:w="2"/><text x="20.6433%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.3481%" y="597" width="0.0119%" height="15" fill="rgb(221,120,13)" fg:x="1707" fg:w="1"/><text x="20.6672%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.3481%" y="581" width="0.0119%" height="15" fill="rgb(246,54,52)" fg:x="1707" fg:w="1"/><text x="20.6672%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.3481%" y="565" width="0.0119%" height="15" fill="rgb(242,34,25)" fg:x="1707" fg:w="1"/><text x="20.6672%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="20.3600%" y="581" width="0.0238%" height="15" fill="rgb(247,209,9)" fg:x="1708" fg:w="2"/><text x="20.6791%" y="591.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="20.3600%" y="565" width="0.0238%" height="15" fill="rgb(228,71,26)" fg:x="1708" fg:w="2"/><text x="20.6791%" y="575.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="20.3600%" y="549" width="0.0238%" height="15" fill="rgb(222,145,49)" fg:x="1708" fg:w="2"/><text x="20.6791%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.3838%" y="565" width="0.0119%" height="15" fill="rgb(218,121,17)" fg:x="1710" fg:w="1"/><text x="20.7029%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.3838%" y="549" width="0.0119%" height="15" fill="rgb(244,50,7)" fg:x="1710" fg:w="1"/><text x="20.7029%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.3838%" y="533" width="0.0119%" height="15" fill="rgb(246,229,37)" fg:x="1710" fg:w="1"/><text x="20.7029%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.3838%" y="517" width="0.0119%" height="15" fill="rgb(225,18,5)" fg:x="1710" fg:w="1"/><text x="20.7029%" y="527.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="20.3958%" y="549" width="0.0238%" height="15" fill="rgb(213,204,8)" fg:x="1711" fg:w="2"/><text x="20.7149%" y="559.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="20.3958%" y="533" width="0.0238%" height="15" fill="rgb(238,103,6)" fg:x="1711" fg:w="2"/><text x="20.7149%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.4196%" y="517" width="0.0119%" height="15" fill="rgb(222,25,35)" fg:x="1713" fg:w="1"/><text x="20.7387%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.4196%" y="501" width="0.0119%" height="15" fill="rgb(213,203,35)" fg:x="1713" fg:w="1"/><text x="20.7387%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="20.4196%" y="549" width="0.0238%" height="15" fill="rgb(221,79,53)" fg:x="1713" fg:w="2"/><text x="20.7387%" y="559.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="20.4196%" y="533" width="0.0238%" height="15" fill="rgb(243,200,35)" fg:x="1713" fg:w="2"/><text x="20.7387%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="20.4315%" y="517" width="0.0119%" height="15" fill="rgb(248,60,25)" fg:x="1714" fg:w="1"/><text x="20.7506%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.4434%" y="533" width="0.0119%" height="15" fill="rgb(227,53,46)" fg:x="1715" fg:w="1"/><text x="20.7625%" y="543.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.4434%" y="517" width="0.0119%" height="15" fill="rgb(216,120,32)" fg:x="1715" fg:w="1"/><text x="20.7625%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="20.4434%" y="501" width="0.0119%" height="15" fill="rgb(220,134,1)" fg:x="1715" fg:w="1"/><text x="20.7625%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.4554%" y="517" width="0.0119%" height="15" fill="rgb(237,168,5)" fg:x="1716" fg:w="1"/><text x="20.7745%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.4554%" y="501" width="0.0119%" height="15" fill="rgb(231,100,33)" fg:x="1716" fg:w="1"/><text x="20.7745%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.4673%" y="517" width="0.0119%" height="15" fill="rgb(236,177,47)" fg:x="1717" fg:w="1"/><text x="20.7864%" y="527.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.4673%" y="501" width="0.0119%" height="15" fill="rgb(235,7,49)" fg:x="1717" fg:w="1"/><text x="20.7864%" y="511.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="20.4673%" y="485" width="0.0119%" height="15" fill="rgb(232,119,22)" fg:x="1717" fg:w="1"/><text x="20.7864%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.4792%" y="501" width="0.0119%" height="15" fill="rgb(254,73,53)" fg:x="1718" fg:w="1"/><text x="20.7983%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.4792%" y="485" width="0.0119%" height="15" fill="rgb(251,35,20)" fg:x="1718" fg:w="1"/><text x="20.7983%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (27 samples, 0.32%)</title><rect x="20.1931%" y="645" width="0.3219%" height="15" fill="rgb(241,119,20)" fg:x="1694" fg:w="27"/><text x="20.5122%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (27 samples, 0.32%)</title><rect x="20.1931%" y="629" width="0.3219%" height="15" fill="rgb(207,102,14)" fg:x="1694" fg:w="27"/><text x="20.5122%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (27 samples, 0.32%)</title><rect x="20.1931%" y="613" width="0.3219%" height="15" fill="rgb(248,201,50)" fg:x="1694" fg:w="27"/><text x="20.5122%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="20.3600%" y="597" width="0.1550%" height="15" fill="rgb(222,185,44)" fg:x="1708" fg:w="13"/><text x="20.6791%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="20.3838%" y="581" width="0.1311%" height="15" fill="rgb(218,107,18)" fg:x="1710" fg:w="11"/><text x="20.7029%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="20.3958%" y="565" width="0.1192%" height="15" fill="rgb(237,177,39)" fg:x="1711" fg:w="10"/><text x="20.7149%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="20.4434%" y="549" width="0.0715%" height="15" fill="rgb(246,69,6)" fg:x="1715" fg:w="6"/><text x="20.7625%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="20.4554%" y="533" width="0.0596%" height="15" fill="rgb(234,208,37)" fg:x="1716" fg:w="5"/><text x="20.7745%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="20.4792%" y="517" width="0.0358%" height="15" fill="rgb(225,4,6)" fg:x="1718" fg:w="3"/><text x="20.7983%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="20.4911%" y="501" width="0.0238%" height="15" fill="rgb(233,45,0)" fg:x="1719" fg:w="2"/><text x="20.8102%" y="511.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="20.4911%" y="485" width="0.0238%" height="15" fill="rgb(226,136,5)" fg:x="1719" fg:w="2"/><text x="20.8102%" y="495.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="20.4911%" y="469" width="0.0238%" height="15" fill="rgb(211,91,47)" fg:x="1719" fg:w="2"/><text x="20.8102%" y="479.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="20.4911%" y="453" width="0.0238%" height="15" fill="rgb(242,88,51)" fg:x="1719" fg:w="2"/><text x="20.8102%" y="463.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.5150%" y="629" width="0.0119%" height="15" fill="rgb(230,91,28)" fg:x="1721" fg:w="1"/><text x="20.8341%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.5150%" y="613" width="0.0119%" height="15" fill="rgb(254,186,29)" fg:x="1721" fg:w="1"/><text x="20.8341%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="20.5269%" y="613" width="0.0238%" height="15" fill="rgb(238,6,4)" fg:x="1722" fg:w="2"/><text x="20.8460%" y="623.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="20.5269%" y="597" width="0.0238%" height="15" fill="rgb(221,151,16)" fg:x="1722" fg:w="2"/><text x="20.8460%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.5507%" y="597" width="0.0119%" height="15" fill="rgb(251,143,52)" fg:x="1724" fg:w="1"/><text x="20.8698%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.5507%" y="581" width="0.0119%" height="15" fill="rgb(206,90,15)" fg:x="1724" fg:w="1"/><text x="20.8698%" y="591.50"/></g><g><title>__GI___libc_free (5 samples, 0.06%)</title><rect x="20.5626%" y="581" width="0.0596%" height="15" fill="rgb(218,35,8)" fg:x="1725" fg:w="5"/><text x="20.8817%" y="591.50"/></g><g><title>_int_free (5 samples, 0.06%)</title><rect x="20.5626%" y="565" width="0.0596%" height="15" fill="rgb(239,215,6)" fg:x="1725" fg:w="5"/><text x="20.8817%" y="575.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="20.6222%" y="565" width="0.0358%" height="15" fill="rgb(245,116,39)" fg:x="1730" fg:w="3"/><text x="20.9413%" y="575.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="20.6222%" y="549" width="0.0358%" height="15" fill="rgb(242,65,28)" fg:x="1730" fg:w="3"/><text x="20.9413%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.6580%" y="549" width="0.0119%" height="15" fill="rgb(252,132,53)" fg:x="1733" fg:w="1"/><text x="20.9771%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.6580%" y="533" width="0.0119%" height="15" fill="rgb(224,159,50)" fg:x="1733" fg:w="1"/><text x="20.9771%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="20.6699%" y="549" width="0.0119%" height="15" fill="rgb(224,93,4)" fg:x="1734" fg:w="1"/><text x="20.9890%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.6818%" y="517" width="0.0119%" height="15" fill="rgb(208,81,34)" fg:x="1735" fg:w="1"/><text x="21.0009%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.6818%" y="501" width="0.0119%" height="15" fill="rgb(233,92,54)" fg:x="1735" fg:w="1"/><text x="21.0009%" y="511.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="20.6938%" y="517" width="0.0119%" height="15" fill="rgb(237,21,14)" fg:x="1736" fg:w="1"/><text x="21.0129%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.7057%" y="501" width="0.0119%" height="15" fill="rgb(249,128,51)" fg:x="1737" fg:w="1"/><text x="21.0248%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.7057%" y="485" width="0.0119%" height="15" fill="rgb(223,129,24)" fg:x="1737" fg:w="1"/><text x="21.0248%" y="495.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="20.7176%" y="501" width="0.0238%" height="15" fill="rgb(231,168,25)" fg:x="1738" fg:w="2"/><text x="21.0367%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.7414%" y="485" width="0.0119%" height="15" fill="rgb(224,39,20)" fg:x="1740" fg:w="1"/><text x="21.0605%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.7414%" y="469" width="0.0119%" height="15" fill="rgb(225,152,53)" fg:x="1740" fg:w="1"/><text x="21.0605%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="20.6580%" y="565" width="0.1073%" height="15" fill="rgb(252,17,24)" fg:x="1733" fg:w="9"/><text x="20.9771%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="20.6818%" y="549" width="0.0834%" height="15" fill="rgb(250,114,30)" fg:x="1735" fg:w="7"/><text x="21.0009%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="20.6818%" y="533" width="0.0834%" height="15" fill="rgb(229,5,4)" fg:x="1735" fg:w="7"/><text x="21.0009%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (5 samples, 0.06%)</title><rect x="20.7057%" y="517" width="0.0596%" height="15" fill="rgb(225,176,49)" fg:x="1737" fg:w="5"/><text x="21.0248%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="20.7414%" y="501" width="0.0238%" height="15" fill="rgb(224,221,49)" fg:x="1740" fg:w="2"/><text x="21.0605%" y="511.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="20.7534%" y="485" width="0.0119%" height="15" fill="rgb(253,169,27)" fg:x="1741" fg:w="1"/><text x="21.0725%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="20.7653%" y="565" width="0.0119%" height="15" fill="rgb(211,206,16)" fg:x="1742" fg:w="1"/><text x="21.0844%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.7653%" y="549" width="0.0119%" height="15" fill="rgb(244,87,35)" fg:x="1742" fg:w="1"/><text x="21.0844%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.7653%" y="533" width="0.0119%" height="15" fill="rgb(246,28,10)" fg:x="1742" fg:w="1"/><text x="21.0844%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.7891%" y="501" width="0.0119%" height="15" fill="rgb(229,12,44)" fg:x="1744" fg:w="1"/><text x="21.1082%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.7891%" y="485" width="0.0119%" height="15" fill="rgb(210,145,37)" fg:x="1744" fg:w="1"/><text x="21.1082%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="20.7891%" y="517" width="0.0358%" height="15" fill="rgb(227,112,52)" fg:x="1744" fg:w="3"/><text x="21.1082%" y="527.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="20.8010%" y="501" width="0.0238%" height="15" fill="rgb(238,155,34)" fg:x="1745" fg:w="2"/><text x="21.1201%" y="511.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="20.8010%" y="485" width="0.0238%" height="15" fill="rgb(239,226,36)" fg:x="1745" fg:w="2"/><text x="21.1201%" y="495.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="20.8010%" y="469" width="0.0238%" height="15" fill="rgb(230,16,23)" fg:x="1745" fg:w="2"/><text x="21.1201%" y="479.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="20.8249%" y="501" width="0.0358%" height="15" fill="rgb(236,171,36)" fg:x="1747" fg:w="3"/><text x="21.1440%" y="511.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="20.8249%" y="485" width="0.0358%" height="15" fill="rgb(221,22,14)" fg:x="1747" fg:w="3"/><text x="21.1440%" y="495.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="20.8607%" y="501" width="0.0119%" height="15" fill="rgb(242,43,11)" fg:x="1750" fg:w="1"/><text x="21.1798%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.8726%" y="469" width="0.0119%" height="15" fill="rgb(232,69,23)" fg:x="1751" fg:w="1"/><text x="21.1917%" y="479.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.8726%" y="453" width="0.0119%" height="15" fill="rgb(216,180,54)" fg:x="1751" fg:w="1"/><text x="21.1917%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="20.8726%" y="501" width="0.0238%" height="15" fill="rgb(216,5,24)" fg:x="1751" fg:w="2"/><text x="21.1917%" y="511.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="20.8726%" y="485" width="0.0238%" height="15" fill="rgb(225,89,9)" fg:x="1751" fg:w="2"/><text x="21.1917%" y="495.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="20.8845%" y="469" width="0.0119%" height="15" fill="rgb(243,75,33)" fg:x="1752" fg:w="1"/><text x="21.2036%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="20.8964%" y="485" width="0.0238%" height="15" fill="rgb(247,141,45)" fg:x="1753" fg:w="2"/><text x="21.2155%" y="495.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="20.8964%" y="469" width="0.0238%" height="15" fill="rgb(232,177,36)" fg:x="1753" fg:w="2"/><text x="21.2155%" y="479.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="20.8964%" y="453" width="0.0238%" height="15" fill="rgb(219,125,36)" fg:x="1753" fg:w="2"/><text x="21.2155%" y="463.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="20.8964%" y="437" width="0.0238%" height="15" fill="rgb(227,94,9)" fg:x="1753" fg:w="2"/><text x="21.2155%" y="447.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="20.9203%" y="469" width="0.0119%" height="15" fill="rgb(240,34,52)" fg:x="1755" fg:w="1"/><text x="21.2394%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (28 samples, 0.33%)</title><rect x="20.6222%" y="581" width="0.3338%" height="15" fill="rgb(216,45,12)" fg:x="1730" fg:w="28"/><text x="20.9413%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="20.7772%" y="565" width="0.1788%" height="15" fill="rgb(246,21,19)" fg:x="1743" fg:w="15"/><text x="21.0963%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="20.7772%" y="549" width="0.1788%" height="15" fill="rgb(213,98,42)" fg:x="1743" fg:w="15"/><text x="21.0963%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="20.7891%" y="533" width="0.1669%" height="15" fill="rgb(250,136,47)" fg:x="1744" fg:w="14"/><text x="21.1082%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="20.8249%" y="517" width="0.1311%" height="15" fill="rgb(251,124,27)" fg:x="1747" fg:w="11"/><text x="21.1440%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="20.8964%" y="501" width="0.0596%" height="15" fill="rgb(229,180,14)" fg:x="1753" fg:w="5"/><text x="21.2155%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="20.9203%" y="485" width="0.0358%" height="15" fill="rgb(245,216,25)" fg:x="1755" fg:w="3"/><text x="21.2394%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="20.9322%" y="469" width="0.0238%" height="15" fill="rgb(251,43,5)" fg:x="1756" fg:w="2"/><text x="21.2513%" y="479.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="20.9322%" y="453" width="0.0238%" height="15" fill="rgb(250,128,24)" fg:x="1756" fg:w="2"/><text x="21.2513%" y="463.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="20.9322%" y="437" width="0.0238%" height="15" fill="rgb(217,117,27)" fg:x="1756" fg:w="2"/><text x="21.2513%" y="447.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="20.9560%" y="565" width="0.0358%" height="15" fill="rgb(245,147,4)" fg:x="1758" fg:w="3"/><text x="21.2751%" y="575.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="20.9560%" y="549" width="0.0358%" height="15" fill="rgb(242,201,35)" fg:x="1758" fg:w="3"/><text x="21.2751%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.9918%" y="549" width="0.0119%" height="15" fill="rgb(218,181,1)" fg:x="1761" fg:w="1"/><text x="21.3109%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="20.9918%" y="533" width="0.0119%" height="15" fill="rgb(222,6,29)" fg:x="1761" fg:w="1"/><text x="21.3109%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="21.0037%" y="549" width="0.0119%" height="15" fill="rgb(208,186,3)" fg:x="1762" fg:w="1"/><text x="21.3228%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="21.0156%" y="533" width="0.0119%" height="15" fill="rgb(216,36,26)" fg:x="1763" fg:w="1"/><text x="21.3347%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="21.0156%" y="517" width="0.0119%" height="15" fill="rgb(248,201,23)" fg:x="1763" fg:w="1"/><text x="21.3347%" y="527.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="21.0275%" y="485" width="0.0358%" height="15" fill="rgb(251,170,31)" fg:x="1764" fg:w="3"/><text x="21.3466%" y="495.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="21.0275%" y="469" width="0.0358%" height="15" fill="rgb(207,110,25)" fg:x="1764" fg:w="3"/><text x="21.3466%" y="479.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="21.0633%" y="485" width="0.0238%" height="15" fill="rgb(250,54,15)" fg:x="1767" fg:w="2"/><text x="21.3824%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="21.0871%" y="485" width="0.0238%" height="15" fill="rgb(227,68,33)" fg:x="1769" fg:w="2"/><text x="21.4062%" y="495.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="21.0871%" y="469" width="0.0238%" height="15" fill="rgb(238,34,41)" fg:x="1769" fg:w="2"/><text x="21.4062%" y="479.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="21.0871%" y="453" width="0.0238%" height="15" fill="rgb(220,11,15)" fg:x="1769" fg:w="2"/><text x="21.4062%" y="463.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="21.1110%" y="469" width="0.0119%" height="15" fill="rgb(246,111,35)" fg:x="1771" fg:w="1"/><text x="21.4301%" y="479.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="21.1110%" y="453" width="0.0119%" height="15" fill="rgb(209,88,53)" fg:x="1771" fg:w="1"/><text x="21.4301%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="20.9560%" y="581" width="0.1907%" height="15" fill="rgb(231,185,47)" fg:x="1758" fg:w="16"/><text x="21.2751%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="20.9918%" y="565" width="0.1550%" height="15" fill="rgb(233,154,1)" fg:x="1761" fg:w="13"/><text x="21.3109%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="21.0156%" y="549" width="0.1311%" height="15" fill="rgb(225,15,46)" fg:x="1763" fg:w="11"/><text x="21.3347%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="21.0275%" y="533" width="0.1192%" height="15" fill="rgb(211,135,41)" fg:x="1764" fg:w="10"/><text x="21.3466%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (10 samples, 0.12%)</title><rect x="21.0275%" y="517" width="0.1192%" height="15" fill="rgb(208,54,0)" fg:x="1764" fg:w="10"/><text x="21.3466%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="21.0275%" y="501" width="0.1192%" height="15" fill="rgb(244,136,14)" fg:x="1764" fg:w="10"/><text x="21.3466%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="21.1110%" y="485" width="0.0358%" height="15" fill="rgb(241,56,14)" fg:x="1771" fg:w="3"/><text x="21.4301%" y="495.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="21.1229%" y="469" width="0.0238%" height="15" fill="rgb(205,80,24)" fg:x="1772" fg:w="2"/><text x="21.4420%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="21.1467%" y="581" width="0.0358%" height="15" fill="rgb(220,57,4)" fg:x="1774" fg:w="3"/><text x="21.4658%" y="591.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="21.1467%" y="565" width="0.0358%" height="15" fill="rgb(226,193,50)" fg:x="1774" fg:w="3"/><text x="21.4658%" y="575.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="21.1467%" y="549" width="0.0358%" height="15" fill="rgb(231,168,22)" fg:x="1774" fg:w="3"/><text x="21.4658%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="21.1825%" y="565" width="0.0119%" height="15" fill="rgb(254,215,14)" fg:x="1777" fg:w="1"/><text x="21.5016%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="21.1825%" y="549" width="0.0119%" height="15" fill="rgb(211,115,16)" fg:x="1777" fg:w="1"/><text x="21.5016%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="21.1944%" y="549" width="0.0119%" height="15" fill="rgb(236,210,16)" fg:x="1778" fg:w="1"/><text x="21.5135%" y="559.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="21.1944%" y="533" width="0.0119%" height="15" fill="rgb(221,94,12)" fg:x="1778" fg:w="1"/><text x="21.5135%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="21.1944%" y="517" width="0.0119%" height="15" fill="rgb(235,218,49)" fg:x="1778" fg:w="1"/><text x="21.5135%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="21.1944%" y="501" width="0.0119%" height="15" fill="rgb(217,114,14)" fg:x="1778" fg:w="1"/><text x="21.5135%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="21.2063%" y="533" width="0.0119%" height="15" fill="rgb(216,145,22)" fg:x="1779" fg:w="1"/><text x="21.5254%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="21.2063%" y="517" width="0.0119%" height="15" fill="rgb(217,112,39)" fg:x="1779" fg:w="1"/><text x="21.5254%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="21.2183%" y="533" width="0.0119%" height="15" fill="rgb(225,85,32)" fg:x="1780" fg:w="1"/><text x="21.5374%" y="543.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="21.2183%" y="517" width="0.0119%" height="15" fill="rgb(245,209,47)" fg:x="1780" fg:w="1"/><text x="21.5374%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="21.2183%" y="501" width="0.0119%" height="15" fill="rgb(218,220,15)" fg:x="1780" fg:w="1"/><text x="21.5374%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="21.2302%" y="517" width="0.0119%" height="15" fill="rgb(222,202,31)" fg:x="1781" fg:w="1"/><text x="21.5493%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="21.2302%" y="501" width="0.0119%" height="15" fill="rgb(243,203,4)" fg:x="1781" fg:w="1"/><text x="21.5493%" y="511.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="21.2421%" y="501" width="0.0238%" height="15" fill="rgb(237,92,17)" fg:x="1782" fg:w="2"/><text x="21.5612%" y="511.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="21.2421%" y="485" width="0.0238%" height="15" fill="rgb(231,119,7)" fg:x="1782" fg:w="2"/><text x="21.5612%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="21.2659%" y="485" width="0.0119%" height="15" fill="rgb(237,82,41)" fg:x="1784" fg:w="1"/><text x="21.5850%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="21.2659%" y="469" width="0.0119%" height="15" fill="rgb(226,81,48)" fg:x="1784" fg:w="1"/><text x="21.5850%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="21.2421%" y="517" width="0.0596%" height="15" fill="rgb(234,70,51)" fg:x="1782" fg:w="5"/><text x="21.5612%" y="527.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="21.2659%" y="501" width="0.0358%" height="15" fill="rgb(251,86,4)" fg:x="1784" fg:w="3"/><text x="21.5850%" y="511.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="21.2779%" y="485" width="0.0238%" height="15" fill="rgb(244,144,28)" fg:x="1785" fg:w="2"/><text x="21.5970%" y="495.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="21.3017%" y="501" width="0.0238%" height="15" fill="rgb(232,161,39)" fg:x="1787" fg:w="2"/><text x="21.6208%" y="511.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="21.3017%" y="485" width="0.0238%" height="15" fill="rgb(247,34,51)" fg:x="1787" fg:w="2"/><text x="21.6208%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="21.3255%" y="485" width="0.0119%" height="15" fill="rgb(225,132,2)" fg:x="1789" fg:w="1"/><text x="21.6446%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="21.3255%" y="469" width="0.0119%" height="15" fill="rgb(209,159,44)" fg:x="1789" fg:w="1"/><text x="21.6446%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="21.3255%" y="501" width="0.0358%" height="15" fill="rgb(251,214,1)" fg:x="1789" fg:w="3"/><text x="21.6446%" y="511.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="21.3375%" y="485" width="0.0238%" height="15" fill="rgb(247,84,47)" fg:x="1790" fg:w="2"/><text x="21.6566%" y="495.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="21.3375%" y="469" width="0.0238%" height="15" fill="rgb(240,111,43)" fg:x="1790" fg:w="2"/><text x="21.6566%" y="479.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="21.3375%" y="453" width="0.0238%" height="15" fill="rgb(215,214,35)" fg:x="1790" fg:w="2"/><text x="21.6566%" y="463.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="21.3613%" y="485" width="0.0119%" height="15" fill="rgb(248,207,23)" fg:x="1792" fg:w="1"/><text x="21.6804%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="21.3613%" y="469" width="0.0119%" height="15" fill="rgb(214,186,4)" fg:x="1792" fg:w="1"/><text x="21.6804%" y="479.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="21.3732%" y="453" width="0.0119%" height="15" fill="rgb(220,133,22)" fg:x="1793" fg:w="1"/><text x="21.6923%" y="463.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="21.3732%" y="437" width="0.0119%" height="15" fill="rgb(239,134,19)" fg:x="1793" fg:w="1"/><text x="21.6923%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (71 samples, 0.85%)</title><rect x="20.5507%" y="613" width="0.8463%" height="15" fill="rgb(250,140,9)" fg:x="1724" fg:w="71"/><text x="20.8698%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (70 samples, 0.83%)</title><rect x="20.5626%" y="597" width="0.8344%" height="15" fill="rgb(225,59,14)" fg:x="1725" fg:w="70"/><text x="20.8817%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="21.1825%" y="581" width="0.2146%" height="15" fill="rgb(214,152,51)" fg:x="1777" fg:w="18"/><text x="21.5016%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="21.1944%" y="565" width="0.2026%" height="15" fill="rgb(251,227,43)" fg:x="1778" fg:w="17"/><text x="21.5135%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="21.2063%" y="549" width="0.1907%" height="15" fill="rgb(241,96,17)" fg:x="1779" fg:w="16"/><text x="21.5254%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="21.2302%" y="533" width="0.1669%" height="15" fill="rgb(234,198,43)" fg:x="1781" fg:w="14"/><text x="21.5493%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="21.3017%" y="517" width="0.0954%" height="15" fill="rgb(220,108,29)" fg:x="1787" fg:w="8"/><text x="21.6208%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="21.3613%" y="501" width="0.0358%" height="15" fill="rgb(226,163,33)" fg:x="1792" fg:w="3"/><text x="21.6804%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="21.3732%" y="485" width="0.0238%" height="15" fill="rgb(205,194,45)" fg:x="1793" fg:w="2"/><text x="21.6923%" y="495.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="21.3732%" y="469" width="0.0238%" height="15" fill="rgb(206,143,44)" fg:x="1793" fg:w="2"/><text x="21.6923%" y="479.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="21.3851%" y="453" width="0.0119%" height="15" fill="rgb(236,136,36)" fg:x="1794" fg:w="1"/><text x="21.7042%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (244 samples, 2.91%)</title><rect x="18.5123%" y="757" width="2.9086%" height="15" fill="rgb(249,172,42)" fg:x="1553" fg:w="244"/><text x="18.8314%" y="767.50">..r </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (244 samples, 2.91%)</title><rect x="18.5123%" y="741" width="2.9086%" height="15" fill="rgb(216,139,23)" fg:x="1553" fg:w="244"/><text x="18.8314%" y="751.50">..r </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (241 samples, 2.87%)</title><rect x="18.5481%" y="725" width="2.8728%" height="15" fill="rgb(207,166,20)" fg:x="1556" fg:w="241"/><text x="18.8672%" y="735.50">..r </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (189 samples, 2.25%)</title><rect x="19.1680%" y="709" width="2.2530%" height="15" fill="rgb(210,209,22)" fg:x="1608" fg:w="189"/><text x="19.4871%" y="719.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (150 samples, 1.79%)</title><rect x="19.6329%" y="693" width="1.7881%" height="15" fill="rgb(232,118,20)" fg:x="1647" fg:w="150"/><text x="19.9520%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (120 samples, 1.43%)</title><rect x="19.9905%" y="677" width="1.4304%" height="15" fill="rgb(238,113,42)" fg:x="1677" fg:w="120"/><text x="20.3096%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (103 samples, 1.23%)</title><rect x="20.1931%" y="661" width="1.2278%" height="15" fill="rgb(231,42,5)" fg:x="1694" fg:w="103"/><text x="20.5122%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (76 samples, 0.91%)</title><rect x="20.5150%" y="645" width="0.9059%" height="15" fill="rgb(243,166,24)" fg:x="1721" fg:w="76"/><text x="20.8341%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (75 samples, 0.89%)</title><rect x="20.5269%" y="629" width="0.8940%" height="15" fill="rgb(237,226,12)" fg:x="1722" fg:w="75"/><text x="20.8460%" y="639.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="21.3971%" y="613" width="0.0238%" height="15" fill="rgb(229,133,24)" fg:x="1795" fg:w="2"/><text x="21.7162%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="21.3971%" y="597" width="0.0238%" height="15" fill="rgb(238,33,43)" fg:x="1795" fg:w="2"/><text x="21.7162%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="21.3971%" y="581" width="0.0238%" height="15" fill="rgb(227,59,38)" fg:x="1795" fg:w="2"/><text x="21.7162%" y="591.50"/></g><g><title>parser::finish (2 samples, 0.02%)</title><rect x="21.4328%" y="709" width="0.0238%" height="15" fill="rgb(230,97,0)" fg:x="1798" fg:w="2"/><text x="21.7519%" y="719.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="21.4447%" y="693" width="0.0119%" height="15" fill="rgb(250,173,50)" fg:x="1799" fg:w="1"/><text x="21.7638%" y="703.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="21.4447%" y="677" width="0.0119%" height="15" fill="rgb(240,15,50)" fg:x="1799" fg:w="1"/><text x="21.7638%" y="687.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="21.4805%" y="693" width="0.0596%" height="15" fill="rgb(221,93,22)" fg:x="1802" fg:w="5"/><text x="21.7996%" y="703.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="21.4805%" y="677" width="0.0596%" height="15" fill="rgb(245,180,53)" fg:x="1802" fg:w="5"/><text x="21.7996%" y="687.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="21.4924%" y="661" width="0.0477%" height="15" fill="rgb(231,88,51)" fg:x="1803" fg:w="4"/><text x="21.8115%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="21.5401%" y="693" width="0.0119%" height="15" fill="rgb(240,58,21)" fg:x="1807" fg:w="1"/><text x="21.8592%" y="703.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="21.5401%" y="677" width="0.0119%" height="15" fill="rgb(237,21,10)" fg:x="1807" fg:w="1"/><text x="21.8592%" y="687.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="21.5520%" y="677" width="0.1073%" height="15" fill="rgb(218,43,11)" fg:x="1808" fg:w="9"/><text x="21.8711%" y="687.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="21.5520%" y="661" width="0.1073%" height="15" fill="rgb(218,221,29)" fg:x="1808" fg:w="9"/><text x="21.8711%" y="671.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="21.5759%" y="645" width="0.0834%" height="15" fill="rgb(214,118,42)" fg:x="1810" fg:w="7"/><text x="21.8950%" y="655.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="21.6593%" y="645" width="0.0119%" height="15" fill="rgb(251,200,26)" fg:x="1817" fg:w="1"/><text x="21.9784%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="21.6593%" y="629" width="0.0119%" height="15" fill="rgb(237,101,39)" fg:x="1817" fg:w="1"/><text x="21.9784%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="21.6712%" y="565" width="0.0596%" height="15" fill="rgb(251,117,11)" fg:x="1818" fg:w="5"/><text x="21.9903%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="21.6712%" y="549" width="0.0596%" height="15" fill="rgb(216,223,23)" fg:x="1818" fg:w="5"/><text x="21.9903%" y="559.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="21.6712%" y="533" width="0.0596%" height="15" fill="rgb(251,54,12)" fg:x="1818" fg:w="5"/><text x="21.9903%" y="543.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="21.6712%" y="517" width="0.0596%" height="15" fill="rgb(254,176,54)" fg:x="1818" fg:w="5"/><text x="21.9903%" y="527.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="21.6832%" y="501" width="0.0477%" height="15" fill="rgb(210,32,8)" fg:x="1819" fg:w="4"/><text x="22.0023%" y="511.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="21.7308%" y="549" width="0.0238%" height="15" fill="rgb(235,52,38)" fg:x="1823" fg:w="2"/><text x="22.0499%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="21.7428%" y="533" width="0.0119%" height="15" fill="rgb(231,4,44)" fg:x="1824" fg:w="1"/><text x="22.0619%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="21.7308%" y="565" width="0.0358%" height="15" fill="rgb(249,2,32)" fg:x="1823" fg:w="3"/><text x="22.0499%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="21.7547%" y="549" width="0.0119%" height="15" fill="rgb(224,65,26)" fg:x="1825" fg:w="1"/><text x="22.0738%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="21.7547%" y="533" width="0.0119%" height="15" fill="rgb(250,73,40)" fg:x="1825" fg:w="1"/><text x="22.0738%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="21.7666%" y="565" width="0.0596%" height="15" fill="rgb(253,177,16)" fg:x="1826" fg:w="5"/><text x="22.0857%" y="575.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="21.7666%" y="549" width="0.0596%" height="15" fill="rgb(217,32,34)" fg:x="1826" fg:w="5"/><text x="22.0857%" y="559.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="21.7666%" y="533" width="0.0596%" height="15" fill="rgb(212,7,10)" fg:x="1826" fg:w="5"/><text x="22.0857%" y="543.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="21.7666%" y="517" width="0.0596%" height="15" fill="rgb(245,89,8)" fg:x="1826" fg:w="5"/><text x="22.0857%" y="527.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="21.8262%" y="517" width="0.0238%" height="15" fill="rgb(237,16,53)" fg:x="1831" fg:w="2"/><text x="22.1453%" y="527.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="21.8262%" y="501" width="0.0238%" height="15" fill="rgb(250,204,30)" fg:x="1831" fg:w="2"/><text x="22.1453%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (16 samples, 0.19%)</title><rect x="21.6712%" y="645" width="0.1907%" height="15" fill="rgb(208,77,27)" fg:x="1818" fg:w="16"/><text x="21.9903%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="21.6712%" y="629" width="0.1907%" height="15" fill="rgb(250,204,28)" fg:x="1818" fg:w="16"/><text x="21.9903%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (16 samples, 0.19%)</title><rect x="21.6712%" y="613" width="0.1907%" height="15" fill="rgb(244,63,21)" fg:x="1818" fg:w="16"/><text x="21.9903%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="21.6712%" y="597" width="0.1907%" height="15" fill="rgb(236,85,44)" fg:x="1818" fg:w="16"/><text x="21.9903%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (16 samples, 0.19%)</title><rect x="21.6712%" y="581" width="0.1907%" height="15" fill="rgb(215,98,4)" fg:x="1818" fg:w="16"/><text x="21.9903%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="21.8262%" y="565" width="0.0358%" height="15" fill="rgb(235,38,11)" fg:x="1831" fg:w="3"/><text x="22.1453%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="21.8262%" y="549" width="0.0358%" height="15" fill="rgb(254,186,25)" fg:x="1831" fg:w="3"/><text x="22.1453%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="21.8262%" y="533" width="0.0358%" height="15" fill="rgb(225,55,31)" fg:x="1831" fg:w="3"/><text x="22.1453%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="21.8500%" y="517" width="0.0119%" height="15" fill="rgb(211,15,21)" fg:x="1833" fg:w="1"/><text x="22.1691%" y="527.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="21.8500%" y="501" width="0.0119%" height="15" fill="rgb(215,187,41)" fg:x="1833" fg:w="1"/><text x="22.1691%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="21.8500%" y="485" width="0.0119%" height="15" fill="rgb(248,69,32)" fg:x="1833" fg:w="1"/><text x="22.1691%" y="495.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="21.8500%" y="469" width="0.0119%" height="15" fill="rgb(252,102,52)" fg:x="1833" fg:w="1"/><text x="22.1691%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="21.8500%" y="453" width="0.0119%" height="15" fill="rgb(253,140,32)" fg:x="1833" fg:w="1"/><text x="22.1691%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="21.8500%" y="437" width="0.0119%" height="15" fill="rgb(216,56,42)" fg:x="1833" fg:w="1"/><text x="22.1691%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="21.8500%" y="421" width="0.0119%" height="15" fill="rgb(216,184,14)" fg:x="1833" fg:w="1"/><text x="22.1691%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="21.6593%" y="661" width="0.2146%" height="15" fill="rgb(237,187,27)" fg:x="1817" fg:w="18"/><text x="21.9784%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="21.8620%" y="645" width="0.0119%" height="15" fill="rgb(219,65,3)" fg:x="1834" fg:w="1"/><text x="22.1811%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="21.8620%" y="629" width="0.0119%" height="15" fill="rgb(245,83,25)" fg:x="1834" fg:w="1"/><text x="22.1811%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="21.8620%" y="613" width="0.0119%" height="15" fill="rgb(214,205,45)" fg:x="1834" fg:w="1"/><text x="22.1811%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="21.8620%" y="597" width="0.0119%" height="15" fill="rgb(241,20,18)" fg:x="1834" fg:w="1"/><text x="22.1811%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="21.8739%" y="581" width="0.0358%" height="15" fill="rgb(232,163,23)" fg:x="1835" fg:w="3"/><text x="22.1930%" y="591.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (3 samples, 0.04%)</title><rect x="21.8739%" y="565" width="0.0358%" height="15" fill="rgb(214,5,46)" fg:x="1835" fg:w="3"/><text x="22.1930%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="21.8739%" y="549" width="0.0358%" height="15" fill="rgb(229,78,17)" fg:x="1835" fg:w="3"/><text x="22.1930%" y="559.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="21.8977%" y="533" width="0.0119%" height="15" fill="rgb(248,89,10)" fg:x="1837" fg:w="1"/><text x="22.2168%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="21.8977%" y="517" width="0.0119%" height="15" fill="rgb(248,54,15)" fg:x="1837" fg:w="1"/><text x="22.2168%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="21.9096%" y="549" width="0.0119%" height="15" fill="rgb(223,116,6)" fg:x="1838" fg:w="1"/><text x="22.2287%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="21.9096%" y="533" width="0.0119%" height="15" fill="rgb(205,125,38)" fg:x="1838" fg:w="1"/><text x="22.2287%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="21.9216%" y="421" width="0.0119%" height="15" fill="rgb(251,78,38)" fg:x="1839" fg:w="1"/><text x="22.2407%" y="431.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="21.9216%" y="405" width="0.0119%" height="15" fill="rgb(253,78,28)" fg:x="1839" fg:w="1"/><text x="22.2407%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="21.9216%" y="389" width="0.0119%" height="15" fill="rgb(209,120,3)" fg:x="1839" fg:w="1"/><text x="22.2407%" y="399.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="21.9335%" y="405" width="0.0238%" height="15" fill="rgb(238,229,9)" fg:x="1840" fg:w="2"/><text x="22.2526%" y="415.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="21.9335%" y="389" width="0.0238%" height="15" fill="rgb(253,159,18)" fg:x="1840" fg:w="2"/><text x="22.2526%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="21.8739%" y="597" width="0.1669%" height="15" fill="rgb(244,42,34)" fg:x="1835" fg:w="14"/><text x="22.1930%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="21.9096%" y="581" width="0.1311%" height="15" fill="rgb(224,8,7)" fg:x="1838" fg:w="11"/><text x="22.2287%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="21.9096%" y="565" width="0.1311%" height="15" fill="rgb(210,201,45)" fg:x="1838" fg:w="11"/><text x="22.2287%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="21.9216%" y="549" width="0.1192%" height="15" fill="rgb(252,185,21)" fg:x="1839" fg:w="10"/><text x="22.2407%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="21.9216%" y="533" width="0.1192%" height="15" fill="rgb(223,131,1)" fg:x="1839" fg:w="10"/><text x="22.2407%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="21.9216%" y="517" width="0.1192%" height="15" fill="rgb(245,141,16)" fg:x="1839" fg:w="10"/><text x="22.2407%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="21.9216%" y="501" width="0.1192%" height="15" fill="rgb(229,55,45)" fg:x="1839" fg:w="10"/><text x="22.2407%" y="511.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="21.9216%" y="485" width="0.1192%" height="15" fill="rgb(208,92,15)" fg:x="1839" fg:w="10"/><text x="22.2407%" y="495.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (10 samples, 0.12%)</title><rect x="21.9216%" y="469" width="0.1192%" height="15" fill="rgb(234,185,47)" fg:x="1839" fg:w="10"/><text x="22.2407%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="21.9216%" y="453" width="0.1192%" height="15" fill="rgb(253,104,50)" fg:x="1839" fg:w="10"/><text x="22.2407%" y="463.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (10 samples, 0.12%)</title><rect x="21.9216%" y="437" width="0.1192%" height="15" fill="rgb(205,70,7)" fg:x="1839" fg:w="10"/><text x="22.2407%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="21.9335%" y="421" width="0.1073%" height="15" fill="rgb(240,178,43)" fg:x="1840" fg:w="9"/><text x="22.2526%" y="431.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (7 samples, 0.08%)</title><rect x="21.9573%" y="405" width="0.0834%" height="15" fill="rgb(214,112,2)" fg:x="1842" fg:w="7"/><text x="22.2764%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="21.9573%" y="389" width="0.0834%" height="15" fill="rgb(206,46,17)" fg:x="1842" fg:w="7"/><text x="22.2764%" y="399.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="21.9692%" y="373" width="0.0715%" height="15" fill="rgb(225,220,16)" fg:x="1843" fg:w="6"/><text x="22.2883%" y="383.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="21.9692%" y="357" width="0.0715%" height="15" fill="rgb(238,65,40)" fg:x="1843" fg:w="6"/><text x="22.2883%" y="367.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="21.9812%" y="341" width="0.0596%" height="15" fill="rgb(230,151,21)" fg:x="1844" fg:w="5"/><text x="22.3003%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (42 samples, 0.50%)</title><rect x="21.5520%" y="693" width="0.5007%" height="15" fill="rgb(218,58,49)" fg:x="1808" fg:w="42"/><text x="21.8711%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (33 samples, 0.39%)</title><rect x="21.6593%" y="677" width="0.3934%" height="15" fill="rgb(219,179,14)" fg:x="1817" fg:w="33"/><text x="21.9784%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="21.8739%" y="661" width="0.1788%" height="15" fill="rgb(223,72,1)" fg:x="1835" fg:w="15"/><text x="22.1930%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (15 samples, 0.18%)</title><rect x="21.8739%" y="645" width="0.1788%" height="15" fill="rgb(238,126,10)" fg:x="1835" fg:w="15"/><text x="22.1930%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="21.8739%" y="629" width="0.1788%" height="15" fill="rgb(224,206,38)" fg:x="1835" fg:w="15"/><text x="22.1930%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (15 samples, 0.18%)</title><rect x="21.8739%" y="613" width="0.1788%" height="15" fill="rgb(212,201,54)" fg:x="1835" fg:w="15"/><text x="22.1930%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="22.0408%" y="597" width="0.0119%" height="15" fill="rgb(218,154,48)" fg:x="1849" fg:w="1"/><text x="22.3599%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="22.0408%" y="581" width="0.0119%" height="15" fill="rgb(232,93,24)" fg:x="1849" fg:w="1"/><text x="22.3599%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="22.0765%" y="645" width="0.0119%" height="15" fill="rgb(245,30,21)" fg:x="1852" fg:w="1"/><text x="22.3956%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="22.0765%" y="629" width="0.0119%" height="15" fill="rgb(242,148,29)" fg:x="1852" fg:w="1"/><text x="22.3956%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="22.0765%" y="661" width="0.0238%" height="15" fill="rgb(244,153,54)" fg:x="1852" fg:w="2"/><text x="22.3956%" y="671.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), parser::push(unsigned short)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="22.0884%" y="645" width="0.0119%" height="15" fill="rgb(252,87,22)" fg:x="1853" fg:w="1"/><text x="22.4075%" y="655.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="22.1004%" y="629" width="0.0119%" height="15" fill="rgb(210,51,29)" fg:x="1854" fg:w="1"/><text x="22.4195%" y="639.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="22.1004%" y="613" width="0.0119%" height="15" fill="rgb(242,136,47)" fg:x="1854" fg:w="1"/><text x="22.4195%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="22.1004%" y="645" width="0.0238%" height="15" fill="rgb(238,68,4)" fg:x="1854" fg:w="2"/><text x="22.4195%" y="655.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="22.1123%" y="629" width="0.0119%" height="15" fill="rgb(242,161,30)" fg:x="1855" fg:w="1"/><text x="22.4314%" y="639.50"/></g><g><title>operator new (12 samples, 0.14%)</title><rect x="22.1242%" y="613" width="0.1430%" height="15" fill="rgb(218,58,44)" fg:x="1856" fg:w="12"/><text x="22.4433%" y="623.50"/></g><g><title>__GI___libc_malloc (12 samples, 0.14%)</title><rect x="22.1242%" y="597" width="0.1430%" height="15" fill="rgb(252,125,32)" fg:x="1856" fg:w="12"/><text x="22.4433%" y="607.50"/></g><g><title>_int_malloc (8 samples, 0.10%)</title><rect x="22.1719%" y="581" width="0.0954%" height="15" fill="rgb(219,178,0)" fg:x="1860" fg:w="8"/><text x="22.4910%" y="591.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="22.2673%" y="581" width="0.0238%" height="15" fill="rgb(213,152,7)" fg:x="1868" fg:w="2"/><text x="22.5864%" y="591.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="22.2673%" y="565" width="0.0238%" height="15" fill="rgb(249,109,34)" fg:x="1868" fg:w="2"/><text x="22.5864%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="22.2911%" y="533" width="0.1192%" height="15" fill="rgb(232,96,21)" fg:x="1870" fg:w="10"/><text x="22.6102%" y="543.50"/></g><g><title>operator new (10 samples, 0.12%)</title><rect x="22.2911%" y="517" width="0.1192%" height="15" fill="rgb(228,27,39)" fg:x="1870" fg:w="10"/><text x="22.6102%" y="527.50"/></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="22.2911%" y="501" width="0.1192%" height="15" fill="rgb(211,182,52)" fg:x="1870" fg:w="10"/><text x="22.6102%" y="511.50"/></g><g><title>_int_malloc (10 samples, 0.12%)</title><rect x="22.2911%" y="485" width="0.1192%" height="15" fill="rgb(234,178,38)" fg:x="1870" fg:w="10"/><text x="22.6102%" y="495.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="22.4103%" y="469" width="0.0238%" height="15" fill="rgb(221,111,3)" fg:x="1880" fg:w="2"/><text x="22.7294%" y="479.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="22.4103%" y="485" width="0.0358%" height="15" fill="rgb(228,175,21)" fg:x="1880" fg:w="3"/><text x="22.7294%" y="495.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="22.4341%" y="469" width="0.0119%" height="15" fill="rgb(228,174,43)" fg:x="1882" fg:w="1"/><text x="22.7532%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="22.4461%" y="469" width="0.0119%" height="15" fill="rgb(211,191,0)" fg:x="1883" fg:w="1"/><text x="22.7652%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="22.4461%" y="453" width="0.0119%" height="15" fill="rgb(253,117,3)" fg:x="1883" fg:w="1"/><text x="22.7652%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="22.4699%" y="405" width="0.0119%" height="15" fill="rgb(241,127,19)" fg:x="1885" fg:w="1"/><text x="22.7890%" y="415.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="22.4699%" y="389" width="0.0119%" height="15" fill="rgb(218,103,12)" fg:x="1885" fg:w="1"/><text x="22.7890%" y="399.50"/></g><g><title>operator new (12 samples, 0.14%)</title><rect x="22.4818%" y="373" width="0.1430%" height="15" fill="rgb(236,214,43)" fg:x="1886" fg:w="12"/><text x="22.8009%" y="383.50"/></g><g><title>__GI___libc_malloc (12 samples, 0.14%)</title><rect x="22.4818%" y="357" width="0.1430%" height="15" fill="rgb(244,144,19)" fg:x="1886" fg:w="12"/><text x="22.8009%" y="367.50"/></g><g><title>_int_malloc (12 samples, 0.14%)</title><rect x="22.4818%" y="341" width="0.1430%" height="15" fill="rgb(246,188,10)" fg:x="1886" fg:w="12"/><text x="22.8009%" y="351.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="22.4461%" y="485" width="0.1907%" height="15" fill="rgb(212,193,33)" fg:x="1883" fg:w="16"/><text x="22.7652%" y="495.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (15 samples, 0.18%)</title><rect x="22.4580%" y="469" width="0.1788%" height="15" fill="rgb(241,51,29)" fg:x="1884" fg:w="15"/><text x="22.7771%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="22.4580%" y="453" width="0.1788%" height="15" fill="rgb(211,58,19)" fg:x="1884" fg:w="15"/><text x="22.7771%" y="463.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (15 samples, 0.18%)</title><rect x="22.4580%" y="437" width="0.1788%" height="15" fill="rgb(229,111,26)" fg:x="1884" fg:w="15"/><text x="22.7771%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="22.4699%" y="421" width="0.1669%" height="15" fill="rgb(213,115,40)" fg:x="1885" fg:w="14"/><text x="22.7890%" y="431.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (13 samples, 0.15%)</title><rect x="22.4818%" y="405" width="0.1550%" height="15" fill="rgb(209,56,44)" fg:x="1886" fg:w="13"/><text x="22.8009%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="22.4818%" y="389" width="0.1550%" height="15" fill="rgb(230,108,32)" fg:x="1886" fg:w="13"/><text x="22.8009%" y="399.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function@plt (1 samples, 0.01%)</title><rect x="22.6249%" y="373" width="0.0119%" height="15" fill="rgb(216,165,31)" fg:x="1898" fg:w="1"/><text x="22.9440%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (43 samples, 0.51%)</title><rect x="22.2673%" y="597" width="0.5126%" height="15" fill="rgb(218,122,21)" fg:x="1868" fg:w="43"/><text x="22.5864%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (41 samples, 0.49%)</title><rect x="22.2911%" y="581" width="0.4887%" height="15" fill="rgb(223,224,47)" fg:x="1870" fg:w="41"/><text x="22.6102%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (41 samples, 0.49%)</title><rect x="22.2911%" y="565" width="0.4887%" height="15" fill="rgb(238,102,44)" fg:x="1870" fg:w="41"/><text x="22.6102%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (41 samples, 0.49%)</title><rect x="22.2911%" y="549" width="0.4887%" height="15" fill="rgb(236,46,40)" fg:x="1870" fg:w="41"/><text x="22.6102%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (31 samples, 0.37%)</title><rect x="22.4103%" y="533" width="0.3695%" height="15" fill="rgb(247,202,50)" fg:x="1880" fg:w="31"/><text x="22.7294%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (31 samples, 0.37%)</title><rect x="22.4103%" y="517" width="0.3695%" height="15" fill="rgb(209,99,20)" fg:x="1880" fg:w="31"/><text x="22.7294%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (31 samples, 0.37%)</title><rect x="22.4103%" y="501" width="0.3695%" height="15" fill="rgb(252,27,34)" fg:x="1880" fg:w="31"/><text x="22.7294%" y="511.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="22.6368%" y="485" width="0.1430%" height="15" fill="rgb(215,206,23)" fg:x="1899" fg:w="12"/><text x="22.9559%" y="495.50"/></g><g><title>operator new (12 samples, 0.14%)</title><rect x="22.6368%" y="469" width="0.1430%" height="15" fill="rgb(212,135,36)" fg:x="1899" fg:w="12"/><text x="22.9559%" y="479.50"/></g><g><title>__GI___libc_malloc (12 samples, 0.14%)</title><rect x="22.6368%" y="453" width="0.1430%" height="15" fill="rgb(240,189,1)" fg:x="1899" fg:w="12"/><text x="22.9559%" y="463.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="22.6725%" y="437" width="0.1073%" height="15" fill="rgb(242,56,20)" fg:x="1902" fg:w="9"/><text x="22.9916%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (56 samples, 0.67%)</title><rect x="22.1242%" y="629" width="0.6675%" height="15" fill="rgb(247,132,33)" fg:x="1856" fg:w="56"/><text x="22.4433%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (44 samples, 0.52%)</title><rect x="22.2673%" y="613" width="0.5245%" height="15" fill="rgb(208,149,11)" fg:x="1868" fg:w="44"/><text x="22.5864%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="22.7798%" y="597" width="0.0119%" height="15" fill="rgb(211,33,11)" fg:x="1911" fg:w="1"/><text x="23.0989%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="22.7918%" y="549" width="0.0119%" height="15" fill="rgb(221,29,38)" fg:x="1912" fg:w="1"/><text x="23.1109%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="22.7918%" y="533" width="0.0119%" height="15" fill="rgb(206,182,49)" fg:x="1912" fg:w="1"/><text x="23.1109%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="22.7918%" y="517" width="0.0119%" height="15" fill="rgb(216,140,1)" fg:x="1912" fg:w="1"/><text x="23.1109%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="22.8156%" y="453" width="0.0119%" height="15" fill="rgb(232,57,40)" fg:x="1914" fg:w="1"/><text x="23.1347%" y="463.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="22.8275%" y="405" width="0.0238%" height="15" fill="rgb(224,186,18)" fg:x="1915" fg:w="2"/><text x="23.1466%" y="415.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="22.8275%" y="389" width="0.0238%" height="15" fill="rgb(215,121,11)" fg:x="1915" fg:w="2"/><text x="23.1466%" y="399.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="22.8514%" y="373" width="0.1073%" height="15" fill="rgb(245,147,10)" fg:x="1917" fg:w="9"/><text x="23.1705%" y="383.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="22.8514%" y="357" width="0.1073%" height="15" fill="rgb(238,153,13)" fg:x="1917" fg:w="9"/><text x="23.1705%" y="367.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="22.8514%" y="341" width="0.1073%" height="15" fill="rgb(233,108,0)" fg:x="1917" fg:w="9"/><text x="23.1705%" y="351.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="22.9586%" y="341" width="0.1311%" height="15" fill="rgb(212,157,17)" fg:x="1926" fg:w="11"/><text x="23.2777%" y="351.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="22.9586%" y="325" width="0.1311%" height="15" fill="rgb(225,213,38)" fg:x="1926" fg:w="11"/><text x="23.2777%" y="335.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="22.9825%" y="309" width="0.1073%" height="15" fill="rgb(248,16,11)" fg:x="1928" fg:w="9"/><text x="23.3016%" y="319.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="23.0898%" y="341" width="0.0119%" height="15" fill="rgb(241,33,4)" fg:x="1937" fg:w="1"/><text x="23.4089%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (27 samples, 0.32%)</title><rect x="22.7918%" y="581" width="0.3219%" height="15" fill="rgb(222,26,43)" fg:x="1912" fg:w="27"/><text x="23.1109%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (27 samples, 0.32%)</title><rect x="22.7918%" y="565" width="0.3219%" height="15" fill="rgb(243,29,36)" fg:x="1912" fg:w="27"/><text x="23.1109%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (26 samples, 0.31%)</title><rect x="22.8037%" y="549" width="0.3099%" height="15" fill="rgb(241,9,27)" fg:x="1913" fg:w="26"/><text x="23.1228%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="22.8037%" y="533" width="0.3099%" height="15" fill="rgb(205,117,26)" fg:x="1913" fg:w="26"/><text x="23.1228%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (26 samples, 0.31%)</title><rect x="22.8037%" y="517" width="0.3099%" height="15" fill="rgb(209,80,39)" fg:x="1913" fg:w="26"/><text x="23.1228%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="22.8037%" y="501" width="0.3099%" height="15" fill="rgb(239,155,6)" fg:x="1913" fg:w="26"/><text x="23.1228%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (25 samples, 0.30%)</title><rect x="22.8156%" y="485" width="0.2980%" height="15" fill="rgb(212,104,12)" fg:x="1914" fg:w="25"/><text x="23.1347%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (25 samples, 0.30%)</title><rect x="22.8156%" y="469" width="0.2980%" height="15" fill="rgb(234,204,3)" fg:x="1914" fg:w="25"/><text x="23.1347%" y="479.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="22.8275%" y="453" width="0.2861%" height="15" fill="rgb(251,218,7)" fg:x="1915" fg:w="24"/><text x="23.1466%" y="463.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (24 samples, 0.29%)</title><rect x="22.8275%" y="437" width="0.2861%" height="15" fill="rgb(221,81,32)" fg:x="1915" fg:w="24"/><text x="23.1466%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="22.8275%" y="421" width="0.2861%" height="15" fill="rgb(214,152,26)" fg:x="1915" fg:w="24"/><text x="23.1466%" y="431.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (22 samples, 0.26%)</title><rect x="22.8514%" y="405" width="0.2622%" height="15" fill="rgb(223,22,3)" fg:x="1917" fg:w="22"/><text x="23.1705%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (22 samples, 0.26%)</title><rect x="22.8514%" y="389" width="0.2622%" height="15" fill="rgb(207,174,7)" fg:x="1917" fg:w="22"/><text x="23.1705%" y="399.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (13 samples, 0.15%)</title><rect x="22.9586%" y="373" width="0.1550%" height="15" fill="rgb(224,19,52)" fg:x="1926" fg:w="13"/><text x="23.2777%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="22.9586%" y="357" width="0.1550%" height="15" fill="rgb(228,24,14)" fg:x="1926" fg:w="13"/><text x="23.2777%" y="367.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function@plt (1 samples, 0.01%)</title><rect x="23.1017%" y="341" width="0.0119%" height="15" fill="rgb(230,153,43)" fg:x="1938" fg:w="1"/><text x="23.4208%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (87 samples, 1.04%)</title><rect x="22.1004%" y="661" width="1.0371%" height="15" fill="rgb(231,106,12)" fg:x="1854" fg:w="87"/><text x="22.4195%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (85 samples, 1.01%)</title><rect x="22.1242%" y="645" width="1.0132%" height="15" fill="rgb(215,92,2)" fg:x="1856" fg:w="85"/><text x="22.4433%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (29 samples, 0.35%)</title><rect x="22.7918%" y="629" width="0.3457%" height="15" fill="rgb(249,143,25)" fg:x="1912" fg:w="29"/><text x="23.1109%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (29 samples, 0.35%)</title><rect x="22.7918%" y="613" width="0.3457%" height="15" fill="rgb(252,7,35)" fg:x="1912" fg:w="29"/><text x="23.1109%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (29 samples, 0.35%)</title><rect x="22.7918%" y="597" width="0.3457%" height="15" fill="rgb(216,69,40)" fg:x="1912" fg:w="29"/><text x="23.1109%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="23.1136%" y="581" width="0.0238%" height="15" fill="rgb(240,36,33)" fg:x="1939" fg:w="2"/><text x="23.4327%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="23.1136%" y="565" width="0.0238%" height="15" fill="rgb(231,128,14)" fg:x="1939" fg:w="2"/><text x="23.4327%" y="575.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="23.1136%" y="549" width="0.0238%" height="15" fill="rgb(245,143,14)" fg:x="1939" fg:w="2"/><text x="23.4327%" y="559.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="23.1136%" y="533" width="0.0238%" height="15" fill="rgb(222,130,28)" fg:x="1939" fg:w="2"/><text x="23.4327%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="23.1374%" y="645" width="0.0119%" height="15" fill="rgb(212,10,48)" fg:x="1941" fg:w="1"/><text x="23.4565%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="23.1374%" y="629" width="0.0119%" height="15" fill="rgb(254,118,45)" fg:x="1941" fg:w="1"/><text x="23.4565%" y="639.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="23.1494%" y="613" width="0.0238%" height="15" fill="rgb(228,6,45)" fg:x="1942" fg:w="2"/><text x="23.4685%" y="623.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="23.1494%" y="597" width="0.0238%" height="15" fill="rgb(241,18,35)" fg:x="1942" fg:w="2"/><text x="23.4685%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="23.1732%" y="613" width="0.1073%" height="15" fill="rgb(227,214,53)" fg:x="1944" fg:w="9"/><text x="23.4923%" y="623.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="23.1732%" y="597" width="0.1073%" height="15" fill="rgb(224,107,51)" fg:x="1944" fg:w="9"/><text x="23.4923%" y="607.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="23.1732%" y="581" width="0.1073%" height="15" fill="rgb(248,60,28)" fg:x="1944" fg:w="9"/><text x="23.4923%" y="591.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="23.1732%" y="565" width="0.1073%" height="15" fill="rgb(249,101,23)" fg:x="1944" fg:w="9"/><text x="23.4923%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="23.2805%" y="501" width="0.0238%" height="15" fill="rgb(228,51,19)" fg:x="1953" fg:w="2"/><text x="23.5996%" y="511.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="23.2805%" y="485" width="0.0238%" height="15" fill="rgb(213,20,6)" fg:x="1953" fg:w="2"/><text x="23.5996%" y="495.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="23.2924%" y="469" width="0.0119%" height="15" fill="rgb(212,124,10)" fg:x="1954" fg:w="1"/><text x="23.6115%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="23.2924%" y="453" width="0.0119%" height="15" fill="rgb(248,3,40)" fg:x="1954" fg:w="1"/><text x="23.6115%" y="463.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="23.3043%" y="485" width="0.0238%" height="15" fill="rgb(223,178,23)" fg:x="1955" fg:w="2"/><text x="23.6234%" y="495.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="23.3043%" y="469" width="0.0238%" height="15" fill="rgb(240,132,45)" fg:x="1955" fg:w="2"/><text x="23.6234%" y="479.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="23.3282%" y="485" width="0.0119%" height="15" fill="rgb(245,164,36)" fg:x="1957" fg:w="1"/><text x="23.6473%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="23.3282%" y="469" width="0.0119%" height="15" fill="rgb(231,188,53)" fg:x="1957" fg:w="1"/><text x="23.6473%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="23.3282%" y="453" width="0.0119%" height="15" fill="rgb(237,198,39)" fg:x="1957" fg:w="1"/><text x="23.6473%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="23.3043%" y="501" width="0.0477%" height="15" fill="rgb(223,120,35)" fg:x="1955" fg:w="4"/><text x="23.6234%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="23.3401%" y="485" width="0.0119%" height="15" fill="rgb(253,107,49)" fg:x="1958" fg:w="1"/><text x="23.6592%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="23.3520%" y="501" width="0.0119%" height="15" fill="rgb(216,44,31)" fg:x="1959" fg:w="1"/><text x="23.6711%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="23.3520%" y="485" width="0.0119%" height="15" fill="rgb(253,87,21)" fg:x="1959" fg:w="1"/><text x="23.6711%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="23.3520%" y="469" width="0.0119%" height="15" fill="rgb(226,18,2)" fg:x="1959" fg:w="1"/><text x="23.6711%" y="479.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="23.3639%" y="485" width="0.1311%" height="15" fill="rgb(216,8,46)" fg:x="1960" fg:w="11"/><text x="23.6830%" y="495.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="23.3639%" y="469" width="0.1311%" height="15" fill="rgb(226,140,39)" fg:x="1960" fg:w="11"/><text x="23.6830%" y="479.50"/></g><g><title>_int_malloc (8 samples, 0.10%)</title><rect x="23.3997%" y="453" width="0.0954%" height="15" fill="rgb(221,194,54)" fg:x="1963" fg:w="8"/><text x="23.7188%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="23.4951%" y="453" width="0.0119%" height="15" fill="rgb(213,92,11)" fg:x="1971" fg:w="1"/><text x="23.8142%" y="463.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="23.4951%" y="437" width="0.0119%" height="15" fill="rgb(229,162,46)" fg:x="1971" fg:w="1"/><text x="23.8142%" y="447.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="23.5070%" y="405" width="0.0715%" height="15" fill="rgb(214,111,36)" fg:x="1972" fg:w="6"/><text x="23.8261%" y="415.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="23.5070%" y="389" width="0.0715%" height="15" fill="rgb(207,6,21)" fg:x="1972" fg:w="6"/><text x="23.8261%" y="399.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="23.5308%" y="373" width="0.0477%" height="15" fill="rgb(213,127,38)" fg:x="1974" fg:w="4"/><text x="23.8499%" y="383.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="23.5070%" y="453" width="0.0834%" height="15" fill="rgb(238,118,32)" fg:x="1972" fg:w="7"/><text x="23.8261%" y="463.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (7 samples, 0.08%)</title><rect x="23.5070%" y="437" width="0.0834%" height="15" fill="rgb(240,139,39)" fg:x="1972" fg:w="7"/><text x="23.8261%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="23.5070%" y="421" width="0.0834%" height="15" fill="rgb(235,10,37)" fg:x="1972" fg:w="7"/><text x="23.8261%" y="431.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="23.5785%" y="405" width="0.0119%" height="15" fill="rgb(249,171,38)" fg:x="1978" fg:w="1"/><text x="23.8976%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="23.5785%" y="389" width="0.0119%" height="15" fill="rgb(242,144,32)" fg:x="1978" fg:w="1"/><text x="23.8976%" y="399.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="23.5785%" y="373" width="0.0119%" height="15" fill="rgb(217,117,21)" fg:x="1978" fg:w="1"/><text x="23.8976%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="23.5785%" y="357" width="0.0119%" height="15" fill="rgb(249,87,1)" fg:x="1978" fg:w="1"/><text x="23.8976%" y="367.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="23.5785%" y="341" width="0.0119%" height="15" fill="rgb(248,196,48)" fg:x="1978" fg:w="1"/><text x="23.8976%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (28 samples, 0.33%)</title><rect x="23.2805%" y="581" width="0.3338%" height="15" fill="rgb(251,206,33)" fg:x="1953" fg:w="28"/><text x="23.5996%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (28 samples, 0.33%)</title><rect x="23.2805%" y="565" width="0.3338%" height="15" fill="rgb(232,141,28)" fg:x="1953" fg:w="28"/><text x="23.5996%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (28 samples, 0.33%)</title><rect x="23.2805%" y="549" width="0.3338%" height="15" fill="rgb(209,167,14)" fg:x="1953" fg:w="28"/><text x="23.5996%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (28 samples, 0.33%)</title><rect x="23.2805%" y="533" width="0.3338%" height="15" fill="rgb(225,11,50)" fg:x="1953" fg:w="28"/><text x="23.5996%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (28 samples, 0.33%)</title><rect x="23.2805%" y="517" width="0.3338%" height="15" fill="rgb(209,50,20)" fg:x="1953" fg:w="28"/><text x="23.5996%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="23.3639%" y="501" width="0.2503%" height="15" fill="rgb(212,17,46)" fg:x="1960" fg:w="21"/><text x="23.6830%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="23.4951%" y="485" width="0.1192%" height="15" fill="rgb(216,101,39)" fg:x="1971" fg:w="10"/><text x="23.8142%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="23.4951%" y="469" width="0.1192%" height="15" fill="rgb(212,228,48)" fg:x="1971" fg:w="10"/><text x="23.8142%" y="479.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="23.5904%" y="453" width="0.0238%" height="15" fill="rgb(250,6,50)" fg:x="1979" fg:w="2"/><text x="23.9095%" y="463.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="23.5904%" y="437" width="0.0238%" height="15" fill="rgb(250,160,48)" fg:x="1979" fg:w="2"/><text x="23.9095%" y="447.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="23.5904%" y="421" width="0.0238%" height="15" fill="rgb(244,216,33)" fg:x="1979" fg:w="2"/><text x="23.9095%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (30 samples, 0.36%)</title><rect x="23.2805%" y="597" width="0.3576%" height="15" fill="rgb(207,157,5)" fg:x="1953" fg:w="30"/><text x="23.5996%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="23.6143%" y="581" width="0.0238%" height="15" fill="rgb(228,199,8)" fg:x="1981" fg:w="2"/><text x="23.9334%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="23.6143%" y="565" width="0.0238%" height="15" fill="rgb(227,80,20)" fg:x="1981" fg:w="2"/><text x="23.9334%" y="575.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="23.6262%" y="549" width="0.0119%" height="15" fill="rgb(222,9,33)" fg:x="1982" fg:w="1"/><text x="23.9453%" y="559.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="23.6262%" y="533" width="0.0119%" height="15" fill="rgb(239,44,28)" fg:x="1982" fg:w="1"/><text x="23.9453%" y="543.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="23.6381%" y="581" width="0.0238%" height="15" fill="rgb(249,187,43)" fg:x="1983" fg:w="2"/><text x="23.9572%" y="591.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="23.6381%" y="565" width="0.0238%" height="15" fill="rgb(216,141,28)" fg:x="1983" fg:w="2"/><text x="23.9572%" y="575.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="23.6977%" y="453" width="0.0715%" height="15" fill="rgb(230,154,53)" fg:x="1988" fg:w="6"/><text x="24.0168%" y="463.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="23.6977%" y="437" width="0.0715%" height="15" fill="rgb(227,82,4)" fg:x="1988" fg:w="6"/><text x="24.0168%" y="447.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="23.6977%" y="421" width="0.0715%" height="15" fill="rgb(220,107,16)" fg:x="1988" fg:w="6"/><text x="24.0168%" y="431.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="23.7692%" y="453" width="0.0119%" height="15" fill="rgb(207,187,2)" fg:x="1994" fg:w="1"/><text x="24.0883%" y="463.50"/></g><g><title>operator new (13 samples, 0.15%)</title><rect x="23.7811%" y="421" width="0.1550%" height="15" fill="rgb(210,162,52)" fg:x="1995" fg:w="13"/><text x="24.1002%" y="431.50"/></g><g><title>__GI___libc_malloc (13 samples, 0.15%)</title><rect x="23.7811%" y="405" width="0.1550%" height="15" fill="rgb(217,216,49)" fg:x="1995" fg:w="13"/><text x="24.1002%" y="415.50"/></g><g><title>_int_malloc (11 samples, 0.13%)</title><rect x="23.8050%" y="389" width="0.1311%" height="15" fill="rgb(218,146,49)" fg:x="1997" fg:w="11"/><text x="24.1241%" y="399.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="23.9480%" y="309" width="0.0238%" height="15" fill="rgb(216,55,40)" fg:x="2009" fg:w="2"/><text x="24.2671%" y="319.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="23.9480%" y="293" width="0.0238%" height="15" fill="rgb(208,196,21)" fg:x="2009" fg:w="2"/><text x="24.2671%" y="303.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (26 samples, 0.31%)</title><rect x="23.6739%" y="549" width="0.3099%" height="15" fill="rgb(242,117,42)" fg:x="1986" fg:w="26"/><text x="23.9930%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="23.6977%" y="533" width="0.2861%" height="15" fill="rgb(210,11,23)" fg:x="1988" fg:w="24"/><text x="24.0168%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (24 samples, 0.29%)</title><rect x="23.6977%" y="517" width="0.2861%" height="15" fill="rgb(217,110,2)" fg:x="1988" fg:w="24"/><text x="24.0168%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="23.6977%" y="501" width="0.2861%" height="15" fill="rgb(229,77,54)" fg:x="1988" fg:w="24"/><text x="24.0168%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (24 samples, 0.29%)</title><rect x="23.6977%" y="485" width="0.2861%" height="15" fill="rgb(218,53,16)" fg:x="1988" fg:w="24"/><text x="24.0168%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="23.6977%" y="469" width="0.2861%" height="15" fill="rgb(215,38,13)" fg:x="1988" fg:w="24"/><text x="24.0168%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (17 samples, 0.20%)</title><rect x="23.7811%" y="453" width="0.2026%" height="15" fill="rgb(235,42,18)" fg:x="1995" fg:w="17"/><text x="24.1002%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="23.7811%" y="437" width="0.2026%" height="15" fill="rgb(219,66,54)" fg:x="1995" fg:w="17"/><text x="24.1002%" y="447.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="23.9361%" y="421" width="0.0477%" height="15" fill="rgb(222,205,4)" fg:x="2008" fg:w="4"/><text x="24.2552%" y="431.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (4 samples, 0.05%)</title><rect x="23.9361%" y="405" width="0.0477%" height="15" fill="rgb(227,213,46)" fg:x="2008" fg:w="4"/><text x="24.2552%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="23.9361%" y="389" width="0.0477%" height="15" fill="rgb(250,145,42)" fg:x="2008" fg:w="4"/><text x="24.2552%" y="399.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (4 samples, 0.05%)</title><rect x="23.9361%" y="373" width="0.0477%" height="15" fill="rgb(219,15,2)" fg:x="2008" fg:w="4"/><text x="24.2552%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="23.9361%" y="357" width="0.0477%" height="15" fill="rgb(231,181,52)" fg:x="2008" fg:w="4"/><text x="24.2552%" y="367.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (4 samples, 0.05%)</title><rect x="23.9361%" y="341" width="0.0477%" height="15" fill="rgb(235,1,42)" fg:x="2008" fg:w="4"/><text x="24.2552%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="23.9361%" y="325" width="0.0477%" height="15" fill="rgb(249,88,27)" fg:x="2008" fg:w="4"/><text x="24.2552%" y="335.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="23.9719%" y="309" width="0.0119%" height="15" fill="rgb(235,145,16)" fg:x="2011" fg:w="1"/><text x="24.2910%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="23.9719%" y="293" width="0.0119%" height="15" fill="rgb(237,114,19)" fg:x="2011" fg:w="1"/><text x="24.2910%" y="303.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="23.9838%" y="517" width="0.0119%" height="15" fill="rgb(238,51,50)" fg:x="2012" fg:w="1"/><text x="24.3029%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="23.9838%" y="501" width="0.0119%" height="15" fill="rgb(205,194,25)" fg:x="2012" fg:w="1"/><text x="24.3029%" y="511.50"/></g><g><title>parser::operator+ (214 samples, 2.55%)</title><rect x="21.4567%" y="709" width="2.5510%" height="15" fill="rgb(215,203,17)" fg:x="1800" fg:w="214"/><text x="21.7758%" y="719.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (164 samples, 1.95%)</title><rect x="22.0527%" y="693" width="1.9549%" height="15" fill="rgb(233,112,49)" fg:x="1850" fg:w="164"/><text x="22.3718%" y="703.50">.. </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (163 samples, 1.94%)</title><rect x="22.0646%" y="677" width="1.9430%" height="15" fill="rgb(241,130,26)" fg:x="1851" fg:w="163"/><text x="22.3837%" y="687.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (73 samples, 0.87%)</title><rect x="23.1374%" y="661" width="0.8702%" height="15" fill="rgb(252,223,19)" fg:x="1941" fg:w="73"/><text x="23.4565%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (72 samples, 0.86%)</title><rect x="23.1494%" y="645" width="0.8583%" height="15" fill="rgb(211,95,25)" fg:x="1942" fg:w="72"/><text x="23.4685%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (72 samples, 0.86%)</title><rect x="23.1494%" y="629" width="0.8583%" height="15" fill="rgb(251,182,27)" fg:x="1942" fg:w="72"/><text x="23.4685%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (61 samples, 0.73%)</title><rect x="23.2805%" y="613" width="0.7271%" height="15" fill="rgb(238,24,4)" fg:x="1953" fg:w="61"/><text x="23.5996%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (31 samples, 0.37%)</title><rect x="23.6381%" y="597" width="0.3695%" height="15" fill="rgb(224,220,25)" fg:x="1983" fg:w="31"/><text x="23.9572%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (29 samples, 0.35%)</title><rect x="23.6619%" y="581" width="0.3457%" height="15" fill="rgb(239,133,26)" fg:x="1985" fg:w="29"/><text x="23.9810%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (29 samples, 0.35%)</title><rect x="23.6619%" y="565" width="0.3457%" height="15" fill="rgb(211,94,48)" fg:x="1985" fg:w="29"/><text x="23.9810%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="23.9838%" y="549" width="0.0238%" height="15" fill="rgb(239,87,6)" fg:x="2012" fg:w="2"/><text x="24.3029%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="23.9838%" y="533" width="0.0238%" height="15" fill="rgb(227,62,0)" fg:x="2012" fg:w="2"/><text x="24.3029%" y="543.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="23.9957%" y="517" width="0.0119%" height="15" fill="rgb(211,226,4)" fg:x="2013" fg:w="1"/><text x="24.3148%" y="527.50"/></g><g><title>parser::peek (2 samples, 0.02%)</title><rect x="24.0076%" y="709" width="0.0238%" height="15" fill="rgb(253,38,52)" fg:x="2014" fg:w="2"/><text x="24.3267%" y="719.50"/></g><g><title>parser::peeks (2 samples, 0.02%)</title><rect x="24.0076%" y="693" width="0.0238%" height="15" fill="rgb(229,126,40)" fg:x="2014" fg:w="2"/><text x="24.3267%" y="703.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="24.0076%" y="677" width="0.0238%" height="15" fill="rgb(229,165,44)" fg:x="2014" fg:w="2"/><text x="24.3267%" y="687.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="24.0076%" y="661" width="0.0238%" height="15" fill="rgb(247,95,47)" fg:x="2014" fg:w="2"/><text x="24.3267%" y="671.50"/></g><g><title>parser::peek@plt (1 samples, 0.01%)</title><rect x="24.0315%" y="709" width="0.0119%" height="15" fill="rgb(216,140,30)" fg:x="2016" fg:w="1"/><text x="24.3506%" y="719.50"/></g><g><title>parser::push (1 samples, 0.01%)</title><rect x="24.0434%" y="709" width="0.0119%" height="15" fill="rgb(246,214,8)" fg:x="2017" fg:w="1"/><text x="24.3625%" y="719.50"/></g><g><title>parser::sym (1 samples, 0.01%)</title><rect x="24.0553%" y="709" width="0.0119%" height="15" fill="rgb(227,224,15)" fg:x="2018" fg:w="1"/><text x="24.3744%" y="719.50"/></g><g><title>parser::iff (1 samples, 0.01%)</title><rect x="24.0553%" y="693" width="0.0119%" height="15" fill="rgb(233,175,4)" fg:x="2018" fg:w="1"/><text x="24.3744%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="24.0553%" y="677" width="0.0119%" height="15" fill="rgb(221,66,45)" fg:x="2018" fg:w="1"/><text x="24.3744%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.0672%" y="693" width="0.0119%" height="15" fill="rgb(221,178,18)" fg:x="2019" fg:w="1"/><text x="24.3863%" y="703.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.0672%" y="677" width="0.0119%" height="15" fill="rgb(213,81,29)" fg:x="2019" fg:w="1"/><text x="24.3863%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="24.0672%" y="709" width="0.0238%" height="15" fill="rgb(220,89,49)" fg:x="2019" fg:w="2"/><text x="24.3863%" y="719.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="24.0792%" y="693" width="0.0119%" height="15" fill="rgb(227,60,33)" fg:x="2020" fg:w="1"/><text x="24.3983%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.0911%" y="645" width="0.0119%" height="15" fill="rgb(205,113,12)" fg:x="2021" fg:w="1"/><text x="24.4102%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.0911%" y="629" width="0.0119%" height="15" fill="rgb(211,32,1)" fg:x="2021" fg:w="1"/><text x="24.4102%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="24.1030%" y="645" width="0.0119%" height="15" fill="rgb(246,2,12)" fg:x="2022" fg:w="1"/><text x="24.4221%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.1030%" y="629" width="0.0119%" height="15" fill="rgb(243,37,27)" fg:x="2022" fg:w="1"/><text x="24.4221%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.1149%" y="629" width="0.0119%" height="15" fill="rgb(248,211,31)" fg:x="2023" fg:w="1"/><text x="24.4340%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.1149%" y="613" width="0.0119%" height="15" fill="rgb(242,146,47)" fg:x="2023" fg:w="1"/><text x="24.4340%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="24.1149%" y="645" width="0.0358%" height="15" fill="rgb(206,70,20)" fg:x="2023" fg:w="3"/><text x="24.4340%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="24.1268%" y="629" width="0.0238%" height="15" fill="rgb(215,10,51)" fg:x="2024" fg:w="2"/><text x="24.4459%" y="639.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="24.1268%" y="613" width="0.0238%" height="15" fill="rgb(243,178,53)" fg:x="2024" fg:w="2"/><text x="24.4459%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.1388%" y="597" width="0.0119%" height="15" fill="rgb(233,221,20)" fg:x="2025" fg:w="1"/><text x="24.4579%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.1507%" y="629" width="0.0119%" height="15" fill="rgb(218,95,35)" fg:x="2026" fg:w="1"/><text x="24.4698%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.1507%" y="613" width="0.0119%" height="15" fill="rgb(229,13,5)" fg:x="2026" fg:w="1"/><text x="24.4698%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="24.1507%" y="645" width="0.0238%" height="15" fill="rgb(252,164,30)" fg:x="2026" fg:w="2"/><text x="24.4698%" y="655.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="24.1626%" y="629" width="0.0119%" height="15" fill="rgb(232,68,36)" fg:x="2027" fg:w="1"/><text x="24.4817%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="24.1745%" y="629" width="0.0119%" height="15" fill="rgb(219,59,54)" fg:x="2028" fg:w="1"/><text x="24.4936%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.1864%" y="613" width="0.0119%" height="15" fill="rgb(250,92,33)" fg:x="2029" fg:w="1"/><text x="24.5055%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.1864%" y="597" width="0.0119%" height="15" fill="rgb(229,162,54)" fg:x="2029" fg:w="1"/><text x="24.5055%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.1984%" y="597" width="0.0119%" height="15" fill="rgb(244,114,52)" fg:x="2030" fg:w="1"/><text x="24.5175%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.1984%" y="581" width="0.0119%" height="15" fill="rgb(212,211,43)" fg:x="2030" fg:w="1"/><text x="24.5175%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.2103%" y="581" width="0.0119%" height="15" fill="rgb(226,147,8)" fg:x="2031" fg:w="1"/><text x="24.5294%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.2103%" y="565" width="0.0119%" height="15" fill="rgb(226,23,13)" fg:x="2031" fg:w="1"/><text x="24.5294%" y="575.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="24.2222%" y="565" width="0.0238%" height="15" fill="rgb(240,63,4)" fg:x="2032" fg:w="2"/><text x="24.5413%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="24.1984%" y="613" width="0.0596%" height="15" fill="rgb(221,1,32)" fg:x="2030" fg:w="5"/><text x="24.5175%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="24.2103%" y="597" width="0.0477%" height="15" fill="rgb(242,117,10)" fg:x="2031" fg:w="4"/><text x="24.5294%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="24.2222%" y="581" width="0.0358%" height="15" fill="rgb(249,172,44)" fg:x="2032" fg:w="3"/><text x="24.5413%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="24.2460%" y="565" width="0.0119%" height="15" fill="rgb(244,46,45)" fg:x="2034" fg:w="1"/><text x="24.5651%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="24.2460%" y="549" width="0.0119%" height="15" fill="rgb(206,43,17)" fg:x="2034" fg:w="1"/><text x="24.5651%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="24.0911%" y="677" width="0.1788%" height="15" fill="rgb(239,218,39)" fg:x="2021" fg:w="15"/><text x="24.4102%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="24.0911%" y="661" width="0.1788%" height="15" fill="rgb(208,169,54)" fg:x="2021" fg:w="15"/><text x="24.4102%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="24.1745%" y="645" width="0.0954%" height="15" fill="rgb(247,25,42)" fg:x="2028" fg:w="8"/><text x="24.4936%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="24.1864%" y="629" width="0.0834%" height="15" fill="rgb(226,23,31)" fg:x="2029" fg:w="7"/><text x="24.5055%" y="639.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="24.2580%" y="613" width="0.0119%" height="15" fill="rgb(247,16,28)" fg:x="2035" fg:w="1"/><text x="24.5771%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.2580%" y="597" width="0.0119%" height="15" fill="rgb(231,147,38)" fg:x="2035" fg:w="1"/><text x="24.5771%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.2580%" y="581" width="0.0119%" height="15" fill="rgb(253,81,48)" fg:x="2035" fg:w="1"/><text x="24.5771%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="24.0911%" y="693" width="0.1907%" height="15" fill="rgb(249,222,43)" fg:x="2021" fg:w="16"/><text x="24.4102%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="24.2699%" y="677" width="0.0119%" height="15" fill="rgb(221,3,27)" fg:x="2036" fg:w="1"/><text x="24.5890%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.2699%" y="661" width="0.0119%" height="15" fill="rgb(228,180,5)" fg:x="2036" fg:w="1"/><text x="24.5890%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.2699%" y="645" width="0.0119%" height="15" fill="rgb(227,131,42)" fg:x="2036" fg:w="1"/><text x="24.5890%" y="655.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="24.2818%" y="677" width="0.0238%" height="15" fill="rgb(212,3,39)" fg:x="2037" fg:w="2"/><text x="24.6009%" y="687.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="24.2818%" y="661" width="0.0238%" height="15" fill="rgb(226,45,5)" fg:x="2037" fg:w="2"/><text x="24.6009%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.3056%" y="661" width="0.0119%" height="15" fill="rgb(215,167,45)" fg:x="2039" fg:w="1"/><text x="24.6247%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.3056%" y="645" width="0.0119%" height="15" fill="rgb(250,218,53)" fg:x="2039" fg:w="1"/><text x="24.6247%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="24.3176%" y="661" width="0.0119%" height="15" fill="rgb(207,140,0)" fg:x="2040" fg:w="1"/><text x="24.6367%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.3295%" y="613" width="0.0119%" height="15" fill="rgb(238,133,51)" fg:x="2041" fg:w="1"/><text x="24.6486%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.3295%" y="597" width="0.0119%" height="15" fill="rgb(218,203,53)" fg:x="2041" fg:w="1"/><text x="24.6486%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.3414%" y="581" width="0.0119%" height="15" fill="rgb(226,184,25)" fg:x="2042" fg:w="1"/><text x="24.6605%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.3414%" y="565" width="0.0119%" height="15" fill="rgb(231,121,21)" fg:x="2042" fg:w="1"/><text x="24.6605%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="24.3533%" y="565" width="0.0119%" height="15" fill="rgb(251,14,34)" fg:x="2043" fg:w="1"/><text x="24.6724%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.3533%" y="549" width="0.0119%" height="15" fill="rgb(249,193,11)" fg:x="2043" fg:w="1"/><text x="24.6724%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.3533%" y="533" width="0.0119%" height="15" fill="rgb(220,172,37)" fg:x="2043" fg:w="1"/><text x="24.6724%" y="543.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="24.3652%" y="549" width="0.0238%" height="15" fill="rgb(231,229,43)" fg:x="2044" fg:w="2"/><text x="24.6843%" y="559.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="24.3652%" y="533" width="0.0238%" height="15" fill="rgb(250,161,5)" fg:x="2044" fg:w="2"/><text x="24.6843%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="24.3295%" y="629" width="0.0715%" height="15" fill="rgb(218,225,18)" fg:x="2041" fg:w="6"/><text x="24.6486%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="24.3414%" y="613" width="0.0596%" height="15" fill="rgb(245,45,42)" fg:x="2042" fg:w="5"/><text x="24.6605%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="24.3414%" y="597" width="0.0596%" height="15" fill="rgb(211,115,1)" fg:x="2042" fg:w="5"/><text x="24.6605%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="24.3533%" y="581" width="0.0477%" height="15" fill="rgb(248,133,52)" fg:x="2043" fg:w="4"/><text x="24.6724%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="24.3652%" y="565" width="0.0358%" height="15" fill="rgb(238,100,21)" fg:x="2044" fg:w="3"/><text x="24.6843%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="24.3891%" y="549" width="0.0119%" height="15" fill="rgb(247,144,11)" fg:x="2046" fg:w="1"/><text x="24.7082%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.3891%" y="533" width="0.0119%" height="15" fill="rgb(206,164,16)" fg:x="2046" fg:w="1"/><text x="24.7082%" y="543.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="24.4010%" y="613" width="0.0238%" height="15" fill="rgb(222,34,3)" fg:x="2047" fg:w="2"/><text x="24.7201%" y="623.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="24.4010%" y="597" width="0.0238%" height="15" fill="rgb(248,82,4)" fg:x="2047" fg:w="2"/><text x="24.7201%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="24.3295%" y="661" width="0.1073%" height="15" fill="rgb(228,81,46)" fg:x="2041" fg:w="9"/><text x="24.6486%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="24.3295%" y="645" width="0.1073%" height="15" fill="rgb(227,67,47)" fg:x="2041" fg:w="9"/><text x="24.6486%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="24.4010%" y="629" width="0.0358%" height="15" fill="rgb(215,93,53)" fg:x="2047" fg:w="3"/><text x="24.7201%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="24.4248%" y="613" width="0.0119%" height="15" fill="rgb(248,194,39)" fg:x="2049" fg:w="1"/><text x="24.7439%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="24.2818%" y="693" width="0.1788%" height="15" fill="rgb(215,5,19)" fg:x="2037" fg:w="15"/><text x="24.6009%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="24.3056%" y="677" width="0.1550%" height="15" fill="rgb(226,215,51)" fg:x="2039" fg:w="13"/><text x="24.6247%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="24.4368%" y="661" width="0.0238%" height="15" fill="rgb(225,56,26)" fg:x="2050" fg:w="2"/><text x="24.7559%" y="671.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="24.4368%" y="645" width="0.0238%" height="15" fill="rgb(222,75,29)" fg:x="2050" fg:w="2"/><text x="24.7559%" y="655.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="24.4368%" y="629" width="0.0238%" height="15" fill="rgb(236,139,6)" fg:x="2050" fg:w="2"/><text x="24.7559%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (32 samples, 0.38%)</title><rect x="24.0911%" y="709" width="0.3815%" height="15" fill="rgb(223,137,36)" fg:x="2021" fg:w="32"/><text x="24.4102%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="24.4606%" y="693" width="0.0119%" height="15" fill="rgb(226,99,2)" fg:x="2052" fg:w="1"/><text x="24.7797%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.4606%" y="677" width="0.0119%" height="15" fill="rgb(206,133,23)" fg:x="2052" fg:w="1"/><text x="24.7797%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.4606%" y="661" width="0.0119%" height="15" fill="rgb(243,173,15)" fg:x="2052" fg:w="1"/><text x="24.7797%" y="671.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="24.4725%" y="693" width="0.0238%" height="15" fill="rgb(228,69,28)" fg:x="2053" fg:w="2"/><text x="24.7916%" y="703.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="24.4725%" y="677" width="0.0238%" height="15" fill="rgb(212,51,22)" fg:x="2053" fg:w="2"/><text x="24.7916%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.4964%" y="677" width="0.0119%" height="15" fill="rgb(227,113,0)" fg:x="2055" fg:w="1"/><text x="24.8155%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="24.4964%" y="693" width="0.0238%" height="15" fill="rgb(252,84,27)" fg:x="2055" fg:w="2"/><text x="24.8155%" y="703.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="24.5083%" y="677" width="0.0119%" height="15" fill="rgb(223,145,39)" fg:x="2056" fg:w="1"/><text x="24.8274%" y="687.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="24.5321%" y="661" width="0.0119%" height="15" fill="rgb(239,219,30)" fg:x="2058" fg:w="1"/><text x="24.8512%" y="671.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="24.5560%" y="629" width="0.0358%" height="15" fill="rgb(224,196,39)" fg:x="2060" fg:w="3"/><text x="24.8751%" y="639.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="24.5560%" y="613" width="0.0358%" height="15" fill="rgb(205,35,43)" fg:x="2060" fg:w="3"/><text x="24.8751%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="24.5917%" y="629" width="0.0119%" height="15" fill="rgb(228,201,21)" fg:x="2063" fg:w="1"/><text x="24.9108%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="24.6036%" y="629" width="0.0119%" height="15" fill="rgb(237,118,16)" fg:x="2064" fg:w="1"/><text x="24.9227%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="24.6036%" y="613" width="0.0119%" height="15" fill="rgb(241,17,19)" fg:x="2064" fg:w="1"/><text x="24.9227%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.6036%" y="597" width="0.0119%" height="15" fill="rgb(214,10,25)" fg:x="2064" fg:w="1"/><text x="24.9227%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.6036%" y="581" width="0.0119%" height="15" fill="rgb(238,37,29)" fg:x="2064" fg:w="1"/><text x="24.9227%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="24.6156%" y="629" width="0.0358%" height="15" fill="rgb(253,83,25)" fg:x="2065" fg:w="3"/><text x="24.9347%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.6394%" y="613" width="0.0119%" height="15" fill="rgb(234,192,12)" fg:x="2067" fg:w="1"/><text x="24.9585%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.6394%" y="597" width="0.0119%" height="15" fill="rgb(241,216,45)" fg:x="2067" fg:w="1"/><text x="24.9585%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.6513%" y="613" width="0.0119%" height="15" fill="rgb(242,22,33)" fg:x="2068" fg:w="1"/><text x="24.9704%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.6513%" y="597" width="0.0119%" height="15" fill="rgb(231,105,49)" fg:x="2068" fg:w="1"/><text x="24.9704%" y="607.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="24.6752%" y="597" width="0.0238%" height="15" fill="rgb(218,204,15)" fg:x="2070" fg:w="2"/><text x="24.9943%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="24.6752%" y="581" width="0.0238%" height="15" fill="rgb(235,138,41)" fg:x="2070" fg:w="2"/><text x="24.9943%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.6990%" y="565" width="0.0119%" height="15" fill="rgb(246,0,9)" fg:x="2072" fg:w="1"/><text x="25.0181%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.6990%" y="549" width="0.0119%" height="15" fill="rgb(210,74,4)" fg:x="2072" fg:w="1"/><text x="25.0181%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="24.5440%" y="661" width="0.1788%" height="15" fill="rgb(250,60,41)" fg:x="2059" fg:w="15"/><text x="24.8631%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="24.5560%" y="645" width="0.1669%" height="15" fill="rgb(220,115,12)" fg:x="2060" fg:w="14"/><text x="24.8751%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="24.6513%" y="629" width="0.0715%" height="15" fill="rgb(237,100,13)" fg:x="2068" fg:w="6"/><text x="24.9704%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="24.6632%" y="613" width="0.0596%" height="15" fill="rgb(213,55,26)" fg:x="2069" fg:w="5"/><text x="24.9823%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="24.6990%" y="597" width="0.0238%" height="15" fill="rgb(216,17,4)" fg:x="2072" fg:w="2"/><text x="25.0181%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="24.6990%" y="581" width="0.0238%" height="15" fill="rgb(220,153,47)" fg:x="2072" fg:w="2"/><text x="25.0181%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="24.7109%" y="565" width="0.0119%" height="15" fill="rgb(215,131,9)" fg:x="2073" fg:w="1"/><text x="25.0300%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="24.7229%" y="661" width="0.0119%" height="15" fill="rgb(233,46,42)" fg:x="2074" fg:w="1"/><text x="25.0420%" y="671.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="24.7229%" y="645" width="0.0119%" height="15" fill="rgb(226,86,7)" fg:x="2074" fg:w="1"/><text x="25.0420%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="24.5321%" y="677" width="0.2146%" height="15" fill="rgb(239,226,21)" fg:x="2058" fg:w="18"/><text x="24.8512%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="24.7348%" y="661" width="0.0119%" height="15" fill="rgb(244,137,22)" fg:x="2075" fg:w="1"/><text x="25.0539%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.7348%" y="645" width="0.0119%" height="15" fill="rgb(211,139,35)" fg:x="2075" fg:w="1"/><text x="25.0539%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.7348%" y="629" width="0.0119%" height="15" fill="rgb(214,62,50)" fg:x="2075" fg:w="1"/><text x="25.0539%" y="639.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="24.7586%" y="629" width="0.0238%" height="15" fill="rgb(212,113,44)" fg:x="2077" fg:w="2"/><text x="25.0777%" y="639.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="24.7586%" y="613" width="0.0238%" height="15" fill="rgb(226,150,43)" fg:x="2077" fg:w="2"/><text x="25.0777%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="24.7825%" y="581" width="0.0238%" height="15" fill="rgb(250,71,37)" fg:x="2079" fg:w="2"/><text x="25.1016%" y="591.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="24.7825%" y="565" width="0.0238%" height="15" fill="rgb(219,76,19)" fg:x="2079" fg:w="2"/><text x="25.1016%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="24.8063%" y="581" width="0.0119%" height="15" fill="rgb(250,39,11)" fg:x="2081" fg:w="1"/><text x="25.1254%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="24.8301%" y="549" width="0.0119%" height="15" fill="rgb(230,64,31)" fg:x="2083" fg:w="1"/><text x="25.1492%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="24.7825%" y="613" width="0.0834%" height="15" fill="rgb(208,222,23)" fg:x="2079" fg:w="7"/><text x="25.1016%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="24.7825%" y="597" width="0.0834%" height="15" fill="rgb(227,125,18)" fg:x="2079" fg:w="7"/><text x="25.1016%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="24.8182%" y="581" width="0.0477%" height="15" fill="rgb(234,210,9)" fg:x="2082" fg:w="4"/><text x="25.1373%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="24.8182%" y="565" width="0.0477%" height="15" fill="rgb(217,127,24)" fg:x="2082" fg:w="4"/><text x="25.1373%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="24.8421%" y="549" width="0.0238%" height="15" fill="rgb(239,141,48)" fg:x="2084" fg:w="2"/><text x="25.1612%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="24.8421%" y="533" width="0.0238%" height="15" fill="rgb(227,109,8)" fg:x="2084" fg:w="2"/><text x="25.1612%" y="543.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="24.8421%" y="517" width="0.0238%" height="15" fill="rgb(235,184,23)" fg:x="2084" fg:w="2"/><text x="25.1612%" y="527.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="24.8421%" y="501" width="0.0238%" height="15" fill="rgb(227,226,48)" fg:x="2084" fg:w="2"/><text x="25.1612%" y="511.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="24.8659%" y="597" width="0.0238%" height="15" fill="rgb(206,150,11)" fg:x="2086" fg:w="2"/><text x="25.1850%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="24.8659%" y="581" width="0.0238%" height="15" fill="rgb(254,2,33)" fg:x="2086" fg:w="2"/><text x="25.1850%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="24.7825%" y="629" width="0.1192%" height="15" fill="rgb(243,160,20)" fg:x="2079" fg:w="10"/><text x="25.1016%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="24.8659%" y="613" width="0.0358%" height="15" fill="rgb(218,208,30)" fg:x="2086" fg:w="3"/><text x="25.1850%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="24.8897%" y="597" width="0.0119%" height="15" fill="rgb(224,120,49)" fg:x="2088" fg:w="1"/><text x="25.2088%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.9017%" y="613" width="0.0119%" height="15" fill="rgb(246,12,2)" fg:x="2089" fg:w="1"/><text x="25.2208%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.9017%" y="597" width="0.0119%" height="15" fill="rgb(236,117,3)" fg:x="2089" fg:w="1"/><text x="25.2208%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="24.7586%" y="645" width="0.1669%" height="15" fill="rgb(216,128,52)" fg:x="2077" fg:w="14"/><text x="25.0777%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="24.9017%" y="629" width="0.0238%" height="15" fill="rgb(246,145,19)" fg:x="2089" fg:w="2"/><text x="25.2208%" y="639.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="24.9136%" y="613" width="0.0119%" height="15" fill="rgb(222,11,46)" fg:x="2090" fg:w="1"/><text x="25.2327%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="24.9255%" y="645" width="0.0119%" height="15" fill="rgb(245,82,36)" fg:x="2091" fg:w="1"/><text x="25.2446%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="24.9255%" y="629" width="0.0119%" height="15" fill="rgb(250,73,51)" fg:x="2091" fg:w="1"/><text x="25.2446%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="24.9255%" y="613" width="0.0119%" height="15" fill="rgb(221,189,23)" fg:x="2091" fg:w="1"/><text x="25.2446%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="24.7467%" y="661" width="0.2503%" height="15" fill="rgb(210,33,7)" fg:x="2076" fg:w="21"/><text x="25.0658%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="24.9374%" y="645" width="0.0596%" height="15" fill="rgb(210,107,22)" fg:x="2092" fg:w="5"/><text x="25.2565%" y="655.50"/></g><g><title>__GI___libc_free (5 samples, 0.06%)</title><rect x="24.9374%" y="629" width="0.0596%" height="15" fill="rgb(222,116,37)" fg:x="2092" fg:w="5"/><text x="25.2565%" y="639.50"/></g><g><title>_int_free (4 samples, 0.05%)</title><rect x="24.9493%" y="613" width="0.0477%" height="15" fill="rgb(254,17,48)" fg:x="2093" fg:w="4"/><text x="25.2684%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="24.7467%" y="677" width="0.2742%" height="15" fill="rgb(224,36,32)" fg:x="2076" fg:w="23"/><text x="25.0658%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="24.9970%" y="661" width="0.0238%" height="15" fill="rgb(232,90,46)" fg:x="2097" fg:w="2"/><text x="25.3161%" y="671.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="24.9970%" y="645" width="0.0238%" height="15" fill="rgb(241,66,40)" fg:x="2097" fg:w="2"/><text x="25.3161%" y="655.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="24.9970%" y="629" width="0.0238%" height="15" fill="rgb(249,184,29)" fg:x="2097" fg:w="2"/><text x="25.3161%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (43 samples, 0.51%)</title><rect x="24.5202%" y="693" width="0.5126%" height="15" fill="rgb(231,181,1)" fg:x="2057" fg:w="43"/><text x="24.8393%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="25.0209%" y="677" width="0.0119%" height="15" fill="rgb(224,94,2)" fg:x="2099" fg:w="1"/><text x="25.3400%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="25.0328%" y="661" width="0.0119%" height="15" fill="rgb(229,170,15)" fg:x="2100" fg:w="1"/><text x="25.3519%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="25.0328%" y="645" width="0.0119%" height="15" fill="rgb(240,127,35)" fg:x="2100" fg:w="1"/><text x="25.3519%" y="655.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="25.0447%" y="613" width="0.0238%" height="15" fill="rgb(248,196,34)" fg:x="2101" fg:w="2"/><text x="25.3638%" y="623.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="25.0447%" y="597" width="0.0238%" height="15" fill="rgb(236,137,7)" fg:x="2101" fg:w="2"/><text x="25.3638%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="25.0685%" y="581" width="0.0119%" height="15" fill="rgb(235,127,16)" fg:x="2103" fg:w="1"/><text x="25.3876%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="25.0685%" y="565" width="0.0119%" height="15" fill="rgb(250,192,54)" fg:x="2103" fg:w="1"/><text x="25.3876%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="25.0685%" y="613" width="0.0238%" height="15" fill="rgb(218,98,20)" fg:x="2103" fg:w="2"/><text x="25.3876%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="25.0685%" y="597" width="0.0238%" height="15" fill="rgb(230,176,47)" fg:x="2103" fg:w="2"/><text x="25.3876%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="25.0805%" y="581" width="0.0119%" height="15" fill="rgb(244,2,33)" fg:x="2104" fg:w="1"/><text x="25.3996%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="25.0924%" y="597" width="0.0119%" height="15" fill="rgb(231,100,17)" fg:x="2105" fg:w="1"/><text x="25.4115%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="25.0924%" y="581" width="0.0119%" height="15" fill="rgb(245,23,12)" fg:x="2105" fg:w="1"/><text x="25.4115%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="25.0924%" y="613" width="0.0238%" height="15" fill="rgb(249,55,22)" fg:x="2105" fg:w="2"/><text x="25.4115%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="25.1043%" y="597" width="0.0119%" height="15" fill="rgb(207,134,9)" fg:x="2106" fg:w="1"/><text x="25.4234%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="25.1043%" y="581" width="0.0119%" height="15" fill="rgb(218,134,0)" fg:x="2106" fg:w="1"/><text x="25.4234%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="25.1043%" y="565" width="0.0119%" height="15" fill="rgb(213,212,33)" fg:x="2106" fg:w="1"/><text x="25.4234%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="25.1162%" y="613" width="0.0119%" height="15" fill="rgb(252,106,18)" fg:x="2107" fg:w="1"/><text x="25.4353%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="25.1162%" y="597" width="0.0119%" height="15" fill="rgb(208,126,42)" fg:x="2107" fg:w="1"/><text x="25.4353%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="25.1162%" y="581" width="0.0119%" height="15" fill="rgb(246,175,29)" fg:x="2107" fg:w="1"/><text x="25.4353%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="25.1281%" y="597" width="0.0119%" height="15" fill="rgb(215,13,50)" fg:x="2108" fg:w="1"/><text x="25.4472%" y="607.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="25.1401%" y="581" width="0.0358%" height="15" fill="rgb(216,172,15)" fg:x="2109" fg:w="3"/><text x="25.4592%" y="591.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="25.1401%" y="565" width="0.0358%" height="15" fill="rgb(212,103,13)" fg:x="2109" fg:w="3"/><text x="25.4592%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="25.1758%" y="565" width="0.0119%" height="15" fill="rgb(231,171,36)" fg:x="2112" fg:w="1"/><text x="25.4949%" y="575.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="25.1877%" y="549" width="0.0358%" height="15" fill="rgb(250,123,20)" fg:x="2113" fg:w="3"/><text x="25.5068%" y="559.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="25.1997%" y="533" width="0.0238%" height="15" fill="rgb(212,53,50)" fg:x="2114" fg:w="2"/><text x="25.5188%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="25.2235%" y="533" width="0.0119%" height="15" fill="rgb(243,54,12)" fg:x="2116" fg:w="1"/><text x="25.5426%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="25.2235%" y="517" width="0.0119%" height="15" fill="rgb(234,101,34)" fg:x="2116" fg:w="1"/><text x="25.5426%" y="527.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="25.1758%" y="581" width="0.0715%" height="15" fill="rgb(254,67,22)" fg:x="2112" fg:w="6"/><text x="25.4949%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="25.1877%" y="565" width="0.0596%" height="15" fill="rgb(250,35,47)" fg:x="2113" fg:w="5"/><text x="25.5068%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="25.2235%" y="549" width="0.0238%" height="15" fill="rgb(226,126,38)" fg:x="2116" fg:w="2"/><text x="25.5426%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="25.2354%" y="533" width="0.0119%" height="15" fill="rgb(216,138,53)" fg:x="2117" fg:w="1"/><text x="25.5545%" y="543.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="25.2354%" y="517" width="0.0119%" height="15" fill="rgb(246,199,43)" fg:x="2117" fg:w="1"/><text x="25.5545%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="25.2473%" y="565" width="0.0119%" height="15" fill="rgb(232,125,11)" fg:x="2118" fg:w="1"/><text x="25.5664%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="25.2473%" y="549" width="0.0119%" height="15" fill="rgb(218,219,45)" fg:x="2118" fg:w="1"/><text x="25.5664%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="25.0447%" y="645" width="0.2265%" height="15" fill="rgb(216,102,54)" fg:x="2101" fg:w="19"/><text x="25.3638%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="25.0447%" y="629" width="0.2265%" height="15" fill="rgb(250,228,7)" fg:x="2101" fg:w="19"/><text x="25.3638%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="25.1281%" y="613" width="0.1430%" height="15" fill="rgb(226,125,25)" fg:x="2108" fg:w="12"/><text x="25.4472%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="25.1401%" y="597" width="0.1311%" height="15" fill="rgb(224,165,27)" fg:x="2109" fg:w="11"/><text x="25.4592%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="25.2473%" y="581" width="0.0238%" height="15" fill="rgb(233,86,3)" fg:x="2118" fg:w="2"/><text x="25.5664%" y="591.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="25.2593%" y="565" width="0.0119%" height="15" fill="rgb(228,116,20)" fg:x="2119" fg:w="1"/><text x="25.5784%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="25.0447%" y="661" width="0.2503%" height="15" fill="rgb(209,192,17)" fg:x="2101" fg:w="21"/><text x="25.3638%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="25.2712%" y="645" width="0.0238%" height="15" fill="rgb(224,88,34)" fg:x="2120" fg:w="2"/><text x="25.5903%" y="655.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="25.2712%" y="629" width="0.0238%" height="15" fill="rgb(233,38,6)" fg:x="2120" fg:w="2"/><text x="25.5903%" y="639.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="25.2712%" y="613" width="0.0238%" height="15" fill="rgb(212,59,30)" fg:x="2120" fg:w="2"/><text x="25.5903%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="25.2950%" y="613" width="0.0238%" height="15" fill="rgb(213,80,3)" fg:x="2122" fg:w="2"/><text x="25.6141%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="25.3069%" y="597" width="0.0119%" height="15" fill="rgb(251,178,7)" fg:x="2123" fg:w="1"/><text x="25.6260%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="25.3189%" y="613" width="0.0119%" height="15" fill="rgb(213,154,26)" fg:x="2124" fg:w="1"/><text x="25.6380%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="25.3308%" y="597" width="0.0119%" height="15" fill="rgb(238,165,49)" fg:x="2125" fg:w="1"/><text x="25.6499%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="25.3308%" y="581" width="0.0119%" height="15" fill="rgb(248,91,46)" fg:x="2125" fg:w="1"/><text x="25.6499%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="25.3427%" y="597" width="0.0119%" height="15" fill="rgb(244,21,52)" fg:x="2126" fg:w="1"/><text x="25.6618%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="25.3546%" y="565" width="0.0119%" height="15" fill="rgb(247,122,20)" fg:x="2127" fg:w="1"/><text x="25.6737%" y="575.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="25.3666%" y="533" width="0.0238%" height="15" fill="rgb(218,27,9)" fg:x="2128" fg:w="2"/><text x="25.6857%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="25.3785%" y="517" width="0.0119%" height="15" fill="rgb(246,7,6)" fg:x="2129" fg:w="1"/><text x="25.6976%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="25.3904%" y="517" width="0.0119%" height="15" fill="rgb(227,135,54)" fg:x="2130" fg:w="1"/><text x="25.7095%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="25.3904%" y="501" width="0.0119%" height="15" fill="rgb(247,14,11)" fg:x="2130" fg:w="1"/><text x="25.7095%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="25.3904%" y="533" width="0.0238%" height="15" fill="rgb(206,149,34)" fg:x="2130" fg:w="2"/><text x="25.7095%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="25.4023%" y="517" width="0.0119%" height="15" fill="rgb(227,228,4)" fg:x="2131" fg:w="1"/><text x="25.7214%" y="527.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="25.4142%" y="517" width="0.0238%" height="15" fill="rgb(238,218,28)" fg:x="2132" fg:w="2"/><text x="25.7333%" y="527.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="25.4142%" y="501" width="0.0238%" height="15" fill="rgb(252,86,40)" fg:x="2132" fg:w="2"/><text x="25.7333%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="25.3546%" y="597" width="0.1073%" height="15" fill="rgb(251,225,11)" fg:x="2127" fg:w="9"/><text x="25.6737%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="25.3546%" y="581" width="0.1073%" height="15" fill="rgb(206,46,49)" fg:x="2127" fg:w="9"/><text x="25.6737%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="25.3666%" y="565" width="0.0954%" height="15" fill="rgb(245,128,24)" fg:x="2128" fg:w="8"/><text x="25.6857%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="25.3666%" y="549" width="0.0954%" height="15" fill="rgb(219,177,34)" fg:x="2128" fg:w="8"/><text x="25.6857%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="25.4142%" y="533" width="0.0477%" height="15" fill="rgb(218,60,48)" fg:x="2132" fg:w="4"/><text x="25.7333%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="25.4381%" y="517" width="0.0238%" height="15" fill="rgb(221,11,5)" fg:x="2134" fg:w="2"/><text x="25.7572%" y="527.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="25.4381%" y="501" width="0.0238%" height="15" fill="rgb(220,148,13)" fg:x="2134" fg:w="2"/><text x="25.7572%" y="511.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="25.4381%" y="485" width="0.0238%" height="15" fill="rgb(210,16,3)" fg:x="2134" fg:w="2"/><text x="25.7572%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="25.2950%" y="629" width="0.1788%" height="15" fill="rgb(236,80,2)" fg:x="2122" fg:w="15"/><text x="25.6141%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="25.3308%" y="613" width="0.1430%" height="15" fill="rgb(239,129,19)" fg:x="2125" fg:w="12"/><text x="25.6499%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="25.4619%" y="597" width="0.0119%" height="15" fill="rgb(220,106,35)" fg:x="2136" fg:w="1"/><text x="25.7810%" y="607.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="25.4619%" y="581" width="0.0119%" height="15" fill="rgb(252,139,45)" fg:x="2136" fg:w="1"/><text x="25.7810%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="25.4738%" y="629" width="0.0119%" height="15" fill="rgb(229,8,36)" fg:x="2137" fg:w="1"/><text x="25.7929%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="25.2950%" y="645" width="0.2026%" height="15" fill="rgb(230,126,33)" fg:x="2122" fg:w="17"/><text x="25.6141%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="25.4858%" y="629" width="0.0119%" height="15" fill="rgb(239,140,21)" fg:x="2138" fg:w="1"/><text x="25.8049%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="25.4858%" y="613" width="0.0119%" height="15" fill="rgb(254,104,9)" fg:x="2138" fg:w="1"/><text x="25.8049%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="25.4858%" y="597" width="0.0119%" height="15" fill="rgb(239,52,14)" fg:x="2138" fg:w="1"/><text x="25.8049%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="25.4977%" y="629" width="0.0119%" height="15" fill="rgb(208,227,44)" fg:x="2139" fg:w="1"/><text x="25.8168%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="25.4977%" y="613" width="0.0119%" height="15" fill="rgb(246,18,19)" fg:x="2139" fg:w="1"/><text x="25.8168%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (88 samples, 1.05%)</title><rect x="24.4725%" y="709" width="1.0490%" height="15" fill="rgb(235,228,25)" fg:x="2053" fg:w="88"/><text x="24.7916%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (41 samples, 0.49%)</title><rect x="25.0328%" y="693" width="0.4887%" height="15" fill="rgb(240,156,20)" fg:x="2100" fg:w="41"/><text x="25.3519%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (41 samples, 0.49%)</title><rect x="25.0328%" y="677" width="0.4887%" height="15" fill="rgb(224,8,20)" fg:x="2100" fg:w="41"/><text x="25.3519%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="25.2950%" y="661" width="0.2265%" height="15" fill="rgb(214,12,52)" fg:x="2122" fg:w="19"/><text x="25.6141%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="25.4977%" y="645" width="0.0238%" height="15" fill="rgb(211,220,47)" fg:x="2139" fg:w="2"/><text x="25.8168%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="25.5096%" y="629" width="0.0119%" height="15" fill="rgb(250,173,5)" fg:x="2140" fg:w="1"/><text x="25.8287%" y="639.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="25.5215%" y="693" width="0.0238%" height="15" fill="rgb(250,125,52)" fg:x="2141" fg:w="2"/><text x="25.8406%" y="703.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="25.5215%" y="677" width="0.0238%" height="15" fill="rgb(209,133,18)" fg:x="2141" fg:w="2"/><text x="25.8406%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="25.5215%" y="709" width="0.0358%" height="15" fill="rgb(216,173,22)" fg:x="2141" fg:w="3"/><text x="25.8406%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="25.5454%" y="693" width="0.0119%" height="15" fill="rgb(205,3,22)" fg:x="2143" fg:w="1"/><text x="25.8645%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="25.5573%" y="693" width="0.0119%" height="15" fill="rgb(248,22,20)" fg:x="2144" fg:w="1"/><text x="25.8764%" y="703.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="25.5573%" y="677" width="0.0119%" height="15" fill="rgb(233,6,29)" fg:x="2144" fg:w="1"/><text x="25.8764%" y="687.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="25.5692%" y="693" width="0.0119%" height="15" fill="rgb(240,22,54)" fg:x="2145" fg:w="1"/><text x="25.8883%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="25.5573%" y="709" width="0.0358%" height="15" fill="rgb(231,133,32)" fg:x="2144" fg:w="3"/><text x="25.8764%" y="719.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="25.5811%" y="693" width="0.0119%" height="15" fill="rgb(248,193,4)" fg:x="2146" fg:w="1"/><text x="25.9002%" y="703.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="25.5930%" y="645" width="0.0119%" height="15" fill="rgb(211,178,46)" fg:x="2147" fg:w="1"/><text x="25.9121%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="25.5930%" y="629" width="0.0119%" height="15" fill="rgb(224,5,42)" fg:x="2147" fg:w="1"/><text x="25.9121%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="25.6050%" y="613" width="0.0119%" height="15" fill="rgb(239,176,25)" fg:x="2148" fg:w="1"/><text x="25.9241%" y="623.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="25.6169%" y="613" width="0.0119%" height="15" fill="rgb(245,187,50)" fg:x="2149" fg:w="1"/><text x="25.9360%" y="623.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="25.6288%" y="581" width="0.0358%" height="15" fill="rgb(248,24,15)" fg:x="2150" fg:w="3"/><text x="25.9479%" y="591.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="25.6288%" y="565" width="0.0358%" height="15" fill="rgb(205,166,13)" fg:x="2150" fg:w="3"/><text x="25.9479%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="25.6646%" y="581" width="0.0834%" height="15" fill="rgb(208,114,23)" fg:x="2153" fg:w="7"/><text x="25.9837%" y="591.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="25.6646%" y="565" width="0.0834%" height="15" fill="rgb(239,127,18)" fg:x="2153" fg:w="7"/><text x="25.9837%" y="575.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="25.6646%" y="549" width="0.0834%" height="15" fill="rgb(219,154,28)" fg:x="2153" fg:w="7"/><text x="25.9837%" y="559.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="25.7003%" y="533" width="0.0477%" height="15" fill="rgb(225,157,23)" fg:x="2156" fg:w="4"/><text x="26.0194%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="25.7480%" y="581" width="0.0119%" height="15" fill="rgb(219,8,6)" fg:x="2160" fg:w="1"/><text x="26.0671%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="25.7480%" y="565" width="0.0119%" height="15" fill="rgb(212,47,6)" fg:x="2160" fg:w="1"/><text x="26.0671%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="25.7480%" y="549" width="0.0119%" height="15" fill="rgb(224,190,4)" fg:x="2160" fg:w="1"/><text x="26.0671%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="25.6288%" y="597" width="0.1430%" height="15" fill="rgb(239,183,29)" fg:x="2150" fg:w="12"/><text x="25.9479%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="25.7599%" y="581" width="0.0119%" height="15" fill="rgb(213,57,7)" fg:x="2161" fg:w="1"/><text x="26.0790%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="25.7718%" y="597" width="0.0238%" height="15" fill="rgb(216,148,1)" fg:x="2162" fg:w="2"/><text x="26.0909%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="25.7838%" y="581" width="0.0119%" height="15" fill="rgb(236,182,29)" fg:x="2163" fg:w="1"/><text x="26.1029%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="25.7838%" y="565" width="0.0119%" height="15" fill="rgb(244,120,48)" fg:x="2163" fg:w="1"/><text x="26.1029%" y="575.50"/></g><g><title>operator new (10 samples, 0.12%)</title><rect x="25.7957%" y="581" width="0.1192%" height="15" fill="rgb(206,71,34)" fg:x="2164" fg:w="10"/><text x="26.1148%" y="591.50"/></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="25.7957%" y="565" width="0.1192%" height="15" fill="rgb(242,32,6)" fg:x="2164" fg:w="10"/><text x="26.1148%" y="575.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="25.8076%" y="549" width="0.1073%" height="15" fill="rgb(241,35,3)" fg:x="2165" fg:w="9"/><text x="26.1267%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="25.9268%" y="437" width="0.0119%" height="15" fill="rgb(222,62,19)" fg:x="2175" fg:w="1"/><text x="26.2459%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="25.9268%" y="421" width="0.0119%" height="15" fill="rgb(223,110,41)" fg:x="2175" fg:w="1"/><text x="26.2459%" y="431.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="25.9149%" y="549" width="0.0358%" height="15" fill="rgb(208,224,4)" fg:x="2174" fg:w="3"/><text x="26.2340%" y="559.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (3 samples, 0.04%)</title><rect x="25.9149%" y="533" width="0.0358%" height="15" fill="rgb(241,137,19)" fg:x="2174" fg:w="3"/><text x="26.2340%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="25.9268%" y="517" width="0.0238%" height="15" fill="rgb(244,24,17)" fg:x="2175" fg:w="2"/><text x="26.2459%" y="527.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="25.9268%" y="501" width="0.0238%" height="15" fill="rgb(245,178,49)" fg:x="2175" fg:w="2"/><text x="26.2459%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="25.9268%" y="485" width="0.0238%" height="15" fill="rgb(219,160,38)" fg:x="2175" fg:w="2"/><text x="26.2459%" y="495.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="25.9268%" y="469" width="0.0238%" height="15" fill="rgb(228,137,14)" fg:x="2175" fg:w="2"/><text x="26.2459%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="25.9268%" y="453" width="0.0238%" height="15" fill="rgb(237,134,11)" fg:x="2175" fg:w="2"/><text x="26.2459%" y="463.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="25.9387%" y="437" width="0.0119%" height="15" fill="rgb(211,126,44)" fg:x="2176" fg:w="1"/><text x="26.2578%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="25.9387%" y="421" width="0.0119%" height="15" fill="rgb(226,171,33)" fg:x="2176" fg:w="1"/><text x="26.2578%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (31 samples, 0.37%)</title><rect x="25.5930%" y="661" width="0.3695%" height="15" fill="rgb(253,99,13)" fg:x="2147" fg:w="31"/><text x="25.9121%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (30 samples, 0.36%)</title><rect x="25.6050%" y="645" width="0.3576%" height="15" fill="rgb(244,48,7)" fg:x="2148" fg:w="30"/><text x="25.9241%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (30 samples, 0.36%)</title><rect x="25.6050%" y="629" width="0.3576%" height="15" fill="rgb(244,217,54)" fg:x="2148" fg:w="30"/><text x="25.9241%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (28 samples, 0.33%)</title><rect x="25.6288%" y="613" width="0.3338%" height="15" fill="rgb(224,15,18)" fg:x="2150" fg:w="28"/><text x="25.9479%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="25.7957%" y="597" width="0.1669%" height="15" fill="rgb(244,99,12)" fg:x="2164" fg:w="14"/><text x="26.1148%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="25.9149%" y="581" width="0.0477%" height="15" fill="rgb(233,226,8)" fg:x="2174" fg:w="4"/><text x="26.2340%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="25.9149%" y="565" width="0.0477%" height="15" fill="rgb(229,211,3)" fg:x="2174" fg:w="4"/><text x="26.2340%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="25.9506%" y="549" width="0.0119%" height="15" fill="rgb(216,140,21)" fg:x="2177" fg:w="1"/><text x="26.2697%" y="559.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="25.9506%" y="533" width="0.0119%" height="15" fill="rgb(234,122,30)" fg:x="2177" fg:w="1"/><text x="26.2697%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (41 samples, 0.49%)</title><rect x="25.5930%" y="677" width="0.4887%" height="15" fill="rgb(236,25,46)" fg:x="2147" fg:w="41"/><text x="25.9121%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (10 samples, 0.12%)</title><rect x="25.9626%" y="661" width="0.1192%" height="15" fill="rgb(217,52,54)" fg:x="2178" fg:w="10"/><text x="26.2817%" y="671.50"/></g><g><title>operator new (10 samples, 0.12%)</title><rect x="25.9626%" y="645" width="0.1192%" height="15" fill="rgb(222,29,26)" fg:x="2178" fg:w="10"/><text x="26.2817%" y="655.50"/></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="25.9626%" y="629" width="0.1192%" height="15" fill="rgb(216,177,29)" fg:x="2178" fg:w="10"/><text x="26.2817%" y="639.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="25.9745%" y="613" width="0.1073%" height="15" fill="rgb(247,136,51)" fg:x="2179" fg:w="9"/><text x="26.2936%" y="623.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="26.0818%" y="645" width="0.0119%" height="15" fill="rgb(231,47,47)" fg:x="2188" fg:w="1"/><text x="26.4009%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="26.0818%" y="629" width="0.0119%" height="15" fill="rgb(211,192,36)" fg:x="2188" fg:w="1"/><text x="26.4009%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (43 samples, 0.51%)</title><rect x="25.5930%" y="693" width="0.5126%" height="15" fill="rgb(229,156,32)" fg:x="2147" fg:w="43"/><text x="25.9121%" y="703.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="26.0818%" y="677" width="0.0238%" height="15" fill="rgb(248,213,20)" fg:x="2188" fg:w="2"/><text x="26.4009%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="26.0818%" y="661" width="0.0238%" height="15" fill="rgb(217,64,7)" fg:x="2188" fg:w="2"/><text x="26.4009%" y="671.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="26.0937%" y="645" width="0.0119%" height="15" fill="rgb(232,142,8)" fg:x="2189" fg:w="1"/><text x="26.4128%" y="655.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="26.1175%" y="645" width="0.0238%" height="15" fill="rgb(224,92,44)" fg:x="2191" fg:w="2"/><text x="26.4366%" y="655.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="26.1175%" y="629" width="0.0238%" height="15" fill="rgb(214,169,17)" fg:x="2191" fg:w="2"/><text x="26.4366%" y="639.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="26.1652%" y="613" width="0.0119%" height="15" fill="rgb(210,59,37)" fg:x="2195" fg:w="1"/><text x="26.4843%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="26.1771%" y="613" width="0.0119%" height="15" fill="rgb(214,116,48)" fg:x="2196" fg:w="1"/><text x="26.4962%" y="623.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="26.1771%" y="597" width="0.0119%" height="15" fill="rgb(244,191,6)" fg:x="2196" fg:w="1"/><text x="26.4962%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="26.1771%" y="581" width="0.0119%" height="15" fill="rgb(241,50,52)" fg:x="2196" fg:w="1"/><text x="26.4962%" y="591.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="26.1771%" y="565" width="0.0119%" height="15" fill="rgb(236,75,39)" fg:x="2196" fg:w="1"/><text x="26.4962%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="26.1891%" y="549" width="0.0119%" height="15" fill="rgb(236,99,0)" fg:x="2197" fg:w="1"/><text x="26.5082%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="26.1891%" y="533" width="0.0119%" height="15" fill="rgb(207,202,15)" fg:x="2197" fg:w="1"/><text x="26.5082%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="26.2010%" y="517" width="0.0119%" height="15" fill="rgb(233,207,14)" fg:x="2198" fg:w="1"/><text x="26.5201%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="26.2010%" y="501" width="0.0119%" height="15" fill="rgb(226,27,51)" fg:x="2198" fg:w="1"/><text x="26.5201%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="26.2248%" y="437" width="0.0119%" height="15" fill="rgb(206,104,42)" fg:x="2200" fg:w="1"/><text x="26.5439%" y="447.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="26.2248%" y="421" width="0.0119%" height="15" fill="rgb(212,225,4)" fg:x="2200" fg:w="1"/><text x="26.5439%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="26.1891%" y="565" width="0.1430%" height="15" fill="rgb(233,96,42)" fg:x="2197" fg:w="12"/><text x="26.5082%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="26.2010%" y="549" width="0.1311%" height="15" fill="rgb(229,21,32)" fg:x="2198" fg:w="11"/><text x="26.5201%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="26.2010%" y="533" width="0.1311%" height="15" fill="rgb(226,216,24)" fg:x="2198" fg:w="11"/><text x="26.5201%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="26.2129%" y="517" width="0.1192%" height="15" fill="rgb(221,163,17)" fg:x="2199" fg:w="10"/><text x="26.5320%" y="527.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (10 samples, 0.12%)</title><rect x="26.2129%" y="501" width="0.1192%" height="15" fill="rgb(216,216,42)" fg:x="2199" fg:w="10"/><text x="26.5320%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="26.2248%" y="485" width="0.1073%" height="15" fill="rgb(240,118,7)" fg:x="2200" fg:w="9"/><text x="26.5439%" y="495.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (9 samples, 0.11%)</title><rect x="26.2248%" y="469" width="0.1073%" height="15" fill="rgb(221,67,37)" fg:x="2200" fg:w="9"/><text x="26.5439%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="26.2248%" y="453" width="0.1073%" height="15" fill="rgb(241,32,44)" fg:x="2200" fg:w="9"/><text x="26.5439%" y="463.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (8 samples, 0.10%)</title><rect x="26.2367%" y="437" width="0.0954%" height="15" fill="rgb(235,204,43)" fg:x="2201" fg:w="8"/><text x="26.5558%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="26.2367%" y="421" width="0.0954%" height="15" fill="rgb(213,116,10)" fg:x="2201" fg:w="8"/><text x="26.5558%" y="431.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="26.2487%" y="405" width="0.0834%" height="15" fill="rgb(239,15,48)" fg:x="2202" fg:w="7"/><text x="26.5678%" y="415.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="26.2487%" y="389" width="0.0834%" height="15" fill="rgb(207,123,36)" fg:x="2202" fg:w="7"/><text x="26.5678%" y="399.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="26.2844%" y="373" width="0.0477%" height="15" fill="rgb(209,103,30)" fg:x="2205" fg:w="4"/><text x="26.6035%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="26.1414%" y="629" width="0.2026%" height="15" fill="rgb(238,100,19)" fg:x="2193" fg:w="17"/><text x="26.4605%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="26.1891%" y="613" width="0.1550%" height="15" fill="rgb(244,30,14)" fg:x="2197" fg:w="13"/><text x="26.5082%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="26.1891%" y="597" width="0.1550%" height="15" fill="rgb(249,174,6)" fg:x="2197" fg:w="13"/><text x="26.5082%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="26.1891%" y="581" width="0.1550%" height="15" fill="rgb(235,213,41)" fg:x="2197" fg:w="13"/><text x="26.5082%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="26.3321%" y="565" width="0.0119%" height="15" fill="rgb(213,118,6)" fg:x="2209" fg:w="1"/><text x="26.6512%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="26.3321%" y="549" width="0.0119%" height="15" fill="rgb(235,44,51)" fg:x="2209" fg:w="1"/><text x="26.6512%" y="559.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="26.3321%" y="533" width="0.0119%" height="15" fill="rgb(217,9,53)" fg:x="2209" fg:w="1"/><text x="26.6512%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (19 samples, 0.23%)</title><rect x="26.1414%" y="645" width="0.2265%" height="15" fill="rgb(237,172,34)" fg:x="2193" fg:w="19"/><text x="26.4605%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="26.3440%" y="629" width="0.0238%" height="15" fill="rgb(206,206,11)" fg:x="2210" fg:w="2"/><text x="26.6631%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="26.3559%" y="613" width="0.0119%" height="15" fill="rgb(214,149,29)" fg:x="2211" fg:w="1"/><text x="26.6750%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (68 samples, 0.81%)</title><rect x="25.5930%" y="709" width="0.8106%" height="15" fill="rgb(208,123,3)" fg:x="2147" fg:w="68"/><text x="25.9121%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (25 samples, 0.30%)</title><rect x="26.1056%" y="693" width="0.2980%" height="15" fill="rgb(229,126,4)" fg:x="2190" fg:w="25"/><text x="26.4247%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (25 samples, 0.30%)</title><rect x="26.1056%" y="677" width="0.2980%" height="15" fill="rgb(222,92,36)" fg:x="2190" fg:w="25"/><text x="26.4247%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="26.1175%" y="661" width="0.2861%" height="15" fill="rgb(216,39,41)" fg:x="2191" fg:w="24"/><text x="26.4366%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="26.3679%" y="645" width="0.0358%" height="15" fill="rgb(253,127,28)" fg:x="2212" fg:w="3"/><text x="26.6870%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="26.3679%" y="629" width="0.0358%" height="15" fill="rgb(249,152,51)" fg:x="2212" fg:w="3"/><text x="26.6870%" y="639.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="26.3917%" y="613" width="0.0119%" height="15" fill="rgb(209,123,42)" fg:x="2214" fg:w="1"/><text x="26.7108%" y="623.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="26.4275%" y="661" width="0.0119%" height="15" fill="rgb(241,118,22)" fg:x="2217" fg:w="1"/><text x="26.7466%" y="671.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="26.4275%" y="645" width="0.0119%" height="15" fill="rgb(208,25,7)" fg:x="2217" fg:w="1"/><text x="26.7466%" y="655.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="26.4394%" y="613" width="0.0238%" height="15" fill="rgb(243,144,39)" fg:x="2218" fg:w="2"/><text x="26.7585%" y="623.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="26.4394%" y="597" width="0.0238%" height="15" fill="rgb(250,50,5)" fg:x="2218" fg:w="2"/><text x="26.7585%" y="607.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="26.4513%" y="581" width="0.0119%" height="15" fill="rgb(207,67,11)" fg:x="2219" fg:w="1"/><text x="26.7704%" y="591.50"/></g><g><title>operator new@plt (2 samples, 0.02%)</title><rect x="26.4632%" y="613" width="0.0238%" height="15" fill="rgb(245,204,40)" fg:x="2220" fg:w="2"/><text x="26.7823%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="26.4394%" y="629" width="0.0596%" height="15" fill="rgb(238,228,24)" fg:x="2218" fg:w="5"/><text x="26.7585%" y="639.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="26.4871%" y="613" width="0.0119%" height="15" fill="rgb(217,116,22)" fg:x="2222" fg:w="1"/><text x="26.8062%" y="623.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="26.4990%" y="613" width="0.0119%" height="15" fill="rgb(234,98,12)" fg:x="2223" fg:w="1"/><text x="26.8181%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="26.4990%" y="597" width="0.0119%" height="15" fill="rgb(242,170,50)" fg:x="2223" fg:w="1"/><text x="26.8181%" y="607.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="26.5109%" y="613" width="0.0119%" height="15" fill="rgb(235,7,5)" fg:x="2224" fg:w="1"/><text x="26.8300%" y="623.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="26.5228%" y="581" width="0.0238%" height="15" fill="rgb(241,114,28)" fg:x="2225" fg:w="2"/><text x="26.8419%" y="591.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="26.5228%" y="565" width="0.0238%" height="15" fill="rgb(246,112,42)" fg:x="2225" fg:w="2"/><text x="26.8419%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="26.5228%" y="597" width="0.0596%" height="15" fill="rgb(248,228,14)" fg:x="2225" fg:w="5"/><text x="26.8419%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), parser::push(unsigned short)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="26.5467%" y="581" width="0.0358%" height="15" fill="rgb(208,133,18)" fg:x="2227" fg:w="3"/><text x="26.8658%" y="591.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="26.5824%" y="581" width="0.1073%" height="15" fill="rgb(207,35,49)" fg:x="2230" fg:w="9"/><text x="26.9015%" y="591.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="26.5824%" y="565" width="0.1073%" height="15" fill="rgb(205,68,36)" fg:x="2230" fg:w="9"/><text x="26.9015%" y="575.50"/></g><g><title>_int_malloc (8 samples, 0.10%)</title><rect x="26.5943%" y="549" width="0.0954%" height="15" fill="rgb(245,62,40)" fg:x="2231" fg:w="8"/><text x="26.9134%" y="559.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="26.6897%" y="549" width="0.1073%" height="15" fill="rgb(228,27,24)" fg:x="2239" fg:w="9"/><text x="27.0088%" y="559.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="26.6897%" y="533" width="0.1073%" height="15" fill="rgb(253,19,12)" fg:x="2239" fg:w="9"/><text x="27.0088%" y="543.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="26.7255%" y="517" width="0.0715%" height="15" fill="rgb(232,28,20)" fg:x="2242" fg:w="6"/><text x="27.0446%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="26.8089%" y="453" width="0.0119%" height="15" fill="rgb(218,35,51)" fg:x="2249" fg:w="1"/><text x="27.1280%" y="463.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="26.8089%" y="437" width="0.0119%" height="15" fill="rgb(212,90,40)" fg:x="2249" fg:w="1"/><text x="27.1280%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="26.8208%" y="405" width="0.0119%" height="15" fill="rgb(220,172,12)" fg:x="2250" fg:w="1"/><text x="27.1399%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="26.8208%" y="389" width="0.0119%" height="15" fill="rgb(226,159,20)" fg:x="2250" fg:w="1"/><text x="27.1399%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="26.8208%" y="437" width="0.0238%" height="15" fill="rgb(234,205,16)" fg:x="2250" fg:w="2"/><text x="27.1399%" y="447.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="26.8208%" y="421" width="0.0238%" height="15" fill="rgb(207,9,39)" fg:x="2250" fg:w="2"/><text x="27.1399%" y="431.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="26.8328%" y="405" width="0.0119%" height="15" fill="rgb(249,143,15)" fg:x="2251" fg:w="1"/><text x="27.1519%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="26.8328%" y="389" width="0.0119%" height="15" fill="rgb(253,133,29)" fg:x="2251" fg:w="1"/><text x="27.1519%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="26.8447%" y="405" width="0.0119%" height="15" fill="rgb(221,187,0)" fg:x="2252" fg:w="1"/><text x="27.1638%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="26.8447%" y="389" width="0.0119%" height="15" fill="rgb(205,204,26)" fg:x="2252" fg:w="1"/><text x="27.1638%" y="399.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="26.8447%" y="421" width="0.0238%" height="15" fill="rgb(224,68,54)" fg:x="2252" fg:w="2"/><text x="27.1638%" y="431.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="26.8566%" y="405" width="0.0119%" height="15" fill="rgb(209,67,4)" fg:x="2253" fg:w="1"/><text x="27.1757%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), bool (*)(unsigned int)&gt;::_M_manager (1 samples, 0.01%)</title><rect x="26.8566%" y="389" width="0.0119%" height="15" fill="rgb(228,229,18)" fg:x="2253" fg:w="1"/><text x="27.1757%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="26.8447%" y="437" width="0.0358%" height="15" fill="rgb(231,89,13)" fg:x="2252" fg:w="3"/><text x="27.1638%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="26.8685%" y="421" width="0.0119%" height="15" fill="rgb(210,182,18)" fg:x="2254" fg:w="1"/><text x="27.1876%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="26.8685%" y="405" width="0.0119%" height="15" fill="rgb(240,105,2)" fg:x="2254" fg:w="1"/><text x="27.1876%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="26.8685%" y="389" width="0.0119%" height="15" fill="rgb(207,170,50)" fg:x="2254" fg:w="1"/><text x="27.1876%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="26.8685%" y="373" width="0.0119%" height="15" fill="rgb(232,133,24)" fg:x="2254" fg:w="1"/><text x="27.1876%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="26.8804%" y="437" width="0.0119%" height="15" fill="rgb(235,166,27)" fg:x="2255" fg:w="1"/><text x="27.1995%" y="447.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="26.8804%" y="421" width="0.0119%" height="15" fill="rgb(209,19,13)" fg:x="2255" fg:w="1"/><text x="27.1995%" y="431.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="26.8804%" y="405" width="0.0119%" height="15" fill="rgb(226,79,39)" fg:x="2255" fg:w="1"/><text x="27.1995%" y="415.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="26.8924%" y="389" width="0.1073%" height="15" fill="rgb(222,163,10)" fg:x="2256" fg:w="9"/><text x="27.2115%" y="399.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="26.8924%" y="373" width="0.1073%" height="15" fill="rgb(214,44,19)" fg:x="2256" fg:w="9"/><text x="27.2115%" y="383.50"/></g><g><title>_int_malloc (8 samples, 0.10%)</title><rect x="26.9043%" y="357" width="0.0954%" height="15" fill="rgb(210,217,13)" fg:x="2257" fg:w="8"/><text x="27.2234%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="27.0116%" y="309" width="0.0119%" height="15" fill="rgb(237,61,54)" fg:x="2266" fg:w="1"/><text x="27.3307%" y="319.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="27.0116%" y="293" width="0.0119%" height="15" fill="rgb(226,184,24)" fg:x="2266" fg:w="1"/><text x="27.3307%" y="303.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="27.0235%" y="277" width="0.0358%" height="15" fill="rgb(223,226,4)" fg:x="2267" fg:w="3"/><text x="27.3426%" y="287.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="27.0354%" y="261" width="0.0238%" height="15" fill="rgb(210,26,41)" fg:x="2268" fg:w="2"/><text x="27.3545%" y="271.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="26.9996%" y="389" width="0.0715%" height="15" fill="rgb(220,221,6)" fg:x="2265" fg:w="6"/><text x="27.3187%" y="399.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (6 samples, 0.07%)</title><rect x="26.9996%" y="373" width="0.0715%" height="15" fill="rgb(225,89,49)" fg:x="2265" fg:w="6"/><text x="27.3187%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="26.9996%" y="357" width="0.0715%" height="15" fill="rgb(218,70,45)" fg:x="2265" fg:w="6"/><text x="27.3187%" y="367.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (6 samples, 0.07%)</title><rect x="26.9996%" y="341" width="0.0715%" height="15" fill="rgb(238,166,21)" fg:x="2265" fg:w="6"/><text x="27.3187%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="26.9996%" y="325" width="0.0715%" height="15" fill="rgb(224,141,44)" fg:x="2265" fg:w="6"/><text x="27.3187%" y="335.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (4 samples, 0.05%)</title><rect x="27.0235%" y="309" width="0.0477%" height="15" fill="rgb(230,12,49)" fg:x="2267" fg:w="4"/><text x="27.3426%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="27.0235%" y="293" width="0.0477%" height="15" fill="rgb(212,174,12)" fg:x="2267" fg:w="4"/><text x="27.3426%" y="303.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="27.0592%" y="277" width="0.0119%" height="15" fill="rgb(246,67,9)" fg:x="2270" fg:w="1"/><text x="27.3783%" y="287.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (23 samples, 0.27%)</title><rect x="26.8089%" y="517" width="0.2742%" height="15" fill="rgb(239,35,23)" fg:x="2249" fg:w="23"/><text x="27.1280%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="26.8089%" y="501" width="0.2742%" height="15" fill="rgb(211,167,0)" fg:x="2249" fg:w="23"/><text x="27.1280%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (23 samples, 0.27%)</title><rect x="26.8089%" y="485" width="0.2742%" height="15" fill="rgb(225,119,45)" fg:x="2249" fg:w="23"/><text x="27.1280%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="26.8089%" y="469" width="0.2742%" height="15" fill="rgb(210,162,6)" fg:x="2249" fg:w="23"/><text x="27.1280%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (22 samples, 0.26%)</title><rect x="26.8208%" y="453" width="0.2622%" height="15" fill="rgb(208,118,35)" fg:x="2250" fg:w="22"/><text x="27.1399%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="26.8924%" y="437" width="0.1907%" height="15" fill="rgb(239,4,53)" fg:x="2256" fg:w="16"/><text x="27.2115%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (16 samples, 0.19%)</title><rect x="26.8924%" y="421" width="0.1907%" height="15" fill="rgb(213,130,21)" fg:x="2256" fg:w="16"/><text x="27.2115%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="26.8924%" y="405" width="0.1907%" height="15" fill="rgb(235,148,0)" fg:x="2256" fg:w="16"/><text x="27.2115%" y="415.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="27.0712%" y="389" width="0.0119%" height="15" fill="rgb(244,224,18)" fg:x="2271" fg:w="1"/><text x="27.3903%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="27.0712%" y="373" width="0.0119%" height="15" fill="rgb(211,214,4)" fg:x="2271" fg:w="1"/><text x="27.3903%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="27.0712%" y="357" width="0.0119%" height="15" fill="rgb(206,119,25)" fg:x="2271" fg:w="1"/><text x="27.3903%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (36 samples, 0.43%)</title><rect x="26.7970%" y="533" width="0.4291%" height="15" fill="rgb(243,93,47)" fg:x="2248" fg:w="36"/><text x="27.1161%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="27.0831%" y="517" width="0.1430%" height="15" fill="rgb(224,194,6)" fg:x="2272" fg:w="12"/><text x="27.4022%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="27.0831%" y="501" width="0.1430%" height="15" fill="rgb(243,229,6)" fg:x="2272" fg:w="12"/><text x="27.4022%" y="511.50"/></g><g><title>operator new (12 samples, 0.14%)</title><rect x="27.0831%" y="485" width="0.1430%" height="15" fill="rgb(207,23,50)" fg:x="2272" fg:w="12"/><text x="27.4022%" y="495.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="27.0950%" y="469" width="0.1311%" height="15" fill="rgb(253,192,32)" fg:x="2273" fg:w="11"/><text x="27.4141%" y="479.50"/></g><g><title>_int_malloc (10 samples, 0.12%)</title><rect x="27.1069%" y="453" width="0.1192%" height="15" fill="rgb(213,21,6)" fg:x="2274" fg:w="10"/><text x="27.4260%" y="463.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="27.2380%" y="453" width="0.0119%" height="15" fill="rgb(243,151,13)" fg:x="2285" fg:w="1"/><text x="27.5571%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="27.2380%" y="437" width="0.0119%" height="15" fill="rgb(233,165,41)" fg:x="2285" fg:w="1"/><text x="27.5571%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="27.2619%" y="421" width="0.0119%" height="15" fill="rgb(246,176,45)" fg:x="2287" fg:w="1"/><text x="27.5810%" y="431.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="27.2619%" y="405" width="0.0119%" height="15" fill="rgb(217,170,52)" fg:x="2287" fg:w="1"/><text x="27.5810%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="27.2857%" y="357" width="0.0119%" height="15" fill="rgb(214,203,54)" fg:x="2289" fg:w="1"/><text x="27.6048%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="27.2857%" y="341" width="0.0119%" height="15" fill="rgb(248,215,49)" fg:x="2289" fg:w="1"/><text x="27.6048%" y="351.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="27.2977%" y="341" width="0.0954%" height="15" fill="rgb(208,46,10)" fg:x="2290" fg:w="8"/><text x="27.6168%" y="351.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="27.2977%" y="325" width="0.0954%" height="15" fill="rgb(254,5,31)" fg:x="2290" fg:w="8"/><text x="27.6168%" y="335.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="27.3215%" y="309" width="0.0715%" height="15" fill="rgb(222,104,33)" fg:x="2292" fg:w="6"/><text x="27.6406%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="27.4049%" y="293" width="0.0119%" height="15" fill="rgb(248,49,16)" fg:x="2299" fg:w="1"/><text x="27.7240%" y="303.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="27.4049%" y="277" width="0.0119%" height="15" fill="rgb(232,198,41)" fg:x="2299" fg:w="1"/><text x="27.7240%" y="287.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="27.4049%" y="261" width="0.0119%" height="15" fill="rgb(214,125,3)" fg:x="2299" fg:w="1"/><text x="27.7240%" y="271.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="27.4288%" y="245" width="0.0119%" height="15" fill="rgb(229,220,28)" fg:x="2301" fg:w="1"/><text x="27.7479%" y="255.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="27.4288%" y="229" width="0.0119%" height="15" fill="rgb(222,64,37)" fg:x="2301" fg:w="1"/><text x="27.7479%" y="239.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (3 samples, 0.04%)</title><rect x="27.4169%" y="277" width="0.0358%" height="15" fill="rgb(249,184,13)" fg:x="2300" fg:w="3"/><text x="27.7360%" y="287.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="27.4288%" y="261" width="0.0238%" height="15" fill="rgb(252,176,6)" fg:x="2301" fg:w="2"/><text x="27.7479%" y="271.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="27.4407%" y="245" width="0.0119%" height="15" fill="rgb(228,153,7)" fg:x="2302" fg:w="1"/><text x="27.7598%" y="255.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="27.2738%" y="405" width="0.1907%" height="15" fill="rgb(242,193,5)" fg:x="2288" fg:w="16"/><text x="27.5929%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (16 samples, 0.19%)</title><rect x="27.2738%" y="389" width="0.1907%" height="15" fill="rgb(232,140,9)" fg:x="2288" fg:w="16"/><text x="27.5929%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="27.2738%" y="373" width="0.1907%" height="15" fill="rgb(213,222,16)" fg:x="2288" fg:w="16"/><text x="27.5929%" y="383.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="27.2977%" y="357" width="0.1669%" height="15" fill="rgb(222,75,50)" fg:x="2290" fg:w="14"/><text x="27.6168%" y="367.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (6 samples, 0.07%)</title><rect x="27.3930%" y="341" width="0.0715%" height="15" fill="rgb(205,180,2)" fg:x="2298" fg:w="6"/><text x="27.7121%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="27.3930%" y="325" width="0.0715%" height="15" fill="rgb(216,34,7)" fg:x="2298" fg:w="6"/><text x="27.7121%" y="335.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (5 samples, 0.06%)</title><rect x="27.4049%" y="309" width="0.0596%" height="15" fill="rgb(253,16,32)" fg:x="2299" fg:w="5"/><text x="27.7240%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="27.4169%" y="293" width="0.0477%" height="15" fill="rgb(208,97,28)" fg:x="2300" fg:w="4"/><text x="27.7360%" y="303.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function@plt (1 samples, 0.01%)</title><rect x="27.4526%" y="277" width="0.0119%" height="15" fill="rgb(225,92,11)" fg:x="2303" fg:w="1"/><text x="27.7717%" y="287.50"/></g><g><title>parser::either (88 samples, 1.05%)</title><rect x="26.4275%" y="677" width="1.0490%" height="15" fill="rgb(243,38,12)" fg:x="2217" fg:w="88"/><text x="26.7466%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (87 samples, 1.04%)</title><rect x="26.4394%" y="661" width="1.0371%" height="15" fill="rgb(208,139,16)" fg:x="2218" fg:w="87"/><text x="26.7585%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (87 samples, 1.04%)</title><rect x="26.4394%" y="645" width="1.0371%" height="15" fill="rgb(227,24,9)" fg:x="2218" fg:w="87"/><text x="26.7585%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (82 samples, 0.98%)</title><rect x="26.4990%" y="629" width="0.9775%" height="15" fill="rgb(206,62,11)" fg:x="2223" fg:w="82"/><text x="26.8181%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (80 samples, 0.95%)</title><rect x="26.5228%" y="613" width="0.9536%" height="15" fill="rgb(228,134,27)" fg:x="2225" fg:w="80"/><text x="26.8419%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (75 samples, 0.89%)</title><rect x="26.5824%" y="597" width="0.8940%" height="15" fill="rgb(205,55,33)" fg:x="2230" fg:w="75"/><text x="26.9015%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (66 samples, 0.79%)</title><rect x="26.6897%" y="581" width="0.7867%" height="15" fill="rgb(243,75,43)" fg:x="2239" fg:w="66"/><text x="27.0088%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (66 samples, 0.79%)</title><rect x="26.6897%" y="565" width="0.7867%" height="15" fill="rgb(223,27,42)" fg:x="2239" fg:w="66"/><text x="27.0088%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (57 samples, 0.68%)</title><rect x="26.7970%" y="549" width="0.6795%" height="15" fill="rgb(232,189,33)" fg:x="2248" fg:w="57"/><text x="27.1161%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="27.2261%" y="533" width="0.2503%" height="15" fill="rgb(210,9,39)" fg:x="2284" fg:w="21"/><text x="27.5452%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (21 samples, 0.25%)</title><rect x="27.2261%" y="517" width="0.2503%" height="15" fill="rgb(242,85,26)" fg:x="2284" fg:w="21"/><text x="27.5452%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="27.2261%" y="501" width="0.2503%" height="15" fill="rgb(248,44,4)" fg:x="2284" fg:w="21"/><text x="27.5452%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (21 samples, 0.25%)</title><rect x="27.2261%" y="485" width="0.2503%" height="15" fill="rgb(250,96,46)" fg:x="2284" fg:w="21"/><text x="27.5452%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="27.2261%" y="469" width="0.2503%" height="15" fill="rgb(229,116,26)" fg:x="2284" fg:w="21"/><text x="27.5452%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (19 samples, 0.23%)</title><rect x="27.2500%" y="453" width="0.2265%" height="15" fill="rgb(246,94,34)" fg:x="2286" fg:w="19"/><text x="27.5691%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="27.2500%" y="437" width="0.2265%" height="15" fill="rgb(251,73,21)" fg:x="2286" fg:w="19"/><text x="27.5691%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (17 samples, 0.20%)</title><rect x="27.2738%" y="421" width="0.2026%" height="15" fill="rgb(254,121,25)" fg:x="2288" fg:w="17"/><text x="27.5929%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="27.4645%" y="405" width="0.0119%" height="15" fill="rgb(215,161,49)" fg:x="2304" fg:w="1"/><text x="27.7836%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="27.4645%" y="389" width="0.0119%" height="15" fill="rgb(221,43,13)" fg:x="2304" fg:w="1"/><text x="27.7836%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="27.4645%" y="373" width="0.0119%" height="15" fill="rgb(249,5,37)" fg:x="2304" fg:w="1"/><text x="27.7836%" y="383.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="27.4765%" y="661" width="0.0358%" height="15" fill="rgb(226,25,44)" fg:x="2305" fg:w="3"/><text x="27.7956%" y="671.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="27.4884%" y="645" width="0.0238%" height="15" fill="rgb(238,189,16)" fg:x="2306" fg:w="2"/><text x="27.8075%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="27.5122%" y="661" width="0.0119%" height="15" fill="rgb(251,186,8)" fg:x="2308" fg:w="1"/><text x="27.8313%" y="671.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="27.5361%" y="645" width="0.0238%" height="15" fill="rgb(254,34,31)" fg:x="2310" fg:w="2"/><text x="27.8552%" y="655.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="27.5361%" y="629" width="0.0238%" height="15" fill="rgb(225,215,27)" fg:x="2310" fg:w="2"/><text x="27.8552%" y="639.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="27.5599%" y="645" width="0.0119%" height="15" fill="rgb(221,192,48)" fg:x="2312" fg:w="1"/><text x="27.8790%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="27.5718%" y="645" width="0.0119%" height="15" fill="rgb(219,137,20)" fg:x="2313" fg:w="1"/><text x="27.8909%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="27.5718%" y="629" width="0.0119%" height="15" fill="rgb(219,84,11)" fg:x="2313" fg:w="1"/><text x="27.8909%" y="639.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="27.5837%" y="629" width="0.0358%" height="15" fill="rgb(224,10,23)" fg:x="2314" fg:w="3"/><text x="27.9028%" y="639.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="27.5837%" y="613" width="0.0358%" height="15" fill="rgb(248,22,39)" fg:x="2314" fg:w="3"/><text x="27.9028%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="27.6195%" y="629" width="0.0119%" height="15" fill="rgb(212,154,20)" fg:x="2317" fg:w="1"/><text x="27.9386%" y="639.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="27.6553%" y="613" width="0.0238%" height="15" fill="rgb(236,199,50)" fg:x="2320" fg:w="2"/><text x="27.9744%" y="623.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="27.6553%" y="597" width="0.0238%" height="15" fill="rgb(211,9,17)" fg:x="2320" fg:w="2"/><text x="27.9744%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="27.6791%" y="613" width="0.0238%" height="15" fill="rgb(243,216,36)" fg:x="2322" fg:w="2"/><text x="27.9982%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="27.7029%" y="581" width="0.0119%" height="15" fill="rgb(250,2,10)" fg:x="2324" fg:w="1"/><text x="28.0220%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="27.7029%" y="565" width="0.0119%" height="15" fill="rgb(226,50,48)" fg:x="2324" fg:w="1"/><text x="28.0220%" y="575.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="27.7149%" y="581" width="0.0119%" height="15" fill="rgb(243,81,16)" fg:x="2325" fg:w="1"/><text x="28.0340%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="27.7268%" y="565" width="0.0119%" height="15" fill="rgb(250,14,2)" fg:x="2326" fg:w="1"/><text x="28.0459%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="27.7268%" y="549" width="0.0119%" height="15" fill="rgb(233,135,29)" fg:x="2326" fg:w="1"/><text x="28.0459%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="27.7387%" y="565" width="0.0119%" height="15" fill="rgb(224,64,43)" fg:x="2327" fg:w="1"/><text x="28.0578%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="27.7506%" y="533" width="0.0119%" height="15" fill="rgb(238,84,13)" fg:x="2328" fg:w="1"/><text x="28.0697%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="27.7506%" y="517" width="0.0119%" height="15" fill="rgb(253,48,26)" fg:x="2328" fg:w="1"/><text x="28.0697%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="27.7506%" y="565" width="0.0238%" height="15" fill="rgb(205,223,31)" fg:x="2328" fg:w="2"/><text x="28.0697%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="27.7506%" y="549" width="0.0238%" height="15" fill="rgb(221,41,32)" fg:x="2328" fg:w="2"/><text x="28.0697%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="27.7625%" y="533" width="0.0119%" height="15" fill="rgb(213,158,31)" fg:x="2329" fg:w="1"/><text x="28.0816%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="27.7745%" y="549" width="0.0119%" height="15" fill="rgb(245,126,43)" fg:x="2330" fg:w="1"/><text x="28.0936%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="27.7745%" y="533" width="0.0119%" height="15" fill="rgb(227,7,22)" fg:x="2330" fg:w="1"/><text x="28.0936%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="27.7864%" y="549" width="0.0358%" height="15" fill="rgb(252,90,44)" fg:x="2331" fg:w="3"/><text x="28.1055%" y="559.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="27.7864%" y="533" width="0.0358%" height="15" fill="rgb(253,91,0)" fg:x="2331" fg:w="3"/><text x="28.1055%" y="543.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="27.7983%" y="517" width="0.0238%" height="15" fill="rgb(252,175,49)" fg:x="2332" fg:w="2"/><text x="28.1174%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="27.7745%" y="565" width="0.0596%" height="15" fill="rgb(246,150,1)" fg:x="2330" fg:w="5"/><text x="28.0936%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="27.8221%" y="549" width="0.0119%" height="15" fill="rgb(241,192,25)" fg:x="2334" fg:w="1"/><text x="28.1412%" y="559.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="27.8221%" y="533" width="0.0119%" height="15" fill="rgb(239,187,11)" fg:x="2334" fg:w="1"/><text x="28.1412%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="27.8341%" y="565" width="0.0119%" height="15" fill="rgb(218,202,51)" fg:x="2335" fg:w="1"/><text x="28.1532%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="27.8341%" y="549" width="0.0119%" height="15" fill="rgb(225,176,8)" fg:x="2335" fg:w="1"/><text x="28.1532%" y="559.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="27.8460%" y="549" width="0.0238%" height="15" fill="rgb(219,122,41)" fg:x="2336" fg:w="2"/><text x="28.1651%" y="559.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="27.8460%" y="533" width="0.0238%" height="15" fill="rgb(248,140,20)" fg:x="2336" fg:w="2"/><text x="28.1651%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="27.8698%" y="501" width="0.0119%" height="15" fill="rgb(245,41,37)" fg:x="2338" fg:w="1"/><text x="28.1889%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="27.8698%" y="485" width="0.0119%" height="15" fill="rgb(235,82,39)" fg:x="2338" fg:w="1"/><text x="28.1889%" y="495.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="27.8817%" y="501" width="0.0119%" height="15" fill="rgb(230,108,42)" fg:x="2339" fg:w="1"/><text x="28.2008%" y="511.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="27.8937%" y="501" width="0.0119%" height="15" fill="rgb(215,150,50)" fg:x="2340" fg:w="1"/><text x="28.2128%" y="511.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="27.8698%" y="533" width="0.0596%" height="15" fill="rgb(233,212,5)" fg:x="2338" fg:w="5"/><text x="28.1889%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="27.8698%" y="517" width="0.0596%" height="15" fill="rgb(245,80,22)" fg:x="2338" fg:w="5"/><text x="28.1889%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="27.9056%" y="501" width="0.0238%" height="15" fill="rgb(238,129,16)" fg:x="2341" fg:w="2"/><text x="28.2247%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="27.9056%" y="485" width="0.0238%" height="15" fill="rgb(240,19,0)" fg:x="2341" fg:w="2"/><text x="28.2247%" y="495.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="27.9056%" y="469" width="0.0238%" height="15" fill="rgb(232,42,35)" fg:x="2341" fg:w="2"/><text x="28.2247%" y="479.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="27.9175%" y="453" width="0.0119%" height="15" fill="rgb(223,130,24)" fg:x="2342" fg:w="1"/><text x="28.2366%" y="463.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="27.9294%" y="517" width="0.0119%" height="15" fill="rgb(237,16,22)" fg:x="2343" fg:w="1"/><text x="28.2485%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="27.9294%" y="501" width="0.0119%" height="15" fill="rgb(248,192,20)" fg:x="2343" fg:w="1"/><text x="28.2485%" y="511.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="27.9414%" y="517" width="0.0119%" height="15" fill="rgb(233,167,2)" fg:x="2344" fg:w="1"/><text x="28.2605%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (22 samples, 0.26%)</title><rect x="27.7029%" y="597" width="0.2622%" height="15" fill="rgb(252,71,44)" fg:x="2324" fg:w="22"/><text x="28.0220%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (20 samples, 0.24%)</title><rect x="27.7268%" y="581" width="0.2384%" height="15" fill="rgb(238,37,47)" fg:x="2326" fg:w="20"/><text x="28.0459%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="27.8460%" y="565" width="0.1192%" height="15" fill="rgb(214,202,54)" fg:x="2336" fg:w="10"/><text x="28.1651%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="27.8698%" y="549" width="0.0954%" height="15" fill="rgb(254,165,40)" fg:x="2338" fg:w="8"/><text x="28.1889%" y="559.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="27.9294%" y="533" width="0.0358%" height="15" fill="rgb(246,173,38)" fg:x="2343" fg:w="3"/><text x="28.2485%" y="543.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="27.9533%" y="517" width="0.0119%" height="15" fill="rgb(215,3,27)" fg:x="2345" fg:w="1"/><text x="28.2724%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="27.9652%" y="597" width="0.0238%" height="15" fill="rgb(239,169,51)" fg:x="2346" fg:w="2"/><text x="28.2843%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="27.9771%" y="581" width="0.0119%" height="15" fill="rgb(212,5,25)" fg:x="2347" fg:w="1"/><text x="28.2962%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="27.9771%" y="565" width="0.0119%" height="15" fill="rgb(243,45,17)" fg:x="2347" fg:w="1"/><text x="28.2962%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (27 samples, 0.32%)</title><rect x="27.7029%" y="613" width="0.3219%" height="15" fill="rgb(242,97,9)" fg:x="2324" fg:w="27"/><text x="28.0220%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="27.9890%" y="597" width="0.0358%" height="15" fill="rgb(228,71,31)" fg:x="2348" fg:w="3"/><text x="28.3081%" y="607.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="27.9890%" y="581" width="0.0358%" height="15" fill="rgb(252,184,16)" fg:x="2348" fg:w="3"/><text x="28.3081%" y="591.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="27.9890%" y="565" width="0.0358%" height="15" fill="rgb(236,169,46)" fg:x="2348" fg:w="3"/><text x="28.3081%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="28.0367%" y="581" width="0.0119%" height="15" fill="rgb(207,17,47)" fg:x="2352" fg:w="1"/><text x="28.3558%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="28.0367%" y="565" width="0.0119%" height="15" fill="rgb(206,201,28)" fg:x="2352" fg:w="1"/><text x="28.3558%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="28.0486%" y="549" width="0.0119%" height="15" fill="rgb(224,184,23)" fg:x="2353" fg:w="1"/><text x="28.3677%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="28.0486%" y="533" width="0.0119%" height="15" fill="rgb(208,139,48)" fg:x="2353" fg:w="1"/><text x="28.3677%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="28.0606%" y="533" width="0.0119%" height="15" fill="rgb(208,130,10)" fg:x="2354" fg:w="1"/><text x="28.3797%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="28.0725%" y="533" width="0.0119%" height="15" fill="rgb(211,213,45)" fg:x="2355" fg:w="1"/><text x="28.3916%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="28.0844%" y="517" width="0.0119%" height="15" fill="rgb(235,100,30)" fg:x="2356" fg:w="1"/><text x="28.4035%" y="527.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="28.0963%" y="517" width="0.0119%" height="15" fill="rgb(206,144,31)" fg:x="2357" fg:w="1"/><text x="28.4154%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="28.1082%" y="485" width="0.0119%" height="15" fill="rgb(224,200,26)" fg:x="2358" fg:w="1"/><text x="28.4273%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="28.1082%" y="469" width="0.0119%" height="15" fill="rgb(247,104,53)" fg:x="2358" fg:w="1"/><text x="28.4273%" y="479.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="28.1202%" y="485" width="0.0119%" height="15" fill="rgb(220,14,17)" fg:x="2359" fg:w="1"/><text x="28.4393%" y="495.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="28.1321%" y="469" width="0.0238%" height="15" fill="rgb(230,140,40)" fg:x="2360" fg:w="2"/><text x="28.4512%" y="479.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="28.1440%" y="453" width="0.0119%" height="15" fill="rgb(229,2,41)" fg:x="2361" fg:w="1"/><text x="28.4631%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="28.1321%" y="485" width="0.0477%" height="15" fill="rgb(232,89,16)" fg:x="2360" fg:w="4"/><text x="28.4512%" y="495.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="28.1559%" y="469" width="0.0238%" height="15" fill="rgb(247,59,52)" fg:x="2362" fg:w="2"/><text x="28.4750%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="28.0486%" y="565" width="0.1669%" height="15" fill="rgb(226,110,21)" fg:x="2353" fg:w="14"/><text x="28.3677%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="28.0606%" y="549" width="0.1550%" height="15" fill="rgb(224,176,43)" fg:x="2354" fg:w="13"/><text x="28.3797%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="28.0844%" y="533" width="0.1311%" height="15" fill="rgb(221,73,6)" fg:x="2356" fg:w="11"/><text x="28.4035%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="28.1082%" y="517" width="0.1073%" height="15" fill="rgb(232,78,19)" fg:x="2358" fg:w="9"/><text x="28.4273%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="28.1082%" y="501" width="0.1073%" height="15" fill="rgb(233,112,48)" fg:x="2358" fg:w="9"/><text x="28.4273%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="28.1798%" y="485" width="0.0358%" height="15" fill="rgb(243,131,47)" fg:x="2364" fg:w="3"/><text x="28.4989%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="28.1798%" y="469" width="0.0358%" height="15" fill="rgb(226,51,1)" fg:x="2364" fg:w="3"/><text x="28.4989%" y="479.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="28.1917%" y="453" width="0.0238%" height="15" fill="rgb(247,58,7)" fg:x="2365" fg:w="2"/><text x="28.5108%" y="463.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="28.1917%" y="437" width="0.0238%" height="15" fill="rgb(209,7,32)" fg:x="2365" fg:w="2"/><text x="28.5108%" y="447.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="28.2155%" y="549" width="0.0119%" height="15" fill="rgb(209,39,41)" fg:x="2367" fg:w="1"/><text x="28.5346%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="28.2155%" y="533" width="0.0119%" height="15" fill="rgb(226,182,46)" fg:x="2367" fg:w="1"/><text x="28.5346%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="28.2274%" y="533" width="0.0119%" height="15" fill="rgb(230,219,10)" fg:x="2368" fg:w="1"/><text x="28.5465%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="28.2274%" y="517" width="0.0119%" height="15" fill="rgb(227,175,30)" fg:x="2368" fg:w="1"/><text x="28.5465%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="28.0486%" y="581" width="0.2026%" height="15" fill="rgb(217,2,50)" fg:x="2353" fg:w="17"/><text x="28.3677%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="28.2155%" y="565" width="0.0358%" height="15" fill="rgb(229,160,0)" fg:x="2367" fg:w="3"/><text x="28.5346%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="28.2274%" y="549" width="0.0238%" height="15" fill="rgb(207,78,37)" fg:x="2368" fg:w="2"/><text x="28.5465%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="28.2394%" y="533" width="0.0119%" height="15" fill="rgb(225,57,0)" fg:x="2369" fg:w="1"/><text x="28.5585%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="28.2513%" y="581" width="0.0358%" height="15" fill="rgb(232,154,2)" fg:x="2370" fg:w="3"/><text x="28.5704%" y="591.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="28.2513%" y="565" width="0.0358%" height="15" fill="rgb(241,212,25)" fg:x="2370" fg:w="3"/><text x="28.5704%" y="575.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="28.2632%" y="549" width="0.0238%" height="15" fill="rgb(226,69,20)" fg:x="2371" fg:w="2"/><text x="28.5823%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="28.0248%" y="597" width="0.2861%" height="15" fill="rgb(247,184,54)" fg:x="2351" fg:w="24"/><text x="28.3439%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="28.2870%" y="581" width="0.0238%" height="15" fill="rgb(210,145,0)" fg:x="2373" fg:w="2"/><text x="28.6061%" y="591.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="28.2870%" y="565" width="0.0238%" height="15" fill="rgb(253,82,12)" fg:x="2373" fg:w="2"/><text x="28.6061%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="28.2990%" y="549" width="0.0119%" height="15" fill="rgb(245,42,11)" fg:x="2374" fg:w="1"/><text x="28.6181%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (28 samples, 0.33%)</title><rect x="28.0248%" y="613" width="0.3338%" height="15" fill="rgb(219,147,32)" fg:x="2351" fg:w="28"/><text x="28.3439%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="28.3109%" y="597" width="0.0477%" height="15" fill="rgb(246,12,7)" fg:x="2375" fg:w="4"/><text x="28.6300%" y="607.50"/></g><g><title>__GI___libc_free (4 samples, 0.05%)</title><rect x="28.3109%" y="581" width="0.0477%" height="15" fill="rgb(243,50,9)" fg:x="2375" fg:w="4"/><text x="28.6300%" y="591.50"/></g><g><title>_int_free (4 samples, 0.05%)</title><rect x="28.3109%" y="565" width="0.0477%" height="15" fill="rgb(219,149,6)" fg:x="2375" fg:w="4"/><text x="28.6300%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (72 samples, 0.86%)</title><rect x="27.5241%" y="661" width="0.8583%" height="15" fill="rgb(241,51,42)" fg:x="2309" fg:w="72"/><text x="27.8432%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (67 samples, 0.80%)</title><rect x="27.5837%" y="645" width="0.7987%" height="15" fill="rgb(226,128,27)" fg:x="2314" fg:w="67"/><text x="27.9028%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (63 samples, 0.75%)</title><rect x="27.6314%" y="629" width="0.7510%" height="15" fill="rgb(244,144,4)" fg:x="2318" fg:w="63"/><text x="27.9505%" y="639.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="28.3586%" y="613" width="0.0238%" height="15" fill="rgb(221,4,13)" fg:x="2379" fg:w="2"/><text x="28.6777%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="28.3586%" y="597" width="0.0238%" height="15" fill="rgb(208,170,28)" fg:x="2379" fg:w="2"/><text x="28.6777%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="28.3586%" y="581" width="0.0238%" height="15" fill="rgb(226,131,13)" fg:x="2379" fg:w="2"/><text x="28.6777%" y="591.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="28.3824%" y="549" width="0.1311%" height="15" fill="rgb(215,72,41)" fg:x="2381" fg:w="11"/><text x="28.7015%" y="559.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="28.3824%" y="533" width="0.1311%" height="15" fill="rgb(243,108,20)" fg:x="2381" fg:w="11"/><text x="28.7015%" y="543.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="28.4062%" y="517" width="0.1073%" height="15" fill="rgb(230,189,17)" fg:x="2383" fg:w="9"/><text x="28.7253%" y="527.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="28.3824%" y="565" width="0.1550%" height="15" fill="rgb(220,50,17)" fg:x="2381" fg:w="13"/><text x="28.7015%" y="575.50"/></g><g><title>operator new@plt (2 samples, 0.02%)</title><rect x="28.5135%" y="549" width="0.0238%" height="15" fill="rgb(248,152,48)" fg:x="2392" fg:w="2"/><text x="28.8326%" y="559.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="28.5612%" y="533" width="0.0238%" height="15" fill="rgb(244,91,11)" fg:x="2396" fg:w="2"/><text x="28.8803%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="28.5731%" y="517" width="0.0119%" height="15" fill="rgb(220,157,5)" fg:x="2397" fg:w="1"/><text x="28.8922%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="28.5851%" y="501" width="0.0119%" height="15" fill="rgb(253,137,8)" fg:x="2398" fg:w="1"/><text x="28.9042%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="28.5851%" y="485" width="0.0119%" height="15" fill="rgb(217,137,51)" fg:x="2398" fg:w="1"/><text x="28.9042%" y="495.50"/></g><g><title>operator new (12 samples, 0.14%)</title><rect x="28.5970%" y="469" width="0.1430%" height="15" fill="rgb(218,209,53)" fg:x="2399" fg:w="12"/><text x="28.9161%" y="479.50"/></g><g><title>__GI___libc_malloc (12 samples, 0.14%)</title><rect x="28.5970%" y="453" width="0.1430%" height="15" fill="rgb(249,137,25)" fg:x="2399" fg:w="12"/><text x="28.9161%" y="463.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="28.6327%" y="437" width="0.1073%" height="15" fill="rgb(239,155,26)" fg:x="2402" fg:w="9"/><text x="28.9518%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="28.7400%" y="453" width="0.0119%" height="15" fill="rgb(227,85,46)" fg:x="2411" fg:w="1"/><text x="29.0591%" y="463.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="28.7519%" y="437" width="0.0358%" height="15" fill="rgb(251,107,43)" fg:x="2412" fg:w="3"/><text x="29.0710%" y="447.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="28.7519%" y="421" width="0.0358%" height="15" fill="rgb(234,170,33)" fg:x="2412" fg:w="3"/><text x="29.0710%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="28.7519%" y="453" width="0.0954%" height="15" fill="rgb(206,29,35)" fg:x="2412" fg:w="8"/><text x="29.0710%" y="463.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="28.7877%" y="437" width="0.0596%" height="15" fill="rgb(227,138,25)" fg:x="2415" fg:w="5"/><text x="29.1068%" y="447.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="28.7877%" y="421" width="0.0596%" height="15" fill="rgb(249,131,35)" fg:x="2415" fg:w="5"/><text x="29.1068%" y="431.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="28.7877%" y="405" width="0.0596%" height="15" fill="rgb(239,6,40)" fg:x="2415" fg:w="5"/><text x="29.1068%" y="415.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="28.7996%" y="389" width="0.0477%" height="15" fill="rgb(246,136,47)" fg:x="2416" fg:w="4"/><text x="29.1187%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="28.8473%" y="437" width="0.0119%" height="15" fill="rgb(253,58,26)" fg:x="2420" fg:w="1"/><text x="29.1664%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="28.8473%" y="421" width="0.0119%" height="15" fill="rgb(237,141,10)" fg:x="2420" fg:w="1"/><text x="29.1664%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="28.8592%" y="325" width="0.0119%" height="15" fill="rgb(234,156,12)" fg:x="2421" fg:w="1"/><text x="29.1783%" y="335.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="28.8592%" y="309" width="0.0119%" height="15" fill="rgb(243,224,36)" fg:x="2421" fg:w="1"/><text x="29.1783%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (25 samples, 0.30%)</title><rect x="28.5851%" y="517" width="0.2980%" height="15" fill="rgb(205,229,51)" fg:x="2398" fg:w="25"/><text x="28.9042%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (24 samples, 0.29%)</title><rect x="28.5970%" y="501" width="0.2861%" height="15" fill="rgb(223,189,4)" fg:x="2399" fg:w="24"/><text x="28.9161%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="28.5970%" y="485" width="0.2861%" height="15" fill="rgb(249,167,54)" fg:x="2399" fg:w="24"/><text x="28.9161%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="28.7400%" y="469" width="0.1430%" height="15" fill="rgb(218,34,28)" fg:x="2411" fg:w="12"/><text x="29.0591%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="28.8473%" y="453" width="0.0358%" height="15" fill="rgb(232,109,42)" fg:x="2420" fg:w="3"/><text x="29.1664%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="28.8592%" y="437" width="0.0238%" height="15" fill="rgb(248,214,46)" fg:x="2421" fg:w="2"/><text x="29.1783%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="28.8592%" y="421" width="0.0238%" height="15" fill="rgb(244,216,40)" fg:x="2421" fg:w="2"/><text x="29.1783%" y="431.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="28.8592%" y="405" width="0.0238%" height="15" fill="rgb(231,226,31)" fg:x="2421" fg:w="2"/><text x="29.1783%" y="415.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="28.8592%" y="389" width="0.0238%" height="15" fill="rgb(238,38,43)" fg:x="2421" fg:w="2"/><text x="29.1783%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="28.8592%" y="373" width="0.0238%" height="15" fill="rgb(208,88,43)" fg:x="2421" fg:w="2"/><text x="29.1783%" y="383.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="28.8592%" y="357" width="0.0238%" height="15" fill="rgb(205,136,37)" fg:x="2421" fg:w="2"/><text x="29.1783%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="28.8592%" y="341" width="0.0238%" height="15" fill="rgb(237,34,14)" fg:x="2421" fg:w="2"/><text x="29.1783%" y="351.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="28.8711%" y="325" width="0.0119%" height="15" fill="rgb(236,193,44)" fg:x="2422" fg:w="1"/><text x="29.1902%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="28.8711%" y="309" width="0.0119%" height="15" fill="rgb(231,48,10)" fg:x="2422" fg:w="1"/><text x="29.1902%" y="319.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="28.8711%" y="293" width="0.0119%" height="15" fill="rgb(213,141,34)" fg:x="2422" fg:w="1"/><text x="29.1902%" y="303.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="28.8711%" y="277" width="0.0119%" height="15" fill="rgb(249,130,34)" fg:x="2422" fg:w="1"/><text x="29.1902%" y="287.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (32 samples, 0.38%)</title><rect x="28.5851%" y="533" width="0.3815%" height="15" fill="rgb(219,42,41)" fg:x="2398" fg:w="32"/><text x="28.9042%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (7 samples, 0.08%)</title><rect x="28.8831%" y="517" width="0.0834%" height="15" fill="rgb(224,100,54)" fg:x="2423" fg:w="7"/><text x="29.2022%" y="527.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="28.8950%" y="501" width="0.0715%" height="15" fill="rgb(229,200,27)" fg:x="2424" fg:w="6"/><text x="29.2141%" y="511.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="28.8950%" y="485" width="0.0715%" height="15" fill="rgb(217,118,10)" fg:x="2424" fg:w="6"/><text x="29.2141%" y="495.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="28.9069%" y="469" width="0.0596%" height="15" fill="rgb(206,22,3)" fg:x="2425" fg:w="5"/><text x="29.2260%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (35 samples, 0.42%)</title><rect x="28.5612%" y="549" width="0.4172%" height="15" fill="rgb(232,163,46)" fg:x="2396" fg:w="35"/><text x="28.8803%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="28.9665%" y="533" width="0.0119%" height="15" fill="rgb(206,95,13)" fg:x="2430" fg:w="1"/><text x="29.2856%" y="543.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="28.9784%" y="533" width="0.0477%" height="15" fill="rgb(253,154,18)" fg:x="2431" fg:w="4"/><text x="29.2975%" y="543.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="28.9784%" y="517" width="0.0477%" height="15" fill="rgb(219,32,23)" fg:x="2431" fg:w="4"/><text x="29.2975%" y="527.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="28.9903%" y="501" width="0.0358%" height="15" fill="rgb(230,191,45)" fg:x="2432" fg:w="3"/><text x="29.3094%" y="511.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="29.0380%" y="469" width="0.0119%" height="15" fill="rgb(229,64,36)" fg:x="2436" fg:w="1"/><text x="29.3571%" y="479.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="29.0380%" y="453" width="0.0119%" height="15" fill="rgb(205,129,25)" fg:x="2436" fg:w="1"/><text x="29.3571%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="29.0380%" y="437" width="0.0119%" height="15" fill="rgb(254,112,7)" fg:x="2436" fg:w="1"/><text x="29.3571%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="29.0380%" y="421" width="0.0119%" height="15" fill="rgb(226,53,48)" fg:x="2436" fg:w="1"/><text x="29.3571%" y="431.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="29.0380%" y="405" width="0.0119%" height="15" fill="rgb(214,153,38)" fg:x="2436" fg:w="1"/><text x="29.3571%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="29.0619%" y="373" width="0.0119%" height="15" fill="rgb(243,101,7)" fg:x="2438" fg:w="1"/><text x="29.3810%" y="383.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="29.0738%" y="357" width="0.0238%" height="15" fill="rgb(240,140,22)" fg:x="2439" fg:w="2"/><text x="29.3929%" y="367.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="29.0738%" y="341" width="0.0238%" height="15" fill="rgb(235,114,2)" fg:x="2439" fg:w="2"/><text x="29.3929%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="29.0976%" y="309" width="0.1192%" height="15" fill="rgb(242,59,12)" fg:x="2441" fg:w="10"/><text x="29.4167%" y="319.50"/></g><g><title>operator new (10 samples, 0.12%)</title><rect x="29.0976%" y="293" width="0.1192%" height="15" fill="rgb(252,134,9)" fg:x="2441" fg:w="10"/><text x="29.4167%" y="303.50"/></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="29.0976%" y="277" width="0.1192%" height="15" fill="rgb(236,4,44)" fg:x="2441" fg:w="10"/><text x="29.4167%" y="287.50"/></g><g><title>_int_malloc (8 samples, 0.10%)</title><rect x="29.1215%" y="261" width="0.0954%" height="15" fill="rgb(254,172,41)" fg:x="2443" fg:w="8"/><text x="29.4406%" y="271.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="29.2168%" y="293" width="0.0119%" height="15" fill="rgb(244,63,20)" fg:x="2451" fg:w="1"/><text x="29.5359%" y="303.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="29.2168%" y="277" width="0.0119%" height="15" fill="rgb(250,73,31)" fg:x="2451" fg:w="1"/><text x="29.5359%" y="287.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="29.2288%" y="261" width="0.0238%" height="15" fill="rgb(241,38,36)" fg:x="2452" fg:w="2"/><text x="29.5479%" y="271.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="29.2288%" y="245" width="0.0238%" height="15" fill="rgb(245,211,2)" fg:x="2452" fg:w="2"/><text x="29.5479%" y="255.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="29.0380%" y="485" width="0.2265%" height="15" fill="rgb(206,120,28)" fg:x="2436" fg:w="19"/><text x="29.3571%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (18 samples, 0.21%)</title><rect x="29.0499%" y="469" width="0.2146%" height="15" fill="rgb(211,59,34)" fg:x="2437" fg:w="18"/><text x="29.3690%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="29.0499%" y="453" width="0.2146%" height="15" fill="rgb(233,168,5)" fg:x="2437" fg:w="18"/><text x="29.3690%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (18 samples, 0.21%)</title><rect x="29.0499%" y="437" width="0.2146%" height="15" fill="rgb(234,33,13)" fg:x="2437" fg:w="18"/><text x="29.3690%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="29.0499%" y="421" width="0.2146%" height="15" fill="rgb(231,150,26)" fg:x="2437" fg:w="18"/><text x="29.3690%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (18 samples, 0.21%)</title><rect x="29.0499%" y="405" width="0.2146%" height="15" fill="rgb(217,191,4)" fg:x="2437" fg:w="18"/><text x="29.3690%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="29.0499%" y="389" width="0.2146%" height="15" fill="rgb(246,198,38)" fg:x="2437" fg:w="18"/><text x="29.3690%" y="399.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="29.0738%" y="373" width="0.1907%" height="15" fill="rgb(245,64,37)" fg:x="2439" fg:w="16"/><text x="29.3929%" y="383.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (14 samples, 0.17%)</title><rect x="29.0976%" y="357" width="0.1669%" height="15" fill="rgb(250,30,36)" fg:x="2441" fg:w="14"/><text x="29.4167%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="29.0976%" y="341" width="0.1669%" height="15" fill="rgb(217,86,53)" fg:x="2441" fg:w="14"/><text x="29.4167%" y="351.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (14 samples, 0.17%)</title><rect x="29.0976%" y="325" width="0.1669%" height="15" fill="rgb(228,157,16)" fg:x="2441" fg:w="14"/><text x="29.4167%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="29.2168%" y="309" width="0.0477%" height="15" fill="rgb(217,59,31)" fg:x="2451" fg:w="4"/><text x="29.5359%" y="319.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (3 samples, 0.04%)</title><rect x="29.2288%" y="293" width="0.0358%" height="15" fill="rgb(237,138,41)" fg:x="2452" fg:w="3"/><text x="29.5479%" y="303.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="29.2288%" y="277" width="0.0358%" height="15" fill="rgb(227,91,49)" fg:x="2452" fg:w="3"/><text x="29.5479%" y="287.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="29.2526%" y="261" width="0.0119%" height="15" fill="rgb(247,21,44)" fg:x="2454" fg:w="1"/><text x="29.5717%" y="271.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="29.2526%" y="245" width="0.0119%" height="15" fill="rgb(219,210,51)" fg:x="2454" fg:w="1"/><text x="29.5717%" y="255.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (21 samples, 0.25%)</title><rect x="29.0261%" y="501" width="0.2503%" height="15" fill="rgb(209,140,6)" fg:x="2435" fg:w="21"/><text x="29.3452%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="29.2645%" y="485" width="0.0119%" height="15" fill="rgb(221,188,24)" fg:x="2455" fg:w="1"/><text x="29.5836%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="29.0261%" y="517" width="0.2742%" height="15" fill="rgb(232,154,20)" fg:x="2435" fg:w="23"/><text x="29.3452%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="29.2764%" y="501" width="0.0238%" height="15" fill="rgb(244,137,50)" fg:x="2456" fg:w="2"/><text x="29.5955%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="29.2764%" y="485" width="0.0238%" height="15" fill="rgb(225,185,43)" fg:x="2456" fg:w="2"/><text x="29.5955%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="29.2884%" y="469" width="0.0119%" height="15" fill="rgb(213,205,38)" fg:x="2457" fg:w="1"/><text x="29.6075%" y="479.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="29.2884%" y="453" width="0.0119%" height="15" fill="rgb(236,73,12)" fg:x="2457" fg:w="1"/><text x="29.6075%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (154 samples, 1.84%)</title><rect x="27.4765%" y="677" width="1.8357%" height="15" fill="rgb(235,219,13)" fg:x="2305" fg:w="154"/><text x="27.7956%" y="687.50">.. </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (78 samples, 0.93%)</title><rect x="28.3824%" y="661" width="0.9298%" height="15" fill="rgb(218,59,36)" fg:x="2381" fg:w="78"/><text x="28.7015%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (78 samples, 0.93%)</title><rect x="28.3824%" y="645" width="0.9298%" height="15" fill="rgb(205,110,39)" fg:x="2381" fg:w="78"/><text x="28.7015%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (78 samples, 0.93%)</title><rect x="28.3824%" y="629" width="0.9298%" height="15" fill="rgb(218,206,42)" fg:x="2381" fg:w="78"/><text x="28.7015%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (78 samples, 0.93%)</title><rect x="28.3824%" y="613" width="0.9298%" height="15" fill="rgb(248,125,24)" fg:x="2381" fg:w="78"/><text x="28.7015%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (78 samples, 0.93%)</title><rect x="28.3824%" y="597" width="0.9298%" height="15" fill="rgb(242,28,27)" fg:x="2381" fg:w="78"/><text x="28.7015%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (78 samples, 0.93%)</title><rect x="28.3824%" y="581" width="0.9298%" height="15" fill="rgb(216,228,15)" fg:x="2381" fg:w="78"/><text x="28.7015%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (65 samples, 0.77%)</title><rect x="28.5374%" y="565" width="0.7748%" height="15" fill="rgb(235,116,46)" fg:x="2394" fg:w="65"/><text x="28.8565%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (28 samples, 0.33%)</title><rect x="28.9784%" y="549" width="0.3338%" height="15" fill="rgb(224,18,32)" fg:x="2431" fg:w="28"/><text x="29.2975%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (24 samples, 0.29%)</title><rect x="29.0261%" y="533" width="0.2861%" height="15" fill="rgb(252,5,12)" fg:x="2435" fg:w="24"/><text x="29.3452%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="29.3003%" y="517" width="0.0119%" height="15" fill="rgb(251,36,5)" fg:x="2458" fg:w="1"/><text x="29.6194%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="29.3003%" y="501" width="0.0119%" height="15" fill="rgb(217,53,14)" fg:x="2458" fg:w="1"/><text x="29.6194%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="29.3003%" y="485" width="0.0119%" height="15" fill="rgb(215,86,45)" fg:x="2458" fg:w="1"/><text x="29.6194%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="29.3122%" y="661" width="0.0119%" height="15" fill="rgb(242,169,11)" fg:x="2459" fg:w="1"/><text x="29.6313%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="29.3122%" y="645" width="0.0119%" height="15" fill="rgb(211,213,45)" fg:x="2459" fg:w="1"/><text x="29.6313%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (246 samples, 2.93%)</title><rect x="26.4036%" y="693" width="2.9324%" height="15" fill="rgb(205,88,11)" fg:x="2215" fg:w="246"/><text x="26.7227%" y="703.50">..e </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="29.3122%" y="677" width="0.0238%" height="15" fill="rgb(252,69,26)" fg:x="2459" fg:w="2"/><text x="29.6313%" y="687.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="29.3241%" y="661" width="0.0119%" height="15" fill="rgb(246,123,37)" fg:x="2460" fg:w="1"/><text x="29.6432%" y="671.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="29.3837%" y="677" width="0.1311%" height="15" fill="rgb(212,205,5)" fg:x="2465" fg:w="11"/><text x="29.7028%" y="687.50"/></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="29.3956%" y="661" width="0.1192%" height="15" fill="rgb(253,148,0)" fg:x="2466" fg:w="10"/><text x="29.7147%" y="671.50"/></g><g><title>_int_malloc (10 samples, 0.12%)</title><rect x="29.3956%" y="645" width="0.1192%" height="15" fill="rgb(239,22,4)" fg:x="2466" fg:w="10"/><text x="29.7147%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="29.5148%" y="661" width="0.0119%" height="15" fill="rgb(226,26,53)" fg:x="2476" fg:w="1"/><text x="29.8339%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="29.5148%" y="645" width="0.0119%" height="15" fill="rgb(225,229,45)" fg:x="2476" fg:w="1"/><text x="29.8339%" y="655.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="29.5268%" y="645" width="0.0358%" height="15" fill="rgb(220,60,37)" fg:x="2477" fg:w="3"/><text x="29.8459%" y="655.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="29.5268%" y="629" width="0.0358%" height="15" fill="rgb(217,180,35)" fg:x="2477" fg:w="3"/><text x="29.8459%" y="639.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="29.5625%" y="645" width="0.0119%" height="15" fill="rgb(229,7,53)" fg:x="2480" fg:w="1"/><text x="29.8816%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="29.5744%" y="645" width="0.0119%" height="15" fill="rgb(254,137,3)" fg:x="2481" fg:w="1"/><text x="29.8935%" y="655.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="29.5983%" y="629" width="0.0358%" height="15" fill="rgb(215,140,41)" fg:x="2483" fg:w="3"/><text x="29.9174%" y="639.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="29.5983%" y="613" width="0.0358%" height="15" fill="rgb(250,80,15)" fg:x="2483" fg:w="3"/><text x="29.9174%" y="623.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="29.6340%" y="629" width="0.0119%" height="15" fill="rgb(252,191,6)" fg:x="2486" fg:w="1"/><text x="29.9531%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="29.6460%" y="629" width="0.0119%" height="15" fill="rgb(246,217,18)" fg:x="2487" fg:w="1"/><text x="29.9651%" y="639.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="29.6579%" y="613" width="0.0358%" height="15" fill="rgb(223,93,7)" fg:x="2488" fg:w="3"/><text x="29.9770%" y="623.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="29.6579%" y="597" width="0.0358%" height="15" fill="rgb(225,55,52)" fg:x="2488" fg:w="3"/><text x="29.9770%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="29.6936%" y="597" width="0.0119%" height="15" fill="rgb(240,31,24)" fg:x="2491" fg:w="1"/><text x="30.0127%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="29.6936%" y="581" width="0.0119%" height="15" fill="rgb(205,56,52)" fg:x="2491" fg:w="1"/><text x="30.0127%" y="591.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="29.7056%" y="597" width="0.0119%" height="15" fill="rgb(246,146,12)" fg:x="2492" fg:w="1"/><text x="30.0247%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="29.6579%" y="629" width="0.0715%" height="15" fill="rgb(239,84,36)" fg:x="2488" fg:w="6"/><text x="29.9770%" y="639.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="29.6936%" y="613" width="0.0358%" height="15" fill="rgb(207,41,40)" fg:x="2491" fg:w="3"/><text x="30.0127%" y="623.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="29.7175%" y="597" width="0.0119%" height="15" fill="rgb(241,179,25)" fg:x="2493" fg:w="1"/><text x="30.0366%" y="607.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="29.7294%" y="613" width="0.0358%" height="15" fill="rgb(210,0,34)" fg:x="2494" fg:w="3"/><text x="30.0485%" y="623.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="29.7294%" y="597" width="0.0358%" height="15" fill="rgb(225,217,29)" fg:x="2494" fg:w="3"/><text x="30.0485%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="29.7652%" y="613" width="0.0119%" height="15" fill="rgb(216,191,38)" fg:x="2497" fg:w="1"/><text x="30.0843%" y="623.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="29.7652%" y="597" width="0.0119%" height="15" fill="rgb(232,140,52)" fg:x="2497" fg:w="1"/><text x="30.0843%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="29.7294%" y="629" width="0.0596%" height="15" fill="rgb(223,158,51)" fg:x="2494" fg:w="5"/><text x="30.0485%" y="639.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="29.7771%" y="613" width="0.0119%" height="15" fill="rgb(235,29,51)" fg:x="2498" fg:w="1"/><text x="30.0962%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="29.7771%" y="597" width="0.0119%" height="15" fill="rgb(215,181,18)" fg:x="2498" fg:w="1"/><text x="30.0962%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="29.7771%" y="581" width="0.0119%" height="15" fill="rgb(227,125,34)" fg:x="2498" fg:w="1"/><text x="30.0962%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="29.7890%" y="629" width="0.0238%" height="15" fill="rgb(230,197,49)" fg:x="2499" fg:w="2"/><text x="30.1081%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="29.8009%" y="613" width="0.0119%" height="15" fill="rgb(239,141,16)" fg:x="2500" fg:w="1"/><text x="30.1200%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="29.8009%" y="597" width="0.0119%" height="15" fill="rgb(225,105,43)" fg:x="2500" fg:w="1"/><text x="30.1200%" y="607.50"/></g><g><title>__GI___libc_free (5 samples, 0.06%)</title><rect x="29.8129%" y="613" width="0.0596%" height="15" fill="rgb(214,131,14)" fg:x="2501" fg:w="5"/><text x="30.1320%" y="623.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="29.8367%" y="597" width="0.0358%" height="15" fill="rgb(229,177,11)" fg:x="2503" fg:w="3"/><text x="30.1558%" y="607.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="29.9082%" y="597" width="0.0238%" height="15" fill="rgb(231,180,14)" fg:x="2509" fg:w="2"/><text x="30.2273%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="29.9082%" y="581" width="0.0238%" height="15" fill="rgb(232,88,2)" fg:x="2509" fg:w="2"/><text x="30.2273%" y="591.50"/></g><g><title>operator delete (3 samples, 0.04%)</title><rect x="29.9321%" y="597" width="0.0358%" height="15" fill="rgb(205,220,8)" fg:x="2511" fg:w="3"/><text x="30.2512%" y="607.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="29.9678%" y="597" width="0.0119%" height="15" fill="rgb(225,23,53)" fg:x="2514" fg:w="1"/><text x="30.2869%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="29.9797%" y="597" width="0.0119%" height="15" fill="rgb(213,62,29)" fg:x="2515" fg:w="1"/><text x="30.2988%" y="607.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="30.0036%" y="581" width="0.0238%" height="15" fill="rgb(227,75,7)" fg:x="2517" fg:w="2"/><text x="30.3227%" y="591.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="30.0036%" y="565" width="0.0238%" height="15" fill="rgb(207,105,14)" fg:x="2517" fg:w="2"/><text x="30.3227%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="30.0393%" y="565" width="0.0119%" height="15" fill="rgb(245,62,29)" fg:x="2520" fg:w="1"/><text x="30.3584%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="30.0393%" y="549" width="0.0119%" height="15" fill="rgb(236,202,4)" fg:x="2520" fg:w="1"/><text x="30.3584%" y="559.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="30.0513%" y="549" width="0.0238%" height="15" fill="rgb(250,67,1)" fg:x="2521" fg:w="2"/><text x="30.3704%" y="559.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="30.0513%" y="533" width="0.0238%" height="15" fill="rgb(253,115,44)" fg:x="2521" fg:w="2"/><text x="30.3704%" y="543.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="30.0751%" y="549" width="0.0119%" height="15" fill="rgb(251,139,18)" fg:x="2523" fg:w="1"/><text x="30.3942%" y="559.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="30.0989%" y="533" width="0.0358%" height="15" fill="rgb(218,22,32)" fg:x="2525" fg:w="3"/><text x="30.4180%" y="543.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="30.0989%" y="517" width="0.0358%" height="15" fill="rgb(243,53,5)" fg:x="2525" fg:w="3"/><text x="30.4180%" y="527.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="29.9917%" y="597" width="0.1550%" height="15" fill="rgb(227,56,16)" fg:x="2516" fg:w="13"/><text x="30.3108%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="30.0274%" y="581" width="0.1192%" height="15" fill="rgb(245,53,0)" fg:x="2519" fg:w="10"/><text x="30.3465%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="30.0513%" y="565" width="0.0954%" height="15" fill="rgb(216,170,35)" fg:x="2521" fg:w="8"/><text x="30.3704%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="30.0870%" y="549" width="0.0596%" height="15" fill="rgb(211,200,8)" fg:x="2524" fg:w="5"/><text x="30.4061%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="30.1347%" y="533" width="0.0119%" height="15" fill="rgb(228,204,44)" fg:x="2528" fg:w="1"/><text x="30.4538%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (57 samples, 0.68%)</title><rect x="29.5268%" y="661" width="0.6795%" height="15" fill="rgb(214,121,17)" fg:x="2477" fg:w="57"/><text x="29.8459%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (52 samples, 0.62%)</title><rect x="29.5864%" y="645" width="0.6199%" height="15" fill="rgb(233,64,38)" fg:x="2482" fg:w="52"/><text x="29.9055%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (33 samples, 0.39%)</title><rect x="29.8129%" y="629" width="0.3934%" height="15" fill="rgb(253,54,19)" fg:x="2501" fg:w="33"/><text x="30.1320%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (28 samples, 0.33%)</title><rect x="29.8725%" y="613" width="0.3338%" height="15" fill="rgb(253,94,18)" fg:x="2506" fg:w="28"/><text x="30.1916%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="30.1466%" y="597" width="0.0596%" height="15" fill="rgb(227,57,52)" fg:x="2529" fg:w="5"/><text x="30.4657%" y="607.50"/></g><g><title>__GI___libc_free (4 samples, 0.05%)</title><rect x="30.1585%" y="581" width="0.0477%" height="15" fill="rgb(230,228,50)" fg:x="2530" fg:w="4"/><text x="30.4776%" y="591.50"/></g><g><title>_int_free (4 samples, 0.05%)</title><rect x="30.1585%" y="565" width="0.0477%" height="15" fill="rgb(217,205,27)" fg:x="2530" fg:w="4"/><text x="30.4776%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="30.2062%" y="661" width="0.0119%" height="15" fill="rgb(252,71,50)" fg:x="2534" fg:w="1"/><text x="30.5253%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="30.2062%" y="645" width="0.0119%" height="15" fill="rgb(209,86,4)" fg:x="2534" fg:w="1"/><text x="30.5253%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="30.2062%" y="629" width="0.0119%" height="15" fill="rgb(229,94,0)" fg:x="2534" fg:w="1"/><text x="30.5253%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="30.2420%" y="645" width="0.0119%" height="15" fill="rgb(252,223,21)" fg:x="2537" fg:w="1"/><text x="30.5611%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="30.2420%" y="629" width="0.0119%" height="15" fill="rgb(230,210,4)" fg:x="2537" fg:w="1"/><text x="30.5611%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (63 samples, 0.75%)</title><rect x="29.5148%" y="677" width="0.7510%" height="15" fill="rgb(240,149,38)" fg:x="2476" fg:w="63"/><text x="29.8339%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="30.2181%" y="661" width="0.0477%" height="15" fill="rgb(254,105,20)" fg:x="2535" fg:w="4"/><text x="30.5372%" y="671.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="30.2539%" y="645" width="0.0119%" height="15" fill="rgb(253,87,46)" fg:x="2538" fg:w="1"/><text x="30.5730%" y="655.50"/></g><g><title>__GI___libc_free (5 samples, 0.06%)</title><rect x="30.2658%" y="661" width="0.0596%" height="15" fill="rgb(253,116,33)" fg:x="2539" fg:w="5"/><text x="30.5849%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="30.3135%" y="645" width="0.0119%" height="15" fill="rgb(229,198,5)" fg:x="2543" fg:w="1"/><text x="30.6326%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="30.3254%" y="645" width="0.0119%" height="15" fill="rgb(242,38,37)" fg:x="2544" fg:w="1"/><text x="30.6445%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="30.3254%" y="629" width="0.0119%" height="15" fill="rgb(242,69,53)" fg:x="2544" fg:w="1"/><text x="30.6445%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="30.3373%" y="645" width="0.0119%" height="15" fill="rgb(249,80,16)" fg:x="2545" fg:w="1"/><text x="30.6564%" y="655.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="30.3493%" y="629" width="0.0119%" height="15" fill="rgb(206,128,11)" fg:x="2546" fg:w="1"/><text x="30.6684%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="30.3612%" y="629" width="0.0119%" height="15" fill="rgb(212,35,20)" fg:x="2547" fg:w="1"/><text x="30.6803%" y="639.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="30.3731%" y="613" width="0.0358%" height="15" fill="rgb(236,79,13)" fg:x="2548" fg:w="3"/><text x="30.6922%" y="623.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="30.3731%" y="597" width="0.0358%" height="15" fill="rgb(233,123,3)" fg:x="2548" fg:w="3"/><text x="30.6922%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="30.4089%" y="613" width="0.0119%" height="15" fill="rgb(214,93,52)" fg:x="2551" fg:w="1"/><text x="30.7280%" y="623.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="30.4208%" y="597" width="0.0119%" height="15" fill="rgb(251,37,40)" fg:x="2552" fg:w="1"/><text x="30.7399%" y="607.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="30.4446%" y="581" width="0.0238%" height="15" fill="rgb(227,80,54)" fg:x="2554" fg:w="2"/><text x="30.7637%" y="591.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="30.4446%" y="565" width="0.0238%" height="15" fill="rgb(254,48,11)" fg:x="2554" fg:w="2"/><text x="30.7637%" y="575.50"/></g><g><title>__GI___libc_free (5 samples, 0.06%)</title><rect x="30.4685%" y="565" width="0.0596%" height="15" fill="rgb(235,193,26)" fg:x="2556" fg:w="5"/><text x="30.7876%" y="575.50"/></g><g><title>_int_free (5 samples, 0.06%)</title><rect x="30.4685%" y="549" width="0.0596%" height="15" fill="rgb(229,99,21)" fg:x="2556" fg:w="5"/><text x="30.7876%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="30.5281%" y="549" width="0.0358%" height="15" fill="rgb(211,140,41)" fg:x="2561" fg:w="3"/><text x="30.8472%" y="559.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="30.5281%" y="533" width="0.0358%" height="15" fill="rgb(240,227,30)" fg:x="2561" fg:w="3"/><text x="30.8472%" y="543.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="30.5400%" y="517" width="0.0238%" height="15" fill="rgb(215,224,45)" fg:x="2562" fg:w="2"/><text x="30.8591%" y="527.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="30.5996%" y="533" width="0.0358%" height="15" fill="rgb(206,123,31)" fg:x="2567" fg:w="3"/><text x="30.9187%" y="543.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="30.5996%" y="517" width="0.0358%" height="15" fill="rgb(210,138,16)" fg:x="2567" fg:w="3"/><text x="30.9187%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="30.6354%" y="533" width="0.0119%" height="15" fill="rgb(228,57,28)" fg:x="2570" fg:w="1"/><text x="30.9545%" y="543.50"/></g><g><title>__GI___libc_free (10 samples, 0.12%)</title><rect x="30.6473%" y="517" width="0.1192%" height="15" fill="rgb(242,170,10)" fg:x="2571" fg:w="10"/><text x="30.9664%" y="527.50"/></g><g><title>_int_free (7 samples, 0.08%)</title><rect x="30.6830%" y="501" width="0.0834%" height="15" fill="rgb(228,214,39)" fg:x="2574" fg:w="7"/><text x="31.0021%" y="511.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="30.7665%" y="517" width="0.0119%" height="15" fill="rgb(218,179,33)" fg:x="2581" fg:w="1"/><text x="31.0856%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (31 samples, 0.37%)</title><rect x="30.4208%" y="613" width="0.3695%" height="15" fill="rgb(235,193,39)" fg:x="2552" fg:w="31"/><text x="30.7399%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (30 samples, 0.36%)</title><rect x="30.4327%" y="597" width="0.3576%" height="15" fill="rgb(219,221,36)" fg:x="2553" fg:w="30"/><text x="30.7518%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (27 samples, 0.32%)</title><rect x="30.4685%" y="581" width="0.3219%" height="15" fill="rgb(248,218,19)" fg:x="2556" fg:w="27"/><text x="30.7876%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (22 samples, 0.26%)</title><rect x="30.5281%" y="565" width="0.2622%" height="15" fill="rgb(205,50,9)" fg:x="2561" fg:w="22"/><text x="30.8472%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="30.5638%" y="549" width="0.2265%" height="15" fill="rgb(238,81,28)" fg:x="2564" fg:w="19"/><text x="30.8829%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="30.6473%" y="533" width="0.1430%" height="15" fill="rgb(235,110,19)" fg:x="2571" fg:w="12"/><text x="30.9664%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="30.7784%" y="517" width="0.0119%" height="15" fill="rgb(214,7,14)" fg:x="2582" fg:w="1"/><text x="31.0975%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="30.8022%" y="597" width="0.0119%" height="15" fill="rgb(211,77,3)" fg:x="2584" fg:w="1"/><text x="31.1213%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="30.8022%" y="581" width="0.0119%" height="15" fill="rgb(229,5,9)" fg:x="2584" fg:w="1"/><text x="31.1213%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (38 samples, 0.45%)</title><rect x="30.3731%" y="629" width="0.4530%" height="15" fill="rgb(225,90,11)" fg:x="2548" fg:w="38"/><text x="30.6922%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="30.7903%" y="613" width="0.0358%" height="15" fill="rgb(242,56,8)" fg:x="2583" fg:w="3"/><text x="31.1094%" y="623.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="30.8142%" y="597" width="0.0119%" height="15" fill="rgb(249,212,39)" fg:x="2585" fg:w="1"/><text x="31.1333%" y="607.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="30.8261%" y="613" width="0.0358%" height="15" fill="rgb(236,90,9)" fg:x="2586" fg:w="3"/><text x="31.1452%" y="623.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="30.8261%" y="597" width="0.0358%" height="15" fill="rgb(206,88,35)" fg:x="2586" fg:w="3"/><text x="31.1452%" y="607.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="30.8618%" y="597" width="0.0238%" height="15" fill="rgb(205,126,30)" fg:x="2589" fg:w="2"/><text x="31.1809%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="30.8618%" y="581" width="0.0238%" height="15" fill="rgb(230,176,12)" fg:x="2589" fg:w="2"/><text x="31.1809%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (46 samples, 0.55%)</title><rect x="30.3493%" y="645" width="0.5483%" height="15" fill="rgb(243,19,9)" fg:x="2546" fg:w="46"/><text x="30.6684%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="30.8261%" y="629" width="0.0715%" height="15" fill="rgb(245,171,17)" fg:x="2586" fg:w="6"/><text x="31.1452%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="30.8618%" y="613" width="0.0358%" height="15" fill="rgb(227,52,21)" fg:x="2589" fg:w="3"/><text x="31.1809%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="30.8857%" y="597" width="0.0119%" height="15" fill="rgb(238,69,14)" fg:x="2591" fg:w="1"/><text x="31.2048%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="30.8976%" y="645" width="0.0477%" height="15" fill="rgb(241,156,39)" fg:x="2592" fg:w="4"/><text x="31.2167%" y="655.50"/></g><g><title>__GI___libc_free (4 samples, 0.05%)</title><rect x="30.8976%" y="629" width="0.0477%" height="15" fill="rgb(212,227,28)" fg:x="2592" fg:w="4"/><text x="31.2167%" y="639.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="30.9214%" y="613" width="0.0238%" height="15" fill="rgb(209,118,27)" fg:x="2594" fg:w="2"/><text x="31.2405%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (54 samples, 0.64%)</title><rect x="30.3254%" y="661" width="0.6437%" height="15" fill="rgb(226,102,5)" fg:x="2544" fg:w="54"/><text x="30.6445%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="30.9453%" y="645" width="0.0238%" height="15" fill="rgb(223,34,3)" fg:x="2596" fg:w="2"/><text x="31.2644%" y="655.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="30.9453%" y="629" width="0.0238%" height="15" fill="rgb(221,81,38)" fg:x="2596" fg:w="2"/><text x="31.2644%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="30.9572%" y="613" width="0.0119%" height="15" fill="rgb(236,219,28)" fg:x="2597" fg:w="1"/><text x="31.2763%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (60 samples, 0.72%)</title><rect x="30.2658%" y="677" width="0.7152%" height="15" fill="rgb(213,200,14)" fg:x="2539" fg:w="60"/><text x="30.5849%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="30.9691%" y="661" width="0.0119%" height="15" fill="rgb(240,33,19)" fg:x="2598" fg:w="1"/><text x="31.2882%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="30.9691%" y="645" width="0.0119%" height="15" fill="rgb(233,113,27)" fg:x="2598" fg:w="1"/><text x="31.2882%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="30.9691%" y="629" width="0.0119%" height="15" fill="rgb(220,221,18)" fg:x="2598" fg:w="1"/><text x="31.2882%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="30.9810%" y="677" width="0.0119%" height="15" fill="rgb(238,92,8)" fg:x="2599" fg:w="1"/><text x="31.3001%" y="687.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="31.0287%" y="645" width="0.0119%" height="15" fill="rgb(222,164,16)" fg:x="2603" fg:w="1"/><text x="31.3478%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="31.0287%" y="629" width="0.0119%" height="15" fill="rgb(241,119,3)" fg:x="2603" fg:w="1"/><text x="31.3478%" y="639.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="31.0526%" y="613" width="0.0238%" height="15" fill="rgb(241,44,8)" fg:x="2605" fg:w="2"/><text x="31.3717%" y="623.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="31.0526%" y="597" width="0.0238%" height="15" fill="rgb(230,36,40)" fg:x="2605" fg:w="2"/><text x="31.3717%" y="607.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="31.1003%" y="581" width="0.0238%" height="15" fill="rgb(243,16,36)" fg:x="2609" fg:w="2"/><text x="31.4194%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="31.1122%" y="565" width="0.0119%" height="15" fill="rgb(231,4,26)" fg:x="2610" fg:w="1"/><text x="31.4313%" y="575.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="31.1360%" y="549" width="0.0238%" height="15" fill="rgb(240,9,31)" fg:x="2612" fg:w="2"/><text x="31.4551%" y="559.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="31.1360%" y="533" width="0.0238%" height="15" fill="rgb(207,173,15)" fg:x="2612" fg:w="2"/><text x="31.4551%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="31.1241%" y="565" width="0.0715%" height="15" fill="rgb(224,192,53)" fg:x="2611" fg:w="6"/><text x="31.4432%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="31.1599%" y="549" width="0.0358%" height="15" fill="rgb(223,67,28)" fg:x="2614" fg:w="3"/><text x="31.4790%" y="559.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (3 samples, 0.04%)</title><rect x="31.1599%" y="533" width="0.0358%" height="15" fill="rgb(211,20,47)" fg:x="2614" fg:w="3"/><text x="31.4790%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="31.1599%" y="517" width="0.0358%" height="15" fill="rgb(240,228,2)" fg:x="2614" fg:w="3"/><text x="31.4790%" y="527.50"/></g><g><title>operator new (15 samples, 0.18%)</title><rect x="31.1956%" y="533" width="0.1788%" height="15" fill="rgb(248,151,12)" fg:x="2617" fg:w="15"/><text x="31.5147%" y="543.50"/></g><g><title>__GI___libc_malloc (15 samples, 0.18%)</title><rect x="31.1956%" y="517" width="0.1788%" height="15" fill="rgb(244,8,39)" fg:x="2617" fg:w="15"/><text x="31.5147%" y="527.50"/></g><g><title>_int_malloc (10 samples, 0.12%)</title><rect x="31.2552%" y="501" width="0.1192%" height="15" fill="rgb(222,26,8)" fg:x="2622" fg:w="10"/><text x="31.5743%" y="511.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="31.1956%" y="549" width="0.1907%" height="15" fill="rgb(213,106,44)" fg:x="2617" fg:w="16"/><text x="31.5147%" y="559.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="31.3744%" y="533" width="0.0119%" height="15" fill="rgb(214,129,20)" fg:x="2632" fg:w="1"/><text x="31.6935%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (20 samples, 0.24%)</title><rect x="31.1956%" y="565" width="0.2384%" height="15" fill="rgb(212,32,13)" fg:x="2617" fg:w="20"/><text x="31.5147%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="31.3863%" y="549" width="0.0477%" height="15" fill="rgb(208,168,33)" fg:x="2633" fg:w="4"/><text x="31.7054%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="31.3863%" y="533" width="0.0477%" height="15" fill="rgb(231,207,8)" fg:x="2633" fg:w="4"/><text x="31.7054%" y="543.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="31.3983%" y="517" width="0.0358%" height="15" fill="rgb(235,219,23)" fg:x="2634" fg:w="3"/><text x="31.7174%" y="527.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="31.3983%" y="501" width="0.0358%" height="15" fill="rgb(226,216,26)" fg:x="2634" fg:w="3"/><text x="31.7174%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="31.4340%" y="565" width="0.0358%" height="15" fill="rgb(239,137,16)" fg:x="2637" fg:w="3"/><text x="31.7531%" y="575.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="31.4340%" y="549" width="0.0358%" height="15" fill="rgb(207,12,36)" fg:x="2637" fg:w="3"/><text x="31.7531%" y="559.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="31.4340%" y="533" width="0.0358%" height="15" fill="rgb(210,214,24)" fg:x="2637" fg:w="3"/><text x="31.7531%" y="543.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="31.4698%" y="549" width="0.0238%" height="15" fill="rgb(206,56,30)" fg:x="2640" fg:w="2"/><text x="31.7889%" y="559.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="31.4698%" y="533" width="0.0238%" height="15" fill="rgb(228,143,26)" fg:x="2640" fg:w="2"/><text x="31.7889%" y="543.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="31.5055%" y="517" width="0.1311%" height="15" fill="rgb(216,218,46)" fg:x="2643" fg:w="11"/><text x="31.8246%" y="527.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="31.5055%" y="501" width="0.1311%" height="15" fill="rgb(206,6,19)" fg:x="2643" fg:w="11"/><text x="31.8246%" y="511.50"/></g><g><title>_int_malloc (11 samples, 0.13%)</title><rect x="31.5055%" y="485" width="0.1311%" height="15" fill="rgb(239,177,51)" fg:x="2643" fg:w="11"/><text x="31.8246%" y="495.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="31.6367%" y="453" width="0.0834%" height="15" fill="rgb(216,55,25)" fg:x="2654" fg:w="7"/><text x="31.9558%" y="463.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="31.6605%" y="437" width="0.0596%" height="15" fill="rgb(231,163,29)" fg:x="2656" fg:w="5"/><text x="31.9796%" y="447.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="31.6367%" y="469" width="0.0954%" height="15" fill="rgb(232,149,50)" fg:x="2654" fg:w="8"/><text x="31.9558%" y="479.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="31.7201%" y="453" width="0.0119%" height="15" fill="rgb(223,142,48)" fg:x="2661" fg:w="1"/><text x="32.0392%" y="463.50"/></g><g><title>operator new (12 samples, 0.14%)</title><rect x="31.7320%" y="437" width="0.1430%" height="15" fill="rgb(245,83,23)" fg:x="2662" fg:w="12"/><text x="32.0511%" y="447.50"/></g><g><title>__GI___libc_malloc (12 samples, 0.14%)</title><rect x="31.7320%" y="421" width="0.1430%" height="15" fill="rgb(224,63,2)" fg:x="2662" fg:w="12"/><text x="32.0511%" y="431.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="31.7678%" y="405" width="0.1073%" height="15" fill="rgb(218,65,53)" fg:x="2665" fg:w="9"/><text x="32.0869%" y="415.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (32 samples, 0.38%)</title><rect x="31.6367%" y="501" width="0.3815%" height="15" fill="rgb(221,84,29)" fg:x="2654" fg:w="32"/><text x="31.9558%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (32 samples, 0.38%)</title><rect x="31.6367%" y="485" width="0.3815%" height="15" fill="rgb(234,0,32)" fg:x="2654" fg:w="32"/><text x="31.9558%" y="495.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (24 samples, 0.29%)</title><rect x="31.7320%" y="469" width="0.2861%" height="15" fill="rgb(206,20,16)" fg:x="2662" fg:w="24"/><text x="32.0511%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="31.7320%" y="453" width="0.2861%" height="15" fill="rgb(244,172,18)" fg:x="2662" fg:w="24"/><text x="32.0511%" y="463.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (12 samples, 0.14%)</title><rect x="31.8751%" y="437" width="0.1430%" height="15" fill="rgb(254,133,1)" fg:x="2674" fg:w="12"/><text x="32.1942%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="31.8751%" y="421" width="0.1430%" height="15" fill="rgb(222,206,41)" fg:x="2674" fg:w="12"/><text x="32.1942%" y="431.50"/></g><g><title>operator new (12 samples, 0.14%)</title><rect x="31.8751%" y="405" width="0.1430%" height="15" fill="rgb(212,3,42)" fg:x="2674" fg:w="12"/><text x="32.1942%" y="415.50"/></g><g><title>__GI___libc_malloc (12 samples, 0.14%)</title><rect x="31.8751%" y="389" width="0.1430%" height="15" fill="rgb(241,11,4)" fg:x="2674" fg:w="12"/><text x="32.1942%" y="399.50"/></g><g><title>_int_malloc (12 samples, 0.14%)</title><rect x="31.8751%" y="373" width="0.1430%" height="15" fill="rgb(205,19,26)" fg:x="2674" fg:w="12"/><text x="32.1942%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (83 samples, 0.99%)</title><rect x="31.0406%" y="629" width="0.9894%" height="15" fill="rgb(210,179,32)" fg:x="2604" fg:w="83"/><text x="31.3597%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (80 samples, 0.95%)</title><rect x="31.0764%" y="613" width="0.9536%" height="15" fill="rgb(227,116,49)" fg:x="2607" fg:w="80"/><text x="31.3955%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (78 samples, 0.93%)</title><rect x="31.1003%" y="597" width="0.9298%" height="15" fill="rgb(211,146,6)" fg:x="2609" fg:w="78"/><text x="31.4194%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (76 samples, 0.91%)</title><rect x="31.1241%" y="581" width="0.9059%" height="15" fill="rgb(219,44,39)" fg:x="2611" fg:w="76"/><text x="31.4432%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (47 samples, 0.56%)</title><rect x="31.4698%" y="565" width="0.5603%" height="15" fill="rgb(234,128,11)" fg:x="2640" fg:w="47"/><text x="31.7889%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (45 samples, 0.54%)</title><rect x="31.4936%" y="549" width="0.5364%" height="15" fill="rgb(220,183,53)" fg:x="2642" fg:w="45"/><text x="31.8127%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (45 samples, 0.54%)</title><rect x="31.4936%" y="533" width="0.5364%" height="15" fill="rgb(213,219,32)" fg:x="2642" fg:w="45"/><text x="31.8127%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (33 samples, 0.39%)</title><rect x="31.6367%" y="517" width="0.3934%" height="15" fill="rgb(232,156,16)" fg:x="2654" fg:w="33"/><text x="31.9558%" y="527.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function@plt (1 samples, 0.01%)</title><rect x="32.0181%" y="501" width="0.0119%" height="15" fill="rgb(246,135,34)" fg:x="2686" fg:w="1"/><text x="32.3372%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (95 samples, 1.13%)</title><rect x="31.0406%" y="645" width="1.1324%" height="15" fill="rgb(241,99,0)" fg:x="2604" fg:w="95"/><text x="31.3597%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (12 samples, 0.14%)</title><rect x="32.0300%" y="629" width="0.1430%" height="15" fill="rgb(222,103,45)" fg:x="2687" fg:w="12"/><text x="32.3491%" y="639.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="32.0420%" y="613" width="0.1311%" height="15" fill="rgb(212,57,4)" fg:x="2688" fg:w="11"/><text x="32.3611%" y="623.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="32.0420%" y="597" width="0.1311%" height="15" fill="rgb(215,68,47)" fg:x="2688" fg:w="11"/><text x="32.3611%" y="607.50"/></g><g><title>_int_malloc (10 samples, 0.12%)</title><rect x="32.0539%" y="581" width="0.1192%" height="15" fill="rgb(230,84,2)" fg:x="2689" fg:w="10"/><text x="32.3730%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="32.1731%" y="645" width="0.0119%" height="15" fill="rgb(220,102,14)" fg:x="2699" fg:w="1"/><text x="32.4922%" y="655.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="32.2088%" y="613" width="0.0358%" height="15" fill="rgb(240,10,32)" fg:x="2702" fg:w="3"/><text x="32.5279%" y="623.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="32.2088%" y="597" width="0.0358%" height="15" fill="rgb(215,47,27)" fg:x="2702" fg:w="3"/><text x="32.5279%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (104 samples, 1.24%)</title><rect x="31.0168%" y="661" width="1.2397%" height="15" fill="rgb(233,188,43)" fg:x="2602" fg:w="104"/><text x="31.3359%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="32.1850%" y="645" width="0.0715%" height="15" fill="rgb(253,190,1)" fg:x="2700" fg:w="6"/><text x="32.5041%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="32.1969%" y="629" width="0.0596%" height="15" fill="rgb(206,114,52)" fg:x="2701" fg:w="5"/><text x="32.5160%" y="639.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="32.2446%" y="613" width="0.0119%" height="15" fill="rgb(233,120,37)" fg:x="2705" fg:w="1"/><text x="32.5637%" y="623.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="32.2565%" y="645" width="0.0119%" height="15" fill="rgb(214,52,39)" fg:x="2706" fg:w="1"/><text x="32.5756%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="32.2565%" y="629" width="0.0119%" height="15" fill="rgb(223,80,29)" fg:x="2706" fg:w="1"/><text x="32.5756%" y="639.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="32.2804%" y="613" width="0.0238%" height="15" fill="rgb(230,101,40)" fg:x="2708" fg:w="2"/><text x="32.5995%" y="623.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="32.2804%" y="597" width="0.0238%" height="15" fill="rgb(219,211,8)" fg:x="2708" fg:w="2"/><text x="32.5995%" y="607.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="32.3161%" y="581" width="0.0477%" height="15" fill="rgb(252,126,28)" fg:x="2711" fg:w="4"/><text x="32.6352%" y="591.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="32.3161%" y="565" width="0.0477%" height="15" fill="rgb(215,56,38)" fg:x="2711" fg:w="4"/><text x="32.6352%" y="575.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="32.3400%" y="549" width="0.0238%" height="15" fill="rgb(249,55,44)" fg:x="2713" fg:w="2"/><text x="32.6591%" y="559.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="32.3638%" y="565" width="0.0238%" height="15" fill="rgb(220,221,32)" fg:x="2715" fg:w="2"/><text x="32.6829%" y="575.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="32.3638%" y="549" width="0.0238%" height="15" fill="rgb(212,216,41)" fg:x="2715" fg:w="2"/><text x="32.6829%" y="559.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="32.3638%" y="581" width="0.0358%" height="15" fill="rgb(228,213,43)" fg:x="2715" fg:w="3"/><text x="32.6829%" y="591.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="32.3877%" y="565" width="0.0119%" height="15" fill="rgb(211,31,26)" fg:x="2717" fg:w="1"/><text x="32.7068%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="32.4115%" y="549" width="0.0119%" height="15" fill="rgb(229,202,19)" fg:x="2719" fg:w="1"/><text x="32.7306%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="32.4115%" y="533" width="0.0119%" height="15" fill="rgb(229,105,46)" fg:x="2719" fg:w="1"/><text x="32.7306%" y="543.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="32.4473%" y="517" width="0.0596%" height="15" fill="rgb(235,108,1)" fg:x="2722" fg:w="5"/><text x="32.7664%" y="527.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="32.4473%" y="501" width="0.0596%" height="15" fill="rgb(245,111,35)" fg:x="2722" fg:w="5"/><text x="32.7664%" y="511.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="32.4592%" y="485" width="0.0477%" height="15" fill="rgb(219,185,31)" fg:x="2723" fg:w="4"/><text x="32.7783%" y="495.50"/></g><g><title>operator new (16 samples, 0.19%)</title><rect x="32.5188%" y="485" width="0.1907%" height="15" fill="rgb(214,4,43)" fg:x="2728" fg:w="16"/><text x="32.8379%" y="495.50"/></g><g><title>__GI___libc_malloc (16 samples, 0.19%)</title><rect x="32.5188%" y="469" width="0.1907%" height="15" fill="rgb(235,227,40)" fg:x="2728" fg:w="16"/><text x="32.8379%" y="479.50"/></g><g><title>_int_malloc (15 samples, 0.18%)</title><rect x="32.5307%" y="453" width="0.1788%" height="15" fill="rgb(230,88,30)" fg:x="2729" fg:w="15"/><text x="32.8498%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="32.7214%" y="437" width="0.0119%" height="15" fill="rgb(216,217,1)" fg:x="2745" fg:w="1"/><text x="33.0405%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="32.7214%" y="421" width="0.0119%" height="15" fill="rgb(248,139,50)" fg:x="2745" fg:w="1"/><text x="33.0405%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="32.7333%" y="421" width="0.0238%" height="15" fill="rgb(233,1,21)" fg:x="2746" fg:w="2"/><text x="33.0524%" y="431.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="32.7333%" y="405" width="0.0238%" height="15" fill="rgb(215,183,12)" fg:x="2746" fg:w="2"/><text x="33.0524%" y="415.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="32.7333%" y="389" width="0.0238%" height="15" fill="rgb(229,104,42)" fg:x="2746" fg:w="2"/><text x="33.0524%" y="399.50"/></g><g><title>operator new (14 samples, 0.17%)</title><rect x="32.7572%" y="405" width="0.1669%" height="15" fill="rgb(243,34,48)" fg:x="2748" fg:w="14"/><text x="33.0763%" y="415.50"/></g><g><title>__GI___libc_malloc (14 samples, 0.17%)</title><rect x="32.7572%" y="389" width="0.1669%" height="15" fill="rgb(239,11,44)" fg:x="2748" fg:w="14"/><text x="33.0763%" y="399.50"/></g><g><title>_int_malloc (13 samples, 0.15%)</title><rect x="32.7691%" y="373" width="0.1550%" height="15" fill="rgb(231,98,35)" fg:x="2749" fg:w="13"/><text x="33.0882%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (45 samples, 0.54%)</title><rect x="32.4353%" y="533" width="0.5364%" height="15" fill="rgb(233,28,25)" fg:x="2721" fg:w="45"/><text x="32.7544%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (39 samples, 0.46%)</title><rect x="32.5069%" y="517" width="0.4649%" height="15" fill="rgb(234,123,11)" fg:x="2727" fg:w="39"/><text x="32.8260%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (38 samples, 0.45%)</title><rect x="32.5188%" y="501" width="0.4530%" height="15" fill="rgb(220,69,3)" fg:x="2728" fg:w="38"/><text x="32.8379%" y="511.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (22 samples, 0.26%)</title><rect x="32.7095%" y="485" width="0.2622%" height="15" fill="rgb(214,64,36)" fg:x="2744" fg:w="22"/><text x="33.0286%" y="495.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (22 samples, 0.26%)</title><rect x="32.7095%" y="469" width="0.2622%" height="15" fill="rgb(211,138,32)" fg:x="2744" fg:w="22"/><text x="33.0286%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (22 samples, 0.26%)</title><rect x="32.7095%" y="453" width="0.2622%" height="15" fill="rgb(213,118,47)" fg:x="2744" fg:w="22"/><text x="33.0286%" y="463.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (20 samples, 0.24%)</title><rect x="32.7333%" y="437" width="0.2384%" height="15" fill="rgb(243,124,49)" fg:x="2746" fg:w="20"/><text x="33.0524%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="32.7572%" y="421" width="0.2146%" height="15" fill="rgb(221,30,28)" fg:x="2748" fg:w="18"/><text x="33.0763%" y="431.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (4 samples, 0.05%)</title><rect x="32.9241%" y="405" width="0.0477%" height="15" fill="rgb(246,37,13)" fg:x="2762" fg:w="4"/><text x="33.2432%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="32.9241%" y="389" width="0.0477%" height="15" fill="rgb(249,66,14)" fg:x="2762" fg:w="4"/><text x="33.2432%" y="399.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="32.9241%" y="373" width="0.0477%" height="15" fill="rgb(213,166,5)" fg:x="2762" fg:w="4"/><text x="33.2432%" y="383.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="32.9241%" y="357" width="0.0477%" height="15" fill="rgb(221,66,24)" fg:x="2762" fg:w="4"/><text x="33.2432%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (61 samples, 0.73%)</title><rect x="32.3996%" y="581" width="0.7271%" height="15" fill="rgb(210,132,17)" fg:x="2718" fg:w="61"/><text x="32.7187%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (61 samples, 0.73%)</title><rect x="32.3996%" y="565" width="0.7271%" height="15" fill="rgb(243,202,5)" fg:x="2718" fg:w="61"/><text x="32.7187%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (59 samples, 0.70%)</title><rect x="32.4234%" y="549" width="0.7033%" height="15" fill="rgb(233,70,48)" fg:x="2720" fg:w="59"/><text x="32.7425%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (13 samples, 0.15%)</title><rect x="32.9717%" y="533" width="0.1550%" height="15" fill="rgb(238,41,26)" fg:x="2766" fg:w="13"/><text x="33.2908%" y="543.50"/></g><g><title>operator new (13 samples, 0.15%)</title><rect x="32.9717%" y="517" width="0.1550%" height="15" fill="rgb(241,19,31)" fg:x="2766" fg:w="13"/><text x="33.2908%" y="527.50"/></g><g><title>__GI___libc_malloc (13 samples, 0.15%)</title><rect x="32.9717%" y="501" width="0.1550%" height="15" fill="rgb(214,76,10)" fg:x="2766" fg:w="13"/><text x="33.2908%" y="511.50"/></g><g><title>_int_malloc (12 samples, 0.14%)</title><rect x="32.9837%" y="485" width="0.1430%" height="15" fill="rgb(254,202,22)" fg:x="2767" fg:w="12"/><text x="33.3028%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (70 samples, 0.83%)</title><rect x="32.3042%" y="597" width="0.8344%" height="15" fill="rgb(214,72,24)" fg:x="2710" fg:w="70"/><text x="32.6233%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="33.1267%" y="581" width="0.0119%" height="15" fill="rgb(221,92,46)" fg:x="2779" fg:w="1"/><text x="33.4458%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="33.1386%" y="581" width="0.0119%" height="15" fill="rgb(246,13,50)" fg:x="2780" fg:w="1"/><text x="33.4577%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="33.1386%" y="565" width="0.0119%" height="15" fill="rgb(240,165,38)" fg:x="2780" fg:w="1"/><text x="33.4577%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (72 samples, 0.86%)</title><rect x="32.3042%" y="613" width="0.8583%" height="15" fill="rgb(241,24,51)" fg:x="2710" fg:w="72"/><text x="32.6233%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="33.1386%" y="597" width="0.0238%" height="15" fill="rgb(227,51,44)" fg:x="2780" fg:w="2"/><text x="33.4577%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="33.1506%" y="581" width="0.0119%" height="15" fill="rgb(231,121,3)" fg:x="2781" fg:w="1"/><text x="33.4697%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (82 samples, 0.98%)</title><rect x="32.2804%" y="629" width="0.9775%" height="15" fill="rgb(245,3,41)" fg:x="2708" fg:w="82"/><text x="32.5995%" y="639.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="33.1625%" y="613" width="0.0954%" height="15" fill="rgb(214,13,26)" fg:x="2782" fg:w="8"/><text x="33.4816%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="33.1625%" y="597" width="0.0954%" height="15" fill="rgb(252,75,11)" fg:x="2782" fg:w="8"/><text x="33.4816%" y="607.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="33.1625%" y="581" width="0.0954%" height="15" fill="rgb(218,226,17)" fg:x="2782" fg:w="8"/><text x="33.4816%" y="591.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="33.1625%" y="565" width="0.0954%" height="15" fill="rgb(248,89,38)" fg:x="2782" fg:w="8"/><text x="33.4816%" y="575.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="33.1982%" y="549" width="0.0596%" height="15" fill="rgb(237,73,46)" fg:x="2785" fg:w="5"/><text x="33.5173%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (192 samples, 2.29%)</title><rect x="30.9930%" y="677" width="2.2887%" height="15" fill="rgb(242,78,33)" fg:x="2600" fg:w="192"/><text x="31.3121%" y="687.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (86 samples, 1.03%)</title><rect x="32.2565%" y="661" width="1.0252%" height="15" fill="rgb(235,60,3)" fg:x="2706" fg:w="86"/><text x="32.5756%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (85 samples, 1.01%)</title><rect x="32.2684%" y="645" width="1.0132%" height="15" fill="rgb(216,172,19)" fg:x="2707" fg:w="85"/><text x="32.5875%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="33.2578%" y="629" width="0.0238%" height="15" fill="rgb(227,6,42)" fg:x="2790" fg:w="2"/><text x="33.5769%" y="639.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="33.2578%" y="613" width="0.0238%" height="15" fill="rgb(223,207,42)" fg:x="2790" fg:w="2"/><text x="33.5769%" y="623.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="33.2578%" y="597" width="0.0238%" height="15" fill="rgb(246,138,30)" fg:x="2790" fg:w="2"/><text x="33.5769%" y="607.50"/></g><g><title>logic::layout_start (996 samples, 11.87%)</title><rect x="21.4209%" y="725" width="11.8727%" height="15" fill="rgb(251,199,47)" fg:x="1797" fg:w="996"/><text x="21.7400%" y="735.50">..ic::layout_start </text></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (578 samples, 6.89%)</title><rect x="26.4036%" y="709" width="6.8900%" height="15" fill="rgb(228,218,44)" fg:x="2215" fg:w="578"/><text x="26.7227%" y="719.50">..operator </text></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (332 samples, 3.96%)</title><rect x="29.3360%" y="693" width="3.9576%" height="15" fill="rgb(220,68,6)" fg:x="2461" fg:w="332"/><text x="29.6551%" y="703.50">..ke </text></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="33.2817%" y="677" width="0.0119%" height="15" fill="rgb(240,60,26)" fg:x="2792" fg:w="1"/><text x="33.6008%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="33.2817%" y="661" width="0.0119%" height="15" fill="rgb(211,200,19)" fg:x="2792" fg:w="1"/><text x="33.6008%" y="671.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="33.3055%" y="709" width="0.0238%" height="15" fill="rgb(242,145,30)" fg:x="2794" fg:w="2"/><text x="33.6246%" y="719.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="33.3055%" y="693" width="0.0238%" height="15" fill="rgb(225,64,13)" fg:x="2794" fg:w="2"/><text x="33.6246%" y="703.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="33.3294%" y="709" width="0.0119%" height="15" fill="rgb(218,103,35)" fg:x="2796" fg:w="1"/><text x="33.6485%" y="719.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="33.3413%" y="693" width="0.0238%" height="15" fill="rgb(216,93,46)" fg:x="2797" fg:w="2"/><text x="33.6604%" y="703.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="33.3413%" y="677" width="0.0238%" height="15" fill="rgb(225,159,27)" fg:x="2797" fg:w="2"/><text x="33.6604%" y="687.50"/></g><g><title>parser::iff (4 samples, 0.05%)</title><rect x="33.3413%" y="709" width="0.0477%" height="15" fill="rgb(225,204,11)" fg:x="2797" fg:w="4"/><text x="33.6604%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="33.3651%" y="693" width="0.0238%" height="15" fill="rgb(205,56,4)" fg:x="2799" fg:w="2"/><text x="33.6842%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned short), cond::indent_lesseq(unsigned int)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="33.3770%" y="677" width="0.0119%" height="15" fill="rgb(206,6,35)" fg:x="2800" fg:w="1"/><text x="33.6961%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="33.3890%" y="693" width="0.0119%" height="15" fill="rgb(247,73,52)" fg:x="2801" fg:w="1"/><text x="33.7081%" y="703.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="33.3890%" y="677" width="0.0119%" height="15" fill="rgb(246,97,4)" fg:x="2801" fg:w="1"/><text x="33.7081%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="33.3890%" y="709" width="0.0238%" height="15" fill="rgb(212,37,15)" fg:x="2801" fg:w="2"/><text x="33.7081%" y="719.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="33.4009%" y="693" width="0.0119%" height="15" fill="rgb(208,130,40)" fg:x="2802" fg:w="1"/><text x="33.7200%" y="703.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="33.4247%" y="661" width="0.0119%" height="15" fill="rgb(236,55,29)" fg:x="2804" fg:w="1"/><text x="33.7438%" y="671.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="33.4247%" y="645" width="0.0119%" height="15" fill="rgb(209,156,45)" fg:x="2804" fg:w="1"/><text x="33.7438%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="33.4247%" y="677" width="0.0238%" height="15" fill="rgb(249,107,4)" fg:x="2804" fg:w="2"/><text x="33.7438%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="33.4366%" y="661" width="0.0119%" height="15" fill="rgb(227,7,13)" fg:x="2805" fg:w="1"/><text x="33.7557%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="33.4366%" y="645" width="0.0119%" height="15" fill="rgb(250,129,14)" fg:x="2805" fg:w="1"/><text x="33.7557%" y="655.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="33.4366%" y="629" width="0.0119%" height="15" fill="rgb(229,92,13)" fg:x="2805" fg:w="1"/><text x="33.7557%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="33.4366%" y="613" width="0.0119%" height="15" fill="rgb(245,98,39)" fg:x="2805" fg:w="1"/><text x="33.7557%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="33.4366%" y="597" width="0.0119%" height="15" fill="rgb(234,135,48)" fg:x="2805" fg:w="1"/><text x="33.7557%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="33.4486%" y="677" width="0.0238%" height="15" fill="rgb(230,98,28)" fg:x="2806" fg:w="2"/><text x="33.7677%" y="687.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.02%)</title><rect x="33.4486%" y="661" width="0.0238%" height="15" fill="rgb(223,121,0)" fg:x="2806" fg:w="2"/><text x="33.7677%" y="671.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="33.4486%" y="645" width="0.0238%" height="15" fill="rgb(234,173,33)" fg:x="2806" fg:w="2"/><text x="33.7677%" y="655.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="33.4486%" y="629" width="0.0238%" height="15" fill="rgb(245,47,8)" fg:x="2806" fg:w="2"/><text x="33.7677%" y="639.50"/></g><g><title>parser::either (8 samples, 0.10%)</title><rect x="33.4128%" y="693" width="0.0954%" height="15" fill="rgb(205,17,20)" fg:x="2803" fg:w="8"/><text x="33.7319%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="33.4724%" y="677" width="0.0358%" height="15" fill="rgb(232,151,16)" fg:x="2808" fg:w="3"/><text x="33.7915%" y="687.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="33.4724%" y="661" width="0.0358%" height="15" fill="rgb(208,30,32)" fg:x="2808" fg:w="3"/><text x="33.7915%" y="671.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="33.4724%" y="645" width="0.0358%" height="15" fill="rgb(254,26,3)" fg:x="2808" fg:w="3"/><text x="33.7915%" y="655.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="33.4724%" y="629" width="0.0358%" height="15" fill="rgb(240,177,30)" fg:x="2808" fg:w="3"/><text x="33.7915%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="33.5082%" y="677" width="0.0358%" height="15" fill="rgb(248,76,44)" fg:x="2811" fg:w="3"/><text x="33.8273%" y="687.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="33.5082%" y="661" width="0.0358%" height="15" fill="rgb(241,186,54)" fg:x="2811" fg:w="3"/><text x="33.8273%" y="671.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="33.5201%" y="645" width="0.0238%" height="15" fill="rgb(249,171,29)" fg:x="2812" fg:w="2"/><text x="33.8392%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="33.5439%" y="677" width="0.0477%" height="15" fill="rgb(237,151,44)" fg:x="2814" fg:w="4"/><text x="33.8630%" y="687.50"/></g><g><title>__GI___libc_free (4 samples, 0.05%)</title><rect x="33.5439%" y="661" width="0.0477%" height="15" fill="rgb(228,174,30)" fg:x="2814" fg:w="4"/><text x="33.8630%" y="671.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="33.5558%" y="645" width="0.0358%" height="15" fill="rgb(252,14,37)" fg:x="2815" fg:w="3"/><text x="33.8749%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="33.5916%" y="661" width="0.0119%" height="15" fill="rgb(207,111,40)" fg:x="2818" fg:w="1"/><text x="33.9107%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="33.5916%" y="645" width="0.0119%" height="15" fill="rgb(248,171,54)" fg:x="2818" fg:w="1"/><text x="33.9107%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="33.5916%" y="677" width="0.0238%" height="15" fill="rgb(211,127,2)" fg:x="2818" fg:w="2"/><text x="33.9107%" y="687.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="33.6035%" y="661" width="0.0119%" height="15" fill="rgb(236,87,47)" fg:x="2819" fg:w="1"/><text x="33.9226%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="33.5082%" y="693" width="0.1192%" height="15" fill="rgb(223,190,45)" fg:x="2811" fg:w="10"/><text x="33.8273%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="33.6154%" y="677" width="0.0119%" height="15" fill="rgb(215,5,16)" fg:x="2820" fg:w="1"/><text x="33.9345%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="33.6154%" y="661" width="0.0119%" height="15" fill="rgb(252,82,33)" fg:x="2820" fg:w="1"/><text x="33.9345%" y="671.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="33.6154%" y="645" width="0.0119%" height="15" fill="rgb(247,213,44)" fg:x="2820" fg:w="1"/><text x="33.9345%" y="655.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.01%)</title><rect x="33.6154%" y="629" width="0.0119%" height="15" fill="rgb(205,196,44)" fg:x="2820" fg:w="1"/><text x="33.9345%" y="639.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="33.6512%" y="677" width="0.0119%" height="15" fill="rgb(237,96,54)" fg:x="2823" fg:w="1"/><text x="33.9703%" y="687.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="33.6631%" y="677" width="0.0119%" height="15" fill="rgb(230,113,34)" fg:x="2824" fg:w="1"/><text x="33.9822%" y="687.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="33.6631%" y="661" width="0.0119%" height="15" fill="rgb(221,224,12)" fg:x="2824" fg:w="1"/><text x="33.9822%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="33.6274%" y="693" width="0.0596%" height="15" fill="rgb(219,112,44)" fg:x="2821" fg:w="5"/><text x="33.9465%" y="703.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="33.6751%" y="677" width="0.0119%" height="15" fill="rgb(210,31,13)" fg:x="2825" fg:w="1"/><text x="33.9942%" y="687.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (1 samples, 0.01%)</title><rect x="33.6751%" y="661" width="0.0119%" height="15" fill="rgb(230,25,16)" fg:x="2825" fg:w="1"/><text x="33.9942%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="33.6870%" y="693" width="0.0119%" height="15" fill="rgb(246,108,53)" fg:x="2826" fg:w="1"/><text x="34.0061%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="33.6870%" y="677" width="0.0119%" height="15" fill="rgb(241,172,50)" fg:x="2826" fg:w="1"/><text x="34.0061%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="33.6989%" y="693" width="0.0834%" height="15" fill="rgb(235,141,10)" fg:x="2827" fg:w="7"/><text x="34.0180%" y="703.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="33.6989%" y="677" width="0.0834%" height="15" fill="rgb(220,174,43)" fg:x="2827" fg:w="7"/><text x="34.0180%" y="687.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="33.6989%" y="661" width="0.0834%" height="15" fill="rgb(215,181,40)" fg:x="2827" fg:w="7"/><text x="34.0180%" y="671.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="33.7108%" y="645" width="0.0715%" height="15" fill="rgb(230,97,2)" fg:x="2828" fg:w="6"/><text x="34.0299%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (32 samples, 0.38%)</title><rect x="33.4128%" y="709" width="0.3815%" height="15" fill="rgb(211,25,27)" fg:x="2803" fg:w="32"/><text x="33.7319%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function&lt;std::function&lt;Result (State)&gt;, void, void&gt; (1 samples, 0.01%)</title><rect x="33.7823%" y="693" width="0.0119%" height="15" fill="rgb(230,87,26)" fg:x="2834" fg:w="1"/><text x="34.1014%" y="703.50"/></g><g><title>logic::post_end_semicolon (45 samples, 0.54%)</title><rect x="33.2936%" y="725" width="0.5364%" height="15" fill="rgb(227,160,17)" fg:x="2793" fg:w="45"/><text x="33.6127%" y="735.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="33.7943%" y="709" width="0.0358%" height="15" fill="rgb(244,85,34)" fg:x="2835" fg:w="3"/><text x="34.1134%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="33.8062%" y="693" width="0.0238%" height="15" fill="rgb(207,70,0)" fg:x="2836" fg:w="2"/><text x="34.1253%" y="703.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="33.8062%" y="677" width="0.0238%" height="15" fill="rgb(223,129,7)" fg:x="2836" fg:w="2"/><text x="34.1253%" y="687.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="33.8062%" y="661" width="0.0238%" height="15" fill="rgb(246,105,7)" fg:x="2836" fg:w="2"/><text x="34.1253%" y="671.50"/></g><g><title>parser::iff (3 samples, 0.04%)</title><rect x="33.8300%" y="709" width="0.0358%" height="15" fill="rgb(215,154,42)" fg:x="2838" fg:w="3"/><text x="34.1491%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="33.8419%" y="693" width="0.0238%" height="15" fill="rgb(220,215,30)" fg:x="2839" fg:w="2"/><text x="34.1610%" y="703.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="33.8539%" y="677" width="0.0119%" height="15" fill="rgb(228,81,51)" fg:x="2840" fg:w="1"/><text x="34.1730%" y="687.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="33.8539%" y="661" width="0.0119%" height="15" fill="rgb(247,71,54)" fg:x="2840" fg:w="1"/><text x="34.1730%" y="671.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="33.8777%" y="629" width="0.0238%" height="15" fill="rgb(234,176,34)" fg:x="2842" fg:w="2"/><text x="34.1968%" y="639.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="33.8777%" y="613" width="0.0238%" height="15" fill="rgb(241,103,54)" fg:x="2842" fg:w="2"/><text x="34.1968%" y="623.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="33.8896%" y="597" width="0.0119%" height="15" fill="rgb(228,22,34)" fg:x="2843" fg:w="1"/><text x="34.2087%" y="607.50"/></g><g><title>parser::effect (4 samples, 0.05%)</title><rect x="33.8658%" y="693" width="0.0477%" height="15" fill="rgb(241,179,48)" fg:x="2841" fg:w="4"/><text x="34.1849%" y="703.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="33.8777%" y="677" width="0.0358%" height="15" fill="rgb(235,167,37)" fg:x="2842" fg:w="3"/><text x="34.1968%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="33.8777%" y="661" width="0.0358%" height="15" fill="rgb(213,109,30)" fg:x="2842" fg:w="3"/><text x="34.1968%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="33.8777%" y="645" width="0.0358%" height="15" fill="rgb(222,172,16)" fg:x="2842" fg:w="3"/><text x="34.1968%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="33.9015%" y="629" width="0.0119%" height="15" fill="rgb(233,192,5)" fg:x="2844" fg:w="1"/><text x="34.2206%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="33.9015%" y="613" width="0.0119%" height="15" fill="rgb(247,189,41)" fg:x="2844" fg:w="1"/><text x="34.2206%" y="623.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="33.9015%" y="597" width="0.0119%" height="15" fill="rgb(218,134,47)" fg:x="2844" fg:w="1"/><text x="34.2206%" y="607.50"/></g><g><title>parser::finish@plt (1 samples, 0.01%)</title><rect x="33.9135%" y="693" width="0.0119%" height="15" fill="rgb(216,29,3)" fg:x="2845" fg:w="1"/><text x="34.2326%" y="703.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="33.9254%" y="661" width="0.0119%" height="15" fill="rgb(246,140,12)" fg:x="2846" fg:w="1"/><text x="34.2445%" y="671.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="33.9254%" y="645" width="0.0119%" height="15" fill="rgb(230,136,11)" fg:x="2846" fg:w="1"/><text x="34.2445%" y="655.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="33.9492%" y="613" width="0.0596%" height="15" fill="rgb(247,22,47)" fg:x="2848" fg:w="5"/><text x="34.2683%" y="623.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="33.9492%" y="597" width="0.0596%" height="15" fill="rgb(218,84,22)" fg:x="2848" fg:w="5"/><text x="34.2683%" y="607.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="33.9611%" y="581" width="0.0477%" height="15" fill="rgb(216,87,39)" fg:x="2849" fg:w="4"/><text x="34.2802%" y="591.50"/></g><g><title>parser::operator+ (14 samples, 0.17%)</title><rect x="33.9254%" y="693" width="0.1669%" height="15" fill="rgb(221,178,8)" fg:x="2846" fg:w="14"/><text x="34.2445%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="33.9254%" y="677" width="0.1669%" height="15" fill="rgb(230,42,11)" fg:x="2846" fg:w="14"/><text x="34.2445%" y="687.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (13 samples, 0.15%)</title><rect x="33.9373%" y="661" width="0.1550%" height="15" fill="rgb(237,229,4)" fg:x="2847" fg:w="13"/><text x="34.2564%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="33.9492%" y="645" width="0.1430%" height="15" fill="rgb(222,31,33)" fg:x="2848" fg:w="12"/><text x="34.2683%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="33.9492%" y="629" width="0.1430%" height="15" fill="rgb(210,17,39)" fg:x="2848" fg:w="12"/><text x="34.2683%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="34.0088%" y="613" width="0.0834%" height="15" fill="rgb(244,93,20)" fg:x="2853" fg:w="7"/><text x="34.3279%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="34.0088%" y="597" width="0.0834%" height="15" fill="rgb(210,40,47)" fg:x="2853" fg:w="7"/><text x="34.3279%" y="607.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="34.0088%" y="581" width="0.0834%" height="15" fill="rgb(239,211,47)" fg:x="2853" fg:w="7"/><text x="34.3279%" y="591.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="34.0088%" y="565" width="0.0834%" height="15" fill="rgb(251,223,49)" fg:x="2853" fg:w="7"/><text x="34.3279%" y="575.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="34.0207%" y="549" width="0.0715%" height="15" fill="rgb(221,149,5)" fg:x="2854" fg:w="6"/><text x="34.3398%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="34.0923%" y="677" width="0.0119%" height="15" fill="rgb(219,224,51)" fg:x="2860" fg:w="1"/><text x="34.4114%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="34.0923%" y="661" width="0.0119%" height="15" fill="rgb(223,7,8)" fg:x="2860" fg:w="1"/><text x="34.4114%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="34.0923%" y="693" width="0.0477%" height="15" fill="rgb(241,217,22)" fg:x="2860" fg:w="4"/><text x="34.4114%" y="703.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="34.1042%" y="677" width="0.0358%" height="15" fill="rgb(248,209,0)" fg:x="2861" fg:w="3"/><text x="34.4233%" y="687.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="34.1042%" y="661" width="0.0358%" height="15" fill="rgb(217,205,4)" fg:x="2861" fg:w="3"/><text x="34.4233%" y="671.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="34.1042%" y="645" width="0.0358%" height="15" fill="rgb(228,124,39)" fg:x="2861" fg:w="3"/><text x="34.4233%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="34.1757%" y="517" width="0.0119%" height="15" fill="rgb(250,116,42)" fg:x="2867" fg:w="1"/><text x="34.4948%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="34.1757%" y="565" width="0.0238%" height="15" fill="rgb(223,202,9)" fg:x="2867" fg:w="2"/><text x="34.4948%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="34.1757%" y="549" width="0.0238%" height="15" fill="rgb(242,222,40)" fg:x="2867" fg:w="2"/><text x="34.4948%" y="559.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="34.1757%" y="533" width="0.0238%" height="15" fill="rgb(229,99,46)" fg:x="2867" fg:w="2"/><text x="34.4948%" y="543.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="34.1876%" y="517" width="0.0119%" height="15" fill="rgb(225,56,46)" fg:x="2868" fg:w="1"/><text x="34.5067%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="34.1757%" y="661" width="0.0358%" height="15" fill="rgb(227,94,5)" fg:x="2867" fg:w="3"/><text x="34.4948%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="34.1757%" y="645" width="0.0358%" height="15" fill="rgb(205,112,38)" fg:x="2867" fg:w="3"/><text x="34.4948%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="34.1757%" y="629" width="0.0358%" height="15" fill="rgb(231,133,46)" fg:x="2867" fg:w="3"/><text x="34.4948%" y="639.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="34.1757%" y="613" width="0.0358%" height="15" fill="rgb(217,16,9)" fg:x="2867" fg:w="3"/><text x="34.4948%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="34.1757%" y="597" width="0.0358%" height="15" fill="rgb(249,173,9)" fg:x="2867" fg:w="3"/><text x="34.4948%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="34.1757%" y="581" width="0.0358%" height="15" fill="rgb(205,163,53)" fg:x="2867" fg:w="3"/><text x="34.4948%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="34.1995%" y="565" width="0.0119%" height="15" fill="rgb(217,54,41)" fg:x="2869" fg:w="1"/><text x="34.5186%" y="575.50"/></g><g><title>parser::either (6 samples, 0.07%)</title><rect x="34.1519%" y="677" width="0.0715%" height="15" fill="rgb(228,216,12)" fg:x="2865" fg:w="6"/><text x="34.4710%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="34.2115%" y="661" width="0.0119%" height="15" fill="rgb(244,228,15)" fg:x="2870" fg:w="1"/><text x="34.5306%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="34.2115%" y="645" width="0.0119%" height="15" fill="rgb(221,176,53)" fg:x="2870" fg:w="1"/><text x="34.5306%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="34.2115%" y="629" width="0.0119%" height="15" fill="rgb(205,94,34)" fg:x="2870" fg:w="1"/><text x="34.5306%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="34.2234%" y="661" width="0.0119%" height="15" fill="rgb(213,110,48)" fg:x="2871" fg:w="1"/><text x="34.5425%" y="671.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="34.2234%" y="645" width="0.0119%" height="15" fill="rgb(236,142,28)" fg:x="2871" fg:w="1"/><text x="34.5425%" y="655.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="34.2472%" y="645" width="0.0238%" height="15" fill="rgb(225,135,29)" fg:x="2873" fg:w="2"/><text x="34.5663%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="34.2591%" y="629" width="0.0119%" height="15" fill="rgb(252,45,31)" fg:x="2874" fg:w="1"/><text x="34.5782%" y="639.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="34.2711%" y="645" width="0.0119%" height="15" fill="rgb(211,187,50)" fg:x="2875" fg:w="1"/><text x="34.5902%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="34.2830%" y="629" width="0.0119%" height="15" fill="rgb(229,109,7)" fg:x="2876" fg:w="1"/><text x="34.6021%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="34.2830%" y="613" width="0.0119%" height="15" fill="rgb(251,131,51)" fg:x="2876" fg:w="1"/><text x="34.6021%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="34.2949%" y="613" width="0.0119%" height="15" fill="rgb(251,180,35)" fg:x="2877" fg:w="1"/><text x="34.6140%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="34.3068%" y="613" width="0.0119%" height="15" fill="rgb(211,46,32)" fg:x="2878" fg:w="1"/><text x="34.6259%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="34.3068%" y="597" width="0.0119%" height="15" fill="rgb(248,123,17)" fg:x="2878" fg:w="1"/><text x="34.6259%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="34.3068%" y="581" width="0.0119%" height="15" fill="rgb(227,141,18)" fg:x="2878" fg:w="1"/><text x="34.6259%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="34.2353%" y="661" width="0.1073%" height="15" fill="rgb(216,102,9)" fg:x="2872" fg:w="9"/><text x="34.5544%" y="671.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (5 samples, 0.06%)</title><rect x="34.2830%" y="645" width="0.0596%" height="15" fill="rgb(253,47,13)" fg:x="2876" fg:w="5"/><text x="34.6021%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="34.2949%" y="629" width="0.0477%" height="15" fill="rgb(226,93,23)" fg:x="2877" fg:w="4"/><text x="34.6140%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="34.3188%" y="613" width="0.0238%" height="15" fill="rgb(247,104,17)" fg:x="2879" fg:w="2"/><text x="34.6379%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="34.3188%" y="597" width="0.0238%" height="15" fill="rgb(233,203,26)" fg:x="2879" fg:w="2"/><text x="34.6379%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="34.3307%" y="581" width="0.0119%" height="15" fill="rgb(244,98,49)" fg:x="2880" fg:w="1"/><text x="34.6498%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="34.3426%" y="645" width="0.0119%" height="15" fill="rgb(235,134,22)" fg:x="2881" fg:w="1"/><text x="34.6617%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="34.3426%" y="629" width="0.0119%" height="15" fill="rgb(221,70,32)" fg:x="2881" fg:w="1"/><text x="34.6617%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="34.3426%" y="613" width="0.0119%" height="15" fill="rgb(238,15,50)" fg:x="2881" fg:w="1"/><text x="34.6617%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="34.3426%" y="597" width="0.0119%" height="15" fill="rgb(215,221,48)" fg:x="2881" fg:w="1"/><text x="34.6617%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="34.3426%" y="581" width="0.0119%" height="15" fill="rgb(236,73,3)" fg:x="2881" fg:w="1"/><text x="34.6617%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (27 samples, 0.32%)</title><rect x="34.1399%" y="693" width="0.3219%" height="15" fill="rgb(250,107,11)" fg:x="2864" fg:w="27"/><text x="34.4590%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (20 samples, 0.24%)</title><rect x="34.2234%" y="677" width="0.2384%" height="15" fill="rgb(242,39,14)" fg:x="2871" fg:w="20"/><text x="34.5425%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="34.3426%" y="661" width="0.1192%" height="15" fill="rgb(248,164,37)" fg:x="2881" fg:w="10"/><text x="34.6617%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="34.3545%" y="645" width="0.1073%" height="15" fill="rgb(217,60,12)" fg:x="2882" fg:w="9"/><text x="34.6736%" y="655.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="34.3545%" y="629" width="0.1073%" height="15" fill="rgb(240,125,29)" fg:x="2882" fg:w="9"/><text x="34.6736%" y="639.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="34.3545%" y="613" width="0.1073%" height="15" fill="rgb(208,207,28)" fg:x="2882" fg:w="9"/><text x="34.6736%" y="623.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="34.3545%" y="597" width="0.1073%" height="15" fill="rgb(209,159,27)" fg:x="2882" fg:w="9"/><text x="34.6736%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="34.4618%" y="677" width="0.0119%" height="15" fill="rgb(251,176,53)" fg:x="2891" fg:w="1"/><text x="34.7809%" y="687.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="34.4737%" y="661" width="0.0238%" height="15" fill="rgb(211,85,7)" fg:x="2892" fg:w="2"/><text x="34.7928%" y="671.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="34.4737%" y="645" width="0.0238%" height="15" fill="rgb(216,64,54)" fg:x="2892" fg:w="2"/><text x="34.7928%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (5 samples, 0.06%)</title><rect x="34.4618%" y="693" width="0.0596%" height="15" fill="rgb(217,54,24)" fg:x="2891" fg:w="5"/><text x="34.7809%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="34.4737%" y="677" width="0.0477%" height="15" fill="rgb(208,206,53)" fg:x="2892" fg:w="4"/><text x="34.7928%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="34.4976%" y="661" width="0.0238%" height="15" fill="rgb(251,74,39)" fg:x="2894" fg:w="2"/><text x="34.8167%" y="671.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="34.4976%" y="645" width="0.0238%" height="15" fill="rgb(226,47,5)" fg:x="2894" fg:w="2"/><text x="34.8167%" y="655.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="34.4976%" y="629" width="0.0238%" height="15" fill="rgb(234,111,33)" fg:x="2894" fg:w="2"/><text x="34.8167%" y="639.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="34.5214%" y="693" width="0.0119%" height="15" fill="rgb(251,14,10)" fg:x="2896" fg:w="1"/><text x="34.8405%" y="703.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="34.5214%" y="677" width="0.0119%" height="15" fill="rgb(232,43,0)" fg:x="2896" fg:w="1"/><text x="34.8405%" y="687.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="34.5333%" y="661" width="0.0119%" height="15" fill="rgb(222,68,43)" fg:x="2897" fg:w="1"/><text x="34.8524%" y="671.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="34.5333%" y="645" width="0.0119%" height="15" fill="rgb(217,24,23)" fg:x="2897" fg:w="1"/><text x="34.8524%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="34.5691%" y="645" width="0.0119%" height="15" fill="rgb(229,209,14)" fg:x="2900" fg:w="1"/><text x="34.8882%" y="655.50"/></g><g><title>parser::layout_end (68 samples, 0.81%)</title><rect x="33.8658%" y="709" width="0.8106%" height="15" fill="rgb(250,149,48)" fg:x="2841" fg:w="68"/><text x="34.1849%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="34.5333%" y="693" width="0.1430%" height="15" fill="rgb(210,120,37)" fg:x="2897" fg:w="12"/><text x="34.8524%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="34.5333%" y="677" width="0.1430%" height="15" fill="rgb(210,21,8)" fg:x="2897" fg:w="12"/><text x="34.8524%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="34.5452%" y="661" width="0.1311%" height="15" fill="rgb(243,145,7)" fg:x="2898" fg:w="11"/><text x="34.8643%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (8 samples, 0.10%)</title><rect x="34.5810%" y="645" width="0.0954%" height="15" fill="rgb(238,178,32)" fg:x="2901" fg:w="8"/><text x="34.9001%" y="655.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="34.5810%" y="629" width="0.0954%" height="15" fill="rgb(222,4,10)" fg:x="2901" fg:w="8"/><text x="34.9001%" y="639.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="34.5810%" y="613" width="0.0954%" height="15" fill="rgb(239,7,37)" fg:x="2901" fg:w="8"/><text x="34.9001%" y="623.50"/></g><g><title>_int_malloc (8 samples, 0.10%)</title><rect x="34.5810%" y="597" width="0.0954%" height="15" fill="rgb(215,31,37)" fg:x="2901" fg:w="8"/><text x="34.9001%" y="607.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="34.7002%" y="677" width="0.0954%" height="15" fill="rgb(224,83,33)" fg:x="2911" fg:w="8"/><text x="35.0193%" y="687.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="34.7002%" y="661" width="0.0954%" height="15" fill="rgb(239,55,3)" fg:x="2911" fg:w="8"/><text x="35.0193%" y="671.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="34.7121%" y="645" width="0.0834%" height="15" fill="rgb(247,92,11)" fg:x="2912" fg:w="7"/><text x="35.0312%" y="655.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="34.7956%" y="661" width="0.0238%" height="15" fill="rgb(239,200,7)" fg:x="2919" fg:w="2"/><text x="35.1147%" y="671.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="34.8075%" y="645" width="0.0119%" height="15" fill="rgb(227,115,8)" fg:x="2920" fg:w="1"/><text x="35.1266%" y="655.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="34.8194%" y="629" width="0.0119%" height="15" fill="rgb(215,189,27)" fg:x="2921" fg:w="1"/><text x="35.1385%" y="639.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="34.8194%" y="613" width="0.0119%" height="15" fill="rgb(251,216,39)" fg:x="2921" fg:w="1"/><text x="35.1385%" y="623.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="34.8432%" y="549" width="0.0238%" height="15" fill="rgb(207,29,47)" fg:x="2923" fg:w="2"/><text x="35.1623%" y="559.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="34.8432%" y="533" width="0.0238%" height="15" fill="rgb(210,71,34)" fg:x="2923" fg:w="2"/><text x="35.1623%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="34.8313%" y="613" width="0.0477%" height="15" fill="rgb(253,217,51)" fg:x="2922" fg:w="4"/><text x="35.1504%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="34.8313%" y="597" width="0.0477%" height="15" fill="rgb(222,117,46)" fg:x="2922" fg:w="4"/><text x="35.1504%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="34.8313%" y="581" width="0.0477%" height="15" fill="rgb(226,132,6)" fg:x="2922" fg:w="4"/><text x="35.1504%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="34.8432%" y="565" width="0.0358%" height="15" fill="rgb(254,145,51)" fg:x="2923" fg:w="3"/><text x="35.1623%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="34.8671%" y="549" width="0.0119%" height="15" fill="rgb(231,199,27)" fg:x="2925" fg:w="1"/><text x="35.1862%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="34.8671%" y="533" width="0.0119%" height="15" fill="rgb(245,158,14)" fg:x="2925" fg:w="1"/><text x="35.1862%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="34.8671%" y="517" width="0.0119%" height="15" fill="rgb(240,113,14)" fg:x="2925" fg:w="1"/><text x="35.1862%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="34.8671%" y="501" width="0.0119%" height="15" fill="rgb(210,20,13)" fg:x="2925" fg:w="1"/><text x="35.1862%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="34.8671%" y="485" width="0.0119%" height="15" fill="rgb(241,144,13)" fg:x="2925" fg:w="1"/><text x="35.1862%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="34.8671%" y="469" width="0.0119%" height="15" fill="rgb(235,43,34)" fg:x="2925" fg:w="1"/><text x="35.1862%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="34.8194%" y="645" width="0.1311%" height="15" fill="rgb(208,36,20)" fg:x="2921" fg:w="11"/><text x="35.1385%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="34.8313%" y="629" width="0.1192%" height="15" fill="rgb(239,204,10)" fg:x="2922" fg:w="10"/><text x="35.1504%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (6 samples, 0.07%)</title><rect x="34.8790%" y="613" width="0.0715%" height="15" fill="rgb(217,84,43)" fg:x="2926" fg:w="6"/><text x="35.1981%" y="623.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="34.8790%" y="597" width="0.0715%" height="15" fill="rgb(241,170,50)" fg:x="2926" fg:w="6"/><text x="35.1981%" y="607.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="34.8790%" y="581" width="0.0715%" height="15" fill="rgb(226,205,29)" fg:x="2926" fg:w="6"/><text x="35.1981%" y="591.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="34.8909%" y="565" width="0.0596%" height="15" fill="rgb(233,113,1)" fg:x="2927" fg:w="5"/><text x="35.2100%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="34.9505%" y="533" width="0.0238%" height="15" fill="rgb(253,98,13)" fg:x="2932" fg:w="2"/><text x="35.2696%" y="543.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="34.9505%" y="517" width="0.0238%" height="15" fill="rgb(211,115,12)" fg:x="2932" fg:w="2"/><text x="35.2696%" y="527.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="34.9505%" y="501" width="0.0238%" height="15" fill="rgb(208,12,16)" fg:x="2932" fg:w="2"/><text x="35.2696%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="34.9744%" y="517" width="0.0119%" height="15" fill="rgb(237,193,54)" fg:x="2934" fg:w="1"/><text x="35.2935%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="34.9744%" y="501" width="0.0119%" height="15" fill="rgb(243,22,42)" fg:x="2934" fg:w="1"/><text x="35.2935%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="34.9505%" y="613" width="0.0477%" height="15" fill="rgb(233,151,36)" fg:x="2932" fg:w="4"/><text x="35.2696%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="34.9505%" y="597" width="0.0477%" height="15" fill="rgb(237,57,45)" fg:x="2932" fg:w="4"/><text x="35.2696%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="34.9505%" y="581" width="0.0477%" height="15" fill="rgb(221,88,17)" fg:x="2932" fg:w="4"/><text x="35.2696%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="34.9505%" y="565" width="0.0477%" height="15" fill="rgb(230,79,15)" fg:x="2932" fg:w="4"/><text x="35.2696%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="34.9505%" y="549" width="0.0477%" height="15" fill="rgb(213,57,13)" fg:x="2932" fg:w="4"/><text x="35.2696%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="34.9744%" y="533" width="0.0238%" height="15" fill="rgb(222,116,39)" fg:x="2934" fg:w="2"/><text x="35.2935%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="34.9863%" y="517" width="0.0119%" height="15" fill="rgb(245,107,2)" fg:x="2935" fg:w="1"/><text x="35.3054%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="34.7956%" y="677" width="0.2146%" height="15" fill="rgb(238,1,10)" fg:x="2919" fg:w="18"/><text x="35.1147%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (16 samples, 0.19%)</title><rect x="34.8194%" y="661" width="0.1907%" height="15" fill="rgb(249,4,48)" fg:x="2921" fg:w="16"/><text x="35.1385%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="34.9505%" y="645" width="0.0596%" height="15" fill="rgb(223,151,18)" fg:x="2932" fg:w="5"/><text x="35.2696%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="34.9505%" y="629" width="0.0596%" height="15" fill="rgb(227,65,43)" fg:x="2932" fg:w="5"/><text x="35.2696%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="34.9982%" y="613" width="0.0119%" height="15" fill="rgb(218,40,45)" fg:x="2936" fg:w="1"/><text x="35.3173%" y="623.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="34.9982%" y="597" width="0.0119%" height="15" fill="rgb(252,121,31)" fg:x="2936" fg:w="1"/><text x="35.3173%" y="607.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="34.9982%" y="581" width="0.0119%" height="15" fill="rgb(219,158,43)" fg:x="2936" fg:w="1"/><text x="35.3173%" y="591.50"/></g><g><title>parser::either (34 samples, 0.41%)</title><rect x="34.7002%" y="693" width="0.4053%" height="15" fill="rgb(231,162,42)" fg:x="2911" fg:w="34"/><text x="35.0193%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (8 samples, 0.10%)</title><rect x="35.0101%" y="677" width="0.0954%" height="15" fill="rgb(217,179,25)" fg:x="2937" fg:w="8"/><text x="35.3292%" y="687.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="35.0101%" y="661" width="0.0954%" height="15" fill="rgb(206,212,31)" fg:x="2937" fg:w="8"/><text x="35.3292%" y="671.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="35.0101%" y="645" width="0.0954%" height="15" fill="rgb(235,144,12)" fg:x="2937" fg:w="8"/><text x="35.3292%" y="655.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="35.0340%" y="629" width="0.0715%" height="15" fill="rgb(213,51,10)" fg:x="2939" fg:w="6"/><text x="35.3531%" y="639.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="35.1293%" y="677" width="0.0238%" height="15" fill="rgb(231,145,14)" fg:x="2947" fg:w="2"/><text x="35.4484%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="35.1413%" y="661" width="0.0119%" height="15" fill="rgb(235,15,28)" fg:x="2948" fg:w="1"/><text x="35.4604%" y="671.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="35.1532%" y="677" width="0.0119%" height="15" fill="rgb(237,206,10)" fg:x="2949" fg:w="1"/><text x="35.4723%" y="687.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="35.1651%" y="677" width="0.0238%" height="15" fill="rgb(236,227,27)" fg:x="2950" fg:w="2"/><text x="35.4842%" y="687.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="35.1651%" y="661" width="0.0238%" height="15" fill="rgb(246,83,35)" fg:x="2950" fg:w="2"/><text x="35.4842%" y="671.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="35.1889%" y="677" width="0.0119%" height="15" fill="rgb(220,136,24)" fg:x="2952" fg:w="1"/><text x="35.5080%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="35.2009%" y="661" width="0.0119%" height="15" fill="rgb(217,3,25)" fg:x="2953" fg:w="1"/><text x="35.5200%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="35.2128%" y="645" width="0.0119%" height="15" fill="rgb(239,24,14)" fg:x="2954" fg:w="1"/><text x="35.5319%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="35.2128%" y="629" width="0.0119%" height="15" fill="rgb(244,16,53)" fg:x="2954" fg:w="1"/><text x="35.5319%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="35.2366%" y="613" width="0.0119%" height="15" fill="rgb(208,175,44)" fg:x="2956" fg:w="1"/><text x="35.5557%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="35.2366%" y="597" width="0.0119%" height="15" fill="rgb(252,18,48)" fg:x="2956" fg:w="1"/><text x="35.5557%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="35.2485%" y="597" width="0.0119%" height="15" fill="rgb(234,199,32)" fg:x="2957" fg:w="1"/><text x="35.5676%" y="607.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="35.2605%" y="597" width="0.0119%" height="15" fill="rgb(225,77,54)" fg:x="2958" fg:w="1"/><text x="35.5796%" y="607.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="35.2724%" y="581" width="0.0238%" height="15" fill="rgb(225,42,25)" fg:x="2959" fg:w="2"/><text x="35.5915%" y="591.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="35.2724%" y="565" width="0.0238%" height="15" fill="rgb(242,227,46)" fg:x="2959" fg:w="2"/><text x="35.5915%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="35.2724%" y="597" width="0.0358%" height="15" fill="rgb(246,197,35)" fg:x="2959" fg:w="3"/><text x="35.5915%" y="607.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="35.2962%" y="581" width="0.0119%" height="15" fill="rgb(215,159,26)" fg:x="2961" fg:w="1"/><text x="35.6153%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="35.2247%" y="645" width="0.1192%" height="15" fill="rgb(212,194,50)" fg:x="2955" fg:w="10"/><text x="35.5438%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (10 samples, 0.12%)</title><rect x="35.2247%" y="629" width="0.1192%" height="15" fill="rgb(246,132,1)" fg:x="2955" fg:w="10"/><text x="35.5438%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="35.2485%" y="613" width="0.0954%" height="15" fill="rgb(217,71,7)" fg:x="2957" fg:w="8"/><text x="35.5676%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="35.3081%" y="597" width="0.0358%" height="15" fill="rgb(252,59,32)" fg:x="2962" fg:w="3"/><text x="35.6272%" y="607.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="35.3081%" y="581" width="0.0358%" height="15" fill="rgb(253,204,25)" fg:x="2962" fg:w="3"/><text x="35.6272%" y="591.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="35.3081%" y="565" width="0.0358%" height="15" fill="rgb(232,21,16)" fg:x="2962" fg:w="3"/><text x="35.6272%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="35.2128%" y="661" width="0.1550%" height="15" fill="rgb(248,90,29)" fg:x="2954" fg:w="13"/><text x="35.5319%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="35.3439%" y="645" width="0.0238%" height="15" fill="rgb(249,223,7)" fg:x="2965" fg:w="2"/><text x="35.6630%" y="655.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="35.3439%" y="629" width="0.0238%" height="15" fill="rgb(231,119,42)" fg:x="2965" fg:w="2"/><text x="35.6630%" y="639.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="35.3439%" y="613" width="0.0238%" height="15" fill="rgb(215,41,35)" fg:x="2965" fg:w="2"/><text x="35.6630%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="35.2009%" y="677" width="0.1788%" height="15" fill="rgb(220,44,45)" fg:x="2953" fg:w="15"/><text x="35.5200%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="35.3677%" y="661" width="0.0119%" height="15" fill="rgb(253,197,36)" fg:x="2967" fg:w="1"/><text x="35.6868%" y="671.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="35.3677%" y="645" width="0.0119%" height="15" fill="rgb(245,225,54)" fg:x="2967" fg:w="1"/><text x="35.6868%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="35.3797%" y="661" width="0.0119%" height="15" fill="rgb(239,94,37)" fg:x="2968" fg:w="1"/><text x="35.6988%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="35.3797%" y="645" width="0.0119%" height="15" fill="rgb(242,217,10)" fg:x="2968" fg:w="1"/><text x="35.6988%" y="655.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="35.3916%" y="645" width="0.0238%" height="15" fill="rgb(250,193,7)" fg:x="2969" fg:w="2"/><text x="35.7107%" y="655.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="35.3916%" y="629" width="0.0238%" height="15" fill="rgb(230,104,19)" fg:x="2969" fg:w="2"/><text x="35.7107%" y="639.50"/></g><g><title>__GI___libc_free (5 samples, 0.06%)</title><rect x="35.4154%" y="629" width="0.0596%" height="15" fill="rgb(230,181,4)" fg:x="2971" fg:w="5"/><text x="35.7345%" y="639.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="35.4393%" y="613" width="0.0358%" height="15" fill="rgb(216,219,49)" fg:x="2973" fg:w="3"/><text x="35.7584%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="35.4750%" y="613" width="0.0119%" height="15" fill="rgb(254,144,0)" fg:x="2976" fg:w="1"/><text x="35.7941%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="35.4869%" y="613" width="0.0119%" height="15" fill="rgb(205,209,38)" fg:x="2977" fg:w="1"/><text x="35.8060%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="35.4869%" y="597" width="0.0119%" height="15" fill="rgb(240,21,42)" fg:x="2977" fg:w="1"/><text x="35.8060%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="35.4869%" y="581" width="0.0119%" height="15" fill="rgb(241,132,3)" fg:x="2977" fg:w="1"/><text x="35.8060%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="35.5108%" y="597" width="0.0119%" height="15" fill="rgb(225,14,2)" fg:x="2979" fg:w="1"/><text x="35.8299%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="35.5108%" y="581" width="0.0119%" height="15" fill="rgb(210,141,35)" fg:x="2979" fg:w="1"/><text x="35.8299%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="35.3916%" y="661" width="0.1430%" height="15" fill="rgb(251,14,44)" fg:x="2969" fg:w="12"/><text x="35.7107%" y="671.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (10 samples, 0.12%)</title><rect x="35.4154%" y="645" width="0.1192%" height="15" fill="rgb(247,48,18)" fg:x="2971" fg:w="10"/><text x="35.7345%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="35.4750%" y="629" width="0.0596%" height="15" fill="rgb(225,0,40)" fg:x="2976" fg:w="5"/><text x="35.7941%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="35.4989%" y="613" width="0.0358%" height="15" fill="rgb(221,31,33)" fg:x="2978" fg:w="3"/><text x="35.8180%" y="623.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="35.5227%" y="597" width="0.0119%" height="15" fill="rgb(237,42,40)" fg:x="2980" fg:w="1"/><text x="35.8418%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="35.3797%" y="677" width="0.1788%" height="15" fill="rgb(233,51,29)" fg:x="2968" fg:w="15"/><text x="35.6988%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="35.5346%" y="661" width="0.0238%" height="15" fill="rgb(226,58,20)" fg:x="2981" fg:w="2"/><text x="35.8537%" y="671.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="35.5346%" y="645" width="0.0238%" height="15" fill="rgb(208,98,7)" fg:x="2981" fg:w="2"/><text x="35.8537%" y="655.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="35.5346%" y="629" width="0.0238%" height="15" fill="rgb(228,143,44)" fg:x="2981" fg:w="2"/><text x="35.8537%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="35.5704%" y="661" width="0.0119%" height="15" fill="rgb(246,55,38)" fg:x="2984" fg:w="1"/><text x="35.8895%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="35.5585%" y="677" width="0.0358%" height="15" fill="rgb(247,87,16)" fg:x="2983" fg:w="3"/><text x="35.8776%" y="687.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="35.5823%" y="661" width="0.0119%" height="15" fill="rgb(234,129,42)" fg:x="2985" fg:w="1"/><text x="35.9014%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="35.5942%" y="661" width="0.0119%" height="15" fill="rgb(220,82,16)" fg:x="2986" fg:w="1"/><text x="35.9133%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="35.5942%" y="645" width="0.0119%" height="15" fill="rgb(211,88,4)" fg:x="2986" fg:w="1"/><text x="35.9133%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="35.5942%" y="677" width="0.0238%" height="15" fill="rgb(248,151,21)" fg:x="2986" fg:w="2"/><text x="35.9133%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned short), cond::smaller_indent(unsigned int)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="35.6062%" y="661" width="0.0119%" height="15" fill="rgb(238,163,6)" fg:x="2987" fg:w="1"/><text x="35.9253%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="35.6419%" y="613" width="0.0119%" height="15" fill="rgb(209,183,11)" fg:x="2990" fg:w="1"/><text x="35.9610%" y="623.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="35.6419%" y="597" width="0.0119%" height="15" fill="rgb(219,37,20)" fg:x="2990" fg:w="1"/><text x="35.9610%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="35.6538%" y="581" width="0.0119%" height="15" fill="rgb(210,158,4)" fg:x="2991" fg:w="1"/><text x="35.9729%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="35.6538%" y="565" width="0.0119%" height="15" fill="rgb(221,167,53)" fg:x="2991" fg:w="1"/><text x="35.9729%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="35.6419%" y="629" width="0.0358%" height="15" fill="rgb(237,151,45)" fg:x="2990" fg:w="3"/><text x="35.9610%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="35.6538%" y="613" width="0.0238%" height="15" fill="rgb(231,39,3)" fg:x="2991" fg:w="2"/><text x="35.9729%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="35.6538%" y="597" width="0.0238%" height="15" fill="rgb(212,167,28)" fg:x="2991" fg:w="2"/><text x="35.9729%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="35.6658%" y="581" width="0.0119%" height="15" fill="rgb(232,178,8)" fg:x="2992" fg:w="1"/><text x="35.9849%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="35.6658%" y="565" width="0.0119%" height="15" fill="rgb(225,151,20)" fg:x="2992" fg:w="1"/><text x="35.9849%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="35.6658%" y="549" width="0.0119%" height="15" fill="rgb(238,3,37)" fg:x="2992" fg:w="1"/><text x="35.9849%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="35.6658%" y="533" width="0.0119%" height="15" fill="rgb(251,147,42)" fg:x="2992" fg:w="1"/><text x="35.9849%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="35.6658%" y="517" width="0.0119%" height="15" fill="rgb(208,173,10)" fg:x="2992" fg:w="1"/><text x="35.9849%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="35.6658%" y="501" width="0.0119%" height="15" fill="rgb(246,225,4)" fg:x="2992" fg:w="1"/><text x="35.9849%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="35.6658%" y="485" width="0.0119%" height="15" fill="rgb(248,102,6)" fg:x="2992" fg:w="1"/><text x="35.9849%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="35.6181%" y="661" width="0.1311%" height="15" fill="rgb(232,6,21)" fg:x="2988" fg:w="11"/><text x="35.9372%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="35.6181%" y="645" width="0.1311%" height="15" fill="rgb(221,179,22)" fg:x="2988" fg:w="11"/><text x="35.9372%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (6 samples, 0.07%)</title><rect x="35.6777%" y="629" width="0.0715%" height="15" fill="rgb(252,50,20)" fg:x="2993" fg:w="6"/><text x="35.9968%" y="639.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="35.6777%" y="613" width="0.0715%" height="15" fill="rgb(222,56,38)" fg:x="2993" fg:w="6"/><text x="35.9968%" y="623.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="35.6777%" y="597" width="0.0715%" height="15" fill="rgb(206,193,29)" fg:x="2993" fg:w="6"/><text x="35.9968%" y="607.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="35.6896%" y="581" width="0.0596%" height="15" fill="rgb(239,192,45)" fg:x="2994" fg:w="5"/><text x="36.0087%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="35.7492%" y="565" width="0.0119%" height="15" fill="rgb(254,18,36)" fg:x="2999" fg:w="1"/><text x="36.0683%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="35.7492%" y="549" width="0.0119%" height="15" fill="rgb(221,127,11)" fg:x="2999" fg:w="1"/><text x="36.0683%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="35.7611%" y="565" width="0.0119%" height="15" fill="rgb(234,146,35)" fg:x="3000" fg:w="1"/><text x="36.0802%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="35.7611%" y="549" width="0.0119%" height="15" fill="rgb(254,201,37)" fg:x="3000" fg:w="1"/><text x="36.0802%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (14 samples, 0.17%)</title><rect x="35.6181%" y="677" width="0.1669%" height="15" fill="rgb(211,202,23)" fg:x="2988" fg:w="14"/><text x="35.9372%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="35.7492%" y="661" width="0.0358%" height="15" fill="rgb(237,91,2)" fg:x="2999" fg:w="3"/><text x="36.0683%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="35.7492%" y="645" width="0.0358%" height="15" fill="rgb(226,228,36)" fg:x="2999" fg:w="3"/><text x="36.0683%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="35.7492%" y="629" width="0.0358%" height="15" fill="rgb(213,63,50)" fg:x="2999" fg:w="3"/><text x="36.0683%" y="639.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="35.7492%" y="613" width="0.0358%" height="15" fill="rgb(235,194,19)" fg:x="2999" fg:w="3"/><text x="36.0683%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="35.7492%" y="597" width="0.0358%" height="15" fill="rgb(207,204,18)" fg:x="2999" fg:w="3"/><text x="36.0683%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="35.7492%" y="581" width="0.0358%" height="15" fill="rgb(248,8,7)" fg:x="2999" fg:w="3"/><text x="36.0683%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="35.7730%" y="565" width="0.0119%" height="15" fill="rgb(223,145,47)" fg:x="3001" fg:w="1"/><text x="36.0921%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="35.7850%" y="645" width="0.0119%" height="15" fill="rgb(228,84,11)" fg:x="3002" fg:w="1"/><text x="36.1041%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="35.7850%" y="629" width="0.0119%" height="15" fill="rgb(218,76,45)" fg:x="3002" fg:w="1"/><text x="36.1041%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (59 samples, 0.70%)</title><rect x="35.1055%" y="693" width="0.7033%" height="15" fill="rgb(223,80,15)" fg:x="2945" fg:w="59"/><text x="35.4246%" y="703.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="35.7850%" y="677" width="0.0238%" height="15" fill="rgb(219,218,33)" fg:x="3002" fg:w="2"/><text x="36.1041%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="35.7850%" y="661" width="0.0238%" height="15" fill="rgb(208,51,11)" fg:x="3002" fg:w="2"/><text x="36.1041%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned short), cond::smaller_indent(unsigned int)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="35.7969%" y="645" width="0.0119%" height="15" fill="rgb(229,165,39)" fg:x="3003" fg:w="1"/><text x="36.1160%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="35.8088%" y="677" width="0.0119%" height="15" fill="rgb(241,100,24)" fg:x="3004" fg:w="1"/><text x="36.1279%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="35.8088%" y="661" width="0.0119%" height="15" fill="rgb(228,14,23)" fg:x="3004" fg:w="1"/><text x="36.1279%" y="671.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="35.8207%" y="677" width="0.0119%" height="15" fill="rgb(247,116,52)" fg:x="3005" fg:w="1"/><text x="36.1398%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="35.8088%" y="693" width="0.1430%" height="15" fill="rgb(216,149,33)" fg:x="3004" fg:w="12"/><text x="36.1279%" y="703.50"/></g><g><title>operator new (10 samples, 0.12%)</title><rect x="35.8326%" y="677" width="0.1192%" height="15" fill="rgb(238,142,29)" fg:x="3006" fg:w="10"/><text x="36.1517%" y="687.50"/></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="35.8326%" y="661" width="0.1192%" height="15" fill="rgb(224,83,40)" fg:x="3006" fg:w="10"/><text x="36.1517%" y="671.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="35.8803%" y="645" width="0.0715%" height="15" fill="rgb(234,165,11)" fg:x="3010" fg:w="6"/><text x="36.1994%" y="655.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="35.9518%" y="677" width="0.0119%" height="15" fill="rgb(215,96,23)" fg:x="3016" fg:w="1"/><text x="36.2709%" y="687.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="35.9518%" y="661" width="0.0119%" height="15" fill="rgb(233,179,26)" fg:x="3016" fg:w="1"/><text x="36.2709%" y="671.50"/></g><g><title>logic::repeat_end (180 samples, 2.15%)</title><rect x="33.8300%" y="725" width="2.1457%" height="15" fill="rgb(225,129,33)" fg:x="2838" fg:w="180"/><text x="34.1491%" y="735.50">.. </text></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (109 samples, 1.30%)</title><rect x="34.6764%" y="709" width="1.2993%" height="15" fill="rgb(237,49,13)" fg:x="2909" fg:w="109"/><text x="34.9955%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function&lt;std::function&lt;Result (State)&gt;, void, void&gt; (2 samples, 0.02%)</title><rect x="35.9518%" y="693" width="0.0238%" height="15" fill="rgb(211,3,31)" fg:x="3016" fg:w="2"/><text x="36.2709%" y="703.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="35.9638%" y="677" width="0.0119%" height="15" fill="rgb(216,152,19)" fg:x="3017" fg:w="1"/><text x="36.2829%" y="687.50"/></g><g><title>operator new (13 samples, 0.15%)</title><rect x="35.9876%" y="709" width="0.1550%" height="15" fill="rgb(251,121,35)" fg:x="3019" fg:w="13"/><text x="36.3067%" y="719.50"/></g><g><title>__GI___libc_malloc (13 samples, 0.15%)</title><rect x="35.9876%" y="693" width="0.1550%" height="15" fill="rgb(210,217,47)" fg:x="3019" fg:w="13"/><text x="36.3067%" y="703.50"/></g><g><title>_int_malloc (10 samples, 0.12%)</title><rect x="36.0234%" y="677" width="0.1192%" height="15" fill="rgb(244,116,22)" fg:x="3022" fg:w="10"/><text x="36.3425%" y="687.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="36.1545%" y="693" width="0.0238%" height="15" fill="rgb(228,17,21)" fg:x="3033" fg:w="2"/><text x="36.4736%" y="703.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="36.1545%" y="677" width="0.0238%" height="15" fill="rgb(240,149,34)" fg:x="3033" fg:w="2"/><text x="36.4736%" y="687.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="36.1902%" y="629" width="0.0119%" height="15" fill="rgb(208,125,47)" fg:x="3036" fg:w="1"/><text x="36.5093%" y="639.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="36.1902%" y="613" width="0.0119%" height="15" fill="rgb(249,186,39)" fg:x="3036" fg:w="1"/><text x="36.5093%" y="623.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="36.2022%" y="629" width="0.0119%" height="15" fill="rgb(240,220,33)" fg:x="3037" fg:w="1"/><text x="36.5213%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="36.2141%" y="597" width="0.0119%" height="15" fill="rgb(243,110,23)" fg:x="3038" fg:w="1"/><text x="36.5332%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="36.2141%" y="581" width="0.0119%" height="15" fill="rgb(219,163,46)" fg:x="3038" fg:w="1"/><text x="36.5332%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="36.2260%" y="549" width="0.0119%" height="15" fill="rgb(216,126,30)" fg:x="3039" fg:w="1"/><text x="36.5451%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="36.2260%" y="533" width="0.0119%" height="15" fill="rgb(208,139,11)" fg:x="3039" fg:w="1"/><text x="36.5451%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="36.2379%" y="517" width="0.0119%" height="15" fill="rgb(213,118,36)" fg:x="3040" fg:w="1"/><text x="36.5570%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="36.2379%" y="501" width="0.0119%" height="15" fill="rgb(226,43,17)" fg:x="3040" fg:w="1"/><text x="36.5570%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="36.2499%" y="517" width="0.0119%" height="15" fill="rgb(254,217,4)" fg:x="3041" fg:w="1"/><text x="36.5690%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="36.2499%" y="501" width="0.0119%" height="15" fill="rgb(210,134,47)" fg:x="3041" fg:w="1"/><text x="36.5690%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="36.2141%" y="613" width="0.0834%" height="15" fill="rgb(237,24,49)" fg:x="3038" fg:w="7"/><text x="36.5332%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="36.2260%" y="597" width="0.0715%" height="15" fill="rgb(251,39,46)" fg:x="3039" fg:w="6"/><text x="36.5451%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="36.2260%" y="581" width="0.0715%" height="15" fill="rgb(251,220,3)" fg:x="3039" fg:w="6"/><text x="36.5451%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (6 samples, 0.07%)</title><rect x="36.2260%" y="565" width="0.0715%" height="15" fill="rgb(228,105,12)" fg:x="3039" fg:w="6"/><text x="36.5451%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="36.2379%" y="549" width="0.0596%" height="15" fill="rgb(215,196,1)" fg:x="3040" fg:w="5"/><text x="36.5570%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="36.2379%" y="533" width="0.0596%" height="15" fill="rgb(214,33,39)" fg:x="3040" fg:w="5"/><text x="36.5570%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="36.2618%" y="517" width="0.0358%" height="15" fill="rgb(220,19,52)" fg:x="3042" fg:w="3"/><text x="36.5809%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), bool const (*)(State&amp;)&gt;::_M_manager (2 samples, 0.02%)</title><rect x="36.2737%" y="501" width="0.0238%" height="15" fill="rgb(221,78,38)" fg:x="3043" fg:w="2"/><text x="36.5928%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="36.2975%" y="597" width="0.0119%" height="15" fill="rgb(253,30,16)" fg:x="3045" fg:w="1"/><text x="36.6166%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="36.2975%" y="581" width="0.0119%" height="15" fill="rgb(242,65,0)" fg:x="3045" fg:w="1"/><text x="36.6166%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="36.1902%" y="645" width="0.1311%" height="15" fill="rgb(235,201,12)" fg:x="3036" fg:w="11"/><text x="36.5093%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="36.2141%" y="629" width="0.1073%" height="15" fill="rgb(233,161,9)" fg:x="3038" fg:w="9"/><text x="36.5332%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="36.2975%" y="613" width="0.0238%" height="15" fill="rgb(241,207,41)" fg:x="3045" fg:w="2"/><text x="36.6166%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="36.3095%" y="597" width="0.0119%" height="15" fill="rgb(212,69,46)" fg:x="3046" fg:w="1"/><text x="36.6286%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="36.3214%" y="645" width="0.0119%" height="15" fill="rgb(239,69,45)" fg:x="3047" fg:w="1"/><text x="36.6405%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (22 samples, 0.26%)</title><rect x="36.1902%" y="661" width="0.2622%" height="15" fill="rgb(242,117,48)" fg:x="3036" fg:w="22"/><text x="36.5093%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (10 samples, 0.12%)</title><rect x="36.3333%" y="645" width="0.1192%" height="15" fill="rgb(228,41,36)" fg:x="3048" fg:w="10"/><text x="36.6524%" y="655.50"/></g><g><title>operator new (10 samples, 0.12%)</title><rect x="36.3333%" y="629" width="0.1192%" height="15" fill="rgb(212,3,32)" fg:x="3048" fg:w="10"/><text x="36.6524%" y="639.50"/></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="36.3333%" y="613" width="0.1192%" height="15" fill="rgb(233,41,49)" fg:x="3048" fg:w="10"/><text x="36.6524%" y="623.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="36.3810%" y="597" width="0.0715%" height="15" fill="rgb(252,170,49)" fg:x="3052" fg:w="6"/><text x="36.7001%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="36.4644%" y="629" width="0.0119%" height="15" fill="rgb(229,53,26)" fg:x="3059" fg:w="1"/><text x="36.7835%" y="639.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="36.4644%" y="613" width="0.0119%" height="15" fill="rgb(217,157,12)" fg:x="3059" fg:w="1"/><text x="36.7835%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (25 samples, 0.30%)</title><rect x="36.1902%" y="677" width="0.2980%" height="15" fill="rgb(227,17,9)" fg:x="3036" fg:w="25"/><text x="36.5093%" y="687.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="36.4525%" y="661" width="0.0358%" height="15" fill="rgb(218,84,12)" fg:x="3058" fg:w="3"/><text x="36.7716%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="36.4644%" y="645" width="0.0238%" height="15" fill="rgb(212,79,24)" fg:x="3059" fg:w="2"/><text x="36.7835%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned short), cond::smaller_indent(unsigned int)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="36.4763%" y="629" width="0.0119%" height="15" fill="rgb(217,222,37)" fg:x="3060" fg:w="1"/><text x="36.7954%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="36.4883%" y="613" width="0.0119%" height="15" fill="rgb(246,208,8)" fg:x="3061" fg:w="1"/><text x="36.8074%" y="623.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="36.4883%" y="597" width="0.0119%" height="15" fill="rgb(244,133,10)" fg:x="3061" fg:w="1"/><text x="36.8074%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="36.4883%" y="581" width="0.0119%" height="15" fill="rgb(209,219,41)" fg:x="3061" fg:w="1"/><text x="36.8074%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="36.5002%" y="597" width="0.0119%" height="15" fill="rgb(253,175,45)" fg:x="3062" fg:w="1"/><text x="36.8193%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="36.5002%" y="581" width="0.0119%" height="15" fill="rgb(235,100,37)" fg:x="3062" fg:w="1"/><text x="36.8193%" y="591.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="36.5240%" y="533" width="0.0238%" height="15" fill="rgb(225,87,19)" fg:x="3064" fg:w="2"/><text x="36.8431%" y="543.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="36.5240%" y="517" width="0.0238%" height="15" fill="rgb(217,152,17)" fg:x="3064" fg:w="2"/><text x="36.8431%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="36.5479%" y="501" width="0.0119%" height="15" fill="rgb(235,72,13)" fg:x="3066" fg:w="1"/><text x="36.8670%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="36.5479%" y="485" width="0.0119%" height="15" fill="rgb(233,140,18)" fg:x="3066" fg:w="1"/><text x="36.8670%" y="495.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="36.5598%" y="469" width="0.0358%" height="15" fill="rgb(207,212,28)" fg:x="3067" fg:w="3"/><text x="36.8789%" y="479.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="36.5598%" y="453" width="0.0358%" height="15" fill="rgb(220,130,25)" fg:x="3067" fg:w="3"/><text x="36.8789%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="36.5955%" y="453" width="0.1073%" height="15" fill="rgb(205,55,34)" fg:x="3070" fg:w="9"/><text x="36.9146%" y="463.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="36.5955%" y="437" width="0.1073%" height="15" fill="rgb(237,54,35)" fg:x="3070" fg:w="9"/><text x="36.9146%" y="447.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="36.5955%" y="421" width="0.1073%" height="15" fill="rgb(208,67,23)" fg:x="3070" fg:w="9"/><text x="36.9146%" y="431.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="36.5955%" y="405" width="0.1073%" height="15" fill="rgb(206,207,50)" fg:x="3070" fg:w="9"/><text x="36.9146%" y="415.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="36.5955%" y="389" width="0.1073%" height="15" fill="rgb(213,211,42)" fg:x="3070" fg:w="9"/><text x="36.9146%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="36.7028%" y="453" width="0.0477%" height="15" fill="rgb(252,197,50)" fg:x="3079" fg:w="4"/><text x="37.0219%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="36.7028%" y="437" width="0.0477%" height="15" fill="rgb(251,211,41)" fg:x="3079" fg:w="4"/><text x="37.0219%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="36.7028%" y="421" width="0.0477%" height="15" fill="rgb(229,211,5)" fg:x="3079" fg:w="4"/><text x="37.0219%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="36.7386%" y="405" width="0.0119%" height="15" fill="rgb(239,36,31)" fg:x="3082" fg:w="1"/><text x="37.0577%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="36.7386%" y="389" width="0.0119%" height="15" fill="rgb(248,67,31)" fg:x="3082" fg:w="1"/><text x="37.0577%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="36.7505%" y="453" width="0.0596%" height="15" fill="rgb(249,55,44)" fg:x="3083" fg:w="5"/><text x="37.0696%" y="463.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="36.7505%" y="437" width="0.0596%" height="15" fill="rgb(216,82,12)" fg:x="3083" fg:w="5"/><text x="37.0696%" y="447.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="36.7624%" y="421" width="0.0477%" height="15" fill="rgb(242,174,1)" fg:x="3084" fg:w="4"/><text x="37.0815%" y="431.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="36.7743%" y="405" width="0.0358%" height="15" fill="rgb(208,120,29)" fg:x="3085" fg:w="3"/><text x="37.0934%" y="415.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="36.8101%" y="437" width="0.0834%" height="15" fill="rgb(221,105,43)" fg:x="3088" fg:w="7"/><text x="37.1292%" y="447.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="36.8101%" y="421" width="0.0834%" height="15" fill="rgb(234,124,22)" fg:x="3088" fg:w="7"/><text x="37.1292%" y="431.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="36.8101%" y="405" width="0.0834%" height="15" fill="rgb(212,23,30)" fg:x="3088" fg:w="7"/><text x="37.1292%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="36.8936%" y="389" width="0.0119%" height="15" fill="rgb(219,122,53)" fg:x="3095" fg:w="1"/><text x="37.2127%" y="399.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="36.8936%" y="373" width="0.0119%" height="15" fill="rgb(248,84,24)" fg:x="3095" fg:w="1"/><text x="37.2127%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (33 samples, 0.39%)</title><rect x="36.5479%" y="533" width="0.3934%" height="15" fill="rgb(245,115,18)" fg:x="3066" fg:w="33"/><text x="36.8670%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (33 samples, 0.39%)</title><rect x="36.5479%" y="517" width="0.3934%" height="15" fill="rgb(227,176,51)" fg:x="3066" fg:w="33"/><text x="36.8670%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (32 samples, 0.38%)</title><rect x="36.5598%" y="501" width="0.3815%" height="15" fill="rgb(229,63,42)" fg:x="3067" fg:w="32"/><text x="36.8789%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (32 samples, 0.38%)</title><rect x="36.5598%" y="485" width="0.3815%" height="15" fill="rgb(247,202,24)" fg:x="3067" fg:w="32"/><text x="36.8789%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (29 samples, 0.35%)</title><rect x="36.5955%" y="469" width="0.3457%" height="15" fill="rgb(244,173,20)" fg:x="3070" fg:w="29"/><text x="36.9146%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="36.8101%" y="453" width="0.1311%" height="15" fill="rgb(242,81,47)" fg:x="3088" fg:w="11"/><text x="37.1292%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="36.8936%" y="437" width="0.0477%" height="15" fill="rgb(231,185,54)" fg:x="3095" fg:w="4"/><text x="37.2127%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="36.8936%" y="421" width="0.0477%" height="15" fill="rgb(243,55,32)" fg:x="3095" fg:w="4"/><text x="37.2127%" y="431.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="36.8936%" y="405" width="0.0477%" height="15" fill="rgb(208,167,19)" fg:x="3095" fg:w="4"/><text x="37.2127%" y="415.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (3 samples, 0.04%)</title><rect x="36.9055%" y="389" width="0.0358%" height="15" fill="rgb(231,72,35)" fg:x="3096" fg:w="3"/><text x="37.2246%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="36.9055%" y="373" width="0.0358%" height="15" fill="rgb(250,173,51)" fg:x="3096" fg:w="3"/><text x="37.2246%" y="383.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (3 samples, 0.04%)</title><rect x="36.9055%" y="357" width="0.0358%" height="15" fill="rgb(209,5,22)" fg:x="3096" fg:w="3"/><text x="37.2246%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="36.9055%" y="341" width="0.0358%" height="15" fill="rgb(250,174,19)" fg:x="3096" fg:w="3"/><text x="37.2246%" y="351.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (3 samples, 0.04%)</title><rect x="36.9055%" y="325" width="0.0358%" height="15" fill="rgb(217,3,49)" fg:x="3096" fg:w="3"/><text x="37.2246%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="36.9055%" y="309" width="0.0358%" height="15" fill="rgb(218,225,5)" fg:x="3096" fg:w="3"/><text x="37.2246%" y="319.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="36.9055%" y="293" width="0.0358%" height="15" fill="rgb(236,89,11)" fg:x="3096" fg:w="3"/><text x="37.2246%" y="303.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="36.9055%" y="277" width="0.0358%" height="15" fill="rgb(206,33,28)" fg:x="3096" fg:w="3"/><text x="37.2246%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (36 samples, 0.43%)</title><rect x="36.5240%" y="549" width="0.4291%" height="15" fill="rgb(241,56,42)" fg:x="3064" fg:w="36"/><text x="36.8431%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="36.9412%" y="533" width="0.0119%" height="15" fill="rgb(222,44,11)" fg:x="3099" fg:w="1"/><text x="37.2603%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="36.9412%" y="517" width="0.0119%" height="15" fill="rgb(234,111,20)" fg:x="3099" fg:w="1"/><text x="37.2603%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="36.9412%" y="501" width="0.0119%" height="15" fill="rgb(237,77,6)" fg:x="3099" fg:w="1"/><text x="37.2603%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="36.9412%" y="485" width="0.0119%" height="15" fill="rgb(235,111,23)" fg:x="3099" fg:w="1"/><text x="37.2603%" y="495.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="36.9532%" y="469" width="0.0119%" height="15" fill="rgb(251,135,29)" fg:x="3100" fg:w="1"/><text x="37.2723%" y="479.50"/></g><g><title>operator new (10 samples, 0.12%)</title><rect x="36.9651%" y="405" width="0.1192%" height="15" fill="rgb(217,57,1)" fg:x="3101" fg:w="10"/><text x="37.2842%" y="415.50"/></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="36.9651%" y="389" width="0.1192%" height="15" fill="rgb(249,119,31)" fg:x="3101" fg:w="10"/><text x="37.2842%" y="399.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="36.9770%" y="373" width="0.1073%" height="15" fill="rgb(233,164,33)" fg:x="3102" fg:w="9"/><text x="37.2961%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="37.0843%" y="373" width="0.0119%" height="15" fill="rgb(250,217,43)" fg:x="3111" fg:w="1"/><text x="37.4034%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="37.0843%" y="357" width="0.0119%" height="15" fill="rgb(232,154,50)" fg:x="3111" fg:w="1"/><text x="37.4034%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="37.0962%" y="357" width="0.0119%" height="15" fill="rgb(227,190,8)" fg:x="3112" fg:w="1"/><text x="37.4153%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="37.0962%" y="341" width="0.0119%" height="15" fill="rgb(209,217,32)" fg:x="3112" fg:w="1"/><text x="37.4153%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (25 samples, 0.30%)</title><rect x="36.9532%" y="501" width="0.2980%" height="15" fill="rgb(243,203,50)" fg:x="3100" fg:w="25"/><text x="37.2723%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (25 samples, 0.30%)</title><rect x="36.9532%" y="485" width="0.2980%" height="15" fill="rgb(232,152,27)" fg:x="3100" fg:w="25"/><text x="37.2723%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (24 samples, 0.29%)</title><rect x="36.9651%" y="469" width="0.2861%" height="15" fill="rgb(240,34,29)" fg:x="3101" fg:w="24"/><text x="37.2842%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="36.9651%" y="453" width="0.2861%" height="15" fill="rgb(215,185,52)" fg:x="3101" fg:w="24"/><text x="37.2842%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (24 samples, 0.29%)</title><rect x="36.9651%" y="437" width="0.2861%" height="15" fill="rgb(240,89,49)" fg:x="3101" fg:w="24"/><text x="37.2842%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="36.9651%" y="421" width="0.2861%" height="15" fill="rgb(225,12,52)" fg:x="3101" fg:w="24"/><text x="37.2842%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (14 samples, 0.17%)</title><rect x="37.0843%" y="405" width="0.1669%" height="15" fill="rgb(239,128,45)" fg:x="3111" fg:w="14"/><text x="37.4034%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="37.0843%" y="389" width="0.1669%" height="15" fill="rgb(211,78,47)" fg:x="3111" fg:w="14"/><text x="37.4034%" y="399.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="37.0962%" y="373" width="0.1550%" height="15" fill="rgb(232,31,21)" fg:x="3112" fg:w="13"/><text x="37.4153%" y="383.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (12 samples, 0.14%)</title><rect x="37.1081%" y="357" width="0.1430%" height="15" fill="rgb(222,168,14)" fg:x="3113" fg:w="12"/><text x="37.4272%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="37.1081%" y="341" width="0.1430%" height="15" fill="rgb(209,128,24)" fg:x="3113" fg:w="12"/><text x="37.4272%" y="351.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (12 samples, 0.14%)</title><rect x="37.1081%" y="325" width="0.1430%" height="15" fill="rgb(249,35,13)" fg:x="3113" fg:w="12"/><text x="37.4272%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="37.1081%" y="309" width="0.1430%" height="15" fill="rgb(218,7,2)" fg:x="3113" fg:w="12"/><text x="37.4272%" y="319.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (12 samples, 0.14%)</title><rect x="37.1081%" y="293" width="0.1430%" height="15" fill="rgb(238,107,27)" fg:x="3113" fg:w="12"/><text x="37.4272%" y="303.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="37.1081%" y="277" width="0.1430%" height="15" fill="rgb(217,88,38)" fg:x="3113" fg:w="12"/><text x="37.4272%" y="287.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="37.1200%" y="261" width="0.1311%" height="15" fill="rgb(230,207,0)" fg:x="3114" fg:w="11"/><text x="37.4391%" y="271.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="37.1200%" y="245" width="0.1311%" height="15" fill="rgb(249,64,54)" fg:x="3114" fg:w="11"/><text x="37.4391%" y="255.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="37.1439%" y="229" width="0.1073%" height="15" fill="rgb(231,7,11)" fg:x="3116" fg:w="9"/><text x="37.4630%" y="239.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (27 samples, 0.32%)</title><rect x="36.9532%" y="517" width="0.3219%" height="15" fill="rgb(205,149,21)" fg:x="3100" fg:w="27"/><text x="37.2723%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="37.2512%" y="501" width="0.0238%" height="15" fill="rgb(215,126,34)" fg:x="3125" fg:w="2"/><text x="37.5703%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="37.2512%" y="485" width="0.0238%" height="15" fill="rgb(241,132,45)" fg:x="3125" fg:w="2"/><text x="37.5703%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="37.2631%" y="469" width="0.0119%" height="15" fill="rgb(252,69,32)" fg:x="3126" fg:w="1"/><text x="37.5822%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="37.2631%" y="453" width="0.0119%" height="15" fill="rgb(232,204,19)" fg:x="3126" fg:w="1"/><text x="37.5822%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (68 samples, 0.81%)</title><rect x="36.4883%" y="677" width="0.8106%" height="15" fill="rgb(249,15,47)" fg:x="3061" fg:w="68"/><text x="36.8074%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (68 samples, 0.81%)</title><rect x="36.4883%" y="661" width="0.8106%" height="15" fill="rgb(209,227,23)" fg:x="3061" fg:w="68"/><text x="36.8074%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (68 samples, 0.81%)</title><rect x="36.4883%" y="645" width="0.8106%" height="15" fill="rgb(248,92,24)" fg:x="3061" fg:w="68"/><text x="36.8074%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (68 samples, 0.81%)</title><rect x="36.4883%" y="629" width="0.8106%" height="15" fill="rgb(247,59,2)" fg:x="3061" fg:w="68"/><text x="36.8074%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (67 samples, 0.80%)</title><rect x="36.5002%" y="613" width="0.7987%" height="15" fill="rgb(221,30,5)" fg:x="3062" fg:w="67"/><text x="36.8193%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (66 samples, 0.79%)</title><rect x="36.5121%" y="597" width="0.7867%" height="15" fill="rgb(208,108,53)" fg:x="3063" fg:w="66"/><text x="36.8312%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (66 samples, 0.79%)</title><rect x="36.5121%" y="581" width="0.7867%" height="15" fill="rgb(211,183,26)" fg:x="3063" fg:w="66"/><text x="36.8312%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (65 samples, 0.77%)</title><rect x="36.5240%" y="565" width="0.7748%" height="15" fill="rgb(232,132,4)" fg:x="3064" fg:w="65"/><text x="36.8431%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (29 samples, 0.35%)</title><rect x="36.9532%" y="549" width="0.3457%" height="15" fill="rgb(253,128,37)" fg:x="3100" fg:w="29"/><text x="37.2723%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (29 samples, 0.35%)</title><rect x="36.9532%" y="533" width="0.3457%" height="15" fill="rgb(221,58,24)" fg:x="3100" fg:w="29"/><text x="37.2723%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="37.2750%" y="517" width="0.0238%" height="15" fill="rgb(230,54,45)" fg:x="3127" fg:w="2"/><text x="37.5941%" y="527.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="37.2750%" y="501" width="0.0238%" height="15" fill="rgb(254,21,18)" fg:x="3127" fg:w="2"/><text x="37.5941%" y="511.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="37.2750%" y="485" width="0.0238%" height="15" fill="rgb(221,108,0)" fg:x="3127" fg:w="2"/><text x="37.5941%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (106 samples, 1.26%)</title><rect x="36.1426%" y="709" width="1.2636%" height="15" fill="rgb(206,95,1)" fg:x="3032" fg:w="106"/><text x="36.4617%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (103 samples, 1.23%)</title><rect x="36.1783%" y="693" width="1.2278%" height="15" fill="rgb(237,52,5)" fg:x="3035" fg:w="103"/><text x="36.4974%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (9 samples, 0.11%)</title><rect x="37.2988%" y="677" width="0.1073%" height="15" fill="rgb(218,150,34)" fg:x="3129" fg:w="9"/><text x="37.6179%" y="687.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="37.2988%" y="661" width="0.1073%" height="15" fill="rgb(235,194,28)" fg:x="3129" fg:w="9"/><text x="37.6179%" y="671.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="37.2988%" y="645" width="0.1073%" height="15" fill="rgb(245,92,18)" fg:x="3129" fg:w="9"/><text x="37.6179%" y="655.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="37.3227%" y="629" width="0.0834%" height="15" fill="rgb(253,203,53)" fg:x="3131" fg:w="7"/><text x="37.6418%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="37.4300%" y="661" width="0.0119%" height="15" fill="rgb(249,185,47)" fg:x="3140" fg:w="1"/><text x="37.7491%" y="671.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="37.4300%" y="645" width="0.0119%" height="15" fill="rgb(252,194,52)" fg:x="3140" fg:w="1"/><text x="37.7491%" y="655.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="37.4538%" y="629" width="0.0238%" height="15" fill="rgb(210,53,36)" fg:x="3142" fg:w="2"/><text x="37.7729%" y="639.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="37.4538%" y="613" width="0.0238%" height="15" fill="rgb(237,37,25)" fg:x="3142" fg:w="2"/><text x="37.7729%" y="623.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="37.5253%" y="533" width="0.0238%" height="15" fill="rgb(242,116,27)" fg:x="3148" fg:w="2"/><text x="37.8444%" y="543.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="37.5253%" y="517" width="0.0238%" height="15" fill="rgb(213,185,26)" fg:x="3148" fg:w="2"/><text x="37.8444%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="37.5492%" y="517" width="0.0119%" height="15" fill="rgb(225,204,8)" fg:x="3150" fg:w="1"/><text x="37.8683%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="37.5492%" y="501" width="0.0119%" height="15" fill="rgb(254,111,37)" fg:x="3150" fg:w="1"/><text x="37.8683%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="37.5611%" y="485" width="0.0119%" height="15" fill="rgb(242,35,9)" fg:x="3151" fg:w="1"/><text x="37.8802%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="37.5611%" y="469" width="0.0119%" height="15" fill="rgb(232,138,49)" fg:x="3151" fg:w="1"/><text x="37.8802%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="37.5611%" y="453" width="0.0119%" height="15" fill="rgb(247,56,4)" fg:x="3151" fg:w="1"/><text x="37.8802%" y="463.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="37.5611%" y="437" width="0.0119%" height="15" fill="rgb(226,179,17)" fg:x="3151" fg:w="1"/><text x="37.8802%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="37.5015%" y="581" width="0.0834%" height="15" fill="rgb(216,163,45)" fg:x="3146" fg:w="7"/><text x="37.8206%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="37.5015%" y="565" width="0.0834%" height="15" fill="rgb(211,157,3)" fg:x="3146" fg:w="7"/><text x="37.8206%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="37.5253%" y="549" width="0.0596%" height="15" fill="rgb(234,44,20)" fg:x="3148" fg:w="5"/><text x="37.8444%" y="559.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="37.5492%" y="533" width="0.0358%" height="15" fill="rgb(254,138,23)" fg:x="3150" fg:w="3"/><text x="37.8683%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="37.5611%" y="517" width="0.0238%" height="15" fill="rgb(206,119,39)" fg:x="3151" fg:w="2"/><text x="37.8802%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="37.5611%" y="501" width="0.0238%" height="15" fill="rgb(231,105,52)" fg:x="3151" fg:w="2"/><text x="37.8802%" y="511.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="37.5730%" y="485" width="0.0119%" height="15" fill="rgb(250,20,5)" fg:x="3152" fg:w="1"/><text x="37.8921%" y="495.50"/></g><g><title>operator new (10 samples, 0.12%)</title><rect x="37.5849%" y="565" width="0.1192%" height="15" fill="rgb(215,198,30)" fg:x="3153" fg:w="10"/><text x="37.9040%" y="575.50"/></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="37.5849%" y="549" width="0.1192%" height="15" fill="rgb(246,142,8)" fg:x="3153" fg:w="10"/><text x="37.9040%" y="559.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="37.5969%" y="533" width="0.1073%" height="15" fill="rgb(243,26,38)" fg:x="3154" fg:w="9"/><text x="37.9160%" y="543.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="37.7041%" y="565" width="0.0119%" height="15" fill="rgb(205,133,28)" fg:x="3163" fg:w="1"/><text x="38.0232%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="37.5015%" y="613" width="0.2265%" height="15" fill="rgb(212,34,0)" fg:x="3146" fg:w="19"/><text x="37.8206%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (19 samples, 0.23%)</title><rect x="37.5015%" y="597" width="0.2265%" height="15" fill="rgb(251,226,22)" fg:x="3146" fg:w="19"/><text x="37.8206%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (12 samples, 0.14%)</title><rect x="37.5849%" y="581" width="0.1430%" height="15" fill="rgb(252,119,9)" fg:x="3153" fg:w="12"/><text x="37.9040%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="37.7161%" y="565" width="0.0119%" height="15" fill="rgb(213,150,50)" fg:x="3164" fg:w="1"/><text x="38.0352%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="37.7280%" y="597" width="0.0119%" height="15" fill="rgb(212,24,39)" fg:x="3165" fg:w="1"/><text x="38.0471%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="37.7280%" y="581" width="0.0119%" height="15" fill="rgb(213,46,39)" fg:x="3165" fg:w="1"/><text x="38.0471%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (23 samples, 0.27%)</title><rect x="37.4776%" y="629" width="0.2742%" height="15" fill="rgb(239,106,12)" fg:x="3144" fg:w="23"/><text x="37.7967%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="37.7280%" y="613" width="0.0238%" height="15" fill="rgb(249,229,21)" fg:x="3165" fg:w="2"/><text x="38.0471%" y="623.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="37.7399%" y="597" width="0.0119%" height="15" fill="rgb(212,158,3)" fg:x="3166" fg:w="1"/><text x="38.0590%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="37.7399%" y="581" width="0.0119%" height="15" fill="rgb(253,26,48)" fg:x="3166" fg:w="1"/><text x="38.0590%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="37.7399%" y="565" width="0.0119%" height="15" fill="rgb(238,178,20)" fg:x="3166" fg:w="1"/><text x="38.0590%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="37.4538%" y="645" width="0.3099%" height="15" fill="rgb(208,86,15)" fg:x="3142" fg:w="26"/><text x="37.7729%" y="655.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="37.7518%" y="629" width="0.0119%" height="15" fill="rgb(239,42,53)" fg:x="3167" fg:w="1"/><text x="38.0709%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="37.7518%" y="613" width="0.0119%" height="15" fill="rgb(245,226,8)" fg:x="3167" fg:w="1"/><text x="38.0709%" y="623.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="37.7637%" y="629" width="0.0119%" height="15" fill="rgb(216,176,32)" fg:x="3168" fg:w="1"/><text x="38.0828%" y="639.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="37.7637%" y="613" width="0.0119%" height="15" fill="rgb(231,186,21)" fg:x="3168" fg:w="1"/><text x="38.0828%" y="623.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="37.7757%" y="597" width="0.0119%" height="15" fill="rgb(205,95,49)" fg:x="3169" fg:w="1"/><text x="38.0948%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="37.7757%" y="581" width="0.0119%" height="15" fill="rgb(217,145,8)" fg:x="3169" fg:w="1"/><text x="38.0948%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="37.7876%" y="581" width="0.0119%" height="15" fill="rgb(239,144,48)" fg:x="3170" fg:w="1"/><text x="38.1067%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), parser::push(unsigned short)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="37.7876%" y="565" width="0.0119%" height="15" fill="rgb(214,189,23)" fg:x="3170" fg:w="1"/><text x="38.1067%" y="575.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="37.7995%" y="533" width="0.0834%" height="15" fill="rgb(229,157,17)" fg:x="3171" fg:w="7"/><text x="38.1186%" y="543.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="37.8114%" y="517" width="0.0715%" height="15" fill="rgb(230,5,48)" fg:x="3172" fg:w="6"/><text x="38.1305%" y="527.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="37.8233%" y="501" width="0.0596%" height="15" fill="rgb(224,156,48)" fg:x="3173" fg:w="5"/><text x="38.1424%" y="511.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="37.8829%" y="533" width="0.0119%" height="15" fill="rgb(223,14,29)" fg:x="3178" fg:w="1"/><text x="38.2020%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="37.8829%" y="517" width="0.0119%" height="15" fill="rgb(229,96,36)" fg:x="3178" fg:w="1"/><text x="38.2020%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="37.8829%" y="501" width="0.0119%" height="15" fill="rgb(231,102,53)" fg:x="3178" fg:w="1"/><text x="38.2020%" y="511.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="37.9068%" y="501" width="0.1311%" height="15" fill="rgb(210,77,38)" fg:x="3180" fg:w="11"/><text x="38.2259%" y="511.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="37.9068%" y="485" width="0.1311%" height="15" fill="rgb(235,131,6)" fg:x="3180" fg:w="11"/><text x="38.2259%" y="495.50"/></g><g><title>_int_malloc (10 samples, 0.12%)</title><rect x="37.9187%" y="469" width="0.1192%" height="15" fill="rgb(252,55,38)" fg:x="3181" fg:w="10"/><text x="38.2378%" y="479.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="38.0379%" y="469" width="0.0954%" height="15" fill="rgb(246,38,14)" fg:x="3191" fg:w="8"/><text x="38.3570%" y="479.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="38.0379%" y="453" width="0.0954%" height="15" fill="rgb(242,27,5)" fg:x="3191" fg:w="8"/><text x="38.3570%" y="463.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="38.0498%" y="437" width="0.0834%" height="15" fill="rgb(228,65,35)" fg:x="3192" fg:w="7"/><text x="38.3689%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="38.1452%" y="437" width="0.0119%" height="15" fill="rgb(245,93,11)" fg:x="3200" fg:w="1"/><text x="38.4643%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="38.1452%" y="421" width="0.0119%" height="15" fill="rgb(213,1,31)" fg:x="3200" fg:w="1"/><text x="38.4643%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="38.1571%" y="421" width="0.1073%" height="15" fill="rgb(237,205,14)" fg:x="3201" fg:w="9"/><text x="38.4762%" y="431.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="38.1571%" y="405" width="0.1073%" height="15" fill="rgb(232,118,45)" fg:x="3201" fg:w="9"/><text x="38.4762%" y="415.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="38.1571%" y="389" width="0.1073%" height="15" fill="rgb(218,5,6)" fg:x="3201" fg:w="9"/><text x="38.4762%" y="399.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="38.1571%" y="373" width="0.1073%" height="15" fill="rgb(251,87,51)" fg:x="3201" fg:w="9"/><text x="38.4762%" y="383.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="38.1810%" y="357" width="0.0834%" height="15" fill="rgb(207,225,20)" fg:x="3203" fg:w="7"/><text x="38.5001%" y="367.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="38.2763%" y="405" width="0.0119%" height="15" fill="rgb(222,78,54)" fg:x="3211" fg:w="1"/><text x="38.5954%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="38.2763%" y="389" width="0.0119%" height="15" fill="rgb(232,85,16)" fg:x="3211" fg:w="1"/><text x="38.5954%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="38.2644%" y="421" width="0.0358%" height="15" fill="rgb(244,25,33)" fg:x="3210" fg:w="3"/><text x="38.5835%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="38.2882%" y="405" width="0.0119%" height="15" fill="rgb(233,24,36)" fg:x="3212" fg:w="1"/><text x="38.6073%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="38.2882%" y="389" width="0.0119%" height="15" fill="rgb(253,49,54)" fg:x="3212" fg:w="1"/><text x="38.6073%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="38.3002%" y="421" width="0.0238%" height="15" fill="rgb(245,12,22)" fg:x="3213" fg:w="2"/><text x="38.6193%" y="431.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="38.3002%" y="405" width="0.0238%" height="15" fill="rgb(253,141,28)" fg:x="3213" fg:w="2"/><text x="38.6193%" y="415.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="38.3002%" y="389" width="0.0238%" height="15" fill="rgb(225,207,27)" fg:x="3213" fg:w="2"/><text x="38.6193%" y="399.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="38.3121%" y="373" width="0.0119%" height="15" fill="rgb(220,84,2)" fg:x="3214" fg:w="1"/><text x="38.6312%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="38.3240%" y="405" width="0.0119%" height="15" fill="rgb(224,37,37)" fg:x="3215" fg:w="1"/><text x="38.6431%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="38.3240%" y="389" width="0.0119%" height="15" fill="rgb(220,143,18)" fg:x="3215" fg:w="1"/><text x="38.6431%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (26 samples, 0.31%)</title><rect x="38.0379%" y="501" width="0.3099%" height="15" fill="rgb(210,88,33)" fg:x="3191" fg:w="26"/><text x="38.3570%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="38.0379%" y="485" width="0.3099%" height="15" fill="rgb(219,87,51)" fg:x="3191" fg:w="26"/><text x="38.3570%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (18 samples, 0.21%)</title><rect x="38.1333%" y="469" width="0.2146%" height="15" fill="rgb(211,7,35)" fg:x="3199" fg:w="18"/><text x="38.4524%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="38.1452%" y="453" width="0.2026%" height="15" fill="rgb(232,77,2)" fg:x="3200" fg:w="17"/><text x="38.4643%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (16 samples, 0.19%)</title><rect x="38.1571%" y="437" width="0.1907%" height="15" fill="rgb(249,94,25)" fg:x="3201" fg:w="16"/><text x="38.4762%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="38.3240%" y="421" width="0.0238%" height="15" fill="rgb(215,112,2)" fg:x="3215" fg:w="2"/><text x="38.6431%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="38.3359%" y="405" width="0.0119%" height="15" fill="rgb(226,115,48)" fg:x="3216" fg:w="1"/><text x="38.6550%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (39 samples, 0.46%)</title><rect x="37.8949%" y="517" width="0.4649%" height="15" fill="rgb(249,196,10)" fg:x="3179" fg:w="39"/><text x="38.2140%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="38.3478%" y="501" width="0.0119%" height="15" fill="rgb(237,109,14)" fg:x="3217" fg:w="1"/><text x="38.6669%" y="511.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="38.3598%" y="437" width="0.0238%" height="15" fill="rgb(217,103,53)" fg:x="3218" fg:w="2"/><text x="38.6789%" y="447.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="38.3598%" y="421" width="0.0238%" height="15" fill="rgb(244,137,9)" fg:x="3218" fg:w="2"/><text x="38.6789%" y="431.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="38.3836%" y="437" width="0.0119%" height="15" fill="rgb(227,201,3)" fg:x="3220" fg:w="1"/><text x="38.7027%" y="447.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="38.3836%" y="421" width="0.0119%" height="15" fill="rgb(243,94,6)" fg:x="3220" fg:w="1"/><text x="38.7027%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="38.3836%" y="405" width="0.0119%" height="15" fill="rgb(235,118,5)" fg:x="3220" fg:w="1"/><text x="38.7027%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="38.3836%" y="389" width="0.0119%" height="15" fill="rgb(247,10,30)" fg:x="3220" fg:w="1"/><text x="38.7027%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="38.3836%" y="373" width="0.0119%" height="15" fill="rgb(205,26,28)" fg:x="3220" fg:w="1"/><text x="38.7027%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="38.3955%" y="405" width="0.0119%" height="15" fill="rgb(206,99,35)" fg:x="3221" fg:w="1"/><text x="38.7146%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="38.3955%" y="389" width="0.0119%" height="15" fill="rgb(238,130,40)" fg:x="3221" fg:w="1"/><text x="38.7146%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="38.4074%" y="373" width="0.0119%" height="15" fill="rgb(224,126,31)" fg:x="3222" fg:w="1"/><text x="38.7265%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="38.4074%" y="357" width="0.0119%" height="15" fill="rgb(254,105,17)" fg:x="3222" fg:w="1"/><text x="38.7265%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="38.4313%" y="293" width="0.0119%" height="15" fill="rgb(216,87,36)" fg:x="3224" fg:w="1"/><text x="38.7504%" y="303.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="38.4313%" y="277" width="0.0119%" height="15" fill="rgb(240,21,12)" fg:x="3224" fg:w="1"/><text x="38.7504%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="38.4074%" y="389" width="0.1669%" height="15" fill="rgb(245,192,34)" fg:x="3222" fg:w="14"/><text x="38.7265%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="38.4194%" y="373" width="0.1550%" height="15" fill="rgb(226,100,49)" fg:x="3223" fg:w="13"/><text x="38.7385%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="38.4313%" y="357" width="0.1430%" height="15" fill="rgb(245,188,27)" fg:x="3224" fg:w="12"/><text x="38.7504%" y="367.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="38.4313%" y="341" width="0.1430%" height="15" fill="rgb(212,170,8)" fg:x="3224" fg:w="12"/><text x="38.7504%" y="351.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (12 samples, 0.14%)</title><rect x="38.4313%" y="325" width="0.1430%" height="15" fill="rgb(217,113,29)" fg:x="3224" fg:w="12"/><text x="38.7504%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="38.4313%" y="309" width="0.1430%" height="15" fill="rgb(237,30,3)" fg:x="3224" fg:w="12"/><text x="38.7504%" y="319.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (11 samples, 0.13%)</title><rect x="38.4432%" y="293" width="0.1311%" height="15" fill="rgb(227,19,28)" fg:x="3225" fg:w="11"/><text x="38.7623%" y="303.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="38.4432%" y="277" width="0.1311%" height="15" fill="rgb(239,172,45)" fg:x="3225" fg:w="11"/><text x="38.7623%" y="287.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (11 samples, 0.13%)</title><rect x="38.4432%" y="261" width="0.1311%" height="15" fill="rgb(254,55,39)" fg:x="3225" fg:w="11"/><text x="38.7623%" y="271.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="38.4432%" y="245" width="0.1311%" height="15" fill="rgb(249,208,12)" fg:x="3225" fg:w="11"/><text x="38.7623%" y="255.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="38.4432%" y="229" width="0.1311%" height="15" fill="rgb(240,52,13)" fg:x="3225" fg:w="11"/><text x="38.7623%" y="239.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="38.4432%" y="213" width="0.1311%" height="15" fill="rgb(252,149,13)" fg:x="3225" fg:w="11"/><text x="38.7623%" y="223.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="38.4670%" y="197" width="0.1073%" height="15" fill="rgb(232,81,48)" fg:x="3227" fg:w="9"/><text x="38.7861%" y="207.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (19 samples, 0.23%)</title><rect x="38.3598%" y="469" width="0.2265%" height="15" fill="rgb(222,144,2)" fg:x="3218" fg:w="19"/><text x="38.6789%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="38.3598%" y="453" width="0.2265%" height="15" fill="rgb(216,81,32)" fg:x="3218" fg:w="19"/><text x="38.6789%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (16 samples, 0.19%)</title><rect x="38.3955%" y="437" width="0.1907%" height="15" fill="rgb(244,78,51)" fg:x="3221" fg:w="16"/><text x="38.7146%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="38.3955%" y="421" width="0.1907%" height="15" fill="rgb(217,66,21)" fg:x="3221" fg:w="16"/><text x="38.7146%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (15 samples, 0.18%)</title><rect x="38.4074%" y="405" width="0.1788%" height="15" fill="rgb(247,101,42)" fg:x="3222" fg:w="15"/><text x="38.7265%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="38.5743%" y="389" width="0.0119%" height="15" fill="rgb(227,81,39)" fg:x="3236" fg:w="1"/><text x="38.8934%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="38.5743%" y="373" width="0.0119%" height="15" fill="rgb(220,223,44)" fg:x="3236" fg:w="1"/><text x="38.8934%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="38.5743%" y="357" width="0.0119%" height="15" fill="rgb(205,218,2)" fg:x="3236" fg:w="1"/><text x="38.8934%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (71 samples, 0.85%)</title><rect x="37.7637%" y="645" width="0.8463%" height="15" fill="rgb(212,207,28)" fg:x="3168" fg:w="71"/><text x="38.0828%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (70 samples, 0.83%)</title><rect x="37.7757%" y="629" width="0.8344%" height="15" fill="rgb(224,12,41)" fg:x="3169" fg:w="70"/><text x="38.0948%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (70 samples, 0.83%)</title><rect x="37.7757%" y="613" width="0.8344%" height="15" fill="rgb(216,118,12)" fg:x="3169" fg:w="70"/><text x="38.0948%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (69 samples, 0.82%)</title><rect x="37.7876%" y="597" width="0.8225%" height="15" fill="rgb(252,97,46)" fg:x="3170" fg:w="69"/><text x="38.1067%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (68 samples, 0.81%)</title><rect x="37.7995%" y="581" width="0.8106%" height="15" fill="rgb(244,206,19)" fg:x="3171" fg:w="68"/><text x="38.1186%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (68 samples, 0.81%)</title><rect x="37.7995%" y="565" width="0.8106%" height="15" fill="rgb(231,84,31)" fg:x="3171" fg:w="68"/><text x="38.1186%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (68 samples, 0.81%)</title><rect x="37.7995%" y="549" width="0.8106%" height="15" fill="rgb(244,133,0)" fg:x="3171" fg:w="68"/><text x="38.1186%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (60 samples, 0.72%)</title><rect x="37.8949%" y="533" width="0.7152%" height="15" fill="rgb(223,15,50)" fg:x="3179" fg:w="60"/><text x="38.2140%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="38.3598%" y="517" width="0.2503%" height="15" fill="rgb(250,118,49)" fg:x="3218" fg:w="21"/><text x="38.6789%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (21 samples, 0.25%)</title><rect x="38.3598%" y="501" width="0.2503%" height="15" fill="rgb(248,25,38)" fg:x="3218" fg:w="21"/><text x="38.6789%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="38.3598%" y="485" width="0.2503%" height="15" fill="rgb(215,70,14)" fg:x="3218" fg:w="21"/><text x="38.6789%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="38.5862%" y="469" width="0.0238%" height="15" fill="rgb(215,28,15)" fg:x="3237" fg:w="2"/><text x="38.9053%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="38.5982%" y="453" width="0.0119%" height="15" fill="rgb(243,6,28)" fg:x="3238" fg:w="1"/><text x="38.9173%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (111 samples, 1.32%)</title><rect x="37.4180%" y="677" width="1.3232%" height="15" fill="rgb(222,130,1)" fg:x="3139" fg:w="111"/><text x="37.7371%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (109 samples, 1.30%)</title><rect x="37.4419%" y="661" width="1.2993%" height="15" fill="rgb(236,166,44)" fg:x="3141" fg:w="109"/><text x="37.7610%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (11 samples, 0.13%)</title><rect x="38.6101%" y="645" width="0.1311%" height="15" fill="rgb(221,108,14)" fg:x="3239" fg:w="11"/><text x="38.9292%" y="655.50"/></g><g><title>operator new (10 samples, 0.12%)</title><rect x="38.6220%" y="629" width="0.1192%" height="15" fill="rgb(252,3,45)" fg:x="3240" fg:w="10"/><text x="38.9411%" y="639.50"/></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="38.6220%" y="613" width="0.1192%" height="15" fill="rgb(237,68,30)" fg:x="3240" fg:w="10"/><text x="38.9411%" y="623.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="38.6578%" y="597" width="0.0834%" height="15" fill="rgb(211,79,22)" fg:x="3243" fg:w="7"/><text x="38.9769%" y="607.50"/></g><g><title>operator new (14 samples, 0.17%)</title><rect x="38.7650%" y="661" width="0.1669%" height="15" fill="rgb(252,185,21)" fg:x="3252" fg:w="14"/><text x="39.0841%" y="671.50"/></g><g><title>__GI___libc_malloc (14 samples, 0.17%)</title><rect x="38.7650%" y="645" width="0.1669%" height="15" fill="rgb(225,189,26)" fg:x="3252" fg:w="14"/><text x="39.0841%" y="655.50"/></g><g><title>_int_malloc (10 samples, 0.12%)</title><rect x="38.8127%" y="629" width="0.1192%" height="15" fill="rgb(241,30,40)" fg:x="3256" fg:w="10"/><text x="39.1318%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="38.9319%" y="629" width="0.0119%" height="15" fill="rgb(235,215,44)" fg:x="3266" fg:w="1"/><text x="39.2510%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="38.9439%" y="597" width="0.0119%" height="15" fill="rgb(205,8,29)" fg:x="3267" fg:w="1"/><text x="39.2630%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="38.9439%" y="581" width="0.0119%" height="15" fill="rgb(241,137,42)" fg:x="3267" fg:w="1"/><text x="39.2630%" y="591.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="38.9558%" y="549" width="0.0119%" height="15" fill="rgb(237,155,2)" fg:x="3268" fg:w="1"/><text x="39.2749%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="38.9558%" y="581" width="0.0238%" height="15" fill="rgb(245,29,42)" fg:x="3268" fg:w="2"/><text x="39.2749%" y="591.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.02%)</title><rect x="38.9558%" y="565" width="0.0238%" height="15" fill="rgb(234,101,35)" fg:x="3268" fg:w="2"/><text x="39.2749%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="38.9677%" y="549" width="0.0119%" height="15" fill="rgb(228,64,37)" fg:x="3269" fg:w="1"/><text x="39.2868%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="38.9677%" y="533" width="0.0119%" height="15" fill="rgb(217,214,36)" fg:x="3269" fg:w="1"/><text x="39.2868%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="38.9558%" y="597" width="0.1550%" height="15" fill="rgb(243,70,3)" fg:x="3268" fg:w="13"/><text x="39.2749%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (11 samples, 0.13%)</title><rect x="38.9796%" y="581" width="0.1311%" height="15" fill="rgb(253,158,52)" fg:x="3270" fg:w="11"/><text x="39.2987%" y="591.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="38.9796%" y="565" width="0.1311%" height="15" fill="rgb(234,111,54)" fg:x="3270" fg:w="11"/><text x="39.2987%" y="575.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="38.9796%" y="549" width="0.1311%" height="15" fill="rgb(217,70,32)" fg:x="3270" fg:w="11"/><text x="39.2987%" y="559.50"/></g><g><title>_int_malloc (8 samples, 0.10%)</title><rect x="39.0154%" y="533" width="0.0954%" height="15" fill="rgb(234,18,33)" fg:x="3273" fg:w="8"/><text x="39.3345%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="38.9439%" y="613" width="0.1788%" height="15" fill="rgb(234,12,49)" fg:x="3267" fg:w="15"/><text x="39.2630%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="39.1107%" y="597" width="0.0119%" height="15" fill="rgb(236,10,21)" fg:x="3281" fg:w="1"/><text x="39.4298%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="39.1107%" y="581" width="0.0119%" height="15" fill="rgb(248,182,45)" fg:x="3281" fg:w="1"/><text x="39.4298%" y="591.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="39.1107%" y="565" width="0.0119%" height="15" fill="rgb(217,95,36)" fg:x="3281" fg:w="1"/><text x="39.4298%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="39.1346%" y="581" width="0.0119%" height="15" fill="rgb(212,110,31)" fg:x="3283" fg:w="1"/><text x="39.4537%" y="591.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="39.1346%" y="565" width="0.0119%" height="15" fill="rgb(206,32,53)" fg:x="3283" fg:w="1"/><text x="39.4537%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="39.1465%" y="549" width="0.0119%" height="15" fill="rgb(246,141,37)" fg:x="3284" fg:w="1"/><text x="39.4656%" y="559.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), parser::push(unsigned short)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="39.1465%" y="533" width="0.0119%" height="15" fill="rgb(219,16,7)" fg:x="3284" fg:w="1"/><text x="39.4656%" y="543.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="39.1584%" y="501" width="0.0119%" height="15" fill="rgb(230,205,45)" fg:x="3285" fg:w="1"/><text x="39.4775%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="39.1703%" y="485" width="0.0119%" height="15" fill="rgb(231,43,49)" fg:x="3286" fg:w="1"/><text x="39.4894%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="39.1703%" y="469" width="0.0119%" height="15" fill="rgb(212,106,34)" fg:x="3286" fg:w="1"/><text x="39.4894%" y="479.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="39.1703%" y="501" width="0.0238%" height="15" fill="rgb(206,83,17)" fg:x="3286" fg:w="2"/><text x="39.4894%" y="511.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="39.1823%" y="485" width="0.0119%" height="15" fill="rgb(244,154,49)" fg:x="3287" fg:w="1"/><text x="39.5014%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="39.1942%" y="469" width="0.0119%" height="15" fill="rgb(244,149,49)" fg:x="3288" fg:w="1"/><text x="39.5133%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="39.1942%" y="453" width="0.0119%" height="15" fill="rgb(227,134,18)" fg:x="3288" fg:w="1"/><text x="39.5133%" y="463.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="39.2061%" y="437" width="0.0238%" height="15" fill="rgb(237,116,36)" fg:x="3289" fg:w="2"/><text x="39.5252%" y="447.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="39.2061%" y="421" width="0.0238%" height="15" fill="rgb(205,129,40)" fg:x="3289" fg:w="2"/><text x="39.5252%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="39.2299%" y="405" width="0.0119%" height="15" fill="rgb(236,178,4)" fg:x="3291" fg:w="1"/><text x="39.5490%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="39.2419%" y="389" width="0.1430%" height="15" fill="rgb(251,76,53)" fg:x="3292" fg:w="12"/><text x="39.5610%" y="399.50"/></g><g><title>operator new (10 samples, 0.12%)</title><rect x="39.2657%" y="373" width="0.1192%" height="15" fill="rgb(242,92,40)" fg:x="3294" fg:w="10"/><text x="39.5848%" y="383.50"/></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="39.2657%" y="357" width="0.1192%" height="15" fill="rgb(209,45,30)" fg:x="3294" fg:w="10"/><text x="39.5848%" y="367.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="39.2776%" y="341" width="0.1073%" height="15" fill="rgb(218,157,36)" fg:x="3295" fg:w="9"/><text x="39.5967%" y="351.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="39.3849%" y="373" width="0.0954%" height="15" fill="rgb(222,186,16)" fg:x="3304" fg:w="8"/><text x="39.7040%" y="383.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="39.3849%" y="357" width="0.0954%" height="15" fill="rgb(254,72,35)" fg:x="3304" fg:w="8"/><text x="39.7040%" y="367.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="39.3968%" y="341" width="0.0834%" height="15" fill="rgb(224,25,35)" fg:x="3305" fg:w="7"/><text x="39.7159%" y="351.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="39.4803%" y="373" width="0.0119%" height="15" fill="rgb(206,135,52)" fg:x="3312" fg:w="1"/><text x="39.7994%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="39.4803%" y="357" width="0.0119%" height="15" fill="rgb(229,174,47)" fg:x="3312" fg:w="1"/><text x="39.7994%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="39.4803%" y="341" width="0.0119%" height="15" fill="rgb(242,184,21)" fg:x="3312" fg:w="1"/><text x="39.7994%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="39.3849%" y="389" width="0.1192%" height="15" fill="rgb(213,22,45)" fg:x="3304" fg:w="10"/><text x="39.7040%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="39.4922%" y="373" width="0.0119%" height="15" fill="rgb(237,81,54)" fg:x="3313" fg:w="1"/><text x="39.8113%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="39.5041%" y="389" width="0.0238%" height="15" fill="rgb(248,177,18)" fg:x="3314" fg:w="2"/><text x="39.8232%" y="399.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.02%)</title><rect x="39.5041%" y="373" width="0.0238%" height="15" fill="rgb(254,31,16)" fg:x="3314" fg:w="2"/><text x="39.8232%" y="383.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="39.5280%" y="373" width="0.0238%" height="15" fill="rgb(235,20,31)" fg:x="3316" fg:w="2"/><text x="39.8471%" y="383.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="39.5280%" y="357" width="0.0238%" height="15" fill="rgb(240,56,43)" fg:x="3316" fg:w="2"/><text x="39.8471%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="39.5637%" y="341" width="0.0119%" height="15" fill="rgb(237,197,51)" fg:x="3319" fg:w="1"/><text x="39.8828%" y="351.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="39.5637%" y="325" width="0.0119%" height="15" fill="rgb(241,162,44)" fg:x="3319" fg:w="1"/><text x="39.8828%" y="335.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="39.5756%" y="325" width="0.0119%" height="15" fill="rgb(224,23,20)" fg:x="3320" fg:w="1"/><text x="39.8947%" y="335.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="39.5756%" y="309" width="0.0119%" height="15" fill="rgb(250,109,34)" fg:x="3320" fg:w="1"/><text x="39.8947%" y="319.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="39.5876%" y="293" width="0.0119%" height="15" fill="rgb(214,175,50)" fg:x="3321" fg:w="1"/><text x="39.9067%" y="303.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="39.5876%" y="277" width="0.0119%" height="15" fill="rgb(213,182,5)" fg:x="3321" fg:w="1"/><text x="39.9067%" y="287.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="39.5756%" y="341" width="0.0358%" height="15" fill="rgb(209,199,19)" fg:x="3320" fg:w="3"/><text x="39.8947%" y="351.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="39.5876%" y="325" width="0.0238%" height="15" fill="rgb(236,224,42)" fg:x="3321" fg:w="2"/><text x="39.9067%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="39.5876%" y="309" width="0.0238%" height="15" fill="rgb(246,226,29)" fg:x="3321" fg:w="2"/><text x="39.9067%" y="319.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="39.5995%" y="293" width="0.0119%" height="15" fill="rgb(227,223,11)" fg:x="3322" fg:w="1"/><text x="39.9186%" y="303.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="39.5995%" y="277" width="0.0119%" height="15" fill="rgb(219,7,51)" fg:x="3322" fg:w="1"/><text x="39.9186%" y="287.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="39.5995%" y="261" width="0.0119%" height="15" fill="rgb(245,167,10)" fg:x="3322" fg:w="1"/><text x="39.9186%" y="271.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="39.5995%" y="245" width="0.0119%" height="15" fill="rgb(237,224,16)" fg:x="3322" fg:w="1"/><text x="39.9186%" y="255.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="39.6114%" y="309" width="0.1073%" height="15" fill="rgb(226,132,13)" fg:x="3323" fg:w="9"/><text x="39.9305%" y="319.50"/></g><g><title>_int_malloc (8 samples, 0.10%)</title><rect x="39.6233%" y="293" width="0.0954%" height="15" fill="rgb(214,140,3)" fg:x="3324" fg:w="8"/><text x="39.9424%" y="303.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (45 samples, 0.54%)</title><rect x="39.1942%" y="485" width="0.5364%" height="15" fill="rgb(221,177,4)" fg:x="3288" fg:w="45"/><text x="39.5133%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (44 samples, 0.52%)</title><rect x="39.2061%" y="469" width="0.5245%" height="15" fill="rgb(238,139,3)" fg:x="3289" fg:w="44"/><text x="39.5252%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (44 samples, 0.52%)</title><rect x="39.2061%" y="453" width="0.5245%" height="15" fill="rgb(216,17,39)" fg:x="3289" fg:w="44"/><text x="39.5252%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (42 samples, 0.50%)</title><rect x="39.2299%" y="437" width="0.5007%" height="15" fill="rgb(238,120,9)" fg:x="3291" fg:w="42"/><text x="39.5490%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (42 samples, 0.50%)</title><rect x="39.2299%" y="421" width="0.5007%" height="15" fill="rgb(244,92,53)" fg:x="3291" fg:w="42"/><text x="39.5490%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (41 samples, 0.49%)</title><rect x="39.2419%" y="405" width="0.4887%" height="15" fill="rgb(224,148,33)" fg:x="3292" fg:w="41"/><text x="39.5610%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="39.5280%" y="389" width="0.2026%" height="15" fill="rgb(243,6,36)" fg:x="3316" fg:w="17"/><text x="39.8471%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (15 samples, 0.18%)</title><rect x="39.5518%" y="373" width="0.1788%" height="15" fill="rgb(230,102,11)" fg:x="3318" fg:w="15"/><text x="39.8709%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="39.5518%" y="357" width="0.1788%" height="15" fill="rgb(234,148,36)" fg:x="3318" fg:w="15"/><text x="39.8709%" y="367.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="39.6114%" y="341" width="0.1192%" height="15" fill="rgb(251,153,25)" fg:x="3323" fg:w="10"/><text x="39.9305%" y="351.50"/></g><g><title>operator new (10 samples, 0.12%)</title><rect x="39.6114%" y="325" width="0.1192%" height="15" fill="rgb(215,129,8)" fg:x="3323" fg:w="10"/><text x="39.9305%" y="335.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="39.7187%" y="309" width="0.0119%" height="15" fill="rgb(224,128,35)" fg:x="3332" fg:w="1"/><text x="40.0378%" y="319.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="39.7306%" y="469" width="0.0119%" height="15" fill="rgb(237,56,52)" fg:x="3333" fg:w="1"/><text x="40.0497%" y="479.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="39.7544%" y="437" width="0.0596%" height="15" fill="rgb(234,213,19)" fg:x="3335" fg:w="5"/><text x="40.0735%" y="447.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="39.7544%" y="421" width="0.0596%" height="15" fill="rgb(252,82,23)" fg:x="3335" fg:w="5"/><text x="40.0735%" y="431.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="39.7664%" y="405" width="0.0477%" height="15" fill="rgb(254,201,21)" fg:x="3336" fg:w="4"/><text x="40.0855%" y="415.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="39.8140%" y="405" width="0.1311%" height="15" fill="rgb(250,186,11)" fg:x="3340" fg:w="11"/><text x="40.1331%" y="415.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="39.8140%" y="389" width="0.1311%" height="15" fill="rgb(211,174,5)" fg:x="3340" fg:w="11"/><text x="40.1331%" y="399.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="39.8379%" y="373" width="0.1073%" height="15" fill="rgb(214,121,10)" fg:x="3342" fg:w="9"/><text x="40.1570%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="39.9452%" y="309" width="0.0119%" height="15" fill="rgb(241,66,2)" fg:x="3351" fg:w="1"/><text x="40.2643%" y="319.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="39.9452%" y="293" width="0.0119%" height="15" fill="rgb(220,167,19)" fg:x="3351" fg:w="1"/><text x="40.2643%" y="303.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="39.9690%" y="229" width="0.0119%" height="15" fill="rgb(231,54,50)" fg:x="3353" fg:w="1"/><text x="40.2881%" y="239.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="39.9690%" y="213" width="0.0119%" height="15" fill="rgb(239,217,53)" fg:x="3353" fg:w="1"/><text x="40.2881%" y="223.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="39.9928%" y="181" width="0.0834%" height="15" fill="rgb(248,8,0)" fg:x="3355" fg:w="7"/><text x="40.3119%" y="191.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="39.9928%" y="165" width="0.0834%" height="15" fill="rgb(229,118,37)" fg:x="3355" fg:w="7"/><text x="40.3119%" y="175.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="39.8140%" y="421" width="0.2742%" height="15" fill="rgb(253,223,43)" fg:x="3340" fg:w="23"/><text x="40.1331%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="39.9452%" y="405" width="0.1430%" height="15" fill="rgb(211,77,36)" fg:x="3351" fg:w="12"/><text x="40.2643%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="39.9452%" y="389" width="0.1430%" height="15" fill="rgb(219,3,53)" fg:x="3351" fg:w="12"/><text x="40.2643%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="39.9452%" y="373" width="0.1430%" height="15" fill="rgb(244,45,42)" fg:x="3351" fg:w="12"/><text x="40.2643%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="39.9452%" y="357" width="0.1430%" height="15" fill="rgb(225,95,27)" fg:x="3351" fg:w="12"/><text x="40.2643%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="39.9452%" y="341" width="0.1430%" height="15" fill="rgb(207,74,8)" fg:x="3351" fg:w="12"/><text x="40.2643%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="39.9452%" y="325" width="0.1430%" height="15" fill="rgb(243,63,36)" fg:x="3351" fg:w="12"/><text x="40.2643%" y="335.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="39.9571%" y="309" width="0.1311%" height="15" fill="rgb(211,180,12)" fg:x="3352" fg:w="11"/><text x="40.2762%" y="319.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (11 samples, 0.13%)</title><rect x="39.9571%" y="293" width="0.1311%" height="15" fill="rgb(254,166,49)" fg:x="3352" fg:w="11"/><text x="40.2762%" y="303.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="39.9690%" y="277" width="0.1192%" height="15" fill="rgb(205,19,0)" fg:x="3353" fg:w="10"/><text x="40.2881%" y="287.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (10 samples, 0.12%)</title><rect x="39.9690%" y="261" width="0.1192%" height="15" fill="rgb(224,172,32)" fg:x="3353" fg:w="10"/><text x="40.2881%" y="271.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="39.9690%" y="245" width="0.1192%" height="15" fill="rgb(254,136,30)" fg:x="3353" fg:w="10"/><text x="40.2881%" y="255.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (9 samples, 0.11%)</title><rect x="39.9809%" y="229" width="0.1073%" height="15" fill="rgb(246,19,35)" fg:x="3354" fg:w="9"/><text x="40.3000%" y="239.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="39.9928%" y="213" width="0.0954%" height="15" fill="rgb(219,24,36)" fg:x="3355" fg:w="8"/><text x="40.3119%" y="223.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="39.9928%" y="197" width="0.0954%" height="15" fill="rgb(251,55,1)" fg:x="3355" fg:w="8"/><text x="40.3119%" y="207.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="40.0763%" y="181" width="0.0119%" height="15" fill="rgb(218,117,39)" fg:x="3362" fg:w="1"/><text x="40.3954%" y="191.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (24 samples, 0.29%)</title><rect x="39.8140%" y="437" width="0.2861%" height="15" fill="rgb(248,169,11)" fg:x="3340" fg:w="24"/><text x="40.1331%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="40.0882%" y="421" width="0.0119%" height="15" fill="rgb(244,40,44)" fg:x="3363" fg:w="1"/><text x="40.4073%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (31 samples, 0.37%)</title><rect x="39.7425%" y="453" width="0.3695%" height="15" fill="rgb(234,62,37)" fg:x="3334" fg:w="31"/><text x="40.0616%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="40.1001%" y="437" width="0.0119%" height="15" fill="rgb(207,117,42)" fg:x="3364" fg:w="1"/><text x="40.4192%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="40.1001%" y="421" width="0.0119%" height="15" fill="rgb(213,43,2)" fg:x="3364" fg:w="1"/><text x="40.4192%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="40.1001%" y="405" width="0.0119%" height="15" fill="rgb(244,202,51)" fg:x="3364" fg:w="1"/><text x="40.4192%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="40.1001%" y="389" width="0.0119%" height="15" fill="rgb(253,174,46)" fg:x="3364" fg:w="1"/><text x="40.4192%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (32 samples, 0.38%)</title><rect x="39.7425%" y="469" width="0.3815%" height="15" fill="rgb(251,23,1)" fg:x="3334" fg:w="32"/><text x="40.0616%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="40.1121%" y="453" width="0.0119%" height="15" fill="rgb(253,26,1)" fg:x="3365" fg:w="1"/><text x="40.4312%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (85 samples, 1.01%)</title><rect x="39.1227%" y="613" width="1.0132%" height="15" fill="rgb(216,89,31)" fg:x="3282" fg:w="85"/><text x="39.4418%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (84 samples, 1.00%)</title><rect x="39.1346%" y="597" width="1.0013%" height="15" fill="rgb(209,109,5)" fg:x="3283" fg:w="84"/><text x="39.4537%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (83 samples, 0.99%)</title><rect x="39.1465%" y="581" width="0.9894%" height="15" fill="rgb(229,63,13)" fg:x="3284" fg:w="83"/><text x="39.4656%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (83 samples, 0.99%)</title><rect x="39.1465%" y="565" width="0.9894%" height="15" fill="rgb(238,137,54)" fg:x="3284" fg:w="83"/><text x="39.4656%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (82 samples, 0.98%)</title><rect x="39.1584%" y="549" width="0.9775%" height="15" fill="rgb(228,1,9)" fg:x="3285" fg:w="82"/><text x="39.4775%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (82 samples, 0.98%)</title><rect x="39.1584%" y="533" width="0.9775%" height="15" fill="rgb(249,120,48)" fg:x="3285" fg:w="82"/><text x="39.4775%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (82 samples, 0.98%)</title><rect x="39.1584%" y="517" width="0.9775%" height="15" fill="rgb(209,72,36)" fg:x="3285" fg:w="82"/><text x="39.4775%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (79 samples, 0.94%)</title><rect x="39.1942%" y="501" width="0.9417%" height="15" fill="rgb(247,98,49)" fg:x="3288" fg:w="79"/><text x="39.5133%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (34 samples, 0.41%)</title><rect x="39.7306%" y="485" width="0.4053%" height="15" fill="rgb(233,75,36)" fg:x="3333" fg:w="34"/><text x="40.0497%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="40.1240%" y="469" width="0.0119%" height="15" fill="rgb(225,14,24)" fg:x="3366" fg:w="1"/><text x="40.4431%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (102 samples, 1.22%)</title><rect x="38.9439%" y="629" width="1.2159%" height="15" fill="rgb(237,193,20)" fg:x="3267" fg:w="102"/><text x="39.2630%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="40.1359%" y="613" width="0.0238%" height="15" fill="rgb(239,122,19)" fg:x="3367" fg:w="2"/><text x="40.4550%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (104 samples, 1.24%)</title><rect x="38.9319%" y="645" width="1.2397%" height="15" fill="rgb(231,220,10)" fg:x="3266" fg:w="104"/><text x="39.2510%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="40.1597%" y="629" width="0.0119%" height="15" fill="rgb(220,66,15)" fg:x="3369" fg:w="1"/><text x="40.4788%" y="639.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="40.1717%" y="629" width="0.0119%" height="15" fill="rgb(215,171,52)" fg:x="3370" fg:w="1"/><text x="40.4908%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="40.1717%" y="613" width="0.0119%" height="15" fill="rgb(241,169,50)" fg:x="3370" fg:w="1"/><text x="40.4908%" y="623.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="40.1836%" y="597" width="0.0954%" height="15" fill="rgb(236,189,0)" fg:x="3371" fg:w="8"/><text x="40.5027%" y="607.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="40.1836%" y="581" width="0.0954%" height="15" fill="rgb(217,147,20)" fg:x="3371" fg:w="8"/><text x="40.5027%" y="591.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="40.1955%" y="565" width="0.0834%" height="15" fill="rgb(206,188,39)" fg:x="3372" fg:w="7"/><text x="40.5146%" y="575.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="40.2789%" y="533" width="0.0954%" height="15" fill="rgb(227,118,25)" fg:x="3379" fg:w="8"/><text x="40.5980%" y="543.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="40.2789%" y="517" width="0.0954%" height="15" fill="rgb(248,171,40)" fg:x="3379" fg:w="8"/><text x="40.5980%" y="527.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="40.3147%" y="501" width="0.0596%" height="15" fill="rgb(251,90,54)" fg:x="3382" fg:w="5"/><text x="40.6338%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="40.2789%" y="549" width="0.1073%" height="15" fill="rgb(234,11,46)" fg:x="3379" fg:w="9"/><text x="40.5980%" y="559.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="40.3743%" y="533" width="0.0119%" height="15" fill="rgb(229,134,13)" fg:x="3387" fg:w="1"/><text x="40.6934%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="40.3743%" y="517" width="0.0119%" height="15" fill="rgb(223,129,3)" fg:x="3387" fg:w="1"/><text x="40.6934%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="40.3743%" y="501" width="0.0119%" height="15" fill="rgb(221,124,13)" fg:x="3387" fg:w="1"/><text x="40.6934%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="40.3743%" y="485" width="0.0119%" height="15" fill="rgb(234,3,18)" fg:x="3387" fg:w="1"/><text x="40.6934%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="40.2789%" y="581" width="0.1192%" height="15" fill="rgb(249,199,20)" fg:x="3379" fg:w="10"/><text x="40.5980%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="40.2789%" y="565" width="0.1192%" height="15" fill="rgb(224,134,6)" fg:x="3379" fg:w="10"/><text x="40.5980%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="40.3862%" y="549" width="0.0119%" height="15" fill="rgb(254,83,26)" fg:x="3388" fg:w="1"/><text x="40.7053%" y="559.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="40.3862%" y="533" width="0.0119%" height="15" fill="rgb(217,88,9)" fg:x="3388" fg:w="1"/><text x="40.7053%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="40.1717%" y="645" width="0.2503%" height="15" fill="rgb(225,73,2)" fg:x="3370" fg:w="21"/><text x="40.4908%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (20 samples, 0.24%)</title><rect x="40.1836%" y="629" width="0.2384%" height="15" fill="rgb(226,44,39)" fg:x="3371" fg:w="20"/><text x="40.5027%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (20 samples, 0.24%)</title><rect x="40.1836%" y="613" width="0.2384%" height="15" fill="rgb(228,53,17)" fg:x="3371" fg:w="20"/><text x="40.5027%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="40.2789%" y="597" width="0.1430%" height="15" fill="rgb(212,27,27)" fg:x="3379" fg:w="12"/><text x="40.5980%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="40.3981%" y="581" width="0.0238%" height="15" fill="rgb(241,50,6)" fg:x="3389" fg:w="2"/><text x="40.7172%" y="591.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="40.4220%" y="613" width="0.0238%" height="15" fill="rgb(225,28,51)" fg:x="3391" fg:w="2"/><text x="40.7411%" y="623.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="40.4220%" y="597" width="0.0238%" height="15" fill="rgb(215,33,16)" fg:x="3391" fg:w="2"/><text x="40.7411%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="40.4458%" y="549" width="0.0119%" height="15" fill="rgb(243,40,39)" fg:x="3393" fg:w="1"/><text x="40.7649%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="40.4458%" y="533" width="0.0119%" height="15" fill="rgb(225,11,42)" fg:x="3393" fg:w="1"/><text x="40.7649%" y="543.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="40.5531%" y="453" width="0.0954%" height="15" fill="rgb(241,220,38)" fg:x="3402" fg:w="8"/><text x="40.8722%" y="463.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="40.5531%" y="437" width="0.0954%" height="15" fill="rgb(244,52,35)" fg:x="3402" fg:w="8"/><text x="40.8722%" y="447.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="40.5650%" y="421" width="0.0834%" height="15" fill="rgb(246,42,46)" fg:x="3403" fg:w="7"/><text x="40.8841%" y="431.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="40.6485%" y="453" width="0.0119%" height="15" fill="rgb(205,184,13)" fg:x="3410" fg:w="1"/><text x="40.9676%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="40.6485%" y="437" width="0.0119%" height="15" fill="rgb(209,48,36)" fg:x="3410" fg:w="1"/><text x="40.9676%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="40.6604%" y="437" width="0.0119%" height="15" fill="rgb(244,34,51)" fg:x="3411" fg:w="1"/><text x="40.9795%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="40.6604%" y="421" width="0.0119%" height="15" fill="rgb(221,107,33)" fg:x="3411" fg:w="1"/><text x="40.9795%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="40.5054%" y="469" width="0.2026%" height="15" fill="rgb(224,203,12)" fg:x="3398" fg:w="17"/><text x="40.8245%" y="479.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="40.6604%" y="453" width="0.0477%" height="15" fill="rgb(230,215,18)" fg:x="3411" fg:w="4"/><text x="40.9795%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="40.6723%" y="437" width="0.0358%" height="15" fill="rgb(206,185,35)" fg:x="3412" fg:w="3"/><text x="40.9914%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="40.6723%" y="421" width="0.0358%" height="15" fill="rgb(228,140,34)" fg:x="3412" fg:w="3"/><text x="40.9914%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="40.6723%" y="405" width="0.0358%" height="15" fill="rgb(208,93,13)" fg:x="3412" fg:w="3"/><text x="40.9914%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="40.6723%" y="389" width="0.0358%" height="15" fill="rgb(221,193,39)" fg:x="3412" fg:w="3"/><text x="40.9914%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="40.6961%" y="373" width="0.0119%" height="15" fill="rgb(241,132,34)" fg:x="3414" fg:w="1"/><text x="41.0152%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="40.6961%" y="357" width="0.0119%" height="15" fill="rgb(221,141,10)" fg:x="3414" fg:w="1"/><text x="41.0152%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (27 samples, 0.32%)</title><rect x="40.4816%" y="517" width="0.3219%" height="15" fill="rgb(226,90,31)" fg:x="3396" fg:w="27"/><text x="40.8007%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (27 samples, 0.32%)</title><rect x="40.4816%" y="501" width="0.3219%" height="15" fill="rgb(243,75,5)" fg:x="3396" fg:w="27"/><text x="40.8007%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (27 samples, 0.32%)</title><rect x="40.4816%" y="485" width="0.3219%" height="15" fill="rgb(227,156,21)" fg:x="3396" fg:w="27"/><text x="40.8007%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="40.7081%" y="469" width="0.0954%" height="15" fill="rgb(250,195,8)" fg:x="3415" fg:w="8"/><text x="41.0272%" y="479.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="40.7081%" y="453" width="0.0954%" height="15" fill="rgb(220,134,5)" fg:x="3415" fg:w="8"/><text x="41.0272%" y="463.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="40.7081%" y="437" width="0.0954%" height="15" fill="rgb(246,106,34)" fg:x="3415" fg:w="8"/><text x="41.0272%" y="447.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="40.7319%" y="421" width="0.0715%" height="15" fill="rgb(205,1,4)" fg:x="3417" fg:w="6"/><text x="41.0510%" y="431.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (33 samples, 0.39%)</title><rect x="40.4220%" y="629" width="0.3934%" height="15" fill="rgb(224,151,29)" fg:x="3391" fg:w="33"/><text x="40.7411%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (31 samples, 0.37%)</title><rect x="40.4458%" y="613" width="0.3695%" height="15" fill="rgb(251,196,0)" fg:x="3393" fg:w="31"/><text x="40.7649%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (31 samples, 0.37%)</title><rect x="40.4458%" y="597" width="0.3695%" height="15" fill="rgb(212,127,0)" fg:x="3393" fg:w="31"/><text x="40.7649%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (31 samples, 0.37%)</title><rect x="40.4458%" y="581" width="0.3695%" height="15" fill="rgb(236,71,53)" fg:x="3393" fg:w="31"/><text x="40.7649%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (31 samples, 0.37%)</title><rect x="40.4458%" y="565" width="0.3695%" height="15" fill="rgb(227,99,0)" fg:x="3393" fg:w="31"/><text x="40.7649%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (30 samples, 0.36%)</title><rect x="40.4577%" y="549" width="0.3576%" height="15" fill="rgb(239,89,21)" fg:x="3394" fg:w="30"/><text x="40.7768%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (28 samples, 0.33%)</title><rect x="40.4816%" y="533" width="0.3338%" height="15" fill="rgb(243,122,19)" fg:x="3396" fg:w="28"/><text x="40.8007%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="40.8034%" y="517" width="0.0119%" height="15" fill="rgb(229,192,45)" fg:x="3423" fg:w="1"/><text x="41.1225%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (34 samples, 0.41%)</title><rect x="40.4220%" y="645" width="0.4053%" height="15" fill="rgb(235,165,35)" fg:x="3391" fg:w="34"/><text x="40.7411%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="40.8154%" y="629" width="0.0119%" height="15" fill="rgb(253,202,0)" fg:x="3424" fg:w="1"/><text x="41.1345%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="40.8154%" y="613" width="0.0119%" height="15" fill="rgb(235,51,20)" fg:x="3424" fg:w="1"/><text x="41.1345%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="40.8154%" y="597" width="0.0119%" height="15" fill="rgb(218,95,46)" fg:x="3424" fg:w="1"/><text x="41.1345%" y="607.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="40.8392%" y="629" width="0.0834%" height="15" fill="rgb(212,81,10)" fg:x="3426" fg:w="7"/><text x="41.1583%" y="639.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="40.8392%" y="613" width="0.0834%" height="15" fill="rgb(240,59,0)" fg:x="3426" fg:w="7"/><text x="41.1583%" y="623.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="40.8392%" y="597" width="0.0834%" height="15" fill="rgb(212,191,42)" fg:x="3426" fg:w="7"/><text x="41.1583%" y="607.50"/></g><g><title>operator new (13 samples, 0.15%)</title><rect x="40.9703%" y="597" width="0.1550%" height="15" fill="rgb(233,140,3)" fg:x="3437" fg:w="13"/><text x="41.2894%" y="607.50"/></g><g><title>__GI___libc_malloc (13 samples, 0.15%)</title><rect x="40.9703%" y="581" width="0.1550%" height="15" fill="rgb(215,69,23)" fg:x="3437" fg:w="13"/><text x="41.2894%" y="591.50"/></g><g><title>_int_malloc (10 samples, 0.12%)</title><rect x="41.0061%" y="565" width="0.1192%" height="15" fill="rgb(240,202,20)" fg:x="3440" fg:w="10"/><text x="41.3252%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="41.1253%" y="597" width="0.0238%" height="15" fill="rgb(209,146,50)" fg:x="3450" fg:w="2"/><text x="41.4444%" y="607.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="41.1253%" y="581" width="0.0238%" height="15" fill="rgb(253,102,54)" fg:x="3450" fg:w="2"/><text x="41.4444%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), bool (*)(unsigned int)&gt;::_M_manager (1 samples, 0.01%)</title><rect x="41.1372%" y="565" width="0.0119%" height="15" fill="rgb(250,173,47)" fg:x="3451" fg:w="1"/><text x="41.4563%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="41.1491%" y="565" width="0.0119%" height="15" fill="rgb(232,142,7)" fg:x="3452" fg:w="1"/><text x="41.4682%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="41.1491%" y="549" width="0.0119%" height="15" fill="rgb(230,157,47)" fg:x="3452" fg:w="1"/><text x="41.4682%" y="559.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="41.1610%" y="533" width="0.0358%" height="15" fill="rgb(214,177,35)" fg:x="3453" fg:w="3"/><text x="41.4801%" y="543.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="41.1610%" y="517" width="0.0358%" height="15" fill="rgb(234,119,46)" fg:x="3453" fg:w="3"/><text x="41.4801%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="41.1968%" y="501" width="0.0119%" height="15" fill="rgb(241,180,50)" fg:x="3456" fg:w="1"/><text x="41.5159%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="41.1968%" y="485" width="0.0119%" height="15" fill="rgb(221,54,25)" fg:x="3456" fg:w="1"/><text x="41.5159%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), logic::nested_comment(unsigned short)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="41.2087%" y="421" width="0.0119%" height="15" fill="rgb(209,157,44)" fg:x="3457" fg:w="1"/><text x="41.5278%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="41.2206%" y="405" width="0.0119%" height="15" fill="rgb(246,115,41)" fg:x="3458" fg:w="1"/><text x="41.5397%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="41.2206%" y="389" width="0.0119%" height="15" fill="rgb(229,86,1)" fg:x="3458" fg:w="1"/><text x="41.5397%" y="399.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="41.2326%" y="389" width="0.1311%" height="15" fill="rgb(240,108,53)" fg:x="3459" fg:w="11"/><text x="41.5517%" y="399.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="41.2326%" y="373" width="0.1311%" height="15" fill="rgb(227,134,2)" fg:x="3459" fg:w="11"/><text x="41.5517%" y="383.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="41.2564%" y="357" width="0.1073%" height="15" fill="rgb(213,129,25)" fg:x="3461" fg:w="9"/><text x="41.5755%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="41.3756%" y="357" width="0.0119%" height="15" fill="rgb(226,35,21)" fg:x="3471" fg:w="1"/><text x="41.6947%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="41.3756%" y="341" width="0.0119%" height="15" fill="rgb(208,129,26)" fg:x="3471" fg:w="1"/><text x="41.6947%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="41.2087%" y="453" width="0.1907%" height="15" fill="rgb(224,83,6)" fg:x="3457" fg:w="16"/><text x="41.5278%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (16 samples, 0.19%)</title><rect x="41.2087%" y="437" width="0.1907%" height="15" fill="rgb(227,52,39)" fg:x="3457" fg:w="16"/><text x="41.5278%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="41.2206%" y="421" width="0.1788%" height="15" fill="rgb(241,30,17)" fg:x="3458" fg:w="15"/><text x="41.5397%" y="431.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="41.2326%" y="405" width="0.1669%" height="15" fill="rgb(246,186,42)" fg:x="3459" fg:w="14"/><text x="41.5517%" y="415.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (3 samples, 0.04%)</title><rect x="41.3637%" y="389" width="0.0358%" height="15" fill="rgb(221,169,15)" fg:x="3470" fg:w="3"/><text x="41.6828%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="41.3756%" y="373" width="0.0238%" height="15" fill="rgb(235,108,21)" fg:x="3471" fg:w="2"/><text x="41.6947%" y="383.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="41.3875%" y="357" width="0.0119%" height="15" fill="rgb(219,148,30)" fg:x="3472" fg:w="1"/><text x="41.7066%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="41.3875%" y="341" width="0.0119%" height="15" fill="rgb(220,109,5)" fg:x="3472" fg:w="1"/><text x="41.7066%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="41.1968%" y="517" width="0.2146%" height="15" fill="rgb(213,203,48)" fg:x="3456" fg:w="18"/><text x="41.5159%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (17 samples, 0.20%)</title><rect x="41.2087%" y="501" width="0.2026%" height="15" fill="rgb(244,71,33)" fg:x="3457" fg:w="17"/><text x="41.5278%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="41.2087%" y="485" width="0.2026%" height="15" fill="rgb(209,23,2)" fg:x="3457" fg:w="17"/><text x="41.5278%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (17 samples, 0.20%)</title><rect x="41.2087%" y="469" width="0.2026%" height="15" fill="rgb(219,97,7)" fg:x="3457" fg:w="17"/><text x="41.5278%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="41.3995%" y="453" width="0.0119%" height="15" fill="rgb(216,161,23)" fg:x="3473" fg:w="1"/><text x="41.7186%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="41.3995%" y="437" width="0.0119%" height="15" fill="rgb(207,45,42)" fg:x="3473" fg:w="1"/><text x="41.7186%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="41.3995%" y="421" width="0.0119%" height="15" fill="rgb(241,61,4)" fg:x="3473" fg:w="1"/><text x="41.7186%" y="431.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="41.4114%" y="501" width="0.0358%" height="15" fill="rgb(236,170,1)" fg:x="3474" fg:w="3"/><text x="41.7305%" y="511.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="41.4114%" y="485" width="0.0358%" height="15" fill="rgb(239,72,5)" fg:x="3474" fg:w="3"/><text x="41.7305%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="41.4471%" y="453" width="0.1788%" height="15" fill="rgb(214,13,50)" fg:x="3477" fg:w="15"/><text x="41.7662%" y="463.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="41.4471%" y="437" width="0.1788%" height="15" fill="rgb(224,88,9)" fg:x="3477" fg:w="15"/><text x="41.7662%" y="447.50"/></g><g><title>operator new (14 samples, 0.17%)</title><rect x="41.4591%" y="421" width="0.1669%" height="15" fill="rgb(238,192,34)" fg:x="3478" fg:w="14"/><text x="41.7782%" y="431.50"/></g><g><title>__GI___libc_malloc (14 samples, 0.17%)</title><rect x="41.4591%" y="405" width="0.1669%" height="15" fill="rgb(217,203,50)" fg:x="3478" fg:w="14"/><text x="41.7782%" y="415.50"/></g><g><title>_int_malloc (11 samples, 0.13%)</title><rect x="41.4948%" y="389" width="0.1311%" height="15" fill="rgb(241,123,32)" fg:x="3481" fg:w="11"/><text x="41.8139%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="41.6259%" y="453" width="0.0119%" height="15" fill="rgb(248,151,39)" fg:x="3492" fg:w="1"/><text x="41.9450%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="41.6379%" y="453" width="0.1669%" height="15" fill="rgb(208,89,6)" fg:x="3493" fg:w="14"/><text x="41.9570%" y="463.50"/></g><g><title>operator new (14 samples, 0.17%)</title><rect x="41.6379%" y="437" width="0.1669%" height="15" fill="rgb(254,43,26)" fg:x="3493" fg:w="14"/><text x="41.9570%" y="447.50"/></g><g><title>__GI___libc_malloc (14 samples, 0.17%)</title><rect x="41.6379%" y="421" width="0.1669%" height="15" fill="rgb(216,158,13)" fg:x="3493" fg:w="14"/><text x="41.9570%" y="431.50"/></g><g><title>_int_malloc (10 samples, 0.12%)</title><rect x="41.6855%" y="405" width="0.1192%" height="15" fill="rgb(212,47,37)" fg:x="3497" fg:w="10"/><text x="42.0046%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="41.8167%" y="405" width="0.0119%" height="15" fill="rgb(254,16,10)" fg:x="3508" fg:w="1"/><text x="42.1358%" y="415.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="41.8167%" y="389" width="0.0119%" height="15" fill="rgb(223,228,16)" fg:x="3508" fg:w="1"/><text x="42.1358%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (70 samples, 0.83%)</title><rect x="41.1968%" y="533" width="0.8344%" height="15" fill="rgb(249,108,50)" fg:x="3456" fg:w="70"/><text x="41.5159%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (52 samples, 0.62%)</title><rect x="41.4114%" y="517" width="0.6199%" height="15" fill="rgb(208,220,5)" fg:x="3474" fg:w="52"/><text x="41.7305%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (49 samples, 0.58%)</title><rect x="41.4471%" y="501" width="0.5841%" height="15" fill="rgb(217,89,48)" fg:x="3477" fg:w="49"/><text x="41.7662%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (49 samples, 0.58%)</title><rect x="41.4471%" y="485" width="0.5841%" height="15" fill="rgb(212,113,41)" fg:x="3477" fg:w="49"/><text x="41.7662%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (49 samples, 0.58%)</title><rect x="41.4471%" y="469" width="0.5841%" height="15" fill="rgb(231,127,5)" fg:x="3477" fg:w="49"/><text x="41.7662%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="41.8047%" y="453" width="0.2265%" height="15" fill="rgb(217,141,17)" fg:x="3507" fg:w="19"/><text x="42.1238%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (19 samples, 0.23%)</title><rect x="41.8047%" y="437" width="0.2265%" height="15" fill="rgb(245,125,54)" fg:x="3507" fg:w="19"/><text x="42.1238%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="41.8047%" y="421" width="0.2265%" height="15" fill="rgb(248,125,3)" fg:x="3507" fg:w="19"/><text x="42.1238%" y="431.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="41.8286%" y="405" width="0.2026%" height="15" fill="rgb(236,119,51)" fg:x="3509" fg:w="17"/><text x="42.1477%" y="415.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (16 samples, 0.19%)</title><rect x="41.8405%" y="389" width="0.1907%" height="15" fill="rgb(239,99,8)" fg:x="3510" fg:w="16"/><text x="42.1596%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="41.8524%" y="373" width="0.1788%" height="15" fill="rgb(224,228,4)" fg:x="3511" fg:w="15"/><text x="42.1715%" y="383.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (15 samples, 0.18%)</title><rect x="41.8524%" y="357" width="0.1788%" height="15" fill="rgb(220,131,45)" fg:x="3511" fg:w="15"/><text x="42.1715%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="41.8643%" y="341" width="0.1669%" height="15" fill="rgb(215,62,5)" fg:x="3512" fg:w="14"/><text x="42.1834%" y="351.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (14 samples, 0.17%)</title><rect x="41.8643%" y="325" width="0.1669%" height="15" fill="rgb(253,12,24)" fg:x="3512" fg:w="14"/><text x="42.1834%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="41.8763%" y="309" width="0.1550%" height="15" fill="rgb(248,120,50)" fg:x="3513" fg:w="13"/><text x="42.1954%" y="319.50"/></g><g><title>operator new (12 samples, 0.14%)</title><rect x="41.8882%" y="293" width="0.1430%" height="15" fill="rgb(245,194,10)" fg:x="3514" fg:w="12"/><text x="42.2073%" y="303.50"/></g><g><title>__GI___libc_malloc (12 samples, 0.14%)</title><rect x="41.8882%" y="277" width="0.1430%" height="15" fill="rgb(241,149,38)" fg:x="3514" fg:w="12"/><text x="42.2073%" y="287.50"/></g><g><title>_int_malloc (11 samples, 0.13%)</title><rect x="41.9001%" y="261" width="0.1311%" height="15" fill="rgb(219,215,7)" fg:x="3515" fg:w="11"/><text x="42.2192%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (74 samples, 0.88%)</title><rect x="41.1610%" y="549" width="0.8821%" height="15" fill="rgb(208,120,31)" fg:x="3453" fg:w="74"/><text x="41.4801%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="42.0312%" y="533" width="0.0119%" height="15" fill="rgb(244,30,8)" fg:x="3526" fg:w="1"/><text x="42.3503%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (76 samples, 0.91%)</title><rect x="41.1491%" y="581" width="0.9059%" height="15" fill="rgb(238,35,44)" fg:x="3452" fg:w="76"/><text x="41.4682%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (75 samples, 0.89%)</title><rect x="41.1610%" y="565" width="0.8940%" height="15" fill="rgb(243,218,37)" fg:x="3453" fg:w="75"/><text x="41.4801%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="42.0432%" y="549" width="0.0119%" height="15" fill="rgb(218,169,10)" fg:x="3527" fg:w="1"/><text x="42.3623%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="42.0432%" y="533" width="0.0119%" height="15" fill="rgb(221,144,10)" fg:x="3527" fg:w="1"/><text x="42.3623%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="42.0432%" y="517" width="0.0119%" height="15" fill="rgb(226,41,38)" fg:x="3527" fg:w="1"/><text x="42.3623%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (93 samples, 1.11%)</title><rect x="40.9584%" y="613" width="1.1086%" height="15" fill="rgb(228,3,1)" fg:x="3436" fg:w="93"/><text x="41.2775%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (77 samples, 0.92%)</title><rect x="41.1491%" y="597" width="0.9179%" height="15" fill="rgb(209,129,12)" fg:x="3452" fg:w="77"/><text x="41.4682%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="42.0551%" y="581" width="0.0119%" height="15" fill="rgb(213,136,33)" fg:x="3528" fg:w="1"/><text x="42.3742%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="42.0670%" y="533" width="0.0119%" height="15" fill="rgb(209,181,29)" fg:x="3529" fg:w="1"/><text x="42.3861%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="42.0670%" y="517" width="0.0119%" height="15" fill="rgb(234,173,18)" fg:x="3529" fg:w="1"/><text x="42.3861%" y="527.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="42.0789%" y="501" width="0.1073%" height="15" fill="rgb(227,73,47)" fg:x="3530" fg:w="9"/><text x="42.3980%" y="511.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="42.0789%" y="485" width="0.1073%" height="15" fill="rgb(234,9,34)" fg:x="3530" fg:w="9"/><text x="42.3980%" y="495.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="42.1028%" y="469" width="0.0834%" height="15" fill="rgb(235,172,15)" fg:x="3532" fg:w="7"/><text x="42.4219%" y="479.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="42.2100%" y="437" width="0.0238%" height="15" fill="rgb(245,61,2)" fg:x="3541" fg:w="2"/><text x="42.5291%" y="447.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="42.2100%" y="421" width="0.0238%" height="15" fill="rgb(238,39,47)" fg:x="3541" fg:w="2"/><text x="42.5291%" y="431.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="42.2100%" y="405" width="0.0238%" height="15" fill="rgb(234,37,24)" fg:x="3541" fg:w="2"/><text x="42.5291%" y="415.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="42.2339%" y="405" width="0.0954%" height="15" fill="rgb(248,223,24)" fg:x="3543" fg:w="8"/><text x="42.5530%" y="415.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="42.2339%" y="389" width="0.0954%" height="15" fill="rgb(223,12,15)" fg:x="3543" fg:w="8"/><text x="42.5530%" y="399.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="42.2458%" y="373" width="0.0834%" height="15" fill="rgb(249,6,3)" fg:x="3544" fg:w="7"/><text x="42.5649%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="42.2100%" y="453" width="0.1311%" height="15" fill="rgb(237,105,33)" fg:x="3541" fg:w="11"/><text x="42.5291%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="42.2339%" y="437" width="0.1073%" height="15" fill="rgb(252,208,35)" fg:x="3543" fg:w="9"/><text x="42.5530%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="42.2339%" y="421" width="0.1073%" height="15" fill="rgb(215,181,35)" fg:x="3543" fg:w="9"/><text x="42.5530%" y="431.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="42.3292%" y="405" width="0.0119%" height="15" fill="rgb(246,212,3)" fg:x="3551" fg:w="1"/><text x="42.6483%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="42.3412%" y="437" width="0.0119%" height="15" fill="rgb(247,156,24)" fg:x="3552" fg:w="1"/><text x="42.6603%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="42.3412%" y="421" width="0.0119%" height="15" fill="rgb(248,9,31)" fg:x="3552" fg:w="1"/><text x="42.6603%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="42.3531%" y="421" width="0.0119%" height="15" fill="rgb(234,26,45)" fg:x="3553" fg:w="1"/><text x="42.6722%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="42.3531%" y="405" width="0.0119%" height="15" fill="rgb(249,11,32)" fg:x="3553" fg:w="1"/><text x="42.6722%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="42.3531%" y="389" width="0.0119%" height="15" fill="rgb(249,162,33)" fg:x="3553" fg:w="1"/><text x="42.6722%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="42.3650%" y="405" width="0.0119%" height="15" fill="rgb(232,4,32)" fg:x="3554" fg:w="1"/><text x="42.6841%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="42.3650%" y="389" width="0.0119%" height="15" fill="rgb(212,5,45)" fg:x="3554" fg:w="1"/><text x="42.6841%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="42.3769%" y="373" width="0.0119%" height="15" fill="rgb(227,95,13)" fg:x="3555" fg:w="1"/><text x="42.6960%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="42.3769%" y="357" width="0.0119%" height="15" fill="rgb(223,205,10)" fg:x="3555" fg:w="1"/><text x="42.6960%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="42.3769%" y="389" width="0.0238%" height="15" fill="rgb(222,178,8)" fg:x="3555" fg:w="2"/><text x="42.6960%" y="399.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="42.3888%" y="373" width="0.0119%" height="15" fill="rgb(216,13,22)" fg:x="3556" fg:w="1"/><text x="42.7079%" y="383.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="42.3888%" y="357" width="0.0119%" height="15" fill="rgb(240,167,12)" fg:x="3556" fg:w="1"/><text x="42.7079%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), bool (*)(unsigned int)&gt;::_M_manager (1 samples, 0.01%)</title><rect x="42.3888%" y="341" width="0.0119%" height="15" fill="rgb(235,68,35)" fg:x="3556" fg:w="1"/><text x="42.7079%" y="351.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="42.4008%" y="341" width="0.0954%" height="15" fill="rgb(253,40,27)" fg:x="3557" fg:w="8"/><text x="42.7199%" y="351.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="42.4008%" y="325" width="0.0954%" height="15" fill="rgb(214,19,28)" fg:x="3557" fg:w="8"/><text x="42.7199%" y="335.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="42.4246%" y="309" width="0.0715%" height="15" fill="rgb(210,167,45)" fg:x="3559" fg:w="6"/><text x="42.7437%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (37 samples, 0.44%)</title><rect x="42.0670%" y="549" width="0.4411%" height="15" fill="rgb(232,97,40)" fg:x="3529" fg:w="37"/><text x="42.3861%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (36 samples, 0.43%)</title><rect x="42.0789%" y="533" width="0.4291%" height="15" fill="rgb(250,35,23)" fg:x="3530" fg:w="36"/><text x="42.3980%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (36 samples, 0.43%)</title><rect x="42.0789%" y="517" width="0.4291%" height="15" fill="rgb(248,47,53)" fg:x="3530" fg:w="36"/><text x="42.3980%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (27 samples, 0.32%)</title><rect x="42.1862%" y="501" width="0.3219%" height="15" fill="rgb(226,58,50)" fg:x="3539" fg:w="27"/><text x="42.5053%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (27 samples, 0.32%)</title><rect x="42.1862%" y="485" width="0.3219%" height="15" fill="rgb(217,105,26)" fg:x="3539" fg:w="27"/><text x="42.5053%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (27 samples, 0.32%)</title><rect x="42.1862%" y="469" width="0.3219%" height="15" fill="rgb(208,64,1)" fg:x="3539" fg:w="27"/><text x="42.5053%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="42.3412%" y="453" width="0.1669%" height="15" fill="rgb(214,80,1)" fg:x="3552" fg:w="14"/><text x="42.6603%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="42.3531%" y="437" width="0.1550%" height="15" fill="rgb(206,175,26)" fg:x="3553" fg:w="13"/><text x="42.6722%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="42.3650%" y="421" width="0.1430%" height="15" fill="rgb(235,156,37)" fg:x="3554" fg:w="12"/><text x="42.6841%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="42.3769%" y="405" width="0.1311%" height="15" fill="rgb(213,100,9)" fg:x="3555" fg:w="11"/><text x="42.6960%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="42.4008%" y="389" width="0.1073%" height="15" fill="rgb(241,15,13)" fg:x="3557" fg:w="9"/><text x="42.7199%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="42.4008%" y="373" width="0.1073%" height="15" fill="rgb(205,97,43)" fg:x="3557" fg:w="9"/><text x="42.7199%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="42.4008%" y="357" width="0.1073%" height="15" fill="rgb(216,106,32)" fg:x="3557" fg:w="9"/><text x="42.7199%" y="367.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="42.4961%" y="341" width="0.0119%" height="15" fill="rgb(226,200,8)" fg:x="3565" fg:w="1"/><text x="42.8152%" y="351.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="42.4961%" y="325" width="0.0119%" height="15" fill="rgb(244,54,29)" fg:x="3565" fg:w="1"/><text x="42.8152%" y="335.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="42.4961%" y="309" width="0.0119%" height="15" fill="rgb(252,169,12)" fg:x="3565" fg:w="1"/><text x="42.8152%" y="319.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (38 samples, 0.45%)</title><rect x="42.0670%" y="565" width="0.4530%" height="15" fill="rgb(231,199,11)" fg:x="3529" fg:w="38"/><text x="42.3861%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="42.5080%" y="549" width="0.0119%" height="15" fill="rgb(233,191,18)" fg:x="3566" fg:w="1"/><text x="42.8271%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="42.5080%" y="533" width="0.0119%" height="15" fill="rgb(215,83,47)" fg:x="3566" fg:w="1"/><text x="42.8271%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="42.5080%" y="517" width="0.0119%" height="15" fill="rgb(251,67,19)" fg:x="3566" fg:w="1"/><text x="42.8271%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (39 samples, 0.46%)</title><rect x="42.0670%" y="581" width="0.4649%" height="15" fill="rgb(240,7,20)" fg:x="3529" fg:w="39"/><text x="42.3861%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="42.5200%" y="565" width="0.0119%" height="15" fill="rgb(210,150,26)" fg:x="3567" fg:w="1"/><text x="42.8391%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="42.5319%" y="565" width="0.0119%" height="15" fill="rgb(228,75,42)" fg:x="3568" fg:w="1"/><text x="42.8510%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="42.5676%" y="533" width="0.0119%" height="15" fill="rgb(237,134,48)" fg:x="3571" fg:w="1"/><text x="42.8867%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="42.5676%" y="517" width="0.0119%" height="15" fill="rgb(205,80,50)" fg:x="3571" fg:w="1"/><text x="42.8867%" y="527.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="42.5796%" y="533" width="0.0119%" height="15" fill="rgb(217,74,48)" fg:x="3572" fg:w="1"/><text x="42.8987%" y="543.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="42.5796%" y="517" width="0.0119%" height="15" fill="rgb(205,82,50)" fg:x="3572" fg:w="1"/><text x="42.8987%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="42.6034%" y="437" width="0.0119%" height="15" fill="rgb(228,1,33)" fg:x="3574" fg:w="1"/><text x="42.9225%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="42.6034%" y="421" width="0.0119%" height="15" fill="rgb(214,50,23)" fg:x="3574" fg:w="1"/><text x="42.9225%" y="431.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="42.6153%" y="405" width="0.1311%" height="15" fill="rgb(210,62,9)" fg:x="3575" fg:w="11"/><text x="42.9344%" y="415.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="42.6153%" y="389" width="0.1311%" height="15" fill="rgb(210,104,37)" fg:x="3575" fg:w="11"/><text x="42.9344%" y="399.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="42.6392%" y="373" width="0.1073%" height="15" fill="rgb(232,104,43)" fg:x="3577" fg:w="9"/><text x="42.9583%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="42.5915%" y="485" width="0.1669%" height="15" fill="rgb(244,52,6)" fg:x="3573" fg:w="14"/><text x="42.9106%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (14 samples, 0.17%)</title><rect x="42.5915%" y="469" width="0.1669%" height="15" fill="rgb(211,174,52)" fg:x="3573" fg:w="14"/><text x="42.9106%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="42.6034%" y="453" width="0.1550%" height="15" fill="rgb(229,48,4)" fg:x="3574" fg:w="13"/><text x="42.9225%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="42.6153%" y="437" width="0.1430%" height="15" fill="rgb(205,155,16)" fg:x="3575" fg:w="12"/><text x="42.9344%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="42.6153%" y="421" width="0.1430%" height="15" fill="rgb(211,141,53)" fg:x="3575" fg:w="12"/><text x="42.9344%" y="431.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="42.7465%" y="405" width="0.0119%" height="15" fill="rgb(240,148,11)" fg:x="3586" fg:w="1"/><text x="43.0656%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="42.7465%" y="389" width="0.0119%" height="15" fill="rgb(214,45,23)" fg:x="3586" fg:w="1"/><text x="43.0656%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="42.7465%" y="373" width="0.0119%" height="15" fill="rgb(248,74,26)" fg:x="3586" fg:w="1"/><text x="43.0656%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="42.7465%" y="357" width="0.0119%" height="15" fill="rgb(218,121,16)" fg:x="3586" fg:w="1"/><text x="43.0656%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="42.7465%" y="341" width="0.0119%" height="15" fill="rgb(218,10,47)" fg:x="3586" fg:w="1"/><text x="43.0656%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="42.5676%" y="549" width="0.2026%" height="15" fill="rgb(227,99,14)" fg:x="3571" fg:w="17"/><text x="42.8867%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (15 samples, 0.18%)</title><rect x="42.5915%" y="533" width="0.1788%" height="15" fill="rgb(229,83,46)" fg:x="3573" fg:w="15"/><text x="42.9106%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="42.5915%" y="517" width="0.1788%" height="15" fill="rgb(228,25,1)" fg:x="3573" fg:w="15"/><text x="42.9106%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (15 samples, 0.18%)</title><rect x="42.5915%" y="501" width="0.1788%" height="15" fill="rgb(252,190,15)" fg:x="3573" fg:w="15"/><text x="42.9106%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="42.7584%" y="485" width="0.0119%" height="15" fill="rgb(213,103,51)" fg:x="3587" fg:w="1"/><text x="43.0775%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="42.7584%" y="469" width="0.0119%" height="15" fill="rgb(220,38,44)" fg:x="3587" fg:w="1"/><text x="43.0775%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="42.7584%" y="453" width="0.0119%" height="15" fill="rgb(210,45,26)" fg:x="3587" fg:w="1"/><text x="43.0775%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="42.7703%" y="533" width="0.0119%" height="15" fill="rgb(205,95,48)" fg:x="3588" fg:w="1"/><text x="43.0894%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="42.7703%" y="517" width="0.0119%" height="15" fill="rgb(225,179,37)" fg:x="3588" fg:w="1"/><text x="43.0894%" y="527.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="42.7822%" y="501" width="0.0119%" height="15" fill="rgb(230,209,3)" fg:x="3589" fg:w="1"/><text x="43.1013%" y="511.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="42.7822%" y="485" width="0.0119%" height="15" fill="rgb(248,12,46)" fg:x="3589" fg:w="1"/><text x="43.1013%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="42.7941%" y="469" width="0.0119%" height="15" fill="rgb(234,18,0)" fg:x="3590" fg:w="1"/><text x="43.1132%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="42.7941%" y="453" width="0.0119%" height="15" fill="rgb(238,197,14)" fg:x="3590" fg:w="1"/><text x="43.1132%" y="463.50"/></g><g><title>operator new (13 samples, 0.15%)</title><rect x="42.8061%" y="373" width="0.1550%" height="15" fill="rgb(251,162,48)" fg:x="3591" fg:w="13"/><text x="43.1252%" y="383.50"/></g><g><title>__GI___libc_malloc (13 samples, 0.15%)</title><rect x="42.8061%" y="357" width="0.1550%" height="15" fill="rgb(237,73,42)" fg:x="3591" fg:w="13"/><text x="43.1252%" y="367.50"/></g><g><title>_int_malloc (10 samples, 0.12%)</title><rect x="42.8418%" y="341" width="0.1192%" height="15" fill="rgb(211,108,8)" fg:x="3594" fg:w="10"/><text x="43.1609%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="42.9610%" y="357" width="0.0119%" height="15" fill="rgb(213,45,22)" fg:x="3604" fg:w="1"/><text x="43.2801%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="42.9610%" y="341" width="0.0119%" height="15" fill="rgb(252,154,5)" fg:x="3604" fg:w="1"/><text x="43.2801%" y="351.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="42.9610%" y="325" width="0.0119%" height="15" fill="rgb(221,79,52)" fg:x="3604" fg:w="1"/><text x="43.2801%" y="335.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="42.9729%" y="293" width="0.0119%" height="15" fill="rgb(229,220,36)" fg:x="3605" fg:w="1"/><text x="43.2920%" y="303.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="42.9729%" y="277" width="0.0119%" height="15" fill="rgb(211,17,16)" fg:x="3605" fg:w="1"/><text x="43.2920%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="42.9729%" y="325" width="0.1311%" height="15" fill="rgb(222,55,31)" fg:x="3605" fg:w="11"/><text x="43.2920%" y="335.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (11 samples, 0.13%)</title><rect x="42.9729%" y="309" width="0.1311%" height="15" fill="rgb(221,221,31)" fg:x="3605" fg:w="11"/><text x="43.2920%" y="319.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="42.9849%" y="293" width="0.1192%" height="15" fill="rgb(227,168,26)" fg:x="3606" fg:w="10"/><text x="43.3040%" y="303.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="42.9849%" y="277" width="0.1192%" height="15" fill="rgb(224,139,9)" fg:x="3606" fg:w="10"/><text x="43.3040%" y="287.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="42.9849%" y="261" width="0.1192%" height="15" fill="rgb(254,172,0)" fg:x="3606" fg:w="10"/><text x="43.3040%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (10 samples, 0.12%)</title><rect x="42.9849%" y="245" width="0.1192%" height="15" fill="rgb(235,203,1)" fg:x="3606" fg:w="10"/><text x="43.3040%" y="255.50"/></g><g><title>operator new (10 samples, 0.12%)</title><rect x="42.9849%" y="229" width="0.1192%" height="15" fill="rgb(216,205,24)" fg:x="3606" fg:w="10"/><text x="43.3040%" y="239.50"/></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="42.9849%" y="213" width="0.1192%" height="15" fill="rgb(233,24,6)" fg:x="3606" fg:w="10"/><text x="43.3040%" y="223.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="43.0445%" y="197" width="0.0596%" height="15" fill="rgb(244,110,9)" fg:x="3611" fg:w="5"/><text x="43.3636%" y="207.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="42.8061%" y="421" width="0.3099%" height="15" fill="rgb(239,222,42)" fg:x="3591" fg:w="26"/><text x="43.1252%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (26 samples, 0.31%)</title><rect x="42.8061%" y="405" width="0.3099%" height="15" fill="rgb(218,145,13)" fg:x="3591" fg:w="26"/><text x="43.1252%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="42.8061%" y="389" width="0.3099%" height="15" fill="rgb(207,69,11)" fg:x="3591" fg:w="26"/><text x="43.1252%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="42.9610%" y="373" width="0.1550%" height="15" fill="rgb(220,223,22)" fg:x="3604" fg:w="13"/><text x="43.2801%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="42.9729%" y="357" width="0.1430%" height="15" fill="rgb(245,102,5)" fg:x="3605" fg:w="12"/><text x="43.2920%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="42.9729%" y="341" width="0.1430%" height="15" fill="rgb(211,148,2)" fg:x="3605" fg:w="12"/><text x="43.2920%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="43.1041%" y="325" width="0.0119%" height="15" fill="rgb(241,13,44)" fg:x="3616" fg:w="1"/><text x="43.4232%" y="335.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="43.1041%" y="309" width="0.0119%" height="15" fill="rgb(219,137,21)" fg:x="3616" fg:w="1"/><text x="43.4232%" y="319.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="43.1041%" y="293" width="0.0119%" height="15" fill="rgb(242,206,5)" fg:x="3616" fg:w="1"/><text x="43.4232%" y="303.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="43.1160%" y="405" width="0.0119%" height="15" fill="rgb(217,114,22)" fg:x="3617" fg:w="1"/><text x="43.4351%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="43.1160%" y="389" width="0.0119%" height="15" fill="rgb(253,206,42)" fg:x="3617" fg:w="1"/><text x="43.4351%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (28 samples, 0.33%)</title><rect x="42.8061%" y="437" width="0.3338%" height="15" fill="rgb(236,102,18)" fg:x="3591" fg:w="28"/><text x="43.1252%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="43.1160%" y="421" width="0.0238%" height="15" fill="rgb(208,59,49)" fg:x="3617" fg:w="2"/><text x="43.4351%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="43.1279%" y="405" width="0.0119%" height="15" fill="rgb(215,194,28)" fg:x="3618" fg:w="1"/><text x="43.4470%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="43.1517%" y="405" width="0.0119%" height="15" fill="rgb(243,207,11)" fg:x="3620" fg:w="1"/><text x="43.4708%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="43.1517%" y="389" width="0.0119%" height="15" fill="rgb(254,179,35)" fg:x="3620" fg:w="1"/><text x="43.4708%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="43.1637%" y="389" width="0.0119%" height="15" fill="rgb(235,97,3)" fg:x="3621" fg:w="1"/><text x="43.4828%" y="399.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="43.1637%" y="373" width="0.0119%" height="15" fill="rgb(215,155,33)" fg:x="3621" fg:w="1"/><text x="43.4828%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="43.1756%" y="357" width="0.0119%" height="15" fill="rgb(223,128,12)" fg:x="3622" fg:w="1"/><text x="43.4947%" y="367.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="43.1756%" y="341" width="0.0119%" height="15" fill="rgb(208,157,18)" fg:x="3622" fg:w="1"/><text x="43.4947%" y="351.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="43.1756%" y="325" width="0.0119%" height="15" fill="rgb(249,70,54)" fg:x="3622" fg:w="1"/><text x="43.4947%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="43.1875%" y="325" width="0.0358%" height="15" fill="rgb(244,118,24)" fg:x="3623" fg:w="3"/><text x="43.5066%" y="335.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="43.2113%" y="309" width="0.0119%" height="15" fill="rgb(211,54,0)" fg:x="3625" fg:w="1"/><text x="43.5304%" y="319.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="43.2113%" y="293" width="0.0119%" height="15" fill="rgb(245,137,45)" fg:x="3625" fg:w="1"/><text x="43.5304%" y="303.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="43.2113%" y="277" width="0.0119%" height="15" fill="rgb(232,154,31)" fg:x="3625" fg:w="1"/><text x="43.5304%" y="287.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="43.2233%" y="309" width="0.0119%" height="15" fill="rgb(253,6,39)" fg:x="3626" fg:w="1"/><text x="43.5424%" y="319.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="43.2352%" y="277" width="0.0238%" height="15" fill="rgb(234,183,24)" fg:x="3627" fg:w="2"/><text x="43.5543%" y="287.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="43.2352%" y="261" width="0.0238%" height="15" fill="rgb(252,84,40)" fg:x="3627" fg:w="2"/><text x="43.5543%" y="271.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="43.2352%" y="293" width="0.1669%" height="15" fill="rgb(224,65,2)" fg:x="3627" fg:w="14"/><text x="43.5543%" y="303.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="43.2590%" y="277" width="0.1430%" height="15" fill="rgb(229,38,24)" fg:x="3629" fg:w="12"/><text x="43.5781%" y="287.50"/></g><g><title>operator new (12 samples, 0.14%)</title><rect x="43.2590%" y="261" width="0.1430%" height="15" fill="rgb(218,131,50)" fg:x="3629" fg:w="12"/><text x="43.5781%" y="271.50"/></g><g><title>__GI___libc_malloc (12 samples, 0.14%)</title><rect x="43.2590%" y="245" width="0.1430%" height="15" fill="rgb(233,106,18)" fg:x="3629" fg:w="12"/><text x="43.5781%" y="255.50"/></g><g><title>_int_malloc (12 samples, 0.14%)</title><rect x="43.2590%" y="229" width="0.1430%" height="15" fill="rgb(220,216,11)" fg:x="3629" fg:w="12"/><text x="43.5781%" y="239.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="43.4021%" y="277" width="0.1311%" height="15" fill="rgb(251,100,45)" fg:x="3641" fg:w="11"/><text x="43.7212%" y="287.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="43.4021%" y="261" width="0.1311%" height="15" fill="rgb(235,143,32)" fg:x="3641" fg:w="11"/><text x="43.7212%" y="271.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="43.4259%" y="245" width="0.1073%" height="15" fill="rgb(248,124,34)" fg:x="3643" fg:w="9"/><text x="43.7450%" y="255.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="43.5332%" y="261" width="0.0238%" height="15" fill="rgb(225,221,4)" fg:x="3652" fg:w="2"/><text x="43.8523%" y="271.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="43.5451%" y="245" width="0.0119%" height="15" fill="rgb(242,27,43)" fg:x="3653" fg:w="1"/><text x="43.8642%" y="255.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="43.5451%" y="229" width="0.0119%" height="15" fill="rgb(227,54,8)" fg:x="3653" fg:w="1"/><text x="43.8642%" y="239.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="43.5451%" y="213" width="0.0119%" height="15" fill="rgb(253,139,49)" fg:x="3653" fg:w="1"/><text x="43.8642%" y="223.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (64 samples, 0.76%)</title><rect x="42.8061%" y="453" width="0.7629%" height="15" fill="rgb(231,26,43)" fg:x="3591" fg:w="64"/><text x="43.1252%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (36 samples, 0.43%)</title><rect x="43.1398%" y="437" width="0.4291%" height="15" fill="rgb(207,121,39)" fg:x="3619" fg:w="36"/><text x="43.4589%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (35 samples, 0.42%)</title><rect x="43.1517%" y="421" width="0.4172%" height="15" fill="rgb(223,101,35)" fg:x="3620" fg:w="35"/><text x="43.4708%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (34 samples, 0.41%)</title><rect x="43.1637%" y="405" width="0.4053%" height="15" fill="rgb(232,87,23)" fg:x="3621" fg:w="34"/><text x="43.4828%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (33 samples, 0.39%)</title><rect x="43.1756%" y="389" width="0.3934%" height="15" fill="rgb(225,180,29)" fg:x="3622" fg:w="33"/><text x="43.4947%" y="399.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (33 samples, 0.39%)</title><rect x="43.1756%" y="373" width="0.3934%" height="15" fill="rgb(225,25,17)" fg:x="3622" fg:w="33"/><text x="43.4947%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (32 samples, 0.38%)</title><rect x="43.1875%" y="357" width="0.3815%" height="15" fill="rgb(223,8,52)" fg:x="3623" fg:w="32"/><text x="43.5066%" y="367.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (32 samples, 0.38%)</title><rect x="43.1875%" y="341" width="0.3815%" height="15" fill="rgb(246,42,21)" fg:x="3623" fg:w="32"/><text x="43.5066%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (29 samples, 0.35%)</title><rect x="43.2233%" y="325" width="0.3457%" height="15" fill="rgb(205,64,43)" fg:x="3626" fg:w="29"/><text x="43.5424%" y="335.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (28 samples, 0.33%)</title><rect x="43.2352%" y="309" width="0.3338%" height="15" fill="rgb(221,160,13)" fg:x="3627" fg:w="28"/><text x="43.5543%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="43.4021%" y="293" width="0.1669%" height="15" fill="rgb(239,58,35)" fg:x="3641" fg:w="14"/><text x="43.7212%" y="303.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="43.5332%" y="277" width="0.0358%" height="15" fill="rgb(251,26,40)" fg:x="3652" fg:w="3"/><text x="43.8523%" y="287.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="43.5570%" y="261" width="0.0119%" height="15" fill="rgb(247,0,4)" fg:x="3654" fg:w="1"/><text x="43.8761%" y="271.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="43.5570%" y="245" width="0.0119%" height="15" fill="rgb(218,130,10)" fg:x="3654" fg:w="1"/><text x="43.8761%" y="255.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="43.5570%" y="229" width="0.0119%" height="15" fill="rgb(239,32,7)" fg:x="3654" fg:w="1"/><text x="43.8761%" y="239.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="43.5570%" y="213" width="0.0119%" height="15" fill="rgb(210,192,24)" fg:x="3654" fg:w="1"/><text x="43.8761%" y="223.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="43.5570%" y="197" width="0.0119%" height="15" fill="rgb(226,212,17)" fg:x="3654" fg:w="1"/><text x="43.8761%" y="207.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (67 samples, 0.80%)</title><rect x="42.7822%" y="517" width="0.7987%" height="15" fill="rgb(219,201,28)" fg:x="3589" fg:w="67"/><text x="43.1013%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (66 samples, 0.79%)</title><rect x="42.7941%" y="501" width="0.7867%" height="15" fill="rgb(235,207,41)" fg:x="3590" fg:w="66"/><text x="43.1132%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (66 samples, 0.79%)</title><rect x="42.7941%" y="485" width="0.7867%" height="15" fill="rgb(241,95,54)" fg:x="3590" fg:w="66"/><text x="43.1132%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (65 samples, 0.77%)</title><rect x="42.8061%" y="469" width="0.7748%" height="15" fill="rgb(248,12,23)" fg:x="3591" fg:w="65"/><text x="43.1252%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="43.5690%" y="453" width="0.0119%" height="15" fill="rgb(228,173,4)" fg:x="3655" fg:w="1"/><text x="43.8881%" y="463.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="43.5809%" y="469" width="0.0954%" height="15" fill="rgb(254,99,5)" fg:x="3656" fg:w="8"/><text x="43.9000%" y="479.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="43.5809%" y="453" width="0.0954%" height="15" fill="rgb(212,184,17)" fg:x="3656" fg:w="8"/><text x="43.9000%" y="463.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="43.5928%" y="437" width="0.0834%" height="15" fill="rgb(252,174,1)" fg:x="3657" fg:w="7"/><text x="43.9119%" y="447.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="43.6762%" y="469" width="0.0119%" height="15" fill="rgb(241,118,51)" fg:x="3664" fg:w="1"/><text x="43.9953%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="43.6762%" y="453" width="0.0119%" height="15" fill="rgb(227,94,47)" fg:x="3664" fg:w="1"/><text x="43.9953%" y="463.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="43.6762%" y="437" width="0.0119%" height="15" fill="rgb(229,104,2)" fg:x="3664" fg:w="1"/><text x="43.9953%" y="447.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="43.7001%" y="405" width="0.1073%" height="15" fill="rgb(219,28,31)" fg:x="3666" fg:w="9"/><text x="44.0192%" y="415.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="43.7001%" y="389" width="0.1073%" height="15" fill="rgb(233,109,36)" fg:x="3666" fg:w="9"/><text x="44.0192%" y="399.50"/></g><g><title>_int_malloc (8 samples, 0.10%)</title><rect x="43.7120%" y="373" width="0.0954%" height="15" fill="rgb(246,88,11)" fg:x="3667" fg:w="8"/><text x="44.0311%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="43.8074%" y="373" width="0.0119%" height="15" fill="rgb(209,212,17)" fg:x="3675" fg:w="1"/><text x="44.1265%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="43.8074%" y="357" width="0.0119%" height="15" fill="rgb(243,59,29)" fg:x="3675" fg:w="1"/><text x="44.1265%" y="367.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="43.8193%" y="325" width="0.0954%" height="15" fill="rgb(244,205,48)" fg:x="3676" fg:w="8"/><text x="44.1384%" y="335.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="43.8312%" y="309" width="0.0834%" height="15" fill="rgb(227,30,6)" fg:x="3677" fg:w="7"/><text x="44.1503%" y="319.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="43.8193%" y="341" width="0.1073%" height="15" fill="rgb(220,205,48)" fg:x="3676" fg:w="9"/><text x="44.1384%" y="351.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="43.9147%" y="325" width="0.0119%" height="15" fill="rgb(250,94,14)" fg:x="3684" fg:w="1"/><text x="44.2338%" y="335.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="43.9385%" y="261" width="0.1311%" height="15" fill="rgb(216,119,42)" fg:x="3686" fg:w="11"/><text x="44.2576%" y="271.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="43.9385%" y="245" width="0.1311%" height="15" fill="rgb(232,155,0)" fg:x="3686" fg:w="11"/><text x="44.2576%" y="255.50"/></g><g><title>_int_malloc (10 samples, 0.12%)</title><rect x="43.9504%" y="229" width="0.1192%" height="15" fill="rgb(212,24,32)" fg:x="3687" fg:w="10"/><text x="44.2695%" y="239.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="43.9385%" y="277" width="0.1430%" height="15" fill="rgb(216,69,20)" fg:x="3686" fg:w="12"/><text x="44.2576%" y="287.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="44.0696%" y="261" width="0.0119%" height="15" fill="rgb(229,73,31)" fg:x="3697" fg:w="1"/><text x="44.3887%" y="271.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="44.0696%" y="245" width="0.0119%" height="15" fill="rgb(224,219,20)" fg:x="3697" fg:w="1"/><text x="44.3887%" y="255.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="44.1054%" y="181" width="0.0119%" height="15" fill="rgb(215,146,41)" fg:x="3700" fg:w="1"/><text x="44.4245%" y="191.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="43.8193%" y="357" width="0.3099%" height="15" fill="rgb(244,71,31)" fg:x="3676" fg:w="26"/><text x="44.1384%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (17 samples, 0.20%)</title><rect x="43.9266%" y="341" width="0.2026%" height="15" fill="rgb(224,24,11)" fg:x="3685" fg:w="17"/><text x="44.2457%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="43.9385%" y="325" width="0.1907%" height="15" fill="rgb(229,76,15)" fg:x="3686" fg:w="16"/><text x="44.2576%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (16 samples, 0.19%)</title><rect x="43.9385%" y="309" width="0.1907%" height="15" fill="rgb(209,93,2)" fg:x="3686" fg:w="16"/><text x="44.2576%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="43.9385%" y="293" width="0.1907%" height="15" fill="rgb(216,200,50)" fg:x="3686" fg:w="16"/><text x="44.2576%" y="303.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="44.0815%" y="277" width="0.0477%" height="15" fill="rgb(211,67,34)" fg:x="3698" fg:w="4"/><text x="44.4006%" y="287.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="44.0815%" y="261" width="0.0477%" height="15" fill="rgb(225,87,47)" fg:x="3698" fg:w="4"/><text x="44.4006%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="44.0815%" y="245" width="0.0477%" height="15" fill="rgb(217,185,16)" fg:x="3698" fg:w="4"/><text x="44.4006%" y="255.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="44.0815%" y="229" width="0.0477%" height="15" fill="rgb(205,0,0)" fg:x="3698" fg:w="4"/><text x="44.4006%" y="239.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="44.0815%" y="213" width="0.0477%" height="15" fill="rgb(207,116,45)" fg:x="3698" fg:w="4"/><text x="44.4006%" y="223.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="44.1054%" y="197" width="0.0238%" height="15" fill="rgb(221,156,26)" fg:x="3700" fg:w="2"/><text x="44.4245%" y="207.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="44.1173%" y="181" width="0.0119%" height="15" fill="rgb(213,140,4)" fg:x="3701" fg:w="1"/><text x="44.4364%" y="191.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (27 samples, 0.32%)</title><rect x="43.8193%" y="373" width="0.3219%" height="15" fill="rgb(231,224,15)" fg:x="3676" fg:w="27"/><text x="44.1384%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="44.1292%" y="357" width="0.0119%" height="15" fill="rgb(244,76,20)" fg:x="3702" fg:w="1"/><text x="44.4483%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="44.1411%" y="325" width="0.0119%" height="15" fill="rgb(238,117,7)" fg:x="3703" fg:w="1"/><text x="44.4602%" y="335.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="44.1411%" y="309" width="0.0119%" height="15" fill="rgb(235,1,10)" fg:x="3703" fg:w="1"/><text x="44.4602%" y="319.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="44.1411%" y="293" width="0.0119%" height="15" fill="rgb(216,165,6)" fg:x="3703" fg:w="1"/><text x="44.4602%" y="303.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="44.1769%" y="261" width="0.0119%" height="15" fill="rgb(246,91,35)" fg:x="3706" fg:w="1"/><text x="44.4960%" y="271.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="44.1769%" y="293" width="0.0238%" height="15" fill="rgb(228,96,24)" fg:x="3706" fg:w="2"/><text x="44.4960%" y="303.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="44.1769%" y="277" width="0.0238%" height="15" fill="rgb(254,217,53)" fg:x="3706" fg:w="2"/><text x="44.4960%" y="287.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="44.1888%" y="261" width="0.0119%" height="15" fill="rgb(209,60,0)" fg:x="3707" fg:w="1"/><text x="44.5079%" y="271.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="44.1888%" y="245" width="0.0119%" height="15" fill="rgb(250,93,26)" fg:x="3707" fg:w="1"/><text x="44.5079%" y="255.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="44.2007%" y="261" width="0.0119%" height="15" fill="rgb(211,9,40)" fg:x="3708" fg:w="1"/><text x="44.5198%" y="271.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="44.2007%" y="245" width="0.0119%" height="15" fill="rgb(242,57,20)" fg:x="3708" fg:w="1"/><text x="44.5198%" y="255.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="44.2007%" y="229" width="0.0119%" height="15" fill="rgb(248,85,48)" fg:x="3708" fg:w="1"/><text x="44.5198%" y="239.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="44.2365%" y="229" width="0.0119%" height="15" fill="rgb(212,117,2)" fg:x="3711" fg:w="1"/><text x="44.5556%" y="239.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="44.2365%" y="213" width="0.0119%" height="15" fill="rgb(243,19,3)" fg:x="3711" fg:w="1"/><text x="44.5556%" y="223.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="44.2365%" y="197" width="0.0119%" height="15" fill="rgb(232,217,24)" fg:x="3711" fg:w="1"/><text x="44.5556%" y="207.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="44.2365%" y="181" width="0.0119%" height="15" fill="rgb(224,175,40)" fg:x="3711" fg:w="1"/><text x="44.5556%" y="191.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="44.2603%" y="197" width="0.0954%" height="15" fill="rgb(212,162,32)" fg:x="3713" fg:w="8"/><text x="44.5794%" y="207.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="44.2603%" y="181" width="0.0954%" height="15" fill="rgb(215,9,4)" fg:x="3713" fg:w="8"/><text x="44.5794%" y="191.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="44.2603%" y="165" width="0.0954%" height="15" fill="rgb(242,42,7)" fg:x="3713" fg:w="8"/><text x="44.5794%" y="175.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="44.2603%" y="149" width="0.0954%" height="15" fill="rgb(242,184,45)" fg:x="3713" fg:w="8"/><text x="44.5794%" y="159.50"/></g><g><title>_int_malloc (8 samples, 0.10%)</title><rect x="44.2603%" y="133" width="0.0954%" height="15" fill="rgb(228,111,51)" fg:x="3713" fg:w="8"/><text x="44.5794%" y="143.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (47 samples, 0.56%)</title><rect x="43.8074%" y="389" width="0.5603%" height="15" fill="rgb(236,147,17)" fg:x="3675" fg:w="47"/><text x="44.1265%" y="399.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (19 samples, 0.23%)</title><rect x="44.1411%" y="373" width="0.2265%" height="15" fill="rgb(210,75,22)" fg:x="3703" fg:w="19"/><text x="44.4602%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="44.1411%" y="357" width="0.2265%" height="15" fill="rgb(217,159,45)" fg:x="3703" fg:w="19"/><text x="44.4602%" y="367.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (19 samples, 0.23%)</title><rect x="44.1411%" y="341" width="0.2265%" height="15" fill="rgb(245,165,53)" fg:x="3703" fg:w="19"/><text x="44.4602%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="44.1531%" y="325" width="0.2146%" height="15" fill="rgb(251,190,50)" fg:x="3704" fg:w="18"/><text x="44.4722%" y="335.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (16 samples, 0.19%)</title><rect x="44.1769%" y="309" width="0.1907%" height="15" fill="rgb(208,203,29)" fg:x="3706" fg:w="16"/><text x="44.4960%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="44.2007%" y="293" width="0.1669%" height="15" fill="rgb(207,209,35)" fg:x="3708" fg:w="14"/><text x="44.5198%" y="303.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (14 samples, 0.17%)</title><rect x="44.2007%" y="277" width="0.1669%" height="15" fill="rgb(230,144,49)" fg:x="3708" fg:w="14"/><text x="44.5198%" y="287.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="44.2127%" y="261" width="0.1550%" height="15" fill="rgb(229,31,6)" fg:x="3709" fg:w="13"/><text x="44.5318%" y="271.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="44.2365%" y="245" width="0.1311%" height="15" fill="rgb(251,129,24)" fg:x="3711" fg:w="11"/><text x="44.5556%" y="255.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="44.2484%" y="229" width="0.1192%" height="15" fill="rgb(235,105,15)" fg:x="3712" fg:w="10"/><text x="44.5675%" y="239.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="44.2603%" y="213" width="0.1073%" height="15" fill="rgb(216,52,43)" fg:x="3713" fg:w="9"/><text x="44.5794%" y="223.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="44.3557%" y="197" width="0.0119%" height="15" fill="rgb(238,144,41)" fg:x="3721" fg:w="1"/><text x="44.6748%" y="207.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="44.3557%" y="181" width="0.0119%" height="15" fill="rgb(243,63,9)" fg:x="3721" fg:w="1"/><text x="44.6748%" y="191.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="44.3557%" y="165" width="0.0119%" height="15" fill="rgb(246,208,1)" fg:x="3721" fg:w="1"/><text x="44.6748%" y="175.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="44.3795%" y="309" width="0.0238%" height="15" fill="rgb(233,182,18)" fg:x="3723" fg:w="2"/><text x="44.6986%" y="319.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="44.3795%" y="293" width="0.0238%" height="15" fill="rgb(242,224,8)" fg:x="3723" fg:w="2"/><text x="44.6986%" y="303.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="44.4034%" y="277" width="0.0834%" height="15" fill="rgb(243,54,37)" fg:x="3725" fg:w="7"/><text x="44.7225%" y="287.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="44.4034%" y="261" width="0.0834%" height="15" fill="rgb(233,192,12)" fg:x="3725" fg:w="7"/><text x="44.7225%" y="271.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="44.4034%" y="245" width="0.0834%" height="15" fill="rgb(251,192,53)" fg:x="3725" fg:w="7"/><text x="44.7225%" y="255.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="44.4153%" y="229" width="0.0715%" height="15" fill="rgb(246,141,26)" fg:x="3726" fg:w="6"/><text x="44.7344%" y="239.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="44.4868%" y="261" width="0.0119%" height="15" fill="rgb(239,195,19)" fg:x="3732" fg:w="1"/><text x="44.8059%" y="271.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="44.4868%" y="245" width="0.0119%" height="15" fill="rgb(241,16,39)" fg:x="3732" fg:w="1"/><text x="44.8059%" y="255.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="44.4034%" y="293" width="0.1073%" height="15" fill="rgb(223,13,53)" fg:x="3725" fg:w="9"/><text x="44.7225%" y="303.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="44.4868%" y="277" width="0.0238%" height="15" fill="rgb(214,227,0)" fg:x="3732" fg:w="2"/><text x="44.8059%" y="287.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="44.4987%" y="261" width="0.0119%" height="15" fill="rgb(228,103,26)" fg:x="3733" fg:w="1"/><text x="44.8178%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="44.4987%" y="245" width="0.0119%" height="15" fill="rgb(254,177,53)" fg:x="3733" fg:w="1"/><text x="44.8178%" y="255.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="44.5107%" y="277" width="0.0238%" height="15" fill="rgb(208,201,34)" fg:x="3734" fg:w="2"/><text x="44.8298%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="44.3795%" y="325" width="0.1669%" height="15" fill="rgb(212,39,5)" fg:x="3723" fg:w="14"/><text x="44.6986%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="44.4034%" y="309" width="0.1430%" height="15" fill="rgb(246,117,3)" fg:x="3725" fg:w="12"/><text x="44.7225%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="44.5107%" y="293" width="0.0358%" height="15" fill="rgb(244,118,39)" fg:x="3734" fg:w="3"/><text x="44.8298%" y="303.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="44.5345%" y="277" width="0.0119%" height="15" fill="rgb(241,64,10)" fg:x="3736" fg:w="1"/><text x="44.8536%" y="287.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (22 samples, 0.26%)</title><rect x="44.3795%" y="341" width="0.2622%" height="15" fill="rgb(229,39,44)" fg:x="3723" fg:w="22"/><text x="44.6986%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (8 samples, 0.10%)</title><rect x="44.5464%" y="325" width="0.0954%" height="15" fill="rgb(230,226,3)" fg:x="3737" fg:w="8"/><text x="44.8655%" y="335.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="44.5464%" y="309" width="0.0954%" height="15" fill="rgb(222,13,42)" fg:x="3737" fg:w="8"/><text x="44.8655%" y="319.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="44.5464%" y="293" width="0.0954%" height="15" fill="rgb(247,180,54)" fg:x="3737" fg:w="8"/><text x="44.8655%" y="303.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="44.5584%" y="277" width="0.0834%" height="15" fill="rgb(205,96,16)" fg:x="3738" fg:w="7"/><text x="44.8775%" y="287.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (71 samples, 0.85%)</title><rect x="43.8074%" y="405" width="0.8463%" height="15" fill="rgb(205,100,21)" fg:x="3675" fg:w="71"/><text x="44.1265%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="44.3676%" y="389" width="0.2861%" height="15" fill="rgb(248,51,4)" fg:x="3722" fg:w="24"/><text x="44.6867%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (24 samples, 0.29%)</title><rect x="44.3676%" y="373" width="0.2861%" height="15" fill="rgb(217,197,30)" fg:x="3722" fg:w="24"/><text x="44.6867%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="44.3795%" y="357" width="0.2742%" height="15" fill="rgb(240,179,40)" fg:x="3723" fg:w="23"/><text x="44.6986%" y="367.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="44.6418%" y="341" width="0.0119%" height="15" fill="rgb(212,185,35)" fg:x="3745" fg:w="1"/><text x="44.9609%" y="351.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="44.6537%" y="341" width="0.0477%" height="15" fill="rgb(251,222,31)" fg:x="3746" fg:w="4"/><text x="44.9728%" y="351.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="44.6537%" y="325" width="0.0477%" height="15" fill="rgb(208,140,36)" fg:x="3746" fg:w="4"/><text x="44.9728%" y="335.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="44.6656%" y="309" width="0.0358%" height="15" fill="rgb(220,148,1)" fg:x="3747" fg:w="3"/><text x="44.9847%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="44.7014%" y="325" width="0.0119%" height="15" fill="rgb(254,4,28)" fg:x="3750" fg:w="1"/><text x="45.0205%" y="335.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="44.7014%" y="309" width="0.0119%" height="15" fill="rgb(222,185,44)" fg:x="3750" fg:w="1"/><text x="45.0205%" y="319.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="44.7014%" y="293" width="0.0119%" height="15" fill="rgb(215,74,39)" fg:x="3750" fg:w="1"/><text x="45.0205%" y="303.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="44.7252%" y="261" width="0.0119%" height="15" fill="rgb(247,86,4)" fg:x="3752" fg:w="1"/><text x="45.0443%" y="271.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="44.7252%" y="245" width="0.0119%" height="15" fill="rgb(231,105,32)" fg:x="3752" fg:w="1"/><text x="45.0443%" y="255.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="44.7252%" y="229" width="0.0119%" height="15" fill="rgb(222,65,35)" fg:x="3752" fg:w="1"/><text x="45.0443%" y="239.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="44.7252%" y="213" width="0.0119%" height="15" fill="rgb(218,145,35)" fg:x="3752" fg:w="1"/><text x="45.0443%" y="223.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="44.7372%" y="229" width="0.0715%" height="15" fill="rgb(208,7,15)" fg:x="3753" fg:w="6"/><text x="45.0563%" y="239.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="44.7372%" y="213" width="0.0715%" height="15" fill="rgb(209,83,13)" fg:x="3753" fg:w="6"/><text x="45.0563%" y="223.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="44.7372%" y="197" width="0.0715%" height="15" fill="rgb(218,3,10)" fg:x="3753" fg:w="6"/><text x="45.0563%" y="207.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="44.7372%" y="181" width="0.0715%" height="15" fill="rgb(211,219,4)" fg:x="3753" fg:w="6"/><text x="45.0563%" y="191.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="44.7372%" y="165" width="0.0715%" height="15" fill="rgb(228,194,12)" fg:x="3753" fg:w="6"/><text x="45.0563%" y="175.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="44.8087%" y="213" width="0.0119%" height="15" fill="rgb(210,175,7)" fg:x="3759" fg:w="1"/><text x="45.1278%" y="223.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="44.8087%" y="197" width="0.0119%" height="15" fill="rgb(243,132,6)" fg:x="3759" fg:w="1"/><text x="45.1278%" y="207.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (95 samples, 1.13%)</title><rect x="43.7001%" y="421" width="1.1324%" height="15" fill="rgb(207,72,18)" fg:x="3666" fg:w="95"/><text x="44.0192%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (15 samples, 0.18%)</title><rect x="44.6537%" y="405" width="0.1788%" height="15" fill="rgb(236,1,18)" fg:x="3746" fg:w="15"/><text x="44.9728%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="44.6537%" y="389" width="0.1788%" height="15" fill="rgb(227,0,18)" fg:x="3746" fg:w="15"/><text x="44.9728%" y="399.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (15 samples, 0.18%)</title><rect x="44.6537%" y="373" width="0.1788%" height="15" fill="rgb(247,37,5)" fg:x="3746" fg:w="15"/><text x="44.9728%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="44.6537%" y="357" width="0.1788%" height="15" fill="rgb(237,179,24)" fg:x="3746" fg:w="15"/><text x="44.9728%" y="367.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="44.7014%" y="341" width="0.1311%" height="15" fill="rgb(226,53,20)" fg:x="3750" fg:w="11"/><text x="45.0205%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="44.7133%" y="325" width="0.1192%" height="15" fill="rgb(247,75,7)" fg:x="3751" fg:w="10"/><text x="45.0324%" y="335.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="44.7133%" y="309" width="0.1192%" height="15" fill="rgb(233,96,12)" fg:x="3751" fg:w="10"/><text x="45.0324%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="44.7252%" y="293" width="0.1073%" height="15" fill="rgb(224,125,0)" fg:x="3752" fg:w="9"/><text x="45.0443%" y="303.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="44.7252%" y="277" width="0.1073%" height="15" fill="rgb(224,92,25)" fg:x="3752" fg:w="9"/><text x="45.0443%" y="287.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="44.7372%" y="261" width="0.0954%" height="15" fill="rgb(224,42,24)" fg:x="3753" fg:w="8"/><text x="45.0563%" y="271.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="44.7372%" y="245" width="0.0954%" height="15" fill="rgb(234,132,49)" fg:x="3753" fg:w="8"/><text x="45.0563%" y="255.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="44.8087%" y="229" width="0.0238%" height="15" fill="rgb(248,100,35)" fg:x="3759" fg:w="2"/><text x="45.1278%" y="239.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="44.8206%" y="213" width="0.0119%" height="15" fill="rgb(239,94,40)" fg:x="3760" fg:w="1"/><text x="45.1397%" y="223.50"/></g><g><title>parser::operator+ (753 samples, 8.98%)</title><rect x="35.9757%" y="725" width="8.9760%" height="15" fill="rgb(235,139,28)" fg:x="3018" fg:w="753"/><text x="36.2948%" y="735.50">..:operator+ </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (633 samples, 7.55%)</title><rect x="37.4061%" y="709" width="7.5456%" height="15" fill="rgb(217,144,7)" fg:x="3138" fg:w="633"/><text x="37.7252%" y="719.50">..anager </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (633 samples, 7.55%)</title><rect x="37.4061%" y="693" width="7.5456%" height="15" fill="rgb(227,55,4)" fg:x="3138" fg:w="633"/><text x="37.7252%" y="703.50">..function </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (521 samples, 6.21%)</title><rect x="38.7412%" y="677" width="6.2105%" height="15" fill="rgb(252,82,54)" fg:x="3250" fg:w="521"/><text x="39.0603%" y="687.50">..nager </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (505 samples, 6.02%)</title><rect x="38.9319%" y="661" width="6.0198%" height="15" fill="rgb(245,172,4)" fg:x="3266" fg:w="505"/><text x="39.2510%" y="671.50">..nction </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (346 samples, 4.12%)</title><rect x="40.8273%" y="645" width="4.1244%" height="15" fill="rgb(207,26,27)" fg:x="3425" fg:w="346"/><text x="41.1464%" y="655.50">..ger </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (338 samples, 4.03%)</title><rect x="40.9226%" y="629" width="4.0291%" height="15" fill="rgb(252,98,18)" fg:x="3433" fg:w="338"/><text x="41.2417%" y="639.50">..ion </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (242 samples, 2.88%)</title><rect x="42.0670%" y="613" width="2.8847%" height="15" fill="rgb(244,8,26)" fg:x="3529" fg:w="242"/><text x="42.3861%" y="623.50">..r </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (242 samples, 2.88%)</title><rect x="42.0670%" y="597" width="2.8847%" height="15" fill="rgb(237,173,45)" fg:x="3529" fg:w="242"/><text x="42.3861%" y="607.50">..on </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (203 samples, 2.42%)</title><rect x="42.5319%" y="581" width="2.4198%" height="15" fill="rgb(208,213,49)" fg:x="3568" fg:w="203"/><text x="42.8510%" y="591.50">.. </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (202 samples, 2.41%)</title><rect x="42.5438%" y="565" width="2.4079%" height="15" fill="rgb(212,122,37)" fg:x="3569" fg:w="202"/><text x="42.8629%" y="575.50">..n </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (183 samples, 2.18%)</title><rect x="42.7703%" y="549" width="2.1814%" height="15" fill="rgb(213,80,17)" fg:x="3588" fg:w="183"/><text x="43.0894%" y="559.50">.. </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (182 samples, 2.17%)</title><rect x="42.7822%" y="533" width="2.1695%" height="15" fill="rgb(206,210,43)" fg:x="3589" fg:w="182"/><text x="43.1013%" y="543.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (115 samples, 1.37%)</title><rect x="43.5809%" y="517" width="1.3708%" height="15" fill="rgb(229,214,3)" fg:x="3656" fg:w="115"/><text x="43.9000%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (115 samples, 1.37%)</title><rect x="43.5809%" y="501" width="1.3708%" height="15" fill="rgb(235,213,29)" fg:x="3656" fg:w="115"/><text x="43.9000%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (115 samples, 1.37%)</title><rect x="43.5809%" y="485" width="1.3708%" height="15" fill="rgb(248,135,26)" fg:x="3656" fg:w="115"/><text x="43.9000%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (106 samples, 1.26%)</title><rect x="43.6882%" y="469" width="1.2636%" height="15" fill="rgb(242,188,12)" fg:x="3665" fg:w="106"/><text x="44.0073%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (105 samples, 1.25%)</title><rect x="43.7001%" y="453" width="1.2516%" height="15" fill="rgb(245,38,12)" fg:x="3666" fg:w="105"/><text x="44.0192%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (105 samples, 1.25%)</title><rect x="43.7001%" y="437" width="1.2516%" height="15" fill="rgb(218,42,13)" fg:x="3666" fg:w="105"/><text x="44.0192%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (10 samples, 0.12%)</title><rect x="44.8325%" y="421" width="0.1192%" height="15" fill="rgb(238,132,49)" fg:x="3761" fg:w="10"/><text x="45.1516%" y="431.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="44.8444%" y="405" width="0.1073%" height="15" fill="rgb(209,196,19)" fg:x="3762" fg:w="9"/><text x="45.1635%" y="415.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="44.8444%" y="389" width="0.1073%" height="15" fill="rgb(244,131,22)" fg:x="3762" fg:w="9"/><text x="45.1635%" y="399.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="44.8802%" y="373" width="0.0715%" height="15" fill="rgb(223,18,34)" fg:x="3765" fg:w="6"/><text x="45.1993%" y="383.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="44.9517%" y="709" width="0.0119%" height="15" fill="rgb(252,124,54)" fg:x="3771" fg:w="1"/><text x="45.2708%" y="719.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="44.9517%" y="693" width="0.0119%" height="15" fill="rgb(229,106,42)" fg:x="3771" fg:w="1"/><text x="45.2708%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="44.9636%" y="677" width="0.0119%" height="15" fill="rgb(221,129,1)" fg:x="3772" fg:w="1"/><text x="45.2827%" y="687.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="44.9756%" y="677" width="0.0119%" height="15" fill="rgb(229,74,15)" fg:x="3773" fg:w="1"/><text x="45.2947%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="44.9875%" y="661" width="0.0119%" height="15" fill="rgb(210,206,50)" fg:x="3774" fg:w="1"/><text x="45.3066%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="44.9875%" y="645" width="0.0119%" height="15" fill="rgb(251,114,31)" fg:x="3774" fg:w="1"/><text x="45.3066%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="44.9994%" y="661" width="0.0119%" height="15" fill="rgb(215,225,28)" fg:x="3775" fg:w="1"/><text x="45.3185%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.0113%" y="629" width="0.0119%" height="15" fill="rgb(237,109,14)" fg:x="3776" fg:w="1"/><text x="45.3304%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.0113%" y="613" width="0.0119%" height="15" fill="rgb(230,13,37)" fg:x="3776" fg:w="1"/><text x="45.3304%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="45.0232%" y="613" width="0.0238%" height="15" fill="rgb(231,40,28)" fg:x="3777" fg:w="2"/><text x="45.3423%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.0352%" y="597" width="0.0119%" height="15" fill="rgb(231,202,18)" fg:x="3778" fg:w="1"/><text x="45.3543%" y="607.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="45.0471%" y="597" width="0.0238%" height="15" fill="rgb(225,33,18)" fg:x="3779" fg:w="2"/><text x="45.3662%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="45.0471%" y="581" width="0.0238%" height="15" fill="rgb(223,64,47)" fg:x="3779" fg:w="2"/><text x="45.3662%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="45.0471%" y="613" width="0.0358%" height="15" fill="rgb(234,114,13)" fg:x="3779" fg:w="3"/><text x="45.3662%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), parser::pop::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="45.0709%" y="597" width="0.0119%" height="15" fill="rgb(248,56,40)" fg:x="3781" fg:w="1"/><text x="45.3900%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="44.9636%" y="693" width="0.1311%" height="15" fill="rgb(221,194,21)" fg:x="3772" fg:w="11"/><text x="45.2827%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="44.9875%" y="677" width="0.1073%" height="15" fill="rgb(242,108,46)" fg:x="3774" fg:w="9"/><text x="45.3066%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="45.0113%" y="661" width="0.0834%" height="15" fill="rgb(220,106,10)" fg:x="3776" fg:w="7"/><text x="45.3304%" y="671.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (7 samples, 0.08%)</title><rect x="45.0113%" y="645" width="0.0834%" height="15" fill="rgb(211,88,4)" fg:x="3776" fg:w="7"/><text x="45.3304%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="45.0232%" y="629" width="0.0715%" height="15" fill="rgb(214,95,34)" fg:x="3777" fg:w="6"/><text x="45.3423%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="45.0828%" y="613" width="0.0119%" height="15" fill="rgb(250,160,33)" fg:x="3782" fg:w="1"/><text x="45.4019%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="45.0828%" y="597" width="0.0119%" height="15" fill="rgb(225,29,10)" fg:x="3782" fg:w="1"/><text x="45.4019%" y="607.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="45.0948%" y="677" width="0.0358%" height="15" fill="rgb(224,28,30)" fg:x="3783" fg:w="3"/><text x="45.4139%" y="687.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="45.1067%" y="661" width="0.0238%" height="15" fill="rgb(231,77,4)" fg:x="3784" fg:w="2"/><text x="45.4258%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="45.0948%" y="693" width="0.0477%" height="15" fill="rgb(209,63,21)" fg:x="3783" fg:w="4"/><text x="45.4139%" y="703.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose@plt (1 samples, 0.01%)</title><rect x="45.1305%" y="677" width="0.0119%" height="15" fill="rgb(226,22,11)" fg:x="3786" fg:w="1"/><text x="45.4496%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="45.1424%" y="693" width="0.0358%" height="15" fill="rgb(216,82,30)" fg:x="3787" fg:w="3"/><text x="45.4615%" y="703.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="45.1424%" y="677" width="0.0358%" height="15" fill="rgb(246,227,38)" fg:x="3787" fg:w="3"/><text x="45.4615%" y="687.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="45.1424%" y="661" width="0.0358%" height="15" fill="rgb(251,203,53)" fg:x="3787" fg:w="3"/><text x="45.4615%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="44.9636%" y="709" width="0.2265%" height="15" fill="rgb(254,101,1)" fg:x="3772" fg:w="19"/><text x="45.2827%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="45.1782%" y="693" width="0.0119%" height="15" fill="rgb(241,180,5)" fg:x="3790" fg:w="1"/><text x="45.4973%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.1782%" y="677" width="0.0119%" height="15" fill="rgb(218,168,4)" fg:x="3790" fg:w="1"/><text x="45.4973%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.1782%" y="661" width="0.0119%" height="15" fill="rgb(224,223,32)" fg:x="3790" fg:w="1"/><text x="45.4973%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.1901%" y="693" width="0.0119%" height="15" fill="rgb(236,106,22)" fg:x="3791" fg:w="1"/><text x="45.5092%" y="703.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.1901%" y="677" width="0.0119%" height="15" fill="rgb(206,121,5)" fg:x="3791" fg:w="1"/><text x="45.5092%" y="687.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="45.2021%" y="661" width="0.0119%" height="15" fill="rgb(233,87,28)" fg:x="3792" fg:w="1"/><text x="45.5212%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.2140%" y="645" width="0.0119%" height="15" fill="rgb(236,137,17)" fg:x="3793" fg:w="1"/><text x="45.5331%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.2140%" y="629" width="0.0119%" height="15" fill="rgb(209,183,38)" fg:x="3793" fg:w="1"/><text x="45.5331%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="45.2259%" y="645" width="0.0119%" height="15" fill="rgb(206,162,44)" fg:x="3794" fg:w="1"/><text x="45.5450%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="45.2378%" y="645" width="0.0119%" height="15" fill="rgb(237,70,39)" fg:x="3795" fg:w="1"/><text x="45.5569%" y="655.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="45.2497%" y="629" width="0.0119%" height="15" fill="rgb(212,176,5)" fg:x="3796" fg:w="1"/><text x="45.5688%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="45.2617%" y="629" width="0.0119%" height="15" fill="rgb(232,95,16)" fg:x="3797" fg:w="1"/><text x="45.5808%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="45.2736%" y="629" width="0.0119%" height="15" fill="rgb(219,115,35)" fg:x="3798" fg:w="1"/><text x="45.5927%" y="639.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="45.2855%" y="597" width="0.0358%" height="15" fill="rgb(251,67,27)" fg:x="3799" fg:w="3"/><text x="45.6046%" y="607.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="45.2855%" y="581" width="0.0358%" height="15" fill="rgb(222,95,40)" fg:x="3799" fg:w="3"/><text x="45.6046%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="45.3213%" y="597" width="0.0119%" height="15" fill="rgb(250,35,16)" fg:x="3802" fg:w="1"/><text x="45.6404%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="45.3213%" y="581" width="0.0119%" height="15" fill="rgb(224,86,44)" fg:x="3802" fg:w="1"/><text x="45.6404%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.3213%" y="565" width="0.0119%" height="15" fill="rgb(237,53,53)" fg:x="3802" fg:w="1"/><text x="45.6404%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.3213%" y="549" width="0.0119%" height="15" fill="rgb(208,171,33)" fg:x="3802" fg:w="1"/><text x="45.6404%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="45.3332%" y="597" width="0.0119%" height="15" fill="rgb(222,64,27)" fg:x="3803" fg:w="1"/><text x="45.6523%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="45.3332%" y="581" width="0.0119%" height="15" fill="rgb(221,121,35)" fg:x="3803" fg:w="1"/><text x="45.6523%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="45.3451%" y="597" width="0.0119%" height="15" fill="rgb(228,137,42)" fg:x="3804" fg:w="1"/><text x="45.6642%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.3451%" y="581" width="0.0119%" height="15" fill="rgb(227,54,21)" fg:x="3804" fg:w="1"/><text x="45.6642%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.3451%" y="565" width="0.0119%" height="15" fill="rgb(240,168,33)" fg:x="3804" fg:w="1"/><text x="45.6642%" y="575.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="45.3689%" y="517" width="0.0358%" height="15" fill="rgb(243,159,6)" fg:x="3806" fg:w="3"/><text x="45.6880%" y="527.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="45.3809%" y="501" width="0.0238%" height="15" fill="rgb(205,211,41)" fg:x="3807" fg:w="2"/><text x="45.7000%" y="511.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="45.3689%" y="565" width="0.0477%" height="15" fill="rgb(253,30,1)" fg:x="3806" fg:w="4"/><text x="45.6880%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="45.3689%" y="549" width="0.0477%" height="15" fill="rgb(226,80,18)" fg:x="3806" fg:w="4"/><text x="45.6880%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="45.3689%" y="533" width="0.0477%" height="15" fill="rgb(253,156,46)" fg:x="3806" fg:w="4"/><text x="45.6880%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="45.4047%" y="517" width="0.0119%" height="15" fill="rgb(248,87,27)" fg:x="3809" fg:w="1"/><text x="45.7238%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.4047%" y="501" width="0.0119%" height="15" fill="rgb(227,122,2)" fg:x="3809" fg:w="1"/><text x="45.7238%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="45.2855%" y="629" width="0.1430%" height="15" fill="rgb(229,94,39)" fg:x="3799" fg:w="12"/><text x="45.6046%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="45.2855%" y="613" width="0.1430%" height="15" fill="rgb(225,173,31)" fg:x="3799" fg:w="12"/><text x="45.6046%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="45.3570%" y="597" width="0.0715%" height="15" fill="rgb(239,176,30)" fg:x="3805" fg:w="6"/><text x="45.6761%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="45.3570%" y="581" width="0.0715%" height="15" fill="rgb(212,104,21)" fg:x="3805" fg:w="6"/><text x="45.6761%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="45.4166%" y="565" width="0.0119%" height="15" fill="rgb(240,209,40)" fg:x="3810" fg:w="1"/><text x="45.7357%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.4166%" y="549" width="0.0119%" height="15" fill="rgb(234,195,5)" fg:x="3810" fg:w="1"/><text x="45.7357%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.4166%" y="533" width="0.0119%" height="15" fill="rgb(238,213,1)" fg:x="3810" fg:w="1"/><text x="45.7357%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="45.4285%" y="629" width="0.0119%" height="15" fill="rgb(235,182,54)" fg:x="3811" fg:w="1"/><text x="45.7476%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="45.4285%" y="613" width="0.0119%" height="15" fill="rgb(229,50,46)" fg:x="3811" fg:w="1"/><text x="45.7476%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="45.2497%" y="645" width="0.2146%" height="15" fill="rgb(219,145,13)" fg:x="3796" fg:w="18"/><text x="45.5688%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="45.4405%" y="629" width="0.0238%" height="15" fill="rgb(220,226,10)" fg:x="3812" fg:w="2"/><text x="45.7596%" y="639.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="45.4405%" y="613" width="0.0238%" height="15" fill="rgb(248,47,30)" fg:x="3812" fg:w="2"/><text x="45.7596%" y="623.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="45.4405%" y="597" width="0.0238%" height="15" fill="rgb(231,209,44)" fg:x="3812" fg:w="2"/><text x="45.7596%" y="607.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="45.4762%" y="629" width="0.0119%" height="15" fill="rgb(209,80,30)" fg:x="3815" fg:w="1"/><text x="45.7953%" y="639.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="45.5001%" y="565" width="0.0358%" height="15" fill="rgb(232,9,14)" fg:x="3817" fg:w="3"/><text x="45.8192%" y="575.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="45.5120%" y="549" width="0.0238%" height="15" fill="rgb(243,91,43)" fg:x="3818" fg:w="2"/><text x="45.8311%" y="559.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="45.5477%" y="533" width="0.0238%" height="15" fill="rgb(231,90,52)" fg:x="3821" fg:w="2"/><text x="45.8668%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.5597%" y="517" width="0.0119%" height="15" fill="rgb(253,192,44)" fg:x="3822" fg:w="1"/><text x="45.8788%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="45.5716%" y="517" width="0.0358%" height="15" fill="rgb(241,66,31)" fg:x="3823" fg:w="3"/><text x="45.8907%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (3 samples, 0.04%)</title><rect x="45.5716%" y="501" width="0.0358%" height="15" fill="rgb(235,81,37)" fg:x="3823" fg:w="3"/><text x="45.8907%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.6073%" y="501" width="0.0119%" height="15" fill="rgb(223,221,9)" fg:x="3826" fg:w="1"/><text x="45.9264%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.6073%" y="485" width="0.0119%" height="15" fill="rgb(242,180,7)" fg:x="3826" fg:w="1"/><text x="45.9264%" y="495.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="45.6193%" y="485" width="0.0238%" height="15" fill="rgb(243,78,19)" fg:x="3827" fg:w="2"/><text x="45.9384%" y="495.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="45.6193%" y="469" width="0.0238%" height="15" fill="rgb(233,23,17)" fg:x="3827" fg:w="2"/><text x="45.9384%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="45.5001%" y="581" width="0.1550%" height="15" fill="rgb(252,122,45)" fg:x="3817" fg:w="13"/><text x="45.8192%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="45.5358%" y="565" width="0.1192%" height="15" fill="rgb(247,108,20)" fg:x="3820" fg:w="10"/><text x="45.8549%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="45.5477%" y="549" width="0.1073%" height="15" fill="rgb(235,84,21)" fg:x="3821" fg:w="9"/><text x="45.8668%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="45.5716%" y="533" width="0.0834%" height="15" fill="rgb(247,129,10)" fg:x="3823" fg:w="7"/><text x="45.8907%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="45.6073%" y="517" width="0.0477%" height="15" fill="rgb(208,173,14)" fg:x="3826" fg:w="4"/><text x="45.9264%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="45.6193%" y="501" width="0.0358%" height="15" fill="rgb(236,31,38)" fg:x="3827" fg:w="3"/><text x="45.9384%" y="511.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="45.6431%" y="485" width="0.0119%" height="15" fill="rgb(232,65,17)" fg:x="3829" fg:w="1"/><text x="45.9622%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="45.5001%" y="597" width="0.1669%" height="15" fill="rgb(224,45,49)" fg:x="3817" fg:w="14"/><text x="45.8192%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="45.6550%" y="581" width="0.0119%" height="15" fill="rgb(225,2,53)" fg:x="3830" fg:w="1"/><text x="45.9741%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.6550%" y="565" width="0.0119%" height="15" fill="rgb(248,210,53)" fg:x="3830" fg:w="1"/><text x="45.9741%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.6550%" y="549" width="0.0119%" height="15" fill="rgb(211,1,30)" fg:x="3830" fg:w="1"/><text x="45.9741%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="45.5001%" y="613" width="0.1788%" height="15" fill="rgb(224,96,15)" fg:x="3817" fg:w="15"/><text x="45.8192%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="45.6669%" y="597" width="0.0119%" height="15" fill="rgb(252,45,11)" fg:x="3831" fg:w="1"/><text x="45.9860%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.6669%" y="581" width="0.0119%" height="15" fill="rgb(220,125,38)" fg:x="3831" fg:w="1"/><text x="45.9860%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.6669%" y="565" width="0.0119%" height="15" fill="rgb(243,161,33)" fg:x="3831" fg:w="1"/><text x="45.9860%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="45.4881%" y="629" width="0.2146%" height="15" fill="rgb(248,197,34)" fg:x="3816" fg:w="18"/><text x="45.8072%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="45.6789%" y="613" width="0.0238%" height="15" fill="rgb(228,165,23)" fg:x="3832" fg:w="2"/><text x="45.9980%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.6908%" y="597" width="0.0119%" height="15" fill="rgb(236,94,38)" fg:x="3833" fg:w="1"/><text x="46.0099%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.6908%" y="581" width="0.0119%" height="15" fill="rgb(220,13,23)" fg:x="3833" fg:w="1"/><text x="46.0099%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.7027%" y="613" width="0.0119%" height="15" fill="rgb(234,26,39)" fg:x="3834" fg:w="1"/><text x="46.0218%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.7027%" y="597" width="0.0119%" height="15" fill="rgb(205,117,44)" fg:x="3834" fg:w="1"/><text x="46.0218%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (22 samples, 0.26%)</title><rect x="45.4643%" y="645" width="0.2622%" height="15" fill="rgb(250,42,2)" fg:x="3814" fg:w="22"/><text x="45.7834%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="45.7027%" y="629" width="0.0238%" height="15" fill="rgb(223,83,14)" fg:x="3834" fg:w="2"/><text x="46.0218%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="45.7146%" y="613" width="0.0119%" height="15" fill="rgb(241,147,50)" fg:x="3835" fg:w="1"/><text x="46.0337%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (46 samples, 0.55%)</title><rect x="45.1901%" y="709" width="0.5483%" height="15" fill="rgb(218,90,6)" fg:x="3791" fg:w="46"/><text x="45.5092%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (45 samples, 0.54%)</title><rect x="45.2021%" y="693" width="0.5364%" height="15" fill="rgb(210,191,5)" fg:x="3792" fg:w="45"/><text x="45.5212%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (45 samples, 0.54%)</title><rect x="45.2021%" y="677" width="0.5364%" height="15" fill="rgb(225,139,19)" fg:x="3792" fg:w="45"/><text x="45.5212%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (44 samples, 0.52%)</title><rect x="45.2140%" y="661" width="0.5245%" height="15" fill="rgb(210,1,33)" fg:x="3793" fg:w="44"/><text x="45.5331%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="45.7265%" y="645" width="0.0119%" height="15" fill="rgb(213,50,3)" fg:x="3836" fg:w="1"/><text x="46.0456%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.7265%" y="629" width="0.0119%" height="15" fill="rgb(234,227,4)" fg:x="3836" fg:w="1"/><text x="46.0456%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.7265%" y="613" width="0.0119%" height="15" fill="rgb(246,63,5)" fg:x="3836" fg:w="1"/><text x="46.0456%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (68 samples, 0.81%)</title><rect x="44.9517%" y="725" width="0.8106%" height="15" fill="rgb(245,136,27)" fg:x="3771" fg:w="68"/><text x="45.2708%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="45.7385%" y="709" width="0.0238%" height="15" fill="rgb(247,199,27)" fg:x="3837" fg:w="2"/><text x="46.0576%" y="719.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="45.7385%" y="693" width="0.0238%" height="15" fill="rgb(252,158,49)" fg:x="3837" fg:w="2"/><text x="46.0576%" y="703.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="45.7385%" y="677" width="0.0238%" height="15" fill="rgb(254,73,1)" fg:x="3837" fg:w="2"/><text x="46.0576%" y="687.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="45.7623%" y="709" width="0.0238%" height="15" fill="rgb(248,93,19)" fg:x="3839" fg:w="2"/><text x="46.0814%" y="719.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="45.7623%" y="693" width="0.0238%" height="15" fill="rgb(206,67,5)" fg:x="3839" fg:w="2"/><text x="46.0814%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.7861%" y="693" width="0.0119%" height="15" fill="rgb(209,210,4)" fg:x="3841" fg:w="1"/><text x="46.1052%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.7981%" y="677" width="0.0119%" height="15" fill="rgb(214,185,36)" fg:x="3842" fg:w="1"/><text x="46.1172%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.7981%" y="661" width="0.0119%" height="15" fill="rgb(233,191,26)" fg:x="3842" fg:w="1"/><text x="46.1172%" y="671.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="45.8100%" y="677" width="0.0119%" height="15" fill="rgb(248,94,17)" fg:x="3843" fg:w="1"/><text x="46.1291%" y="687.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="45.8338%" y="645" width="0.0358%" height="15" fill="rgb(250,64,4)" fg:x="3845" fg:w="3"/><text x="46.1529%" y="655.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="45.8338%" y="629" width="0.0358%" height="15" fill="rgb(218,41,53)" fg:x="3845" fg:w="3"/><text x="46.1529%" y="639.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="45.8696%" y="645" width="0.0119%" height="15" fill="rgb(251,176,28)" fg:x="3848" fg:w="1"/><text x="46.1887%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="45.8815%" y="645" width="0.0119%" height="15" fill="rgb(247,22,9)" fg:x="3849" fg:w="1"/><text x="46.2006%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.8934%" y="629" width="0.0119%" height="15" fill="rgb(218,201,14)" fg:x="3850" fg:w="1"/><text x="46.2125%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="45.8934%" y="645" width="0.0238%" height="15" fill="rgb(218,94,10)" fg:x="3850" fg:w="2"/><text x="46.2125%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="45.9054%" y="629" width="0.0119%" height="15" fill="rgb(222,183,52)" fg:x="3851" fg:w="1"/><text x="46.2245%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.9054%" y="613" width="0.0119%" height="15" fill="rgb(242,140,25)" fg:x="3851" fg:w="1"/><text x="46.2245%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.9054%" y="597" width="0.0119%" height="15" fill="rgb(235,197,38)" fg:x="3851" fg:w="1"/><text x="46.2245%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="45.8219%" y="661" width="0.1073%" height="15" fill="rgb(237,136,15)" fg:x="3844" fg:w="9"/><text x="46.1410%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="45.9173%" y="645" width="0.0119%" height="15" fill="rgb(223,44,49)" fg:x="3852" fg:w="1"/><text x="46.2364%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.9173%" y="629" width="0.0119%" height="15" fill="rgb(227,71,15)" fg:x="3852" fg:w="1"/><text x="46.2364%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.9173%" y="613" width="0.0119%" height="15" fill="rgb(225,153,20)" fg:x="3852" fg:w="1"/><text x="46.2364%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="45.8219%" y="677" width="0.1430%" height="15" fill="rgb(210,190,26)" fg:x="3844" fg:w="12"/><text x="46.1410%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="45.9292%" y="661" width="0.0358%" height="15" fill="rgb(223,147,5)" fg:x="3853" fg:w="3"/><text x="46.2483%" y="671.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="45.9292%" y="645" width="0.0358%" height="15" fill="rgb(207,14,23)" fg:x="3853" fg:w="3"/><text x="46.2483%" y="655.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="45.9411%" y="629" width="0.0238%" height="15" fill="rgb(211,195,53)" fg:x="3854" fg:w="2"/><text x="46.2602%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="45.9650%" y="677" width="0.0119%" height="15" fill="rgb(237,75,46)" fg:x="3856" fg:w="1"/><text x="46.2841%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.9650%" y="661" width="0.0119%" height="15" fill="rgb(254,55,14)" fg:x="3856" fg:w="1"/><text x="46.2841%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.9650%" y="645" width="0.0119%" height="15" fill="rgb(230,185,30)" fg:x="3856" fg:w="1"/><text x="46.2841%" y="655.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="45.9769%" y="661" width="0.0358%" height="15" fill="rgb(220,14,11)" fg:x="3857" fg:w="3"/><text x="46.2960%" y="671.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="45.9769%" y="645" width="0.0358%" height="15" fill="rgb(215,169,44)" fg:x="3857" fg:w="3"/><text x="46.2960%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (20 samples, 0.24%)</title><rect x="45.7981%" y="693" width="0.2384%" height="15" fill="rgb(253,203,20)" fg:x="3842" fg:w="20"/><text x="46.1172%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="45.9769%" y="677" width="0.0596%" height="15" fill="rgb(229,225,17)" fg:x="3857" fg:w="5"/><text x="46.2960%" y="687.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="46.0126%" y="661" width="0.0238%" height="15" fill="rgb(236,76,26)" fg:x="3860" fg:w="2"/><text x="46.3317%" y="671.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="46.0365%" y="677" width="0.0119%" height="15" fill="rgb(234,15,30)" fg:x="3862" fg:w="1"/><text x="46.3556%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="46.0484%" y="677" width="0.0238%" height="15" fill="rgb(211,113,48)" fg:x="3863" fg:w="2"/><text x="46.3675%" y="687.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="46.0484%" y="661" width="0.0238%" height="15" fill="rgb(221,31,36)" fg:x="3863" fg:w="2"/><text x="46.3675%" y="671.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="46.0484%" y="645" width="0.0238%" height="15" fill="rgb(215,118,52)" fg:x="3863" fg:w="2"/><text x="46.3675%" y="655.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="46.0842%" y="629" width="0.0358%" height="15" fill="rgb(241,151,27)" fg:x="3866" fg:w="3"/><text x="46.4033%" y="639.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="46.0842%" y="613" width="0.0358%" height="15" fill="rgb(253,51,3)" fg:x="3866" fg:w="3"/><text x="46.4033%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="46.1199%" y="629" width="0.0238%" height="15" fill="rgb(216,201,24)" fg:x="3869" fg:w="2"/><text x="46.4390%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="46.1438%" y="613" width="0.0119%" height="15" fill="rgb(231,107,4)" fg:x="3871" fg:w="1"/><text x="46.4629%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="46.1438%" y="597" width="0.0119%" height="15" fill="rgb(243,97,54)" fg:x="3871" fg:w="1"/><text x="46.4629%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="46.1557%" y="597" width="0.0119%" height="15" fill="rgb(221,32,51)" fg:x="3872" fg:w="1"/><text x="46.4748%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="46.1557%" y="581" width="0.0119%" height="15" fill="rgb(218,171,35)" fg:x="3872" fg:w="1"/><text x="46.4748%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="46.1676%" y="597" width="0.0119%" height="15" fill="rgb(214,20,53)" fg:x="3873" fg:w="1"/><text x="46.4867%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="46.1795%" y="581" width="0.0119%" height="15" fill="rgb(239,9,52)" fg:x="3874" fg:w="1"/><text x="46.4986%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="46.1795%" y="565" width="0.0119%" height="15" fill="rgb(215,114,45)" fg:x="3874" fg:w="1"/><text x="46.4986%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="46.1914%" y="581" width="0.0119%" height="15" fill="rgb(208,118,9)" fg:x="3875" fg:w="1"/><text x="46.5105%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="46.1914%" y="565" width="0.0119%" height="15" fill="rgb(235,7,39)" fg:x="3875" fg:w="1"/><text x="46.5105%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="46.1914%" y="549" width="0.0119%" height="15" fill="rgb(243,225,15)" fg:x="3875" fg:w="1"/><text x="46.5105%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="46.2034%" y="565" width="0.0119%" height="15" fill="rgb(225,216,18)" fg:x="3876" fg:w="1"/><text x="46.5225%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="46.2034%" y="549" width="0.0119%" height="15" fill="rgb(233,36,38)" fg:x="3876" fg:w="1"/><text x="46.5225%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="46.2034%" y="533" width="0.0119%" height="15" fill="rgb(239,88,23)" fg:x="3876" fg:w="1"/><text x="46.5225%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="46.2153%" y="549" width="0.0119%" height="15" fill="rgb(219,181,35)" fg:x="3877" fg:w="1"/><text x="46.5344%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="46.2153%" y="533" width="0.0119%" height="15" fill="rgb(215,18,46)" fg:x="3877" fg:w="1"/><text x="46.5344%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="46.2034%" y="581" width="0.0358%" height="15" fill="rgb(241,38,11)" fg:x="3876" fg:w="3"/><text x="46.5225%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="46.2153%" y="565" width="0.0238%" height="15" fill="rgb(248,169,45)" fg:x="3877" fg:w="2"/><text x="46.5344%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="46.2272%" y="549" width="0.0119%" height="15" fill="rgb(239,50,49)" fg:x="3878" fg:w="1"/><text x="46.5463%" y="559.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="46.2391%" y="549" width="0.0238%" height="15" fill="rgb(231,96,31)" fg:x="3879" fg:w="2"/><text x="46.5582%" y="559.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="46.2391%" y="533" width="0.0238%" height="15" fill="rgb(224,193,37)" fg:x="3879" fg:w="2"/><text x="46.5582%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="46.2630%" y="517" width="0.0119%" height="15" fill="rgb(227,153,50)" fg:x="3881" fg:w="1"/><text x="46.5821%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="46.1557%" y="613" width="0.1550%" height="15" fill="rgb(249,228,3)" fg:x="3872" fg:w="13"/><text x="46.4748%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="46.1795%" y="597" width="0.1311%" height="15" fill="rgb(219,164,43)" fg:x="3874" fg:w="11"/><text x="46.4986%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="46.2391%" y="581" width="0.0715%" height="15" fill="rgb(216,45,41)" fg:x="3879" fg:w="6"/><text x="46.5582%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="46.2391%" y="565" width="0.0715%" height="15" fill="rgb(210,226,51)" fg:x="3879" fg:w="6"/><text x="46.5582%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="46.2630%" y="549" width="0.0477%" height="15" fill="rgb(209,117,49)" fg:x="3881" fg:w="4"/><text x="46.5821%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="46.2630%" y="533" width="0.0477%" height="15" fill="rgb(206,196,24)" fg:x="3881" fg:w="4"/><text x="46.5821%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="46.2749%" y="517" width="0.0358%" height="15" fill="rgb(253,218,3)" fg:x="3882" fg:w="3"/><text x="46.5940%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="46.2749%" y="501" width="0.0358%" height="15" fill="rgb(252,166,2)" fg:x="3882" fg:w="3"/><text x="46.5940%" y="511.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="46.2868%" y="485" width="0.0238%" height="15" fill="rgb(236,218,26)" fg:x="3883" fg:w="2"/><text x="46.6059%" y="495.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="46.2868%" y="469" width="0.0238%" height="15" fill="rgb(254,84,19)" fg:x="3883" fg:w="2"/><text x="46.6059%" y="479.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="46.3106%" y="597" width="0.0358%" height="15" fill="rgb(219,137,29)" fg:x="3885" fg:w="3"/><text x="46.6297%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="46.3226%" y="581" width="0.0238%" height="15" fill="rgb(227,47,52)" fg:x="3886" fg:w="2"/><text x="46.6417%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (5 samples, 0.06%)</title><rect x="46.3106%" y="613" width="0.0596%" height="15" fill="rgb(229,167,24)" fg:x="3885" fg:w="5"/><text x="46.6297%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="46.3464%" y="597" width="0.0238%" height="15" fill="rgb(233,164,1)" fg:x="3888" fg:w="2"/><text x="46.6655%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (20 samples, 0.24%)</title><rect x="46.1438%" y="629" width="0.2384%" height="15" fill="rgb(218,88,48)" fg:x="3871" fg:w="20"/><text x="46.4629%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="46.3702%" y="613" width="0.0119%" height="15" fill="rgb(226,214,24)" fg:x="3890" fg:w="1"/><text x="46.6893%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="46.3702%" y="597" width="0.0119%" height="15" fill="rgb(233,29,12)" fg:x="3890" fg:w="1"/><text x="46.6893%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="46.3702%" y="581" width="0.0119%" height="15" fill="rgb(219,120,34)" fg:x="3890" fg:w="1"/><text x="46.6893%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="46.3822%" y="613" width="0.0119%" height="15" fill="rgb(226,78,44)" fg:x="3891" fg:w="1"/><text x="46.7013%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="46.3822%" y="597" width="0.0119%" height="15" fill="rgb(240,15,48)" fg:x="3891" fg:w="1"/><text x="46.7013%" y="607.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="46.3941%" y="581" width="0.0358%" height="15" fill="rgb(253,176,7)" fg:x="3892" fg:w="3"/><text x="46.7132%" y="591.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="46.3941%" y="565" width="0.0358%" height="15" fill="rgb(206,166,28)" fg:x="3892" fg:w="3"/><text x="46.7132%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="46.4298%" y="565" width="0.0119%" height="15" fill="rgb(241,53,51)" fg:x="3895" fg:w="1"/><text x="46.7489%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="46.4298%" y="549" width="0.0119%" height="15" fill="rgb(249,112,30)" fg:x="3895" fg:w="1"/><text x="46.7489%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="46.4418%" y="565" width="0.0119%" height="15" fill="rgb(217,85,30)" fg:x="3896" fg:w="1"/><text x="46.7609%" y="575.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="46.4537%" y="533" width="0.0238%" height="15" fill="rgb(233,49,7)" fg:x="3897" fg:w="2"/><text x="46.7728%" y="543.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="46.4537%" y="517" width="0.0238%" height="15" fill="rgb(234,109,9)" fg:x="3897" fg:w="2"/><text x="46.7728%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="46.4775%" y="517" width="0.0119%" height="15" fill="rgb(253,95,22)" fg:x="3899" fg:w="1"/><text x="46.7966%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="46.4895%" y="501" width="0.0119%" height="15" fill="rgb(233,176,25)" fg:x="3900" fg:w="1"/><text x="46.8086%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="46.4895%" y="485" width="0.0119%" height="15" fill="rgb(236,33,39)" fg:x="3900" fg:w="1"/><text x="46.8086%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="46.5014%" y="501" width="0.0238%" height="15" fill="rgb(223,226,42)" fg:x="3901" fg:w="2"/><text x="46.8205%" y="511.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="46.5014%" y="485" width="0.0238%" height="15" fill="rgb(216,99,33)" fg:x="3901" fg:w="2"/><text x="46.8205%" y="495.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="46.5014%" y="469" width="0.0238%" height="15" fill="rgb(235,84,23)" fg:x="3901" fg:w="2"/><text x="46.8205%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="46.4537%" y="565" width="0.0954%" height="15" fill="rgb(232,2,27)" fg:x="3897" fg:w="8"/><text x="46.7728%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="46.4537%" y="549" width="0.0954%" height="15" fill="rgb(241,23,22)" fg:x="3897" fg:w="8"/><text x="46.7728%" y="559.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="46.4775%" y="533" width="0.0715%" height="15" fill="rgb(211,73,27)" fg:x="3899" fg:w="6"/><text x="46.7966%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="46.4895%" y="517" width="0.0596%" height="15" fill="rgb(235,109,49)" fg:x="3900" fg:w="5"/><text x="46.8086%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="46.5252%" y="501" width="0.0238%" height="15" fill="rgb(230,99,29)" fg:x="3903" fg:w="2"/><text x="46.8443%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="46.5252%" y="485" width="0.0238%" height="15" fill="rgb(245,199,7)" fg:x="3903" fg:w="2"/><text x="46.8443%" y="495.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="46.5252%" y="469" width="0.0238%" height="15" fill="rgb(217,179,10)" fg:x="3903" fg:w="2"/><text x="46.8443%" y="479.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="46.5252%" y="453" width="0.0238%" height="15" fill="rgb(254,99,47)" fg:x="3903" fg:w="2"/><text x="46.8443%" y="463.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="46.5491%" y="549" width="0.0119%" height="15" fill="rgb(251,121,7)" fg:x="3905" fg:w="1"/><text x="46.8682%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="46.5491%" y="533" width="0.0119%" height="15" fill="rgb(250,177,26)" fg:x="3905" fg:w="1"/><text x="46.8682%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="46.4298%" y="581" width="0.1430%" height="15" fill="rgb(232,88,15)" fg:x="3895" fg:w="12"/><text x="46.7489%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="46.5491%" y="565" width="0.0238%" height="15" fill="rgb(251,54,54)" fg:x="3905" fg:w="2"/><text x="46.8682%" y="575.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="46.5610%" y="549" width="0.0119%" height="15" fill="rgb(208,177,15)" fg:x="3906" fg:w="1"/><text x="46.8801%" y="559.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="46.5729%" y="565" width="0.0238%" height="15" fill="rgb(205,97,32)" fg:x="3907" fg:w="2"/><text x="46.8920%" y="575.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="46.5729%" y="549" width="0.0238%" height="15" fill="rgb(217,192,13)" fg:x="3907" fg:w="2"/><text x="46.8920%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="46.3941%" y="613" width="0.2503%" height="15" fill="rgb(215,163,41)" fg:x="3892" fg:w="21"/><text x="46.7132%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="46.3941%" y="597" width="0.2503%" height="15" fill="rgb(246,83,29)" fg:x="3892" fg:w="21"/><text x="46.7132%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="46.5729%" y="581" width="0.0715%" height="15" fill="rgb(219,2,45)" fg:x="3907" fg:w="6"/><text x="46.8920%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="46.5967%" y="565" width="0.0477%" height="15" fill="rgb(242,215,33)" fg:x="3909" fg:w="4"/><text x="46.9158%" y="575.50"/></g><g><title>__GI___libc_free (4 samples, 0.05%)</title><rect x="46.5967%" y="549" width="0.0477%" height="15" fill="rgb(217,1,6)" fg:x="3909" fg:w="4"/><text x="46.9158%" y="559.50"/></g><g><title>_int_free (4 samples, 0.05%)</title><rect x="46.5967%" y="533" width="0.0477%" height="15" fill="rgb(207,85,52)" fg:x="3909" fg:w="4"/><text x="46.9158%" y="543.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="46.6444%" y="597" width="0.0238%" height="15" fill="rgb(231,171,19)" fg:x="3913" fg:w="2"/><text x="46.9635%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="46.6444%" y="581" width="0.0238%" height="15" fill="rgb(207,128,4)" fg:x="3913" fg:w="2"/><text x="46.9635%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="46.3822%" y="629" width="0.3099%" height="15" fill="rgb(219,208,4)" fg:x="3891" fg:w="26"/><text x="46.7013%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="46.6444%" y="613" width="0.0477%" height="15" fill="rgb(235,161,42)" fg:x="3913" fg:w="4"/><text x="46.9635%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="46.6683%" y="597" width="0.0238%" height="15" fill="rgb(247,218,18)" fg:x="3915" fg:w="2"/><text x="46.9874%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (56 samples, 0.67%)</title><rect x="46.0365%" y="693" width="0.6675%" height="15" fill="rgb(232,114,51)" fg:x="3862" fg:w="56"/><text x="46.3556%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (53 samples, 0.63%)</title><rect x="46.0722%" y="677" width="0.6318%" height="15" fill="rgb(222,95,3)" fg:x="3865" fg:w="53"/><text x="46.3913%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (53 samples, 0.63%)</title><rect x="46.0722%" y="661" width="0.6318%" height="15" fill="rgb(240,65,29)" fg:x="3865" fg:w="53"/><text x="46.3913%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (53 samples, 0.63%)</title><rect x="46.0722%" y="645" width="0.6318%" height="15" fill="rgb(249,209,20)" fg:x="3865" fg:w="53"/><text x="46.3913%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="46.6921%" y="629" width="0.0119%" height="15" fill="rgb(241,48,37)" fg:x="3917" fg:w="1"/><text x="47.0112%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="46.6921%" y="613" width="0.0119%" height="15" fill="rgb(230,140,42)" fg:x="3917" fg:w="1"/><text x="47.0112%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="46.6921%" y="597" width="0.0119%" height="15" fill="rgb(230,176,45)" fg:x="3917" fg:w="1"/><text x="47.0112%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (81 samples, 0.97%)</title><rect x="45.7861%" y="709" width="0.9656%" height="15" fill="rgb(245,112,21)" fg:x="3841" fg:w="81"/><text x="46.1052%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="46.7040%" y="693" width="0.0477%" height="15" fill="rgb(207,183,35)" fg:x="3918" fg:w="4"/><text x="47.0231%" y="703.50"/></g><g><title>std::_Function_base::~_Function_base (3 samples, 0.04%)</title><rect x="46.7159%" y="677" width="0.0358%" height="15" fill="rgb(227,44,33)" fg:x="3919" fg:w="3"/><text x="47.0350%" y="687.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="46.7517%" y="693" width="0.0358%" height="15" fill="rgb(246,120,21)" fg:x="3922" fg:w="3"/><text x="47.0708%" y="703.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="46.7517%" y="677" width="0.0358%" height="15" fill="rgb(235,57,52)" fg:x="3922" fg:w="3"/><text x="47.0708%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="46.7875%" y="677" width="0.0119%" height="15" fill="rgb(238,84,10)" fg:x="3925" fg:w="1"/><text x="47.1066%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="46.7875%" y="661" width="0.0119%" height="15" fill="rgb(251,200,32)" fg:x="3925" fg:w="1"/><text x="47.1066%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="46.7994%" y="661" width="0.0119%" height="15" fill="rgb(247,159,13)" fg:x="3926" fg:w="1"/><text x="47.1185%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="46.7994%" y="645" width="0.0119%" height="15" fill="rgb(238,64,4)" fg:x="3926" fg:w="1"/><text x="47.1185%" y="655.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="46.8113%" y="645" width="0.0238%" height="15" fill="rgb(221,131,51)" fg:x="3927" fg:w="2"/><text x="47.1304%" y="655.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="46.8113%" y="629" width="0.0238%" height="15" fill="rgb(242,5,29)" fg:x="3927" fg:w="2"/><text x="47.1304%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="46.7994%" y="677" width="0.0477%" height="15" fill="rgb(214,130,32)" fg:x="3926" fg:w="4"/><text x="47.1185%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="46.8113%" y="661" width="0.0358%" height="15" fill="rgb(244,210,16)" fg:x="3927" fg:w="3"/><text x="47.1304%" y="671.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="46.8351%" y="645" width="0.0119%" height="15" fill="rgb(234,48,26)" fg:x="3929" fg:w="1"/><text x="47.1542%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="46.8590%" y="661" width="0.0238%" height="15" fill="rgb(231,82,38)" fg:x="3931" fg:w="2"/><text x="47.1781%" y="671.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="46.8590%" y="645" width="0.0238%" height="15" fill="rgb(254,128,41)" fg:x="3931" fg:w="2"/><text x="47.1781%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="46.8709%" y="629" width="0.0119%" height="15" fill="rgb(212,73,49)" fg:x="3932" fg:w="1"/><text x="47.1900%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="46.8828%" y="645" width="0.0119%" height="15" fill="rgb(205,62,54)" fg:x="3933" fg:w="1"/><text x="47.2019%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="46.8947%" y="629" width="0.0119%" height="15" fill="rgb(228,0,8)" fg:x="3934" fg:w="1"/><text x="47.2138%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="46.8947%" y="613" width="0.0119%" height="15" fill="rgb(251,28,17)" fg:x="3934" fg:w="1"/><text x="47.2138%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="46.9067%" y="613" width="0.0119%" height="15" fill="rgb(238,105,27)" fg:x="3935" fg:w="1"/><text x="47.2258%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="46.9067%" y="597" width="0.0119%" height="15" fill="rgb(237,216,33)" fg:x="3935" fg:w="1"/><text x="47.2258%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (3 samples, 0.04%)</title><rect x="46.9186%" y="613" width="0.0358%" height="15" fill="rgb(229,228,25)" fg:x="3936" fg:w="3"/><text x="47.2377%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="46.9543%" y="597" width="0.0238%" height="15" fill="rgb(233,75,23)" fg:x="3939" fg:w="2"/><text x="47.2734%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="46.9543%" y="581" width="0.0238%" height="15" fill="rgb(231,207,16)" fg:x="3939" fg:w="2"/><text x="47.2734%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="46.9782%" y="597" width="0.0119%" height="15" fill="rgb(231,191,45)" fg:x="3941" fg:w="1"/><text x="47.2973%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="46.9901%" y="581" width="0.0119%" height="15" fill="rgb(224,133,17)" fg:x="3942" fg:w="1"/><text x="47.3092%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="46.9901%" y="565" width="0.0119%" height="15" fill="rgb(209,178,27)" fg:x="3942" fg:w="1"/><text x="47.3092%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.0020%" y="565" width="0.0119%" height="15" fill="rgb(218,37,11)" fg:x="3943" fg:w="1"/><text x="47.3211%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.0020%" y="549" width="0.0119%" height="15" fill="rgb(251,226,25)" fg:x="3943" fg:w="1"/><text x="47.3211%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.0139%" y="549" width="0.0119%" height="15" fill="rgb(209,222,27)" fg:x="3944" fg:w="1"/><text x="47.3330%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.0139%" y="533" width="0.0119%" height="15" fill="rgb(238,22,21)" fg:x="3944" fg:w="1"/><text x="47.3330%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="47.0139%" y="565" width="0.0238%" height="15" fill="rgb(233,161,25)" fg:x="3944" fg:w="2"/><text x="47.3330%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="47.0259%" y="549" width="0.0119%" height="15" fill="rgb(226,122,53)" fg:x="3945" fg:w="1"/><text x="47.3450%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.0259%" y="533" width="0.0119%" height="15" fill="rgb(220,123,17)" fg:x="3945" fg:w="1"/><text x="47.3450%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.0259%" y="517" width="0.0119%" height="15" fill="rgb(230,224,35)" fg:x="3945" fg:w="1"/><text x="47.3450%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="47.0378%" y="565" width="0.0358%" height="15" fill="rgb(246,83,8)" fg:x="3946" fg:w="3"/><text x="47.3569%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="47.0497%" y="549" width="0.0238%" height="15" fill="rgb(230,214,17)" fg:x="3947" fg:w="2"/><text x="47.3688%" y="559.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="47.0497%" y="533" width="0.0238%" height="15" fill="rgb(222,97,18)" fg:x="3947" fg:w="2"/><text x="47.3688%" y="543.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="47.0497%" y="517" width="0.0238%" height="15" fill="rgb(206,79,1)" fg:x="3947" fg:w="2"/><text x="47.3688%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.0735%" y="533" width="0.0119%" height="15" fill="rgb(214,121,34)" fg:x="3949" fg:w="1"/><text x="47.3926%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.0735%" y="517" width="0.0119%" height="15" fill="rgb(249,199,46)" fg:x="3949" fg:w="1"/><text x="47.3926%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="47.0855%" y="533" width="0.0119%" height="15" fill="rgb(214,222,46)" fg:x="3950" fg:w="1"/><text x="47.4046%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.1093%" y="517" width="0.0119%" height="15" fill="rgb(248,168,30)" fg:x="3952" fg:w="1"/><text x="47.4284%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.1093%" y="501" width="0.0119%" height="15" fill="rgb(226,14,28)" fg:x="3952" fg:w="1"/><text x="47.4284%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.1212%" y="485" width="0.0119%" height="15" fill="rgb(253,123,1)" fg:x="3953" fg:w="1"/><text x="47.4403%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.1212%" y="469" width="0.0119%" height="15" fill="rgb(225,24,42)" fg:x="3953" fg:w="1"/><text x="47.4403%" y="479.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="47.0974%" y="533" width="0.0477%" height="15" fill="rgb(216,161,37)" fg:x="3951" fg:w="4"/><text x="47.4165%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="47.1212%" y="517" width="0.0238%" height="15" fill="rgb(251,164,26)" fg:x="3953" fg:w="2"/><text x="47.4403%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="47.1212%" y="501" width="0.0238%" height="15" fill="rgb(219,177,3)" fg:x="3953" fg:w="2"/><text x="47.4403%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="47.1332%" y="485" width="0.0119%" height="15" fill="rgb(222,65,0)" fg:x="3954" fg:w="1"/><text x="47.4523%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.1332%" y="469" width="0.0119%" height="15" fill="rgb(223,69,54)" fg:x="3954" fg:w="1"/><text x="47.4523%" y="479.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.1332%" y="453" width="0.0119%" height="15" fill="rgb(235,30,27)" fg:x="3954" fg:w="1"/><text x="47.4523%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="46.9901%" y="597" width="0.1669%" height="15" fill="rgb(220,183,50)" fg:x="3942" fg:w="14"/><text x="47.3092%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="47.0020%" y="581" width="0.1550%" height="15" fill="rgb(248,198,15)" fg:x="3943" fg:w="13"/><text x="47.3211%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="47.0735%" y="565" width="0.0834%" height="15" fill="rgb(222,211,4)" fg:x="3949" fg:w="7"/><text x="47.3926%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="47.0735%" y="549" width="0.0834%" height="15" fill="rgb(214,102,34)" fg:x="3949" fg:w="7"/><text x="47.3926%" y="559.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="47.1451%" y="533" width="0.0119%" height="15" fill="rgb(245,92,5)" fg:x="3955" fg:w="1"/><text x="47.4642%" y="543.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose@plt (1 samples, 0.01%)</title><rect x="47.1451%" y="517" width="0.0119%" height="15" fill="rgb(252,72,51)" fg:x="3955" fg:w="1"/><text x="47.4642%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="47.1570%" y="597" width="0.0238%" height="15" fill="rgb(252,208,19)" fg:x="3956" fg:w="2"/><text x="47.4761%" y="607.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="47.1570%" y="581" width="0.0238%" height="15" fill="rgb(211,69,7)" fg:x="3956" fg:w="2"/><text x="47.4761%" y="591.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="47.1570%" y="565" width="0.0238%" height="15" fill="rgb(211,27,16)" fg:x="3956" fg:w="2"/><text x="47.4761%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (20 samples, 0.24%)</title><rect x="46.9543%" y="613" width="0.2384%" height="15" fill="rgb(219,216,14)" fg:x="3939" fg:w="20"/><text x="47.2734%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="47.1808%" y="597" width="0.0119%" height="15" fill="rgb(219,71,8)" fg:x="3958" fg:w="1"/><text x="47.4999%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.1928%" y="597" width="0.0119%" height="15" fill="rgb(223,170,53)" fg:x="3959" fg:w="1"/><text x="47.5119%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.1928%" y="581" width="0.0119%" height="15" fill="rgb(246,21,26)" fg:x="3959" fg:w="1"/><text x="47.5119%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="47.2047%" y="581" width="0.0119%" height="15" fill="rgb(248,20,46)" fg:x="3960" fg:w="1"/><text x="47.5238%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.2166%" y="565" width="0.0119%" height="15" fill="rgb(252,94,11)" fg:x="3961" fg:w="1"/><text x="47.5357%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.2285%" y="549" width="0.0119%" height="15" fill="rgb(236,163,8)" fg:x="3962" fg:w="1"/><text x="47.5476%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.2285%" y="533" width="0.0119%" height="15" fill="rgb(217,221,45)" fg:x="3962" fg:w="1"/><text x="47.5476%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="47.2404%" y="501" width="0.0119%" height="15" fill="rgb(238,38,17)" fg:x="3963" fg:w="1"/><text x="47.5595%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.2524%" y="469" width="0.0119%" height="15" fill="rgb(242,210,23)" fg:x="3964" fg:w="1"/><text x="47.5715%" y="479.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.2524%" y="453" width="0.0119%" height="15" fill="rgb(250,86,53)" fg:x="3964" fg:w="1"/><text x="47.5715%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="47.2404%" y="549" width="0.0596%" height="15" fill="rgb(223,168,25)" fg:x="3963" fg:w="5"/><text x="47.5595%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="47.2404%" y="533" width="0.0596%" height="15" fill="rgb(251,189,4)" fg:x="3963" fg:w="5"/><text x="47.5595%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="47.2404%" y="517" width="0.0596%" height="15" fill="rgb(245,19,28)" fg:x="3963" fg:w="5"/><text x="47.5595%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="47.2524%" y="501" width="0.0477%" height="15" fill="rgb(207,10,34)" fg:x="3964" fg:w="4"/><text x="47.5715%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="47.2524%" y="485" width="0.0477%" height="15" fill="rgb(235,153,31)" fg:x="3964" fg:w="4"/><text x="47.5715%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="47.2643%" y="469" width="0.0358%" height="15" fill="rgb(228,72,37)" fg:x="3965" fg:w="3"/><text x="47.5834%" y="479.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="47.2762%" y="453" width="0.0238%" height="15" fill="rgb(215,15,16)" fg:x="3966" fg:w="2"/><text x="47.5953%" y="463.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="47.2762%" y="437" width="0.0238%" height="15" fill="rgb(250,119,29)" fg:x="3966" fg:w="2"/><text x="47.5953%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="47.2285%" y="565" width="0.0834%" height="15" fill="rgb(214,59,1)" fg:x="3962" fg:w="7"/><text x="47.5476%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="47.3000%" y="549" width="0.0119%" height="15" fill="rgb(223,109,25)" fg:x="3968" fg:w="1"/><text x="47.6191%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="47.3000%" y="533" width="0.0119%" height="15" fill="rgb(230,198,22)" fg:x="3968" fg:w="1"/><text x="47.6191%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="47.2166%" y="581" width="0.1192%" height="15" fill="rgb(245,184,46)" fg:x="3961" fg:w="10"/><text x="47.5357%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="47.3120%" y="565" width="0.0238%" height="15" fill="rgb(253,73,16)" fg:x="3969" fg:w="2"/><text x="47.6311%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="47.3120%" y="549" width="0.0238%" height="15" fill="rgb(206,94,45)" fg:x="3969" fg:w="2"/><text x="47.6311%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="47.3120%" y="533" width="0.0238%" height="15" fill="rgb(236,83,27)" fg:x="3969" fg:w="2"/><text x="47.6311%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="47.3358%" y="581" width="0.0119%" height="15" fill="rgb(220,196,8)" fg:x="3971" fg:w="1"/><text x="47.6549%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.3358%" y="565" width="0.0119%" height="15" fill="rgb(254,185,14)" fg:x="3971" fg:w="1"/><text x="47.6549%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.3358%" y="549" width="0.0119%" height="15" fill="rgb(226,50,22)" fg:x="3971" fg:w="1"/><text x="47.6549%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="47.2047%" y="597" width="0.1550%" height="15" fill="rgb(253,147,0)" fg:x="3960" fg:w="13"/><text x="47.5238%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="47.3477%" y="581" width="0.0119%" height="15" fill="rgb(252,46,33)" fg:x="3972" fg:w="1"/><text x="47.6668%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.3477%" y="565" width="0.0119%" height="15" fill="rgb(242,22,54)" fg:x="3972" fg:w="1"/><text x="47.6668%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.3477%" y="549" width="0.0119%" height="15" fill="rgb(223,178,32)" fg:x="3972" fg:w="1"/><text x="47.6668%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="47.1928%" y="613" width="0.1788%" height="15" fill="rgb(214,106,53)" fg:x="3959" fg:w="15"/><text x="47.5119%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="47.3596%" y="597" width="0.0119%" height="15" fill="rgb(232,65,50)" fg:x="3973" fg:w="1"/><text x="47.6787%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.3596%" y="581" width="0.0119%" height="15" fill="rgb(231,110,28)" fg:x="3973" fg:w="1"/><text x="47.6787%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.3596%" y="565" width="0.0119%" height="15" fill="rgb(216,71,40)" fg:x="3973" fg:w="1"/><text x="47.6787%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (51 samples, 0.61%)</title><rect x="46.7875%" y="693" width="0.6079%" height="15" fill="rgb(229,89,53)" fg:x="3925" fg:w="51"/><text x="47.1066%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (46 samples, 0.55%)</title><rect x="46.8471%" y="677" width="0.5483%" height="15" fill="rgb(210,124,14)" fg:x="3930" fg:w="46"/><text x="47.1662%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (43 samples, 0.51%)</title><rect x="46.8828%" y="661" width="0.5126%" height="15" fill="rgb(236,213,6)" fg:x="3933" fg:w="43"/><text x="47.2019%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (42 samples, 0.50%)</title><rect x="46.8947%" y="645" width="0.5007%" height="15" fill="rgb(228,41,5)" fg:x="3934" fg:w="42"/><text x="47.2138%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (41 samples, 0.49%)</title><rect x="46.9067%" y="629" width="0.4887%" height="15" fill="rgb(221,167,25)" fg:x="3935" fg:w="41"/><text x="47.2258%" y="639.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="47.3716%" y="613" width="0.0238%" height="15" fill="rgb(228,144,37)" fg:x="3974" fg:w="2"/><text x="47.6907%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="47.3716%" y="597" width="0.0238%" height="15" fill="rgb(227,189,38)" fg:x="3974" fg:w="2"/><text x="47.6907%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.3835%" y="581" width="0.0119%" height="15" fill="rgb(218,8,2)" fg:x="3975" fg:w="1"/><text x="47.7026%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.3954%" y="661" width="0.0119%" height="15" fill="rgb(209,61,28)" fg:x="3976" fg:w="1"/><text x="47.7145%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.3954%" y="645" width="0.0119%" height="15" fill="rgb(233,140,39)" fg:x="3976" fg:w="1"/><text x="47.7145%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="47.4073%" y="661" width="0.0119%" height="15" fill="rgb(251,66,48)" fg:x="3977" fg:w="1"/><text x="47.7264%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.4192%" y="629" width="0.0119%" height="15" fill="rgb(210,44,45)" fg:x="3978" fg:w="1"/><text x="47.7383%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.4192%" y="613" width="0.0119%" height="15" fill="rgb(214,136,46)" fg:x="3978" fg:w="1"/><text x="47.7383%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.4312%" y="613" width="0.0119%" height="15" fill="rgb(207,130,50)" fg:x="3979" fg:w="1"/><text x="47.7503%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="47.4431%" y="597" width="0.0238%" height="15" fill="rgb(228,102,49)" fg:x="3980" fg:w="2"/><text x="47.7622%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="47.4431%" y="581" width="0.0238%" height="15" fill="rgb(253,55,1)" fg:x="3980" fg:w="2"/><text x="47.7622%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="47.3954%" y="677" width="0.0834%" height="15" fill="rgb(238,222,9)" fg:x="3976" fg:w="7"/><text x="47.7145%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="47.4192%" y="661" width="0.0596%" height="15" fill="rgb(246,99,6)" fg:x="3978" fg:w="5"/><text x="47.7383%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="47.4192%" y="645" width="0.0596%" height="15" fill="rgb(219,110,26)" fg:x="3978" fg:w="5"/><text x="47.7383%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="47.4312%" y="629" width="0.0477%" height="15" fill="rgb(239,160,33)" fg:x="3979" fg:w="4"/><text x="47.7503%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="47.4431%" y="613" width="0.0358%" height="15" fill="rgb(220,202,23)" fg:x="3980" fg:w="3"/><text x="47.7622%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="47.4669%" y="597" width="0.0119%" height="15" fill="rgb(208,80,26)" fg:x="3982" fg:w="1"/><text x="47.7860%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="47.3954%" y="693" width="0.0954%" height="15" fill="rgb(243,85,7)" fg:x="3976" fg:w="8"/><text x="47.7145%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="47.4788%" y="677" width="0.0119%" height="15" fill="rgb(228,77,47)" fg:x="3983" fg:w="1"/><text x="47.7979%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.4788%" y="661" width="0.0119%" height="15" fill="rgb(212,226,8)" fg:x="3983" fg:w="1"/><text x="47.7979%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.4788%" y="645" width="0.0119%" height="15" fill="rgb(241,120,54)" fg:x="3983" fg:w="1"/><text x="47.7979%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="47.4908%" y="677" width="0.0119%" height="15" fill="rgb(226,80,16)" fg:x="3984" fg:w="1"/><text x="47.8099%" y="687.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="47.5027%" y="661" width="0.0238%" height="15" fill="rgb(240,76,13)" fg:x="3985" fg:w="2"/><text x="47.8218%" y="671.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="47.5027%" y="645" width="0.0238%" height="15" fill="rgb(252,74,8)" fg:x="3985" fg:w="2"/><text x="47.8218%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.5384%" y="645" width="0.0119%" height="15" fill="rgb(244,155,2)" fg:x="3988" fg:w="1"/><text x="47.8575%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.5384%" y="629" width="0.0119%" height="15" fill="rgb(215,81,35)" fg:x="3988" fg:w="1"/><text x="47.8575%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.5504%" y="629" width="0.0119%" height="15" fill="rgb(206,55,2)" fg:x="3989" fg:w="1"/><text x="47.8695%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.5504%" y="613" width="0.0119%" height="15" fill="rgb(231,2,34)" fg:x="3989" fg:w="1"/><text x="47.8695%" y="623.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="47.5623%" y="613" width="0.0119%" height="15" fill="rgb(242,176,48)" fg:x="3990" fg:w="1"/><text x="47.8814%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="47.5742%" y="613" width="0.0119%" height="15" fill="rgb(249,31,36)" fg:x="3991" fg:w="1"/><text x="47.8933%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="47.5861%" y="597" width="0.0238%" height="15" fill="rgb(205,18,17)" fg:x="3992" fg:w="2"/><text x="47.9052%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="47.5861%" y="581" width="0.0238%" height="15" fill="rgb(254,130,5)" fg:x="3992" fg:w="2"/><text x="47.9052%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="47.6100%" y="597" width="0.0119%" height="15" fill="rgb(229,42,45)" fg:x="3994" fg:w="1"/><text x="47.9291%" y="607.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="47.6338%" y="581" width="0.0238%" height="15" fill="rgb(245,95,25)" fg:x="3996" fg:w="2"/><text x="47.9529%" y="591.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="47.6338%" y="565" width="0.0238%" height="15" fill="rgb(249,193,38)" fg:x="3996" fg:w="2"/><text x="47.9529%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="47.6576%" y="581" width="0.0119%" height="15" fill="rgb(241,140,43)" fg:x="3998" fg:w="1"/><text x="47.9767%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.6576%" y="565" width="0.0119%" height="15" fill="rgb(245,78,48)" fg:x="3998" fg:w="1"/><text x="47.9767%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.6576%" y="549" width="0.0119%" height="15" fill="rgb(214,92,39)" fg:x="3998" fg:w="1"/><text x="47.9767%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.6696%" y="565" width="0.0119%" height="15" fill="rgb(211,189,14)" fg:x="3999" fg:w="1"/><text x="47.9887%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.6696%" y="549" width="0.0119%" height="15" fill="rgb(218,7,24)" fg:x="3999" fg:w="1"/><text x="47.9887%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.6815%" y="549" width="0.0119%" height="15" fill="rgb(224,200,49)" fg:x="4000" fg:w="1"/><text x="48.0006%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.6815%" y="533" width="0.0119%" height="15" fill="rgb(218,210,14)" fg:x="4000" fg:w="1"/><text x="48.0006%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="47.6219%" y="597" width="0.0834%" height="15" fill="rgb(234,142,31)" fg:x="3995" fg:w="7"/><text x="47.9410%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="47.6696%" y="581" width="0.0358%" height="15" fill="rgb(227,165,2)" fg:x="3999" fg:w="3"/><text x="47.9887%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="47.6815%" y="565" width="0.0238%" height="15" fill="rgb(232,44,46)" fg:x="4000" fg:w="2"/><text x="48.0006%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="47.6934%" y="549" width="0.0119%" height="15" fill="rgb(236,149,47)" fg:x="4001" fg:w="1"/><text x="48.0125%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.6934%" y="533" width="0.0119%" height="15" fill="rgb(227,45,31)" fg:x="4001" fg:w="1"/><text x="48.0125%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.6934%" y="517" width="0.0119%" height="15" fill="rgb(240,176,51)" fg:x="4001" fg:w="1"/><text x="48.0125%" y="527.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="47.7053%" y="581" width="0.0238%" height="15" fill="rgb(249,146,41)" fg:x="4002" fg:w="2"/><text x="48.0244%" y="591.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="47.7053%" y="565" width="0.0238%" height="15" fill="rgb(213,208,4)" fg:x="4002" fg:w="2"/><text x="48.0244%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (20 samples, 0.24%)</title><rect x="47.5027%" y="677" width="0.2384%" height="15" fill="rgb(245,84,36)" fg:x="3985" fg:w="20"/><text x="47.8218%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="47.5265%" y="661" width="0.2146%" height="15" fill="rgb(254,84,18)" fg:x="3987" fg:w="18"/><text x="47.8456%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="47.5504%" y="645" width="0.1907%" height="15" fill="rgb(225,38,54)" fg:x="3989" fg:w="16"/><text x="47.8695%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="47.5623%" y="629" width="0.1788%" height="15" fill="rgb(246,50,30)" fg:x="3990" fg:w="15"/><text x="47.8814%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="47.5861%" y="613" width="0.1550%" height="15" fill="rgb(246,148,9)" fg:x="3992" fg:w="13"/><text x="47.9052%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="47.7053%" y="597" width="0.0358%" height="15" fill="rgb(223,75,4)" fg:x="4002" fg:w="3"/><text x="48.0244%" y="607.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose@plt (1 samples, 0.01%)</title><rect x="47.7292%" y="581" width="0.0119%" height="15" fill="rgb(239,148,41)" fg:x="4004" fg:w="1"/><text x="48.0483%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="47.4908%" y="693" width="0.2742%" height="15" fill="rgb(205,195,3)" fg:x="3984" fg:w="23"/><text x="47.8099%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="47.7411%" y="677" width="0.0238%" height="15" fill="rgb(254,161,1)" fg:x="4005" fg:w="2"/><text x="48.0602%" y="687.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="47.7411%" y="661" width="0.0238%" height="15" fill="rgb(211,229,8)" fg:x="4005" fg:w="2"/><text x="48.0602%" y="671.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="47.7411%" y="645" width="0.0238%" height="15" fill="rgb(220,97,9)" fg:x="4005" fg:w="2"/><text x="48.0602%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.7649%" y="677" width="0.0119%" height="15" fill="rgb(240,218,8)" fg:x="4007" fg:w="1"/><text x="48.0840%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.7649%" y="661" width="0.0119%" height="15" fill="rgb(250,44,0)" fg:x="4007" fg:w="1"/><text x="48.0840%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.7769%" y="661" width="0.0119%" height="15" fill="rgb(236,41,53)" fg:x="4008" fg:w="1"/><text x="48.0960%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.7769%" y="645" width="0.0119%" height="15" fill="rgb(218,227,13)" fg:x="4008" fg:w="1"/><text x="48.0960%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="47.7888%" y="661" width="0.0119%" height="15" fill="rgb(217,94,32)" fg:x="4009" fg:w="1"/><text x="48.1079%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.8007%" y="645" width="0.0119%" height="15" fill="rgb(213,217,12)" fg:x="4010" fg:w="1"/><text x="48.1198%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.8007%" y="629" width="0.0119%" height="15" fill="rgb(229,13,46)" fg:x="4010" fg:w="1"/><text x="48.1198%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.8126%" y="629" width="0.0119%" height="15" fill="rgb(243,139,5)" fg:x="4011" fg:w="1"/><text x="48.1317%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.8126%" y="613" width="0.0119%" height="15" fill="rgb(249,38,45)" fg:x="4011" fg:w="1"/><text x="48.1317%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="47.8245%" y="597" width="0.0119%" height="15" fill="rgb(216,70,11)" fg:x="4012" fg:w="1"/><text x="48.1436%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.8365%" y="549" width="0.0119%" height="15" fill="rgb(253,101,25)" fg:x="4013" fg:w="1"/><text x="48.1556%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.8365%" y="533" width="0.0119%" height="15" fill="rgb(207,197,30)" fg:x="4013" fg:w="1"/><text x="48.1556%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.8484%" y="517" width="0.0119%" height="15" fill="rgb(238,87,13)" fg:x="4014" fg:w="1"/><text x="48.1675%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.8484%" y="501" width="0.0119%" height="15" fill="rgb(215,155,8)" fg:x="4014" fg:w="1"/><text x="48.1675%" y="511.50"/></g><g><title>__GI___libc_free (5 samples, 0.06%)</title><rect x="47.8603%" y="501" width="0.0596%" height="15" fill="rgb(239,166,38)" fg:x="4015" fg:w="5"/><text x="48.1794%" y="511.50"/></g><g><title>_int_free (5 samples, 0.06%)</title><rect x="47.8603%" y="485" width="0.0596%" height="15" fill="rgb(240,194,35)" fg:x="4015" fg:w="5"/><text x="48.1794%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="47.8245%" y="613" width="0.1073%" height="15" fill="rgb(219,10,44)" fg:x="4012" fg:w="9"/><text x="48.1436%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="47.8365%" y="597" width="0.0954%" height="15" fill="rgb(251,220,35)" fg:x="4013" fg:w="8"/><text x="48.1556%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="47.8365%" y="581" width="0.0954%" height="15" fill="rgb(218,117,13)" fg:x="4013" fg:w="8"/><text x="48.1556%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="47.8365%" y="565" width="0.0954%" height="15" fill="rgb(221,213,40)" fg:x="4013" fg:w="8"/><text x="48.1556%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="47.8484%" y="549" width="0.0834%" height="15" fill="rgb(251,224,35)" fg:x="4014" fg:w="7"/><text x="48.1675%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="47.8484%" y="533" width="0.0834%" height="15" fill="rgb(241,33,39)" fg:x="4014" fg:w="7"/><text x="48.1675%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="47.8603%" y="517" width="0.0715%" height="15" fill="rgb(222,74,17)" fg:x="4015" fg:w="6"/><text x="48.1794%" y="527.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="47.9199%" y="501" width="0.0119%" height="15" fill="rgb(225,103,0)" fg:x="4020" fg:w="1"/><text x="48.2390%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="47.8245%" y="629" width="0.1311%" height="15" fill="rgb(240,0,12)" fg:x="4012" fg:w="11"/><text x="48.1436%" y="639.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="47.9318%" y="613" width="0.0238%" height="15" fill="rgb(233,213,37)" fg:x="4021" fg:w="2"/><text x="48.2509%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="47.9318%" y="597" width="0.0238%" height="15" fill="rgb(225,84,52)" fg:x="4021" fg:w="2"/><text x="48.2509%" y="607.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="47.9318%" y="581" width="0.0238%" height="15" fill="rgb(247,160,51)" fg:x="4021" fg:w="2"/><text x="48.2509%" y="591.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="47.9318%" y="565" width="0.0238%" height="15" fill="rgb(244,60,51)" fg:x="4021" fg:w="2"/><text x="48.2509%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.9676%" y="613" width="0.0119%" height="15" fill="rgb(233,114,7)" fg:x="4024" fg:w="1"/><text x="48.2867%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.9676%" y="597" width="0.0119%" height="15" fill="rgb(246,136,16)" fg:x="4024" fg:w="1"/><text x="48.2867%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="47.9795%" y="613" width="0.0119%" height="15" fill="rgb(243,114,45)" fg:x="4025" fg:w="1"/><text x="48.2986%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="47.9914%" y="581" width="0.0238%" height="15" fill="rgb(247,183,43)" fg:x="4026" fg:w="2"/><text x="48.3105%" y="591.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="47.9914%" y="565" width="0.0238%" height="15" fill="rgb(251,210,42)" fg:x="4026" fg:w="2"/><text x="48.3105%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="47.9914%" y="597" width="0.0358%" height="15" fill="rgb(221,88,35)" fg:x="4026" fg:w="3"/><text x="48.3105%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.0153%" y="581" width="0.0119%" height="15" fill="rgb(242,21,20)" fg:x="4028" fg:w="1"/><text x="48.3344%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.0272%" y="581" width="0.0119%" height="15" fill="rgb(233,226,36)" fg:x="4029" fg:w="1"/><text x="48.3463%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.0272%" y="565" width="0.0119%" height="15" fill="rgb(243,189,34)" fg:x="4029" fg:w="1"/><text x="48.3463%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.0272%" y="549" width="0.0119%" height="15" fill="rgb(207,145,50)" fg:x="4029" fg:w="1"/><text x="48.3463%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="48.0272%" y="597" width="0.0238%" height="15" fill="rgb(242,1,50)" fg:x="4029" fg:w="2"/><text x="48.3463%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.0391%" y="581" width="0.0119%" height="15" fill="rgb(231,65,32)" fg:x="4030" fg:w="1"/><text x="48.3582%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.0391%" y="565" width="0.0119%" height="15" fill="rgb(208,68,49)" fg:x="4030" fg:w="1"/><text x="48.3582%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.0391%" y="549" width="0.0119%" height="15" fill="rgb(253,54,49)" fg:x="4030" fg:w="1"/><text x="48.3582%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="48.0510%" y="597" width="0.0358%" height="15" fill="rgb(245,186,24)" fg:x="4031" fg:w="3"/><text x="48.3701%" y="607.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2 samples, 0.02%)</title><rect x="48.0629%" y="581" width="0.0238%" height="15" fill="rgb(209,2,41)" fg:x="4032" fg:w="2"/><text x="48.3820%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.0868%" y="549" width="0.0119%" height="15" fill="rgb(242,208,54)" fg:x="4034" fg:w="1"/><text x="48.4059%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.0868%" y="533" width="0.0119%" height="15" fill="rgb(225,9,51)" fg:x="4034" fg:w="1"/><text x="48.4059%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (25 samples, 0.30%)</title><rect x="47.8126%" y="645" width="0.2980%" height="15" fill="rgb(207,207,25)" fg:x="4011" fg:w="25"/><text x="48.1317%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="47.9557%" y="629" width="0.1550%" height="15" fill="rgb(253,96,18)" fg:x="4023" fg:w="13"/><text x="48.2748%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="47.9914%" y="613" width="0.1192%" height="15" fill="rgb(252,215,20)" fg:x="4026" fg:w="10"/><text x="48.3105%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="48.0868%" y="597" width="0.0238%" height="15" fill="rgb(245,227,26)" fg:x="4034" fg:w="2"/><text x="48.4059%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="48.0868%" y="581" width="0.0238%" height="15" fill="rgb(241,208,0)" fg:x="4034" fg:w="2"/><text x="48.4059%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="48.0868%" y="565" width="0.0238%" height="15" fill="rgb(224,130,10)" fg:x="4034" fg:w="2"/><text x="48.4059%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.0987%" y="549" width="0.0119%" height="15" fill="rgb(237,29,0)" fg:x="4035" fg:w="1"/><text x="48.4178%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.0987%" y="533" width="0.0119%" height="15" fill="rgb(219,27,41)" fg:x="4035" fg:w="1"/><text x="48.4178%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.0987%" y="517" width="0.0119%" height="15" fill="rgb(245,101,19)" fg:x="4035" fg:w="1"/><text x="48.4178%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="48.0987%" y="501" width="0.0119%" height="15" fill="rgb(243,44,37)" fg:x="4035" fg:w="1"/><text x="48.4178%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (27 samples, 0.32%)</title><rect x="47.8007%" y="661" width="0.3219%" height="15" fill="rgb(228,213,43)" fg:x="4010" fg:w="27"/><text x="48.1198%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.1106%" y="645" width="0.0119%" height="15" fill="rgb(219,163,21)" fg:x="4036" fg:w="1"/><text x="48.4297%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="48.1106%" y="629" width="0.0119%" height="15" fill="rgb(234,86,24)" fg:x="4036" fg:w="1"/><text x="48.4297%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="48.1225%" y="661" width="0.0238%" height="15" fill="rgb(225,10,24)" fg:x="4037" fg:w="2"/><text x="48.4416%" y="671.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="48.1225%" y="645" width="0.0238%" height="15" fill="rgb(218,109,7)" fg:x="4037" fg:w="2"/><text x="48.4416%" y="655.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="48.1225%" y="629" width="0.0238%" height="15" fill="rgb(210,20,26)" fg:x="4037" fg:w="2"/><text x="48.4416%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (35 samples, 0.42%)</title><rect x="47.7769%" y="677" width="0.4172%" height="15" fill="rgb(216,18,1)" fg:x="4008" fg:w="35"/><text x="48.0960%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="48.1464%" y="661" width="0.0477%" height="15" fill="rgb(206,163,23)" fg:x="4039" fg:w="4"/><text x="48.4655%" y="671.50"/></g><g><title>__GI___libc_free (4 samples, 0.05%)</title><rect x="48.1464%" y="645" width="0.0477%" height="15" fill="rgb(229,150,31)" fg:x="4039" fg:w="4"/><text x="48.4655%" y="655.50"/></g><g><title>_int_free (4 samples, 0.05%)</title><rect x="48.1464%" y="629" width="0.0477%" height="15" fill="rgb(231,10,5)" fg:x="4039" fg:w="4"/><text x="48.4655%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="48.1941%" y="645" width="0.0119%" height="15" fill="rgb(250,40,50)" fg:x="4043" fg:w="1"/><text x="48.5132%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="48.2060%" y="613" width="0.0119%" height="15" fill="rgb(217,119,7)" fg:x="4044" fg:w="1"/><text x="48.5251%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="48.2179%" y="581" width="0.0119%" height="15" fill="rgb(245,214,40)" fg:x="4045" fg:w="1"/><text x="48.5370%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="48.2179%" y="597" width="0.0238%" height="15" fill="rgb(216,187,1)" fg:x="4045" fg:w="2"/><text x="48.5370%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.2298%" y="581" width="0.0119%" height="15" fill="rgb(237,146,21)" fg:x="4046" fg:w="1"/><text x="48.5489%" y="591.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="48.2298%" y="565" width="0.0119%" height="15" fill="rgb(210,174,47)" fg:x="4046" fg:w="1"/><text x="48.5489%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.2417%" y="565" width="0.0119%" height="15" fill="rgb(218,111,39)" fg:x="4047" fg:w="1"/><text x="48.5608%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.2417%" y="549" width="0.0119%" height="15" fill="rgb(224,95,19)" fg:x="4047" fg:w="1"/><text x="48.5608%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.2537%" y="549" width="0.0119%" height="15" fill="rgb(234,15,38)" fg:x="4048" fg:w="1"/><text x="48.5728%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.2537%" y="533" width="0.0119%" height="15" fill="rgb(246,56,12)" fg:x="4048" fg:w="1"/><text x="48.5728%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="48.2417%" y="581" width="0.0358%" height="15" fill="rgb(247,16,17)" fg:x="4047" fg:w="3"/><text x="48.5608%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="48.2537%" y="565" width="0.0238%" height="15" fill="rgb(215,151,11)" fg:x="4048" fg:w="2"/><text x="48.5728%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), bool (*)(unsigned int)&gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.2656%" y="549" width="0.0119%" height="15" fill="rgb(225,16,24)" fg:x="4049" fg:w="1"/><text x="48.5847%" y="559.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="48.2775%" y="565" width="0.0119%" height="15" fill="rgb(217,117,5)" fg:x="4050" fg:w="1"/><text x="48.5966%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="48.2894%" y="565" width="0.0119%" height="15" fill="rgb(246,187,53)" fg:x="4051" fg:w="1"/><text x="48.6085%" y="575.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="48.3133%" y="549" width="0.0119%" height="15" fill="rgb(241,71,40)" fg:x="4053" fg:w="1"/><text x="48.6324%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.3252%" y="533" width="0.0119%" height="15" fill="rgb(231,67,39)" fg:x="4054" fg:w="1"/><text x="48.6443%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.3252%" y="517" width="0.0119%" height="15" fill="rgb(222,120,24)" fg:x="4054" fg:w="1"/><text x="48.6443%" y="527.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="48.3371%" y="533" width="0.0119%" height="15" fill="rgb(248,3,3)" fg:x="4055" fg:w="1"/><text x="48.6562%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="48.3013%" y="565" width="0.0596%" height="15" fill="rgb(228,218,5)" fg:x="4052" fg:w="5"/><text x="48.6204%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="48.3252%" y="549" width="0.0358%" height="15" fill="rgb(212,202,43)" fg:x="4054" fg:w="3"/><text x="48.6443%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="48.3490%" y="533" width="0.0119%" height="15" fill="rgb(235,183,2)" fg:x="4056" fg:w="1"/><text x="48.6681%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.3609%" y="549" width="0.0119%" height="15" fill="rgb(230,165,10)" fg:x="4057" fg:w="1"/><text x="48.6800%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.3609%" y="533" width="0.0119%" height="15" fill="rgb(219,54,40)" fg:x="4057" fg:w="1"/><text x="48.6800%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="48.2179%" y="613" width="0.1669%" height="15" fill="rgb(244,73,9)" fg:x="4045" fg:w="14"/><text x="48.5370%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="48.2417%" y="597" width="0.1430%" height="15" fill="rgb(212,32,45)" fg:x="4047" fg:w="12"/><text x="48.5608%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="48.2775%" y="581" width="0.1073%" height="15" fill="rgb(205,58,31)" fg:x="4050" fg:w="9"/><text x="48.5966%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="48.3609%" y="565" width="0.0238%" height="15" fill="rgb(250,120,43)" fg:x="4057" fg:w="2"/><text x="48.6800%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.3729%" y="549" width="0.0119%" height="15" fill="rgb(235,13,10)" fg:x="4058" fg:w="1"/><text x="48.6920%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.3729%" y="533" width="0.0119%" height="15" fill="rgb(232,219,31)" fg:x="4058" fg:w="1"/><text x="48.6920%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.3729%" y="517" width="0.0119%" height="15" fill="rgb(218,157,51)" fg:x="4058" fg:w="1"/><text x="48.6920%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="48.2060%" y="629" width="0.1907%" height="15" fill="rgb(211,91,52)" fg:x="4044" fg:w="16"/><text x="48.5251%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.3848%" y="613" width="0.0119%" height="15" fill="rgb(240,173,1)" fg:x="4059" fg:w="1"/><text x="48.7039%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="48.3848%" y="597" width="0.0119%" height="15" fill="rgb(248,20,47)" fg:x="4059" fg:w="1"/><text x="48.7039%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.3967%" y="613" width="0.0119%" height="15" fill="rgb(217,221,40)" fg:x="4060" fg:w="1"/><text x="48.7158%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.3967%" y="597" width="0.0119%" height="15" fill="rgb(226,149,51)" fg:x="4060" fg:w="1"/><text x="48.7158%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="48.2060%" y="645" width="0.2146%" height="15" fill="rgb(252,193,7)" fg:x="4044" fg:w="18"/><text x="48.5251%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="48.3967%" y="629" width="0.0238%" height="15" fill="rgb(205,123,0)" fg:x="4060" fg:w="2"/><text x="48.7158%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.4086%" y="613" width="0.0119%" height="15" fill="rgb(233,173,25)" fg:x="4061" fg:w="1"/><text x="48.7277%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (20 samples, 0.24%)</title><rect x="48.1941%" y="661" width="0.2384%" height="15" fill="rgb(216,63,32)" fg:x="4043" fg:w="20"/><text x="48.5132%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.4206%" y="645" width="0.0119%" height="15" fill="rgb(209,56,45)" fg:x="4062" fg:w="1"/><text x="48.7397%" y="655.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="48.4206%" y="629" width="0.0119%" height="15" fill="rgb(226,111,49)" fg:x="4062" fg:w="1"/><text x="48.7397%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="48.4325%" y="645" width="0.0238%" height="15" fill="rgb(244,181,21)" fg:x="4063" fg:w="2"/><text x="48.7516%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.4563%" y="629" width="0.0119%" height="15" fill="rgb(222,126,15)" fg:x="4065" fg:w="1"/><text x="48.7754%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.4563%" y="613" width="0.0119%" height="15" fill="rgb(222,95,17)" fg:x="4065" fg:w="1"/><text x="48.7754%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.4802%" y="597" width="0.0119%" height="15" fill="rgb(254,46,5)" fg:x="4067" fg:w="1"/><text x="48.7993%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.4802%" y="581" width="0.0119%" height="15" fill="rgb(236,216,35)" fg:x="4067" fg:w="1"/><text x="48.7993%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.4921%" y="581" width="0.0119%" height="15" fill="rgb(217,187,26)" fg:x="4068" fg:w="1"/><text x="48.8112%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.4921%" y="565" width="0.0119%" height="15" fill="rgb(207,192,25)" fg:x="4068" fg:w="1"/><text x="48.8112%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.5159%" y="517" width="0.0119%" height="15" fill="rgb(253,135,27)" fg:x="4070" fg:w="1"/><text x="48.8350%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.5159%" y="501" width="0.0119%" height="15" fill="rgb(211,122,29)" fg:x="4070" fg:w="1"/><text x="48.8350%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="48.5040%" y="581" width="0.0358%" height="15" fill="rgb(233,162,40)" fg:x="4069" fg:w="3"/><text x="48.8231%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="48.5040%" y="565" width="0.0358%" height="15" fill="rgb(222,184,47)" fg:x="4069" fg:w="3"/><text x="48.8231%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="48.5040%" y="549" width="0.0358%" height="15" fill="rgb(249,99,23)" fg:x="4069" fg:w="3"/><text x="48.8231%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="48.5040%" y="533" width="0.0358%" height="15" fill="rgb(214,60,12)" fg:x="4069" fg:w="3"/><text x="48.8231%" y="543.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="48.5278%" y="517" width="0.0119%" height="15" fill="rgb(250,229,36)" fg:x="4071" fg:w="1"/><text x="48.8469%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="48.4921%" y="597" width="0.0596%" height="15" fill="rgb(232,195,10)" fg:x="4068" fg:w="5"/><text x="48.8112%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.5398%" y="581" width="0.0119%" height="15" fill="rgb(205,213,31)" fg:x="4072" fg:w="1"/><text x="48.8589%" y="591.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="48.5398%" y="565" width="0.0119%" height="15" fill="rgb(237,43,8)" fg:x="4072" fg:w="1"/><text x="48.8589%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="48.4563%" y="645" width="0.1192%" height="15" fill="rgb(216,208,3)" fg:x="4065" fg:w="10"/><text x="48.7754%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="48.4682%" y="629" width="0.1073%" height="15" fill="rgb(228,179,44)" fg:x="4066" fg:w="9"/><text x="48.7873%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="48.4682%" y="613" width="0.1073%" height="15" fill="rgb(230,192,27)" fg:x="4066" fg:w="9"/><text x="48.7873%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="48.5517%" y="597" width="0.0238%" height="15" fill="rgb(251,30,38)" fg:x="4073" fg:w="2"/><text x="48.8708%" y="607.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="48.5517%" y="581" width="0.0238%" height="15" fill="rgb(246,55,52)" fg:x="4073" fg:w="2"/><text x="48.8708%" y="591.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="48.5517%" y="565" width="0.0238%" height="15" fill="rgb(249,79,26)" fg:x="4073" fg:w="2"/><text x="48.8708%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="48.5755%" y="629" width="0.0119%" height="15" fill="rgb(220,202,16)" fg:x="4075" fg:w="1"/><text x="48.8946%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.5874%" y="597" width="0.0119%" height="15" fill="rgb(250,170,23)" fg:x="4076" fg:w="1"/><text x="48.9065%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.5874%" y="581" width="0.0119%" height="15" fill="rgb(230,7,37)" fg:x="4076" fg:w="1"/><text x="48.9065%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.5994%" y="565" width="0.0119%" height="15" fill="rgb(213,71,1)" fg:x="4077" fg:w="1"/><text x="48.9185%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.5994%" y="549" width="0.0119%" height="15" fill="rgb(227,87,39)" fg:x="4077" fg:w="1"/><text x="48.9185%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.6113%" y="549" width="0.0119%" height="15" fill="rgb(210,41,29)" fg:x="4078" fg:w="1"/><text x="48.9304%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.6113%" y="533" width="0.0119%" height="15" fill="rgb(206,191,31)" fg:x="4078" fg:w="1"/><text x="48.9304%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="48.6232%" y="549" width="0.0119%" height="15" fill="rgb(247,75,54)" fg:x="4079" fg:w="1"/><text x="48.9423%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.6351%" y="533" width="0.0119%" height="15" fill="rgb(208,54,50)" fg:x="4080" fg:w="1"/><text x="48.9542%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.6351%" y="517" width="0.0119%" height="15" fill="rgb(214,90,37)" fg:x="4080" fg:w="1"/><text x="48.9542%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="48.6351%" y="549" width="0.0238%" height="15" fill="rgb(220,132,6)" fg:x="4080" fg:w="2"/><text x="48.9542%" y="559.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose@plt (1 samples, 0.01%)</title><rect x="48.6470%" y="533" width="0.0119%" height="15" fill="rgb(213,167,7)" fg:x="4081" fg:w="1"/><text x="48.9661%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.6590%" y="517" width="0.0119%" height="15" fill="rgb(243,36,27)" fg:x="4082" fg:w="1"/><text x="48.9781%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.6590%" y="501" width="0.0119%" height="15" fill="rgb(235,147,12)" fg:x="4082" fg:w="1"/><text x="48.9781%" y="511.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="48.6709%" y="501" width="0.0119%" height="15" fill="rgb(212,198,44)" fg:x="4083" fg:w="1"/><text x="48.9900%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="48.6590%" y="533" width="0.0358%" height="15" fill="rgb(218,68,50)" fg:x="4082" fg:w="3"/><text x="48.9781%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="48.6709%" y="517" width="0.0238%" height="15" fill="rgb(224,79,48)" fg:x="4083" fg:w="2"/><text x="48.9900%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.6828%" y="501" width="0.0119%" height="15" fill="rgb(213,191,50)" fg:x="4084" fg:w="1"/><text x="49.0019%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.6828%" y="485" width="0.0119%" height="15" fill="rgb(254,146,10)" fg:x="4084" fg:w="1"/><text x="49.0019%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.6828%" y="469" width="0.0119%" height="15" fill="rgb(215,175,11)" fg:x="4084" fg:w="1"/><text x="49.0019%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="48.6590%" y="549" width="0.0477%" height="15" fill="rgb(207,49,7)" fg:x="4082" fg:w="4"/><text x="48.9781%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.6947%" y="533" width="0.0119%" height="15" fill="rgb(234,144,29)" fg:x="4085" fg:w="1"/><text x="49.0138%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.6947%" y="517" width="0.0119%" height="15" fill="rgb(213,222,48)" fg:x="4085" fg:w="1"/><text x="49.0138%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.6947%" y="501" width="0.0119%" height="15" fill="rgb(222,8,6)" fg:x="4085" fg:w="1"/><text x="49.0138%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="48.5994%" y="581" width="0.1192%" height="15" fill="rgb(221,114,49)" fg:x="4077" fg:w="10"/><text x="48.9185%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="48.6113%" y="565" width="0.1073%" height="15" fill="rgb(250,140,42)" fg:x="4078" fg:w="9"/><text x="48.9304%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.7066%" y="549" width="0.0119%" height="15" fill="rgb(250,150,27)" fg:x="4086" fg:w="1"/><text x="49.0257%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="48.7066%" y="533" width="0.0119%" height="15" fill="rgb(252,159,3)" fg:x="4086" fg:w="1"/><text x="49.0257%" y="543.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="48.7186%" y="549" width="0.0358%" height="15" fill="rgb(241,182,3)" fg:x="4087" fg:w="3"/><text x="49.0377%" y="559.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="48.7186%" y="533" width="0.0358%" height="15" fill="rgb(236,3,9)" fg:x="4087" fg:w="3"/><text x="49.0377%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="48.7186%" y="565" width="0.0477%" height="15" fill="rgb(223,227,51)" fg:x="4087" fg:w="4"/><text x="49.0377%" y="575.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="48.7543%" y="549" width="0.0119%" height="15" fill="rgb(232,133,30)" fg:x="4090" fg:w="1"/><text x="49.0734%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.7662%" y="549" width="0.0119%" height="15" fill="rgb(209,93,27)" fg:x="4091" fg:w="1"/><text x="49.0853%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.7662%" y="533" width="0.0119%" height="15" fill="rgb(208,108,34)" fg:x="4091" fg:w="1"/><text x="49.0853%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.7782%" y="533" width="0.0119%" height="15" fill="rgb(215,189,13)" fg:x="4092" fg:w="1"/><text x="49.0973%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.7782%" y="517" width="0.0119%" height="15" fill="rgb(206,88,23)" fg:x="4092" fg:w="1"/><text x="49.0973%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="48.7901%" y="533" width="0.0119%" height="15" fill="rgb(240,173,0)" fg:x="4093" fg:w="1"/><text x="49.1092%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="48.7782%" y="549" width="0.0358%" height="15" fill="rgb(223,106,52)" fg:x="4092" fg:w="3"/><text x="49.0973%" y="559.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.8020%" y="533" width="0.0119%" height="15" fill="rgb(206,130,16)" fg:x="4094" fg:w="1"/><text x="49.1211%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.8020%" y="517" width="0.0119%" height="15" fill="rgb(220,54,25)" fg:x="4094" fg:w="1"/><text x="49.1211%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.8020%" y="501" width="0.0119%" height="15" fill="rgb(210,4,38)" fg:x="4094" fg:w="1"/><text x="49.1211%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.8139%" y="533" width="0.0119%" height="15" fill="rgb(238,94,39)" fg:x="4095" fg:w="1"/><text x="49.1330%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.8139%" y="517" width="0.0119%" height="15" fill="rgb(234,124,34)" fg:x="4095" fg:w="1"/><text x="49.1330%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.8258%" y="533" width="0.0119%" height="15" fill="rgb(221,91,40)" fg:x="4096" fg:w="1"/><text x="49.1449%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.8258%" y="517" width="0.0119%" height="15" fill="rgb(246,53,28)" fg:x="4096" fg:w="1"/><text x="49.1449%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.8258%" y="501" width="0.0119%" height="15" fill="rgb(229,109,7)" fg:x="4096" fg:w="1"/><text x="49.1449%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.8378%" y="501" width="0.0119%" height="15" fill="rgb(249,117,8)" fg:x="4097" fg:w="1"/><text x="49.1569%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.8378%" y="485" width="0.0119%" height="15" fill="rgb(210,181,1)" fg:x="4097" fg:w="1"/><text x="49.1569%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.8497%" y="485" width="0.0119%" height="15" fill="rgb(211,66,1)" fg:x="4098" fg:w="1"/><text x="49.1688%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.8497%" y="469" width="0.0119%" height="15" fill="rgb(221,90,14)" fg:x="4098" fg:w="1"/><text x="49.1688%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="48.8378%" y="517" width="0.0358%" height="15" fill="rgb(219,222,44)" fg:x="4097" fg:w="3"/><text x="49.1569%" y="527.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="48.8497%" y="501" width="0.0238%" height="15" fill="rgb(246,34,33)" fg:x="4098" fg:w="2"/><text x="49.1688%" y="511.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="48.8616%" y="485" width="0.0119%" height="15" fill="rgb(227,135,41)" fg:x="4099" fg:w="1"/><text x="49.1807%" y="495.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="48.8854%" y="469" width="0.0119%" height="15" fill="rgb(226,15,14)" fg:x="4101" fg:w="1"/><text x="49.2045%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="48.5994%" y="597" width="0.3099%" height="15" fill="rgb(236,148,47)" fg:x="4077" fg:w="26"/><text x="48.9185%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="48.7186%" y="581" width="0.1907%" height="15" fill="rgb(233,162,52)" fg:x="4087" fg:w="16"/><text x="49.0377%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="48.7662%" y="565" width="0.1430%" height="15" fill="rgb(244,35,28)" fg:x="4091" fg:w="12"/><text x="49.0853%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="48.8139%" y="549" width="0.0954%" height="15" fill="rgb(205,121,10)" fg:x="4095" fg:w="8"/><text x="49.1330%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="48.8378%" y="533" width="0.0715%" height="15" fill="rgb(250,58,18)" fg:x="4097" fg:w="6"/><text x="49.1569%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="48.8735%" y="517" width="0.0358%" height="15" fill="rgb(216,37,13)" fg:x="4100" fg:w="3"/><text x="49.1926%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="48.8735%" y="501" width="0.0358%" height="15" fill="rgb(221,215,42)" fg:x="4100" fg:w="3"/><text x="49.1926%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="48.8735%" y="485" width="0.0358%" height="15" fill="rgb(217,214,19)" fg:x="4100" fg:w="3"/><text x="49.1926%" y="495.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.8974%" y="469" width="0.0119%" height="15" fill="rgb(233,139,13)" fg:x="4102" fg:w="1"/><text x="49.2165%" y="479.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.8974%" y="453" width="0.0119%" height="15" fill="rgb(247,168,23)" fg:x="4102" fg:w="1"/><text x="49.2165%" y="463.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.8974%" y="437" width="0.0119%" height="15" fill="rgb(207,202,1)" fg:x="4102" fg:w="1"/><text x="49.2165%" y="447.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.9093%" y="581" width="0.0119%" height="15" fill="rgb(220,155,48)" fg:x="4103" fg:w="1"/><text x="49.2284%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.9093%" y="565" width="0.0119%" height="15" fill="rgb(250,43,26)" fg:x="4103" fg:w="1"/><text x="49.2284%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (29 samples, 0.35%)</title><rect x="48.5874%" y="613" width="0.3457%" height="15" fill="rgb(212,190,23)" fg:x="4076" fg:w="29"/><text x="48.9065%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="48.9093%" y="597" width="0.0238%" height="15" fill="rgb(216,39,24)" fg:x="4103" fg:w="2"/><text x="49.2284%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="48.9212%" y="581" width="0.0119%" height="15" fill="rgb(252,113,16)" fg:x="4104" fg:w="1"/><text x="49.2403%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (30 samples, 0.36%)</title><rect x="48.5874%" y="629" width="0.3576%" height="15" fill="rgb(208,113,19)" fg:x="4076" fg:w="30"/><text x="48.9065%" y="639.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="48.9331%" y="613" width="0.0119%" height="15" fill="rgb(234,107,25)" fg:x="4105" fg:w="1"/><text x="49.2522%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="48.9331%" y="597" width="0.0119%" height="15" fill="rgb(234,217,51)" fg:x="4105" fg:w="1"/><text x="49.2522%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="48.9331%" y="581" width="0.0119%" height="15" fill="rgb(251,29,42)" fg:x="4105" fg:w="1"/><text x="49.2522%" y="591.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="48.9450%" y="597" width="0.0358%" height="15" fill="rgb(221,62,51)" fg:x="4106" fg:w="3"/><text x="49.2641%" y="607.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="48.9450%" y="581" width="0.0358%" height="15" fill="rgb(240,192,43)" fg:x="4106" fg:w="3"/><text x="49.2641%" y="591.50"/></g><g><title>__GI___libc_free (4 samples, 0.05%)</title><rect x="48.9808%" y="581" width="0.0477%" height="15" fill="rgb(224,157,47)" fg:x="4109" fg:w="4"/><text x="49.2999%" y="591.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="48.9927%" y="565" width="0.0358%" height="15" fill="rgb(226,84,45)" fg:x="4110" fg:w="3"/><text x="49.3118%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="49.0285%" y="581" width="0.0119%" height="15" fill="rgb(208,207,23)" fg:x="4113" fg:w="1"/><text x="49.3476%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="49.0523%" y="565" width="0.0119%" height="15" fill="rgb(253,34,51)" fg:x="4115" fg:w="1"/><text x="49.3714%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="49.0643%" y="565" width="0.0119%" height="15" fill="rgb(227,26,34)" fg:x="4116" fg:w="1"/><text x="49.3834%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="49.0881%" y="501" width="0.0119%" height="15" fill="rgb(245,75,19)" fg:x="4118" fg:w="1"/><text x="49.4072%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="49.0881%" y="485" width="0.0119%" height="15" fill="rgb(250,191,31)" fg:x="4118" fg:w="1"/><text x="49.4072%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="49.0762%" y="549" width="0.0477%" height="15" fill="rgb(224,11,50)" fg:x="4117" fg:w="4"/><text x="49.3953%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="49.0881%" y="533" width="0.0358%" height="15" fill="rgb(231,171,7)" fg:x="4118" fg:w="3"/><text x="49.4072%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="49.0881%" y="517" width="0.0358%" height="15" fill="rgb(252,214,10)" fg:x="4118" fg:w="3"/><text x="49.4072%" y="527.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="49.1000%" y="501" width="0.0238%" height="15" fill="rgb(249,45,46)" fg:x="4119" fg:w="2"/><text x="49.4191%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="49.1119%" y="485" width="0.0119%" height="15" fill="rgb(240,173,7)" fg:x="4120" fg:w="1"/><text x="49.4310%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="49.1119%" y="469" width="0.0119%" height="15" fill="rgb(235,214,13)" fg:x="4120" fg:w="1"/><text x="49.4310%" y="479.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="49.1119%" y="453" width="0.0119%" height="15" fill="rgb(245,156,8)" fg:x="4120" fg:w="1"/><text x="49.4310%" y="463.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="49.1119%" y="437" width="0.0119%" height="15" fill="rgb(235,46,12)" fg:x="4120" fg:w="1"/><text x="49.4310%" y="447.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="49.1239%" y="533" width="0.0119%" height="15" fill="rgb(221,81,14)" fg:x="4121" fg:w="1"/><text x="49.4430%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="49.1239%" y="517" width="0.0119%" height="15" fill="rgb(238,207,9)" fg:x="4121" fg:w="1"/><text x="49.4430%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="49.1358%" y="533" width="0.0238%" height="15" fill="rgb(224,129,35)" fg:x="4122" fg:w="2"/><text x="49.4549%" y="543.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="49.1358%" y="517" width="0.0238%" height="15" fill="rgb(243,218,34)" fg:x="4122" fg:w="2"/><text x="49.4549%" y="527.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="49.1358%" y="501" width="0.0238%" height="15" fill="rgb(220,166,13)" fg:x="4122" fg:w="2"/><text x="49.4549%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="49.1596%" y="517" width="0.0119%" height="15" fill="rgb(227,167,49)" fg:x="4124" fg:w="1"/><text x="49.4787%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="49.1596%" y="501" width="0.0119%" height="15" fill="rgb(234,142,12)" fg:x="4124" fg:w="1"/><text x="49.4787%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="49.1715%" y="517" width="0.0119%" height="15" fill="rgb(207,100,48)" fg:x="4125" fg:w="1"/><text x="49.4906%" y="527.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="49.1715%" y="501" width="0.0119%" height="15" fill="rgb(210,25,14)" fg:x="4125" fg:w="1"/><text x="49.4906%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="49.1715%" y="485" width="0.0119%" height="15" fill="rgb(246,116,27)" fg:x="4125" fg:w="1"/><text x="49.4906%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="49.1715%" y="469" width="0.0119%" height="15" fill="rgb(214,193,42)" fg:x="4125" fg:w="1"/><text x="49.4906%" y="479.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="49.1835%" y="501" width="0.0119%" height="15" fill="rgb(214,122,8)" fg:x="4126" fg:w="1"/><text x="49.5026%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="49.1835%" y="485" width="0.0119%" height="15" fill="rgb(244,173,18)" fg:x="4126" fg:w="1"/><text x="49.5026%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="49.1954%" y="501" width="0.0238%" height="15" fill="rgb(232,68,19)" fg:x="4127" fg:w="2"/><text x="49.5145%" y="511.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="49.1954%" y="485" width="0.0238%" height="15" fill="rgb(236,224,1)" fg:x="4127" fg:w="2"/><text x="49.5145%" y="495.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="49.2073%" y="469" width="0.0119%" height="15" fill="rgb(240,11,8)" fg:x="4128" fg:w="1"/><text x="49.5264%" y="479.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="49.2192%" y="485" width="0.0238%" height="15" fill="rgb(244,159,20)" fg:x="4129" fg:w="2"/><text x="49.5383%" y="495.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="49.2192%" y="469" width="0.0238%" height="15" fill="rgb(240,223,54)" fg:x="4129" fg:w="2"/><text x="49.5383%" y="479.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="49.2431%" y="485" width="0.0119%" height="15" fill="rgb(237,146,5)" fg:x="4131" fg:w="1"/><text x="49.5622%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="49.2550%" y="469" width="0.0119%" height="15" fill="rgb(218,221,32)" fg:x="4132" fg:w="1"/><text x="49.5741%" y="479.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="49.2550%" y="453" width="0.0119%" height="15" fill="rgb(244,96,26)" fg:x="4132" fg:w="1"/><text x="49.5741%" y="463.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="49.2550%" y="437" width="0.0119%" height="15" fill="rgb(245,184,37)" fg:x="4132" fg:w="1"/><text x="49.5741%" y="447.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="49.2669%" y="437" width="0.0238%" height="15" fill="rgb(248,91,47)" fg:x="4133" fg:w="2"/><text x="49.5860%" y="447.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="49.2788%" y="421" width="0.0119%" height="15" fill="rgb(243,199,8)" fg:x="4134" fg:w="1"/><text x="49.5979%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="49.0762%" y="565" width="0.2265%" height="15" fill="rgb(249,12,15)" fg:x="4117" fg:w="19"/><text x="49.3953%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="49.1239%" y="549" width="0.1788%" height="15" fill="rgb(245,97,12)" fg:x="4121" fg:w="15"/><text x="49.4430%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="49.1596%" y="533" width="0.1430%" height="15" fill="rgb(244,61,1)" fg:x="4124" fg:w="12"/><text x="49.4787%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="49.1835%" y="517" width="0.1192%" height="15" fill="rgb(222,194,10)" fg:x="4126" fg:w="10"/><text x="49.5026%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="49.2192%" y="501" width="0.0834%" height="15" fill="rgb(226,178,8)" fg:x="4129" fg:w="7"/><text x="49.5383%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="49.2550%" y="485" width="0.0477%" height="15" fill="rgb(241,32,34)" fg:x="4132" fg:w="4"/><text x="49.5741%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="49.2669%" y="469" width="0.0358%" height="15" fill="rgb(254,26,6)" fg:x="4133" fg:w="3"/><text x="49.5860%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="49.2669%" y="453" width="0.0358%" height="15" fill="rgb(249,71,11)" fg:x="4133" fg:w="3"/><text x="49.5860%" y="463.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="49.2907%" y="437" width="0.0119%" height="15" fill="rgb(232,170,27)" fg:x="4135" fg:w="1"/><text x="49.6098%" y="447.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="49.2907%" y="421" width="0.0119%" height="15" fill="rgb(214,223,17)" fg:x="4135" fg:w="1"/><text x="49.6098%" y="431.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="49.2907%" y="405" width="0.0119%" height="15" fill="rgb(250,18,15)" fg:x="4135" fg:w="1"/><text x="49.6098%" y="415.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="49.3027%" y="549" width="0.0238%" height="15" fill="rgb(212,153,51)" fg:x="4136" fg:w="2"/><text x="49.6218%" y="559.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="49.3027%" y="533" width="0.0238%" height="15" fill="rgb(219,194,12)" fg:x="4136" fg:w="2"/><text x="49.6218%" y="543.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="49.3265%" y="549" width="0.0119%" height="15" fill="rgb(212,58,17)" fg:x="4138" fg:w="1"/><text x="49.6456%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="49.3384%" y="533" width="0.0119%" height="15" fill="rgb(254,5,10)" fg:x="4139" fg:w="1"/><text x="49.6575%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="49.3384%" y="517" width="0.0119%" height="15" fill="rgb(246,91,7)" fg:x="4139" fg:w="1"/><text x="49.6575%" y="527.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="49.3503%" y="501" width="0.0238%" height="15" fill="rgb(218,108,49)" fg:x="4140" fg:w="2"/><text x="49.6694%" y="511.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="49.3503%" y="485" width="0.0238%" height="15" fill="rgb(238,123,20)" fg:x="4140" fg:w="2"/><text x="49.6694%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="49.3861%" y="485" width="0.0119%" height="15" fill="rgb(231,69,23)" fg:x="4143" fg:w="1"/><text x="49.7052%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="49.3861%" y="469" width="0.0119%" height="15" fill="rgb(230,209,3)" fg:x="4143" fg:w="1"/><text x="49.7052%" y="479.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="49.3742%" y="501" width="0.0477%" height="15" fill="rgb(231,19,0)" fg:x="4142" fg:w="4"/><text x="49.6933%" y="511.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2 samples, 0.02%)</title><rect x="49.3980%" y="485" width="0.0238%" height="15" fill="rgb(226,192,25)" fg:x="4144" fg:w="2"/><text x="49.7171%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="49.4219%" y="485" width="0.0119%" height="15" fill="rgb(223,175,53)" fg:x="4146" fg:w="1"/><text x="49.7410%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="49.4219%" y="469" width="0.0119%" height="15" fill="rgb(248,35,51)" fg:x="4146" fg:w="1"/><text x="49.7410%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="49.3503%" y="517" width="0.0954%" height="15" fill="rgb(230,37,26)" fg:x="4140" fg:w="8"/><text x="49.6694%" y="527.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="49.4219%" y="501" width="0.0238%" height="15" fill="rgb(206,120,22)" fg:x="4146" fg:w="2"/><text x="49.7410%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="49.4338%" y="485" width="0.0119%" height="15" fill="rgb(207,165,28)" fg:x="4147" fg:w="1"/><text x="49.7529%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="49.4338%" y="469" width="0.0119%" height="15" fill="rgb(226,23,46)" fg:x="4147" fg:w="1"/><text x="49.7529%" y="479.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="49.4338%" y="453" width="0.0119%" height="15" fill="rgb(208,130,44)" fg:x="4147" fg:w="1"/><text x="49.7529%" y="463.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="49.4457%" y="501" width="0.0238%" height="15" fill="rgb(231,67,8)" fg:x="4148" fg:w="2"/><text x="49.7648%" y="511.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="49.4457%" y="485" width="0.0238%" height="15" fill="rgb(205,183,22)" fg:x="4148" fg:w="2"/><text x="49.7648%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="49.3503%" y="533" width="0.1311%" height="15" fill="rgb(224,47,9)" fg:x="4140" fg:w="11"/><text x="49.6694%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="49.4457%" y="517" width="0.0358%" height="15" fill="rgb(250,183,49)" fg:x="4148" fg:w="3"/><text x="49.7648%" y="527.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="49.4695%" y="501" width="0.0119%" height="15" fill="rgb(220,151,39)" fg:x="4150" fg:w="1"/><text x="49.7886%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="49.4815%" y="517" width="0.0119%" height="15" fill="rgb(220,118,20)" fg:x="4151" fg:w="1"/><text x="49.8006%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="49.4815%" y="501" width="0.0119%" height="15" fill="rgb(231,65,51)" fg:x="4151" fg:w="1"/><text x="49.8006%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="49.3027%" y="565" width="0.2026%" height="15" fill="rgb(253,125,37)" fg:x="4136" fg:w="17"/><text x="49.6218%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="49.3384%" y="549" width="0.1669%" height="15" fill="rgb(232,102,6)" fg:x="4139" fg:w="14"/><text x="49.6575%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="49.4815%" y="533" width="0.0238%" height="15" fill="rgb(251,105,13)" fg:x="4151" fg:w="2"/><text x="49.8006%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="49.4934%" y="517" width="0.0119%" height="15" fill="rgb(222,179,29)" fg:x="4152" fg:w="1"/><text x="49.8125%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="49.5053%" y="565" width="0.0119%" height="15" fill="rgb(229,180,53)" fg:x="4153" fg:w="1"/><text x="49.8244%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="49.5053%" y="549" width="0.0119%" height="15" fill="rgb(238,104,13)" fg:x="4153" fg:w="1"/><text x="49.8244%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="49.5053%" y="533" width="0.0119%" height="15" fill="rgb(210,130,5)" fg:x="4153" fg:w="1"/><text x="49.8244%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="49.5172%" y="549" width="0.0119%" height="15" fill="rgb(233,87,49)" fg:x="4154" fg:w="1"/><text x="49.8363%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="49.5172%" y="533" width="0.0119%" height="15" fill="rgb(243,34,9)" fg:x="4154" fg:w="1"/><text x="49.8363%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="49.5291%" y="533" width="0.0119%" height="15" fill="rgb(235,225,10)" fg:x="4155" fg:w="1"/><text x="49.8482%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="49.5291%" y="517" width="0.0119%" height="15" fill="rgb(212,0,30)" fg:x="4155" fg:w="1"/><text x="49.8482%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="49.5411%" y="517" width="0.0119%" height="15" fill="rgb(211,177,0)" fg:x="4156" fg:w="1"/><text x="49.8602%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="49.5411%" y="501" width="0.0119%" height="15" fill="rgb(225,220,11)" fg:x="4156" fg:w="1"/><text x="49.8602%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="49.5411%" y="533" width="0.0238%" height="15" fill="rgb(215,10,13)" fg:x="4156" fg:w="2"/><text x="49.8602%" y="543.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="49.5530%" y="517" width="0.0119%" height="15" fill="rgb(240,177,14)" fg:x="4157" fg:w="1"/><text x="49.8721%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="49.5530%" y="501" width="0.0119%" height="15" fill="rgb(243,7,39)" fg:x="4157" fg:w="1"/><text x="49.8721%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="49.5649%" y="517" width="0.0238%" height="15" fill="rgb(212,99,0)" fg:x="4158" fg:w="2"/><text x="49.8840%" y="527.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="49.5649%" y="501" width="0.0238%" height="15" fill="rgb(225,162,48)" fg:x="4158" fg:w="2"/><text x="49.8840%" y="511.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="49.5649%" y="485" width="0.0238%" height="15" fill="rgb(246,16,25)" fg:x="4158" fg:w="2"/><text x="49.8840%" y="495.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="49.5887%" y="501" width="0.0119%" height="15" fill="rgb(220,150,2)" fg:x="4160" fg:w="1"/><text x="49.9078%" y="511.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="49.6007%" y="485" width="0.0238%" height="15" fill="rgb(237,113,11)" fg:x="4161" fg:w="2"/><text x="49.9198%" y="495.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="49.6007%" y="469" width="0.0238%" height="15" fill="rgb(236,70,20)" fg:x="4161" fg:w="2"/><text x="49.9198%" y="479.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="49.6245%" y="485" width="0.0119%" height="15" fill="rgb(234,94,7)" fg:x="4163" fg:w="1"/><text x="49.9436%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="49.6007%" y="501" width="0.0477%" height="15" fill="rgb(250,221,0)" fg:x="4161" fg:w="4"/><text x="49.9198%" y="511.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="49.6364%" y="485" width="0.0119%" height="15" fill="rgb(245,149,46)" fg:x="4164" fg:w="1"/><text x="49.9555%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="49.6364%" y="469" width="0.0119%" height="15" fill="rgb(215,37,27)" fg:x="4164" fg:w="1"/><text x="49.9555%" y="479.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="49.6364%" y="453" width="0.0119%" height="15" fill="rgb(232,65,3)" fg:x="4164" fg:w="1"/><text x="49.9555%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (52 samples, 0.62%)</title><rect x="49.0404%" y="581" width="0.6199%" height="15" fill="rgb(214,2,16)" fg:x="4114" fg:w="52"/><text x="49.3595%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="49.5172%" y="565" width="0.1430%" height="15" fill="rgb(227,131,50)" fg:x="4154" fg:w="12"/><text x="49.8363%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="49.5291%" y="549" width="0.1311%" height="15" fill="rgb(247,131,45)" fg:x="4155" fg:w="11"/><text x="49.8482%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="49.5649%" y="533" width="0.0954%" height="15" fill="rgb(215,97,47)" fg:x="4158" fg:w="8"/><text x="49.8840%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="49.5887%" y="517" width="0.0715%" height="15" fill="rgb(233,143,12)" fg:x="4160" fg:w="6"/><text x="49.9078%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="49.6483%" y="501" width="0.0119%" height="15" fill="rgb(222,57,17)" fg:x="4165" fg:w="1"/><text x="49.9674%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="49.6483%" y="485" width="0.0119%" height="15" fill="rgb(214,119,38)" fg:x="4165" fg:w="1"/><text x="49.9674%" y="495.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="49.6483%" y="469" width="0.0119%" height="15" fill="rgb(217,28,47)" fg:x="4165" fg:w="1"/><text x="49.9674%" y="479.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="49.6483%" y="453" width="0.0119%" height="15" fill="rgb(231,14,52)" fg:x="4165" fg:w="1"/><text x="49.9674%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (59 samples, 0.70%)</title><rect x="48.9808%" y="597" width="0.7033%" height="15" fill="rgb(220,158,18)" fg:x="4109" fg:w="59"/><text x="49.2999%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="49.6603%" y="581" width="0.0238%" height="15" fill="rgb(222,143,46)" fg:x="4166" fg:w="2"/><text x="49.9794%" y="591.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="49.6603%" y="565" width="0.0238%" height="15" fill="rgb(227,165,5)" fg:x="4166" fg:w="2"/><text x="49.9794%" y="575.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="49.6603%" y="549" width="0.0238%" height="15" fill="rgb(216,222,49)" fg:x="4166" fg:w="2"/><text x="49.9794%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (247 samples, 2.94%)</title><rect x="46.7517%" y="709" width="2.9443%" height="15" fill="rgb(238,73,39)" fg:x="3922" fg:w="247"/><text x="47.0708%" y="719.50">..r </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (162 samples, 1.93%)</title><rect x="47.7649%" y="693" width="1.9311%" height="15" fill="rgb(252,115,9)" fg:x="4007" fg:w="162"/><text x="48.0840%" y="703.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (126 samples, 1.50%)</title><rect x="48.1941%" y="677" width="1.5020%" height="15" fill="rgb(238,202,4)" fg:x="4043" fg:w="126"/><text x="48.5132%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (106 samples, 1.26%)</title><rect x="48.4325%" y="661" width="1.2636%" height="15" fill="rgb(252,153,44)" fg:x="4063" fg:w="106"/><text x="48.7516%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (94 samples, 1.12%)</title><rect x="48.5755%" y="645" width="1.1205%" height="15" fill="rgb(235,128,27)" fg:x="4075" fg:w="94"/><text x="48.8946%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (63 samples, 0.75%)</title><rect x="48.9450%" y="629" width="0.7510%" height="15" fill="rgb(221,121,47)" fg:x="4106" fg:w="63"/><text x="49.2641%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (63 samples, 0.75%)</title><rect x="48.9450%" y="613" width="0.7510%" height="15" fill="rgb(247,211,47)" fg:x="4106" fg:w="63"/><text x="49.2641%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="49.6841%" y="597" width="0.0119%" height="15" fill="rgb(252,47,49)" fg:x="4168" fg:w="1"/><text x="50.0032%" y="607.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="49.6841%" y="581" width="0.0119%" height="15" fill="rgb(219,119,53)" fg:x="4168" fg:w="1"/><text x="50.0032%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="49.6960%" y="677" width="0.0119%" height="15" fill="rgb(243,165,53)" fg:x="4169" fg:w="1"/><text x="50.0151%" y="687.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="49.6960%" y="661" width="0.0119%" height="15" fill="rgb(230,12,35)" fg:x="4169" fg:w="1"/><text x="50.0151%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="49.7080%" y="613" width="0.0119%" height="15" fill="rgb(239,57,49)" fg:x="4170" fg:w="1"/><text x="50.0271%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="49.7080%" y="597" width="0.0119%" height="15" fill="rgb(231,154,7)" fg:x="4170" fg:w="1"/><text x="50.0271%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="49.7318%" y="485" width="0.1073%" height="15" fill="rgb(248,81,34)" fg:x="4172" fg:w="9"/><text x="50.0509%" y="495.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="49.7318%" y="469" width="0.1073%" height="15" fill="rgb(247,9,5)" fg:x="4172" fg:w="9"/><text x="50.0509%" y="479.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="49.7318%" y="453" width="0.1073%" height="15" fill="rgb(228,172,27)" fg:x="4172" fg:w="9"/><text x="50.0509%" y="463.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="49.7556%" y="437" width="0.0834%" height="15" fill="rgb(230,57,44)" fg:x="4174" fg:w="7"/><text x="50.0747%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="49.7080%" y="661" width="0.1430%" height="15" fill="rgb(249,35,22)" fg:x="4170" fg:w="12"/><text x="50.0271%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="49.7080%" y="645" width="0.1430%" height="15" fill="rgb(250,137,27)" fg:x="4170" fg:w="12"/><text x="50.0271%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="49.7080%" y="629" width="0.1430%" height="15" fill="rgb(251,57,31)" fg:x="4170" fg:w="12"/><text x="50.0271%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="49.7199%" y="613" width="0.1311%" height="15" fill="rgb(238,60,0)" fg:x="4171" fg:w="11"/><text x="50.0390%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="49.7199%" y="597" width="0.1311%" height="15" fill="rgb(242,185,39)" fg:x="4171" fg:w="11"/><text x="50.0390%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="49.7199%" y="581" width="0.1311%" height="15" fill="rgb(240,63,43)" fg:x="4171" fg:w="11"/><text x="50.0390%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="49.7199%" y="565" width="0.1311%" height="15" fill="rgb(236,155,6)" fg:x="4171" fg:w="11"/><text x="50.0390%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (11 samples, 0.13%)</title><rect x="49.7199%" y="549" width="0.1311%" height="15" fill="rgb(215,11,29)" fg:x="4171" fg:w="11"/><text x="50.0390%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="49.7199%" y="533" width="0.1311%" height="15" fill="rgb(228,180,48)" fg:x="4171" fg:w="11"/><text x="50.0390%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="49.7199%" y="517" width="0.1311%" height="15" fill="rgb(241,102,12)" fg:x="4171" fg:w="11"/><text x="50.0390%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="49.7199%" y="501" width="0.1311%" height="15" fill="rgb(246,213,4)" fg:x="4171" fg:w="11"/><text x="50.0390%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="49.8391%" y="485" width="0.0119%" height="15" fill="rgb(218,134,35)" fg:x="4181" fg:w="1"/><text x="50.1582%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="49.8391%" y="469" width="0.0119%" height="15" fill="rgb(251,117,35)" fg:x="4181" fg:w="1"/><text x="50.1582%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="49.8391%" y="453" width="0.0119%" height="15" fill="rgb(206,156,45)" fg:x="4181" fg:w="1"/><text x="50.1582%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="49.8510%" y="629" width="0.0119%" height="15" fill="rgb(218,52,27)" fg:x="4182" fg:w="1"/><text x="50.1701%" y="639.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="49.8510%" y="613" width="0.0119%" height="15" fill="rgb(238,83,36)" fg:x="4182" fg:w="1"/><text x="50.1701%" y="623.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="49.8748%" y="565" width="0.0834%" height="15" fill="rgb(218,53,43)" fg:x="4184" fg:w="7"/><text x="50.1939%" y="575.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="49.8748%" y="549" width="0.0834%" height="15" fill="rgb(239,54,39)" fg:x="4184" fg:w="7"/><text x="50.1939%" y="559.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="49.8748%" y="533" width="0.0834%" height="15" fill="rgb(212,198,13)" fg:x="4184" fg:w="7"/><text x="50.1939%" y="543.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="49.9583%" y="501" width="0.0238%" height="15" fill="rgb(234,54,46)" fg:x="4191" fg:w="2"/><text x="50.2774%" y="511.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="49.9583%" y="485" width="0.0238%" height="15" fill="rgb(217,120,7)" fg:x="4191" fg:w="2"/><text x="50.2774%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="50.0060%" y="469" width="0.0119%" height="15" fill="rgb(246,39,15)" fg:x="4195" fg:w="1"/><text x="50.3251%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="50.0060%" y="453" width="0.0119%" height="15" fill="rgb(242,143,31)" fg:x="4195" fg:w="1"/><text x="50.3251%" y="463.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="50.0060%" y="437" width="0.0119%" height="15" fill="rgb(252,60,24)" fg:x="4195" fg:w="1"/><text x="50.3251%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="50.0179%" y="453" width="0.0119%" height="15" fill="rgb(249,220,7)" fg:x="4196" fg:w="1"/><text x="50.3370%" y="463.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="50.0179%" y="437" width="0.0119%" height="15" fill="rgb(236,67,13)" fg:x="4196" fg:w="1"/><text x="50.3370%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="50.0298%" y="405" width="0.0119%" height="15" fill="rgb(210,62,39)" fg:x="4197" fg:w="1"/><text x="50.3489%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="50.0298%" y="389" width="0.0119%" height="15" fill="rgb(219,122,53)" fg:x="4197" fg:w="1"/><text x="50.3489%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="50.0298%" y="373" width="0.0119%" height="15" fill="rgb(218,87,25)" fg:x="4197" fg:w="1"/><text x="50.3489%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="49.9821%" y="485" width="0.0715%" height="15" fill="rgb(234,179,48)" fg:x="4193" fg:w="6"/><text x="50.3012%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="50.0179%" y="469" width="0.0358%" height="15" fill="rgb(248,90,0)" fg:x="4196" fg:w="3"/><text x="50.3370%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="50.0298%" y="453" width="0.0238%" height="15" fill="rgb(207,228,37)" fg:x="4197" fg:w="2"/><text x="50.3489%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="50.0298%" y="437" width="0.0238%" height="15" fill="rgb(235,214,15)" fg:x="4197" fg:w="2"/><text x="50.3489%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="50.0298%" y="421" width="0.0238%" height="15" fill="rgb(210,144,39)" fg:x="4197" fg:w="2"/><text x="50.3489%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="50.0417%" y="405" width="0.0119%" height="15" fill="rgb(222,67,41)" fg:x="4198" fg:w="1"/><text x="50.3608%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="50.0417%" y="389" width="0.0119%" height="15" fill="rgb(205,35,37)" fg:x="4198" fg:w="1"/><text x="50.3608%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="50.0417%" y="373" width="0.0119%" height="15" fill="rgb(216,125,40)" fg:x="4198" fg:w="1"/><text x="50.3608%" y="383.50"/></g><g><title>operator new (14 samples, 0.17%)</title><rect x="50.0536%" y="469" width="0.1669%" height="15" fill="rgb(228,227,20)" fg:x="4199" fg:w="14"/><text x="50.3727%" y="479.50"/></g><g><title>__GI___libc_malloc (14 samples, 0.17%)</title><rect x="50.0536%" y="453" width="0.1669%" height="15" fill="rgb(242,173,45)" fg:x="4199" fg:w="14"/><text x="50.3727%" y="463.50"/></g><g><title>_int_malloc (12 samples, 0.14%)</title><rect x="50.0775%" y="437" width="0.1430%" height="15" fill="rgb(215,79,24)" fg:x="4201" fg:w="12"/><text x="50.3966%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (23 samples, 0.27%)</title><rect x="49.9583%" y="533" width="0.2742%" height="15" fill="rgb(238,164,38)" fg:x="4191" fg:w="23"/><text x="50.2774%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="49.9583%" y="517" width="0.2742%" height="15" fill="rgb(245,196,38)" fg:x="4191" fg:w="23"/><text x="50.2774%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (21 samples, 0.25%)</title><rect x="49.9821%" y="501" width="0.2503%" height="15" fill="rgb(231,217,29)" fg:x="4193" fg:w="21"/><text x="50.3012%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="50.0536%" y="485" width="0.1788%" height="15" fill="rgb(245,6,4)" fg:x="4199" fg:w="15"/><text x="50.3727%" y="495.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="50.2205%" y="469" width="0.0119%" height="15" fill="rgb(214,76,49)" fg:x="4213" fg:w="1"/><text x="50.5396%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (31 samples, 0.37%)</title><rect x="49.8748%" y="581" width="0.3695%" height="15" fill="rgb(205,96,12)" fg:x="4184" fg:w="31"/><text x="50.1939%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (24 samples, 0.29%)</title><rect x="49.9583%" y="565" width="0.2861%" height="15" fill="rgb(243,131,4)" fg:x="4191" fg:w="24"/><text x="50.2774%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="49.9583%" y="549" width="0.2861%" height="15" fill="rgb(214,114,4)" fg:x="4191" fg:w="24"/><text x="50.2774%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="50.2324%" y="533" width="0.0119%" height="15" fill="rgb(234,215,15)" fg:x="4214" fg:w="1"/><text x="50.5515%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (41 samples, 0.49%)</title><rect x="49.8510%" y="661" width="0.4887%" height="15" fill="rgb(250,216,45)" fg:x="4182" fg:w="41"/><text x="50.1701%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (41 samples, 0.49%)</title><rect x="49.8510%" y="645" width="0.4887%" height="15" fill="rgb(236,128,4)" fg:x="4182" fg:w="41"/><text x="50.1701%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (40 samples, 0.48%)</title><rect x="49.8629%" y="629" width="0.4768%" height="15" fill="rgb(234,50,33)" fg:x="4183" fg:w="40"/><text x="50.1820%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (39 samples, 0.46%)</title><rect x="49.8748%" y="613" width="0.4649%" height="15" fill="rgb(253,131,37)" fg:x="4184" fg:w="39"/><text x="50.1939%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (39 samples, 0.46%)</title><rect x="49.8748%" y="597" width="0.4649%" height="15" fill="rgb(218,55,27)" fg:x="4184" fg:w="39"/><text x="50.1939%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (8 samples, 0.10%)</title><rect x="50.2444%" y="581" width="0.0954%" height="15" fill="rgb(241,220,28)" fg:x="4215" fg:w="8"/><text x="50.5635%" y="591.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="50.2444%" y="565" width="0.0954%" height="15" fill="rgb(241,90,48)" fg:x="4215" fg:w="8"/><text x="50.5635%" y="575.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="50.2444%" y="549" width="0.0954%" height="15" fill="rgb(216,43,37)" fg:x="4215" fg:w="8"/><text x="50.5635%" y="559.50"/></g><g><title>_int_malloc (8 samples, 0.10%)</title><rect x="50.2444%" y="533" width="0.0954%" height="15" fill="rgb(207,173,9)" fg:x="4215" fg:w="8"/><text x="50.5635%" y="543.50"/></g><g><title>operator new (10 samples, 0.12%)</title><rect x="50.3993%" y="549" width="0.1192%" height="15" fill="rgb(240,126,30)" fg:x="4228" fg:w="10"/><text x="50.7184%" y="559.50"/></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="50.3993%" y="533" width="0.1192%" height="15" fill="rgb(228,178,53)" fg:x="4228" fg:w="10"/><text x="50.7184%" y="543.50"/></g><g><title>_int_malloc (8 samples, 0.10%)</title><rect x="50.4232%" y="517" width="0.0954%" height="15" fill="rgb(217,33,4)" fg:x="4230" fg:w="8"/><text x="50.7423%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="50.5305%" y="517" width="0.0119%" height="15" fill="rgb(206,124,34)" fg:x="4239" fg:w="1"/><text x="50.8496%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="50.5305%" y="501" width="0.0119%" height="15" fill="rgb(208,122,53)" fg:x="4239" fg:w="1"/><text x="50.8496%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="50.5543%" y="501" width="0.0119%" height="15" fill="rgb(215,202,26)" fg:x="4241" fg:w="1"/><text x="50.8734%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="50.5543%" y="485" width="0.0119%" height="15" fill="rgb(232,198,31)" fg:x="4241" fg:w="1"/><text x="50.8734%" y="495.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="50.5424%" y="517" width="0.0358%" height="15" fill="rgb(222,23,35)" fg:x="4240" fg:w="3"/><text x="50.8615%" y="527.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="50.5662%" y="501" width="0.0119%" height="15" fill="rgb(242,27,53)" fg:x="4242" fg:w="1"/><text x="50.8853%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="50.5662%" y="485" width="0.0119%" height="15" fill="rgb(210,216,42)" fg:x="4242" fg:w="1"/><text x="50.8853%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="50.5662%" y="469" width="0.0119%" height="15" fill="rgb(234,39,38)" fg:x="4242" fg:w="1"/><text x="50.8853%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="50.5662%" y="453" width="0.0119%" height="15" fill="rgb(235,126,54)" fg:x="4242" fg:w="1"/><text x="50.8853%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="50.5781%" y="485" width="0.0119%" height="15" fill="rgb(235,150,33)" fg:x="4243" fg:w="1"/><text x="50.8972%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="50.5781%" y="469" width="0.0119%" height="15" fill="rgb(249,49,53)" fg:x="4243" fg:w="1"/><text x="50.8972%" y="479.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="50.5901%" y="453" width="0.0715%" height="15" fill="rgb(238,60,50)" fg:x="4244" fg:w="6"/><text x="50.9092%" y="463.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="50.5901%" y="437" width="0.0715%" height="15" fill="rgb(210,5,2)" fg:x="4244" fg:w="6"/><text x="50.9092%" y="447.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="50.5901%" y="421" width="0.0715%" height="15" fill="rgb(214,207,24)" fg:x="4244" fg:w="6"/><text x="50.9092%" y="431.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="50.6616%" y="405" width="0.0119%" height="15" fill="rgb(228,173,2)" fg:x="4250" fg:w="1"/><text x="50.9807%" y="415.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="50.6616%" y="421" width="0.0238%" height="15" fill="rgb(244,26,8)" fg:x="4250" fg:w="2"/><text x="50.9807%" y="431.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="50.6735%" y="405" width="0.0119%" height="15" fill="rgb(249,153,35)" fg:x="4251" fg:w="1"/><text x="50.9926%" y="415.50"/></g><g><title>operator new (14 samples, 0.17%)</title><rect x="50.6854%" y="309" width="0.1669%" height="15" fill="rgb(221,215,40)" fg:x="4252" fg:w="14"/><text x="51.0045%" y="319.50"/></g><g><title>__GI___libc_malloc (14 samples, 0.17%)</title><rect x="50.6854%" y="293" width="0.1669%" height="15" fill="rgb(238,106,35)" fg:x="4252" fg:w="14"/><text x="51.0045%" y="303.50"/></g><g><title>_int_malloc (10 samples, 0.12%)</title><rect x="50.7331%" y="277" width="0.1192%" height="15" fill="rgb(207,195,21)" fg:x="4256" fg:w="10"/><text x="51.0522%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (28 samples, 0.33%)</title><rect x="50.5305%" y="533" width="0.3338%" height="15" fill="rgb(205,43,29)" fg:x="4239" fg:w="28"/><text x="50.8496%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (24 samples, 0.29%)</title><rect x="50.5781%" y="517" width="0.2861%" height="15" fill="rgb(236,35,21)" fg:x="4243" fg:w="24"/><text x="50.8972%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="50.5781%" y="501" width="0.2861%" height="15" fill="rgb(244,74,8)" fg:x="4243" fg:w="24"/><text x="50.8972%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (23 samples, 0.27%)</title><rect x="50.5901%" y="485" width="0.2742%" height="15" fill="rgb(241,229,7)" fg:x="4244" fg:w="23"/><text x="50.9092%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="50.5901%" y="469" width="0.2742%" height="15" fill="rgb(212,223,25)" fg:x="4244" fg:w="23"/><text x="50.9092%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (17 samples, 0.20%)</title><rect x="50.6616%" y="453" width="0.2026%" height="15" fill="rgb(234,58,53)" fg:x="4250" fg:w="17"/><text x="50.9807%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="50.6616%" y="437" width="0.2026%" height="15" fill="rgb(244,36,1)" fg:x="4250" fg:w="17"/><text x="50.9807%" y="447.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="50.6854%" y="421" width="0.1788%" height="15" fill="rgb(222,40,54)" fg:x="4252" fg:w="15"/><text x="51.0045%" y="431.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (15 samples, 0.18%)</title><rect x="50.6854%" y="405" width="0.1788%" height="15" fill="rgb(210,207,39)" fg:x="4252" fg:w="15"/><text x="51.0045%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="50.6854%" y="389" width="0.1788%" height="15" fill="rgb(234,52,14)" fg:x="4252" fg:w="15"/><text x="51.0045%" y="399.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (15 samples, 0.18%)</title><rect x="50.6854%" y="373" width="0.1788%" height="15" fill="rgb(239,108,46)" fg:x="4252" fg:w="15"/><text x="51.0045%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="50.6854%" y="357" width="0.1788%" height="15" fill="rgb(252,223,5)" fg:x="4252" fg:w="15"/><text x="51.0045%" y="367.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (15 samples, 0.18%)</title><rect x="50.6854%" y="341" width="0.1788%" height="15" fill="rgb(227,181,11)" fg:x="4252" fg:w="15"/><text x="51.0045%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="50.6854%" y="325" width="0.1788%" height="15" fill="rgb(248,126,40)" fg:x="4252" fg:w="15"/><text x="51.0045%" y="335.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="50.8523%" y="309" width="0.0119%" height="15" fill="rgb(243,1,18)" fg:x="4266" fg:w="1"/><text x="51.1714%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="50.8523%" y="293" width="0.0119%" height="15" fill="rgb(214,145,23)" fg:x="4266" fg:w="1"/><text x="51.1714%" y="303.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="50.8761%" y="485" width="0.0596%" height="15" fill="rgb(241,218,11)" fg:x="4268" fg:w="5"/><text x="51.1952%" y="495.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="50.8761%" y="469" width="0.0596%" height="15" fill="rgb(214,219,24)" fg:x="4268" fg:w="5"/><text x="51.1952%" y="479.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="50.8761%" y="453" width="0.0596%" height="15" fill="rgb(235,32,7)" fg:x="4268" fg:w="5"/><text x="51.1952%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="50.9357%" y="469" width="0.0119%" height="15" fill="rgb(227,121,28)" fg:x="4273" fg:w="1"/><text x="51.2548%" y="479.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="50.9357%" y="453" width="0.0119%" height="15" fill="rgb(216,129,49)" fg:x="4273" fg:w="1"/><text x="51.2548%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="50.9357%" y="437" width="0.0119%" height="15" fill="rgb(207,194,50)" fg:x="4273" fg:w="1"/><text x="51.2548%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="50.9357%" y="421" width="0.0119%" height="15" fill="rgb(207,4,18)" fg:x="4273" fg:w="1"/><text x="51.2548%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="50.9477%" y="453" width="0.0119%" height="15" fill="rgb(213,50,30)" fg:x="4274" fg:w="1"/><text x="51.2668%" y="463.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="50.9477%" y="437" width="0.0119%" height="15" fill="rgb(208,77,22)" fg:x="4274" fg:w="1"/><text x="51.2668%" y="447.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="50.9596%" y="453" width="0.0119%" height="15" fill="rgb(244,204,34)" fg:x="4275" fg:w="1"/><text x="51.2787%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="50.9596%" y="437" width="0.0119%" height="15" fill="rgb(230,20,17)" fg:x="4275" fg:w="1"/><text x="51.2787%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="50.9596%" y="421" width="0.0119%" height="15" fill="rgb(237,83,15)" fg:x="4275" fg:w="1"/><text x="51.2787%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="50.9477%" y="469" width="0.1430%" height="15" fill="rgb(221,109,25)" fg:x="4274" fg:w="12"/><text x="51.2668%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="50.9715%" y="453" width="0.1192%" height="15" fill="rgb(205,194,52)" fg:x="4276" fg:w="10"/><text x="51.2906%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (10 samples, 0.12%)</title><rect x="50.9715%" y="437" width="0.1192%" height="15" fill="rgb(244,173,54)" fg:x="4276" fg:w="10"/><text x="51.2906%" y="447.50"/></g><g><title>operator new (10 samples, 0.12%)</title><rect x="50.9715%" y="421" width="0.1192%" height="15" fill="rgb(227,181,18)" fg:x="4276" fg:w="10"/><text x="51.2906%" y="431.50"/></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="50.9715%" y="405" width="0.1192%" height="15" fill="rgb(238,36,30)" fg:x="4276" fg:w="10"/><text x="51.2906%" y="415.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="50.9834%" y="389" width="0.1073%" height="15" fill="rgb(254,85,0)" fg:x="4277" fg:w="9"/><text x="51.3025%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="51.0907%" y="421" width="0.0119%" height="15" fill="rgb(247,63,33)" fg:x="4286" fg:w="1"/><text x="51.4098%" y="431.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="51.0907%" y="405" width="0.0119%" height="15" fill="rgb(220,7,54)" fg:x="4286" fg:w="1"/><text x="51.4098%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="51.1026%" y="405" width="0.0119%" height="15" fill="rgb(238,227,21)" fg:x="4287" fg:w="1"/><text x="51.4217%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="51.1026%" y="389" width="0.0119%" height="15" fill="rgb(237,29,31)" fg:x="4287" fg:w="1"/><text x="51.4217%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="51.1265%" y="373" width="0.0119%" height="15" fill="rgb(211,21,50)" fg:x="4289" fg:w="1"/><text x="51.4456%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="51.1265%" y="357" width="0.0119%" height="15" fill="rgb(239,119,2)" fg:x="4289" fg:w="1"/><text x="51.4456%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="51.1384%" y="341" width="0.0119%" height="15" fill="rgb(250,2,39)" fg:x="4290" fg:w="1"/><text x="51.4575%" y="351.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="51.1384%" y="325" width="0.0119%" height="15" fill="rgb(244,46,53)" fg:x="4290" fg:w="1"/><text x="51.4575%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (54 samples, 0.64%)</title><rect x="50.5185%" y="549" width="0.6437%" height="15" fill="rgb(209,21,19)" fg:x="4238" fg:w="54"/><text x="50.8376%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (25 samples, 0.30%)</title><rect x="50.8642%" y="533" width="0.2980%" height="15" fill="rgb(236,145,4)" fg:x="4267" fg:w="25"/><text x="51.1833%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (25 samples, 0.30%)</title><rect x="50.8642%" y="517" width="0.2980%" height="15" fill="rgb(220,133,36)" fg:x="4267" fg:w="25"/><text x="51.1833%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="50.8761%" y="501" width="0.2861%" height="15" fill="rgb(244,18,3)" fg:x="4268" fg:w="24"/><text x="51.1952%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (19 samples, 0.23%)</title><rect x="50.9357%" y="485" width="0.2265%" height="15" fill="rgb(232,171,48)" fg:x="4273" fg:w="19"/><text x="51.2548%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="51.0907%" y="469" width="0.0715%" height="15" fill="rgb(223,223,53)" fg:x="4286" fg:w="6"/><text x="51.4098%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="51.0907%" y="453" width="0.0715%" height="15" fill="rgb(246,92,13)" fg:x="4286" fg:w="6"/><text x="51.4098%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="51.0907%" y="437" width="0.0715%" height="15" fill="rgb(229,171,10)" fg:x="4286" fg:w="6"/><text x="51.4098%" y="447.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="51.1026%" y="421" width="0.0596%" height="15" fill="rgb(213,131,26)" fg:x="4287" fg:w="5"/><text x="51.4217%" y="431.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (4 samples, 0.05%)</title><rect x="51.1146%" y="405" width="0.0477%" height="15" fill="rgb(242,87,54)" fg:x="4288" fg:w="4"/><text x="51.4337%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="51.1265%" y="389" width="0.0358%" height="15" fill="rgb(237,21,35)" fg:x="4289" fg:w="3"/><text x="51.4456%" y="399.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="51.1384%" y="373" width="0.0238%" height="15" fill="rgb(253,13,47)" fg:x="4290" fg:w="2"/><text x="51.4575%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="51.1384%" y="357" width="0.0238%" height="15" fill="rgb(215,122,49)" fg:x="4290" fg:w="2"/><text x="51.4575%" y="367.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="51.1503%" y="341" width="0.0119%" height="15" fill="rgb(209,179,30)" fg:x="4291" fg:w="1"/><text x="51.4694%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (67 samples, 0.80%)</title><rect x="50.3993%" y="565" width="0.7987%" height="15" fill="rgb(235,100,24)" fg:x="4228" fg:w="67"/><text x="50.7184%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="51.1622%" y="549" width="0.0358%" height="15" fill="rgb(209,67,24)" fg:x="4292" fg:w="3"/><text x="51.4813%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="51.1622%" y="533" width="0.0358%" height="15" fill="rgb(206,74,32)" fg:x="4292" fg:w="3"/><text x="51.4813%" y="543.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="51.1622%" y="517" width="0.0358%" height="15" fill="rgb(212,45,25)" fg:x="4292" fg:w="3"/><text x="51.4813%" y="527.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="51.1622%" y="501" width="0.0358%" height="15" fill="rgb(239,26,3)" fg:x="4292" fg:w="3"/><text x="51.4813%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (78 samples, 0.93%)</title><rect x="50.3517%" y="629" width="0.9298%" height="15" fill="rgb(218,36,15)" fg:x="4224" fg:w="78"/><text x="50.6708%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (77 samples, 0.92%)</title><rect x="50.3636%" y="613" width="0.9179%" height="15" fill="rgb(206,108,24)" fg:x="4225" fg:w="77"/><text x="50.6827%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (75 samples, 0.89%)</title><rect x="50.3874%" y="597" width="0.8940%" height="15" fill="rgb(234,204,42)" fg:x="4227" fg:w="75"/><text x="50.7065%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (75 samples, 0.89%)</title><rect x="50.3874%" y="581" width="0.8940%" height="15" fill="rgb(229,2,11)" fg:x="4227" fg:w="75"/><text x="50.7065%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (7 samples, 0.08%)</title><rect x="51.1980%" y="565" width="0.0834%" height="15" fill="rgb(221,20,48)" fg:x="4295" fg:w="7"/><text x="51.5171%" y="575.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="51.1980%" y="549" width="0.0834%" height="15" fill="rgb(244,164,10)" fg:x="4295" fg:w="7"/><text x="51.5171%" y="559.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="51.1980%" y="533" width="0.0834%" height="15" fill="rgb(243,229,2)" fg:x="4295" fg:w="7"/><text x="51.5171%" y="543.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="51.2218%" y="517" width="0.0596%" height="15" fill="rgb(232,131,37)" fg:x="4297" fg:w="5"/><text x="51.5409%" y="527.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="51.2814%" y="453" width="0.0596%" height="15" fill="rgb(217,156,11)" fg:x="4302" fg:w="5"/><text x="51.6005%" y="463.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="51.2814%" y="437" width="0.0596%" height="15" fill="rgb(239,99,48)" fg:x="4302" fg:w="5"/><text x="51.6005%" y="447.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="51.2934%" y="421" width="0.0477%" height="15" fill="rgb(231,209,9)" fg:x="4303" fg:w="4"/><text x="51.6125%" y="431.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="51.3410%" y="421" width="0.0238%" height="15" fill="rgb(254,97,27)" fg:x="4307" fg:w="2"/><text x="51.6601%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="51.2814%" y="469" width="0.0954%" height="15" fill="rgb(223,151,38)" fg:x="4302" fg:w="8"/><text x="51.6005%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="51.3410%" y="453" width="0.0358%" height="15" fill="rgb(219,206,35)" fg:x="4307" fg:w="3"/><text x="51.6601%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="51.3410%" y="437" width="0.0358%" height="15" fill="rgb(216,130,31)" fg:x="4307" fg:w="3"/><text x="51.6601%" y="447.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="51.3649%" y="421" width="0.0119%" height="15" fill="rgb(251,97,34)" fg:x="4309" fg:w="1"/><text x="51.6840%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="51.3887%" y="437" width="0.0119%" height="15" fill="rgb(246,159,47)" fg:x="4311" fg:w="1"/><text x="51.7078%" y="447.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="51.3887%" y="421" width="0.0119%" height="15" fill="rgb(232,87,10)" fg:x="4311" fg:w="1"/><text x="51.7078%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="51.3887%" y="405" width="0.0119%" height="15" fill="rgb(249,1,37)" fg:x="4311" fg:w="1"/><text x="51.7078%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="51.3887%" y="389" width="0.0119%" height="15" fill="rgb(239,135,14)" fg:x="4311" fg:w="1"/><text x="51.7078%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="51.4006%" y="405" width="0.0238%" height="15" fill="rgb(253,116,46)" fg:x="4312" fg:w="2"/><text x="51.7197%" y="415.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="51.4126%" y="389" width="0.0119%" height="15" fill="rgb(222,217,37)" fg:x="4313" fg:w="1"/><text x="51.7317%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="51.4126%" y="373" width="0.0119%" height="15" fill="rgb(252,96,8)" fg:x="4313" fg:w="1"/><text x="51.7317%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="51.4126%" y="357" width="0.0119%" height="15" fill="rgb(254,103,41)" fg:x="4313" fg:w="1"/><text x="51.7317%" y="367.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="51.4364%" y="341" width="0.1073%" height="15" fill="rgb(218,213,19)" fg:x="4315" fg:w="9"/><text x="51.7555%" y="351.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="51.4364%" y="325" width="0.1073%" height="15" fill="rgb(253,95,21)" fg:x="4315" fg:w="9"/><text x="51.7555%" y="335.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="51.4602%" y="309" width="0.0834%" height="15" fill="rgb(229,26,28)" fg:x="4317" fg:w="7"/><text x="51.7793%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="51.2814%" y="565" width="0.2742%" height="15" fill="rgb(230,129,16)" fg:x="4302" fg:w="23"/><text x="51.6005%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (23 samples, 0.27%)</title><rect x="51.2814%" y="549" width="0.2742%" height="15" fill="rgb(236,126,17)" fg:x="4302" fg:w="23"/><text x="51.6005%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="51.2814%" y="533" width="0.2742%" height="15" fill="rgb(209,33,33)" fg:x="4302" fg:w="23"/><text x="51.6005%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (23 samples, 0.27%)</title><rect x="51.2814%" y="517" width="0.2742%" height="15" fill="rgb(227,85,29)" fg:x="4302" fg:w="23"/><text x="51.6005%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="51.2814%" y="501" width="0.2742%" height="15" fill="rgb(241,53,46)" fg:x="4302" fg:w="23"/><text x="51.6005%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (23 samples, 0.27%)</title><rect x="51.2814%" y="485" width="0.2742%" height="15" fill="rgb(228,167,53)" fg:x="4302" fg:w="23"/><text x="51.6005%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="51.3768%" y="469" width="0.1788%" height="15" fill="rgb(238,195,45)" fg:x="4310" fg:w="15"/><text x="51.6959%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (14 samples, 0.17%)</title><rect x="51.3887%" y="453" width="0.1669%" height="15" fill="rgb(252,124,45)" fg:x="4311" fg:w="14"/><text x="51.7078%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="51.4006%" y="437" width="0.1550%" height="15" fill="rgb(251,38,35)" fg:x="4312" fg:w="13"/><text x="51.7197%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="51.4006%" y="421" width="0.1550%" height="15" fill="rgb(227,33,2)" fg:x="4312" fg:w="13"/><text x="51.7197%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="51.4245%" y="405" width="0.1311%" height="15" fill="rgb(223,157,46)" fg:x="4314" fg:w="11"/><text x="51.7436%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="51.4245%" y="389" width="0.1311%" height="15" fill="rgb(222,78,41)" fg:x="4314" fg:w="11"/><text x="51.7436%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="51.4245%" y="373" width="0.1311%" height="15" fill="rgb(248,176,11)" fg:x="4314" fg:w="11"/><text x="51.7436%" y="383.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="51.4364%" y="357" width="0.1192%" height="15" fill="rgb(241,221,18)" fg:x="4315" fg:w="10"/><text x="51.7555%" y="367.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="51.5437%" y="341" width="0.0119%" height="15" fill="rgb(218,85,22)" fg:x="4324" fg:w="1"/><text x="51.8628%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (36 samples, 0.43%)</title><rect x="51.2814%" y="597" width="0.4291%" height="15" fill="rgb(222,223,7)" fg:x="4302" fg:w="36"/><text x="51.6005%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (36 samples, 0.43%)</title><rect x="51.2814%" y="581" width="0.4291%" height="15" fill="rgb(254,59,39)" fg:x="4302" fg:w="36"/><text x="51.6005%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (13 samples, 0.15%)</title><rect x="51.5556%" y="565" width="0.1550%" height="15" fill="rgb(247,100,27)" fg:x="4325" fg:w="13"/><text x="51.8747%" y="575.50"/></g><g><title>operator new (13 samples, 0.15%)</title><rect x="51.5556%" y="549" width="0.1550%" height="15" fill="rgb(237,207,10)" fg:x="4325" fg:w="13"/><text x="51.8747%" y="559.50"/></g><g><title>__GI___libc_malloc (13 samples, 0.15%)</title><rect x="51.5556%" y="533" width="0.1550%" height="15" fill="rgb(220,121,28)" fg:x="4325" fg:w="13"/><text x="51.8747%" y="543.50"/></g><g><title>_int_malloc (12 samples, 0.14%)</title><rect x="51.5675%" y="517" width="0.1430%" height="15" fill="rgb(213,223,20)" fg:x="4326" fg:w="12"/><text x="51.8866%" y="527.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="51.7344%" y="549" width="0.0119%" height="15" fill="rgb(205,121,27)" fg:x="4340" fg:w="1"/><text x="52.0535%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="51.7344%" y="533" width="0.0119%" height="15" fill="rgb(253,24,53)" fg:x="4340" fg:w="1"/><text x="52.0535%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="51.7344%" y="517" width="0.0119%" height="15" fill="rgb(224,224,47)" fg:x="4340" fg:w="1"/><text x="52.0535%" y="527.50"/></g><g><title>operator new (12 samples, 0.14%)</title><rect x="51.7463%" y="517" width="0.1430%" height="15" fill="rgb(250,125,36)" fg:x="4341" fg:w="12"/><text x="52.0654%" y="527.50"/></g><g><title>__GI___libc_malloc (12 samples, 0.14%)</title><rect x="51.7463%" y="501" width="0.1430%" height="15" fill="rgb(240,144,38)" fg:x="4341" fg:w="12"/><text x="52.0654%" y="511.50"/></g><g><title>_int_malloc (10 samples, 0.12%)</title><rect x="51.7702%" y="485" width="0.1192%" height="15" fill="rgb(250,15,50)" fg:x="4343" fg:w="10"/><text x="52.0893%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="51.8894%" y="485" width="0.0119%" height="15" fill="rgb(210,24,26)" fg:x="4353" fg:w="1"/><text x="52.2085%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="51.8894%" y="469" width="0.0119%" height="15" fill="rgb(234,53,53)" fg:x="4353" fg:w="1"/><text x="52.2085%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="51.9371%" y="373" width="0.0119%" height="15" fill="rgb(208,108,28)" fg:x="4357" fg:w="1"/><text x="52.2562%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="51.9371%" y="357" width="0.0119%" height="15" fill="rgb(227,143,7)" fg:x="4357" fg:w="1"/><text x="52.2562%" y="367.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="51.9371%" y="341" width="0.0119%" height="15" fill="rgb(238,189,38)" fg:x="4357" fg:w="1"/><text x="52.2562%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="51.9490%" y="357" width="0.0715%" height="15" fill="rgb(222,69,15)" fg:x="4358" fg:w="6"/><text x="52.2681%" y="367.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="51.9490%" y="341" width="0.0715%" height="15" fill="rgb(213,169,7)" fg:x="4358" fg:w="6"/><text x="52.2681%" y="351.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="51.9490%" y="325" width="0.0715%" height="15" fill="rgb(251,219,4)" fg:x="4358" fg:w="6"/><text x="52.2681%" y="335.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="51.9847%" y="309" width="0.0358%" height="15" fill="rgb(241,55,40)" fg:x="4361" fg:w="3"/><text x="52.3038%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="51.9251%" y="437" width="0.1073%" height="15" fill="rgb(243,57,30)" fg:x="4356" fg:w="9"/><text x="52.2442%" y="447.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (8 samples, 0.10%)</title><rect x="51.9371%" y="421" width="0.0954%" height="15" fill="rgb(234,50,30)" fg:x="4357" fg:w="8"/><text x="52.2562%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="51.9371%" y="405" width="0.0954%" height="15" fill="rgb(239,23,42)" fg:x="4357" fg:w="8"/><text x="52.2562%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="51.9371%" y="389" width="0.0954%" height="15" fill="rgb(217,38,19)" fg:x="4357" fg:w="8"/><text x="52.2562%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="51.9490%" y="373" width="0.0834%" height="15" fill="rgb(215,179,16)" fg:x="4358" fg:w="7"/><text x="52.2681%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="52.0205%" y="357" width="0.0119%" height="15" fill="rgb(254,21,37)" fg:x="4364" fg:w="1"/><text x="52.3396%" y="367.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="52.0205%" y="341" width="0.0119%" height="15" fill="rgb(219,207,48)" fg:x="4364" fg:w="1"/><text x="52.3396%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="51.9013%" y="485" width="0.1430%" height="15" fill="rgb(227,225,41)" fg:x="4354" fg:w="12"/><text x="52.2204%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="51.9251%" y="469" width="0.1192%" height="15" fill="rgb(223,130,1)" fg:x="4356" fg:w="10"/><text x="52.2442%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="51.9251%" y="453" width="0.1192%" height="15" fill="rgb(249,54,42)" fg:x="4356" fg:w="10"/><text x="52.2442%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="52.0324%" y="437" width="0.0119%" height="15" fill="rgb(248,69,25)" fg:x="4365" fg:w="1"/><text x="52.3515%" y="447.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="52.0324%" y="421" width="0.0119%" height="15" fill="rgb(234,21,32)" fg:x="4365" fg:w="1"/><text x="52.3515%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="51.8894%" y="501" width="0.1669%" height="15" fill="rgb(252,136,6)" fg:x="4353" fg:w="14"/><text x="52.2085%" y="511.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="52.0443%" y="485" width="0.0119%" height="15" fill="rgb(245,87,12)" fg:x="4366" fg:w="1"/><text x="52.3634%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="52.0443%" y="469" width="0.0119%" height="15" fill="rgb(208,12,15)" fg:x="4366" fg:w="1"/><text x="52.3634%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (28 samples, 0.33%)</title><rect x="51.7344%" y="565" width="0.3338%" height="15" fill="rgb(250,98,2)" fg:x="4340" fg:w="28"/><text x="52.0535%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (27 samples, 0.32%)</title><rect x="51.7463%" y="549" width="0.3219%" height="15" fill="rgb(205,213,15)" fg:x="4341" fg:w="27"/><text x="52.0654%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (27 samples, 0.32%)</title><rect x="51.7463%" y="533" width="0.3219%" height="15" fill="rgb(248,192,44)" fg:x="4341" fg:w="27"/><text x="52.0654%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (15 samples, 0.18%)</title><rect x="51.8894%" y="517" width="0.1788%" height="15" fill="rgb(221,89,17)" fg:x="4353" fg:w="15"/><text x="52.2085%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="52.0563%" y="501" width="0.0119%" height="15" fill="rgb(209,55,3)" fg:x="4367" fg:w="1"/><text x="52.3754%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="52.0563%" y="485" width="0.0119%" height="15" fill="rgb(247,23,45)" fg:x="4367" fg:w="1"/><text x="52.3754%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="52.0563%" y="469" width="0.0119%" height="15" fill="rgb(235,152,23)" fg:x="4367" fg:w="1"/><text x="52.3754%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="52.0801%" y="517" width="0.0119%" height="15" fill="rgb(244,63,13)" fg:x="4369" fg:w="1"/><text x="52.3992%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="52.0801%" y="501" width="0.0119%" height="15" fill="rgb(227,30,37)" fg:x="4369" fg:w="1"/><text x="52.3992%" y="511.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="52.0920%" y="453" width="0.0834%" height="15" fill="rgb(224,49,42)" fg:x="4370" fg:w="7"/><text x="52.4111%" y="463.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="52.0920%" y="437" width="0.0834%" height="15" fill="rgb(218,129,5)" fg:x="4370" fg:w="7"/><text x="52.4111%" y="447.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="52.1039%" y="421" width="0.0715%" height="15" fill="rgb(240,199,54)" fg:x="4371" fg:w="6"/><text x="52.4230%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="52.1755%" y="421" width="0.0119%" height="15" fill="rgb(234,31,13)" fg:x="4377" fg:w="1"/><text x="52.4946%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="52.1993%" y="389" width="0.0119%" height="15" fill="rgb(219,73,54)" fg:x="4379" fg:w="1"/><text x="52.5184%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="52.1993%" y="373" width="0.0119%" height="15" fill="rgb(251,162,10)" fg:x="4379" fg:w="1"/><text x="52.5184%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="52.2231%" y="341" width="0.0119%" height="15" fill="rgb(240,138,47)" fg:x="4381" fg:w="1"/><text x="52.5422%" y="351.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="52.2231%" y="325" width="0.0119%" height="15" fill="rgb(216,138,26)" fg:x="4381" fg:w="1"/><text x="52.5422%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="52.2231%" y="309" width="0.0119%" height="15" fill="rgb(243,17,35)" fg:x="4381" fg:w="1"/><text x="52.5422%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="52.2231%" y="293" width="0.0119%" height="15" fill="rgb(241,60,18)" fg:x="4381" fg:w="1"/><text x="52.5422%" y="303.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="52.2231%" y="277" width="0.0119%" height="15" fill="rgb(234,2,44)" fg:x="4381" fg:w="1"/><text x="52.5422%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="52.2231%" y="261" width="0.0119%" height="15" fill="rgb(225,225,33)" fg:x="4381" fg:w="1"/><text x="52.5422%" y="271.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), parser::pop::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="52.2231%" y="245" width="0.0119%" height="15" fill="rgb(234,50,31)" fg:x="4381" fg:w="1"/><text x="52.5422%" y="255.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="52.2112%" y="373" width="0.0358%" height="15" fill="rgb(249,6,25)" fg:x="4380" fg:w="3"/><text x="52.5303%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="52.2112%" y="357" width="0.0358%" height="15" fill="rgb(241,5,17)" fg:x="4380" fg:w="3"/><text x="52.5303%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="52.2351%" y="341" width="0.0119%" height="15" fill="rgb(207,116,10)" fg:x="4382" fg:w="1"/><text x="52.5542%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (17 samples, 0.20%)</title><rect x="52.1755%" y="453" width="0.2026%" height="15" fill="rgb(222,128,18)" fg:x="4377" fg:w="17"/><text x="52.4946%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="52.1755%" y="437" width="0.2026%" height="15" fill="rgb(229,109,25)" fg:x="4377" fg:w="17"/><text x="52.4946%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (16 samples, 0.19%)</title><rect x="52.1874%" y="421" width="0.1907%" height="15" fill="rgb(222,102,25)" fg:x="4378" fg:w="16"/><text x="52.5065%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="52.1874%" y="405" width="0.1907%" height="15" fill="rgb(239,211,5)" fg:x="4378" fg:w="16"/><text x="52.5065%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (14 samples, 0.17%)</title><rect x="52.2112%" y="389" width="0.1669%" height="15" fill="rgb(223,136,26)" fg:x="4380" fg:w="14"/><text x="52.5303%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (11 samples, 0.13%)</title><rect x="52.2470%" y="373" width="0.1311%" height="15" fill="rgb(227,30,15)" fg:x="4383" fg:w="11"/><text x="52.5661%" y="383.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="52.2470%" y="357" width="0.1311%" height="15" fill="rgb(247,76,4)" fg:x="4383" fg:w="11"/><text x="52.5661%" y="367.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="52.2470%" y="341" width="0.1311%" height="15" fill="rgb(245,38,48)" fg:x="4383" fg:w="11"/><text x="52.5661%" y="351.50"/></g><g><title>_int_malloc (8 samples, 0.10%)</title><rect x="52.2828%" y="325" width="0.0954%" height="15" fill="rgb(210,220,14)" fg:x="4386" fg:w="8"/><text x="52.6019%" y="335.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="52.3781%" y="389" width="0.1073%" height="15" fill="rgb(224,60,51)" fg:x="4394" fg:w="9"/><text x="52.6972%" y="399.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="52.3781%" y="373" width="0.1073%" height="15" fill="rgb(212,133,49)" fg:x="4394" fg:w="9"/><text x="52.6972%" y="383.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="52.4139%" y="357" width="0.0715%" height="15" fill="rgb(231,39,22)" fg:x="4397" fg:w="6"/><text x="52.7330%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="52.3781%" y="405" width="0.1192%" height="15" fill="rgb(236,173,22)" fg:x="4394" fg:w="10"/><text x="52.6972%" y="415.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="52.4854%" y="389" width="0.0119%" height="15" fill="rgb(210,70,0)" fg:x="4403" fg:w="1"/><text x="52.8045%" y="399.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="52.4854%" y="373" width="0.0119%" height="15" fill="rgb(215,170,11)" fg:x="4403" fg:w="1"/><text x="52.8045%" y="383.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="52.4973%" y="389" width="0.1311%" height="15" fill="rgb(220,154,28)" fg:x="4404" fg:w="11"/><text x="52.8164%" y="399.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="52.4973%" y="373" width="0.1311%" height="15" fill="rgb(240,160,41)" fg:x="4404" fg:w="11"/><text x="52.8164%" y="383.50"/></g><g><title>_int_malloc (11 samples, 0.13%)</title><rect x="52.4973%" y="357" width="0.1311%" height="15" fill="rgb(243,215,41)" fg:x="4404" fg:w="11"/><text x="52.8164%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="52.6284%" y="325" width="0.0119%" height="15" fill="rgb(214,208,31)" fg:x="4415" fg:w="1"/><text x="52.9475%" y="335.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="52.6284%" y="309" width="0.0119%" height="15" fill="rgb(247,57,22)" fg:x="4415" fg:w="1"/><text x="52.9475%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="52.6284%" y="341" width="0.0954%" height="15" fill="rgb(228,73,52)" fg:x="4415" fg:w="8"/><text x="52.9475%" y="351.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="52.6404%" y="325" width="0.0834%" height="15" fill="rgb(252,60,9)" fg:x="4416" fg:w="7"/><text x="52.9595%" y="335.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="52.6404%" y="309" width="0.0834%" height="15" fill="rgb(233,9,51)" fg:x="4416" fg:w="7"/><text x="52.9595%" y="319.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="52.6404%" y="293" width="0.0834%" height="15" fill="rgb(223,67,14)" fg:x="4416" fg:w="7"/><text x="52.9595%" y="303.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="52.6523%" y="277" width="0.0715%" height="15" fill="rgb(222,86,2)" fg:x="4417" fg:w="6"/><text x="52.9714%" y="287.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="52.7238%" y="325" width="0.0119%" height="15" fill="rgb(243,58,54)" fg:x="4423" fg:w="1"/><text x="53.0429%" y="335.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="52.7238%" y="309" width="0.0119%" height="15" fill="rgb(210,200,39)" fg:x="4423" fg:w="1"/><text x="53.0429%" y="319.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="52.7357%" y="293" width="0.0119%" height="15" fill="rgb(238,135,9)" fg:x="4424" fg:w="1"/><text x="53.0548%" y="303.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="52.7357%" y="277" width="0.0119%" height="15" fill="rgb(232,179,7)" fg:x="4424" fg:w="1"/><text x="53.0548%" y="287.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="52.7357%" y="309" width="0.0238%" height="15" fill="rgb(245,65,41)" fg:x="4424" fg:w="2"/><text x="53.0548%" y="319.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="52.7476%" y="293" width="0.0119%" height="15" fill="rgb(227,43,8)" fg:x="4425" fg:w="1"/><text x="53.0667%" y="303.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="52.7476%" y="277" width="0.0119%" height="15" fill="rgb(235,91,14)" fg:x="4425" fg:w="1"/><text x="53.0667%" y="287.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="52.7476%" y="261" width="0.0119%" height="15" fill="rgb(235,219,31)" fg:x="4425" fg:w="1"/><text x="53.0667%" y="271.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="52.7596%" y="293" width="0.0119%" height="15" fill="rgb(227,121,25)" fg:x="4426" fg:w="1"/><text x="53.0787%" y="303.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="52.7596%" y="277" width="0.0119%" height="15" fill="rgb(254,129,24)" fg:x="4426" fg:w="1"/><text x="53.0787%" y="287.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="52.7715%" y="261" width="0.0119%" height="15" fill="rgb(226,144,49)" fg:x="4427" fg:w="1"/><text x="53.0906%" y="271.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="52.7715%" y="245" width="0.0119%" height="15" fill="rgb(214,187,32)" fg:x="4427" fg:w="1"/><text x="53.0906%" y="255.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (61 samples, 0.73%)</title><rect x="52.0801%" y="533" width="0.7271%" height="15" fill="rgb(243,129,46)" fg:x="4369" fg:w="61"/><text x="52.3992%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (60 samples, 0.72%)</title><rect x="52.0920%" y="517" width="0.7152%" height="15" fill="rgb(221,185,35)" fg:x="4370" fg:w="60"/><text x="52.4111%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (60 samples, 0.72%)</title><rect x="52.0920%" y="501" width="0.7152%" height="15" fill="rgb(205,0,32)" fg:x="4370" fg:w="60"/><text x="52.4111%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (60 samples, 0.72%)</title><rect x="52.0920%" y="485" width="0.7152%" height="15" fill="rgb(229,179,12)" fg:x="4370" fg:w="60"/><text x="52.4111%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (60 samples, 0.72%)</title><rect x="52.0920%" y="469" width="0.7152%" height="15" fill="rgb(252,107,19)" fg:x="4370" fg:w="60"/><text x="52.4111%" y="479.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (36 samples, 0.43%)</title><rect x="52.3781%" y="453" width="0.4291%" height="15" fill="rgb(220,95,27)" fg:x="4394" fg:w="36"/><text x="52.6972%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (36 samples, 0.43%)</title><rect x="52.3781%" y="437" width="0.4291%" height="15" fill="rgb(240,113,40)" fg:x="4394" fg:w="36"/><text x="52.6972%" y="447.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (36 samples, 0.43%)</title><rect x="52.3781%" y="421" width="0.4291%" height="15" fill="rgb(208,4,43)" fg:x="4394" fg:w="36"/><text x="52.6972%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="52.4973%" y="405" width="0.3099%" height="15" fill="rgb(247,189,30)" fg:x="4404" fg:w="26"/><text x="52.8164%" y="415.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (15 samples, 0.18%)</title><rect x="52.6284%" y="389" width="0.1788%" height="15" fill="rgb(231,157,17)" fg:x="4415" fg:w="15"/><text x="52.9475%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="52.6284%" y="373" width="0.1788%" height="15" fill="rgb(224,139,6)" fg:x="4415" fg:w="15"/><text x="52.9475%" y="383.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (15 samples, 0.18%)</title><rect x="52.6284%" y="357" width="0.1788%" height="15" fill="rgb(223,83,16)" fg:x="4415" fg:w="15"/><text x="52.9475%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="52.7238%" y="341" width="0.0834%" height="15" fill="rgb(232,211,20)" fg:x="4423" fg:w="7"/><text x="53.0429%" y="351.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="52.7357%" y="325" width="0.0715%" height="15" fill="rgb(225,203,35)" fg:x="4424" fg:w="6"/><text x="53.0548%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="52.7596%" y="309" width="0.0477%" height="15" fill="rgb(215,211,44)" fg:x="4426" fg:w="4"/><text x="53.0787%" y="319.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="52.7715%" y="293" width="0.0358%" height="15" fill="rgb(248,213,26)" fg:x="4427" fg:w="3"/><text x="53.0906%" y="303.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="52.7715%" y="277" width="0.0358%" height="15" fill="rgb(214,23,52)" fg:x="4427" fg:w="3"/><text x="53.0906%" y="287.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="52.7834%" y="261" width="0.0238%" height="15" fill="rgb(225,173,50)" fg:x="4428" fg:w="2"/><text x="53.1025%" y="271.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="52.7953%" y="245" width="0.0119%" height="15" fill="rgb(206,150,22)" fg:x="4429" fg:w="1"/><text x="53.1144%" y="255.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="52.7953%" y="229" width="0.0119%" height="15" fill="rgb(239,64,23)" fg:x="4429" fg:w="1"/><text x="53.1144%" y="239.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="52.7953%" y="213" width="0.0119%" height="15" fill="rgb(242,50,38)" fg:x="4429" fg:w="1"/><text x="53.1144%" y="223.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="52.8072%" y="517" width="0.0119%" height="15" fill="rgb(217,91,15)" fg:x="4430" fg:w="1"/><text x="53.1263%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="52.8072%" y="501" width="0.0119%" height="15" fill="rgb(230,172,6)" fg:x="4430" fg:w="1"/><text x="53.1263%" y="511.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="52.8192%" y="485" width="0.0834%" height="15" fill="rgb(221,98,26)" fg:x="4431" fg:w="7"/><text x="53.1383%" y="495.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="52.8192%" y="469" width="0.0834%" height="15" fill="rgb(227,210,45)" fg:x="4431" fg:w="7"/><text x="53.1383%" y="479.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="52.8311%" y="453" width="0.0715%" height="15" fill="rgb(206,8,30)" fg:x="4432" fg:w="6"/><text x="53.1502%" y="463.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="52.9026%" y="485" width="0.0119%" height="15" fill="rgb(241,219,17)" fg:x="4438" fg:w="1"/><text x="53.2217%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="52.9026%" y="469" width="0.0119%" height="15" fill="rgb(247,121,29)" fg:x="4438" fg:w="1"/><text x="53.2217%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="52.9026%" y="453" width="0.0119%" height="15" fill="rgb(219,169,49)" fg:x="4438" fg:w="1"/><text x="53.2217%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="52.9265%" y="453" width="0.0119%" height="15" fill="rgb(253,49,49)" fg:x="4440" fg:w="1"/><text x="53.2456%" y="463.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="52.9265%" y="437" width="0.0119%" height="15" fill="rgb(217,178,3)" fg:x="4440" fg:w="1"/><text x="53.2456%" y="447.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="52.9503%" y="421" width="0.0358%" height="15" fill="rgb(234,73,37)" fg:x="4442" fg:w="3"/><text x="53.2694%" y="431.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="52.9503%" y="405" width="0.0358%" height="15" fill="rgb(250,98,22)" fg:x="4442" fg:w="3"/><text x="53.2694%" y="415.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="52.9741%" y="389" width="0.0119%" height="15" fill="rgb(220,108,37)" fg:x="4444" fg:w="1"/><text x="53.2932%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="52.9980%" y="389" width="0.0119%" height="15" fill="rgb(225,168,10)" fg:x="4446" fg:w="1"/><text x="53.3171%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="52.9980%" y="373" width="0.0119%" height="15" fill="rgb(247,215,21)" fg:x="4446" fg:w="1"/><text x="53.3171%" y="383.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="52.9980%" y="357" width="0.0119%" height="15" fill="rgb(253,189,31)" fg:x="4446" fg:w="1"/><text x="53.3171%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="53.0337%" y="357" width="0.0119%" height="15" fill="rgb(241,54,22)" fg:x="4449" fg:w="1"/><text x="53.3528%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="53.0337%" y="341" width="0.0119%" height="15" fill="rgb(211,87,4)" fg:x="4449" fg:w="1"/><text x="53.3528%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="53.0457%" y="341" width="0.0119%" height="15" fill="rgb(245,112,24)" fg:x="4450" fg:w="1"/><text x="53.3648%" y="351.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="53.0457%" y="325" width="0.0119%" height="15" fill="rgb(235,190,41)" fg:x="4450" fg:w="1"/><text x="53.3648%" y="335.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="53.0457%" y="309" width="0.0119%" height="15" fill="rgb(214,89,8)" fg:x="4450" fg:w="1"/><text x="53.3648%" y="319.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="53.0576%" y="325" width="0.0119%" height="15" fill="rgb(249,155,35)" fg:x="4451" fg:w="1"/><text x="53.3767%" y="335.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="53.0576%" y="309" width="0.0119%" height="15" fill="rgb(249,88,26)" fg:x="4451" fg:w="1"/><text x="53.3767%" y="319.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="53.0695%" y="293" width="0.0119%" height="15" fill="rgb(232,56,8)" fg:x="4452" fg:w="1"/><text x="53.3886%" y="303.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="53.0695%" y="277" width="0.0119%" height="15" fill="rgb(240,95,3)" fg:x="4452" fg:w="1"/><text x="53.3886%" y="287.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="53.0814%" y="277" width="0.0119%" height="15" fill="rgb(222,44,28)" fg:x="4453" fg:w="1"/><text x="53.4005%" y="287.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="53.0814%" y="261" width="0.0119%" height="15" fill="rgb(234,16,30)" fg:x="4453" fg:w="1"/><text x="53.4005%" y="271.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="53.0814%" y="293" width="0.0238%" height="15" fill="rgb(223,26,17)" fg:x="4453" fg:w="2"/><text x="53.4005%" y="303.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="53.0933%" y="277" width="0.0119%" height="15" fill="rgb(239,187,47)" fg:x="4454" fg:w="1"/><text x="53.4124%" y="287.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="53.0933%" y="261" width="0.0119%" height="15" fill="rgb(247,102,50)" fg:x="4454" fg:w="1"/><text x="53.4124%" y="271.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="53.1172%" y="277" width="0.0954%" height="15" fill="rgb(231,216,22)" fg:x="4456" fg:w="8"/><text x="53.4363%" y="287.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="53.1172%" y="261" width="0.0954%" height="15" fill="rgb(216,201,26)" fg:x="4456" fg:w="8"/><text x="53.4363%" y="271.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="53.1291%" y="245" width="0.0834%" height="15" fill="rgb(214,186,23)" fg:x="4457" fg:w="7"/><text x="53.4482%" y="255.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="53.2125%" y="245" width="0.0119%" height="15" fill="rgb(235,184,4)" fg:x="4464" fg:w="1"/><text x="53.5316%" y="255.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="53.2125%" y="229" width="0.0119%" height="15" fill="rgb(244,46,17)" fg:x="4464" fg:w="1"/><text x="53.5316%" y="239.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="53.2125%" y="213" width="0.0119%" height="15" fill="rgb(248,74,46)" fg:x="4464" fg:w="1"/><text x="53.5316%" y="223.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="53.0337%" y="373" width="0.2026%" height="15" fill="rgb(243,79,5)" fg:x="4449" fg:w="17"/><text x="53.3528%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (16 samples, 0.19%)</title><rect x="53.0457%" y="357" width="0.1907%" height="15" fill="rgb(213,148,1)" fg:x="4450" fg:w="16"/><text x="53.3648%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="53.0576%" y="341" width="0.1788%" height="15" fill="rgb(221,30,0)" fg:x="4451" fg:w="15"/><text x="53.3767%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (14 samples, 0.17%)</title><rect x="53.0695%" y="325" width="0.1669%" height="15" fill="rgb(207,85,29)" fg:x="4452" fg:w="14"/><text x="53.3886%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="53.0695%" y="309" width="0.1669%" height="15" fill="rgb(239,31,46)" fg:x="4452" fg:w="14"/><text x="53.3886%" y="319.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (11 samples, 0.13%)</title><rect x="53.1053%" y="293" width="0.1311%" height="15" fill="rgb(219,6,1)" fg:x="4455" fg:w="11"/><text x="53.4244%" y="303.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="53.2125%" y="277" width="0.0238%" height="15" fill="rgb(229,90,29)" fg:x="4464" fg:w="2"/><text x="53.5316%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="53.2125%" y="261" width="0.0238%" height="15" fill="rgb(242,201,42)" fg:x="4464" fg:w="2"/><text x="53.5316%" y="271.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="53.2245%" y="245" width="0.0119%" height="15" fill="rgb(243,80,54)" fg:x="4465" fg:w="1"/><text x="53.5436%" y="255.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (20 samples, 0.24%)</title><rect x="53.0099%" y="389" width="0.2384%" height="15" fill="rgb(223,166,15)" fg:x="4447" fg:w="20"/><text x="53.3290%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="53.2364%" y="373" width="0.0119%" height="15" fill="rgb(238,78,27)" fg:x="4466" fg:w="1"/><text x="53.5555%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="53.2483%" y="325" width="0.0119%" height="15" fill="rgb(235,28,43)" fg:x="4467" fg:w="1"/><text x="53.5674%" y="335.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="53.2483%" y="309" width="0.0119%" height="15" fill="rgb(240,210,28)" fg:x="4467" fg:w="1"/><text x="53.5674%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="53.2602%" y="277" width="0.0238%" height="15" fill="rgb(253,6,46)" fg:x="4468" fg:w="2"/><text x="53.5793%" y="287.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="53.2721%" y="261" width="0.0119%" height="15" fill="rgb(250,159,47)" fg:x="4469" fg:w="1"/><text x="53.5912%" y="271.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="53.2721%" y="245" width="0.0119%" height="15" fill="rgb(216,139,2)" fg:x="4469" fg:w="1"/><text x="53.5912%" y="255.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="53.2841%" y="261" width="0.0954%" height="15" fill="rgb(221,124,44)" fg:x="4470" fg:w="8"/><text x="53.6032%" y="271.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="53.2841%" y="245" width="0.0954%" height="15" fill="rgb(205,37,22)" fg:x="4470" fg:w="8"/><text x="53.6032%" y="255.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="53.3198%" y="229" width="0.0596%" height="15" fill="rgb(250,55,8)" fg:x="4473" fg:w="5"/><text x="53.6389%" y="239.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="53.3794%" y="245" width="0.0715%" height="15" fill="rgb(215,83,48)" fg:x="4478" fg:w="6"/><text x="53.6985%" y="255.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="53.3794%" y="229" width="0.0715%" height="15" fill="rgb(253,2,32)" fg:x="4478" fg:w="6"/><text x="53.6985%" y="239.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="53.3794%" y="213" width="0.0715%" height="15" fill="rgb(236,67,28)" fg:x="4478" fg:w="6"/><text x="53.6985%" y="223.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="53.3794%" y="197" width="0.0715%" height="15" fill="rgb(252,55,15)" fg:x="4478" fg:w="6"/><text x="53.6985%" y="207.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="53.3913%" y="181" width="0.0596%" height="15" fill="rgb(243,173,17)" fg:x="4479" fg:w="5"/><text x="53.7104%" y="191.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (39 samples, 0.46%)</title><rect x="52.9980%" y="405" width="0.4649%" height="15" fill="rgb(215,212,13)" fg:x="4446" fg:w="39"/><text x="53.3171%" y="415.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (18 samples, 0.21%)</title><rect x="53.2483%" y="389" width="0.2146%" height="15" fill="rgb(253,176,6)" fg:x="4467" fg:w="18"/><text x="53.5674%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="53.2483%" y="373" width="0.2146%" height="15" fill="rgb(236,105,26)" fg:x="4467" fg:w="18"/><text x="53.5674%" y="383.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (18 samples, 0.21%)</title><rect x="53.2483%" y="357" width="0.2146%" height="15" fill="rgb(239,226,32)" fg:x="4467" fg:w="18"/><text x="53.5674%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="53.2483%" y="341" width="0.2146%" height="15" fill="rgb(236,104,51)" fg:x="4467" fg:w="18"/><text x="53.5674%" y="351.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (17 samples, 0.20%)</title><rect x="53.2602%" y="325" width="0.2026%" height="15" fill="rgb(220,172,33)" fg:x="4468" fg:w="17"/><text x="53.5793%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="53.2602%" y="309" width="0.2026%" height="15" fill="rgb(224,182,25)" fg:x="4468" fg:w="17"/><text x="53.5793%" y="319.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (17 samples, 0.20%)</title><rect x="53.2602%" y="293" width="0.2026%" height="15" fill="rgb(236,184,24)" fg:x="4468" fg:w="17"/><text x="53.5793%" y="303.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="53.2841%" y="277" width="0.1788%" height="15" fill="rgb(241,221,14)" fg:x="4470" fg:w="15"/><text x="53.6032%" y="287.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="53.3794%" y="261" width="0.0834%" height="15" fill="rgb(227,146,5)" fg:x="4478" fg:w="7"/><text x="53.6985%" y="271.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="53.4509%" y="245" width="0.0119%" height="15" fill="rgb(214,15,23)" fg:x="4484" fg:w="1"/><text x="53.7700%" y="255.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="53.4509%" y="229" width="0.0119%" height="15" fill="rgb(233,157,31)" fg:x="4484" fg:w="1"/><text x="53.7700%" y="239.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="53.4509%" y="213" width="0.0119%" height="15" fill="rgb(211,27,52)" fg:x="4484" fg:w="1"/><text x="53.7700%" y="223.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="53.4509%" y="197" width="0.0119%" height="15" fill="rgb(212,223,15)" fg:x="4484" fg:w="1"/><text x="53.7700%" y="207.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="53.4509%" y="181" width="0.0119%" height="15" fill="rgb(254,211,0)" fg:x="4484" fg:w="1"/><text x="53.7700%" y="191.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="53.4509%" y="165" width="0.0119%" height="15" fill="rgb(205,43,38)" fg:x="4484" fg:w="1"/><text x="53.7700%" y="175.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="53.4629%" y="389" width="0.0834%" height="15" fill="rgb(242,206,46)" fg:x="4485" fg:w="7"/><text x="53.7820%" y="399.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="53.4748%" y="373" width="0.0715%" height="15" fill="rgb(220,221,12)" fg:x="4486" fg:w="6"/><text x="53.7939%" y="383.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="53.4867%" y="357" width="0.0596%" height="15" fill="rgb(217,156,35)" fg:x="4487" fg:w="5"/><text x="53.8058%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="53.5582%" y="357" width="0.0119%" height="15" fill="rgb(207,181,49)" fg:x="4493" fg:w="1"/><text x="53.8773%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="53.5582%" y="341" width="0.0119%" height="15" fill="rgb(235,103,47)" fg:x="4493" fg:w="1"/><text x="53.8773%" y="351.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="53.5821%" y="277" width="0.0119%" height="15" fill="rgb(222,63,28)" fg:x="4495" fg:w="1"/><text x="53.9012%" y="287.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="53.5821%" y="293" width="0.0238%" height="15" fill="rgb(244,137,21)" fg:x="4495" fg:w="2"/><text x="53.9012%" y="303.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="53.5940%" y="277" width="0.0119%" height="15" fill="rgb(228,35,27)" fg:x="4496" fg:w="1"/><text x="53.9131%" y="287.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="53.6059%" y="293" width="0.0119%" height="15" fill="rgb(226,191,41)" fg:x="4497" fg:w="1"/><text x="53.9250%" y="303.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="53.6059%" y="277" width="0.0119%" height="15" fill="rgb(210,154,3)" fg:x="4497" fg:w="1"/><text x="53.9250%" y="287.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="53.6059%" y="261" width="0.0119%" height="15" fill="rgb(216,60,49)" fg:x="4497" fg:w="1"/><text x="53.9250%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="53.5821%" y="309" width="0.0477%" height="15" fill="rgb(226,17,20)" fg:x="4495" fg:w="4"/><text x="53.9012%" y="319.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="53.6178%" y="293" width="0.0119%" height="15" fill="rgb(206,115,35)" fg:x="4498" fg:w="1"/><text x="53.9369%" y="303.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="53.6178%" y="277" width="0.0119%" height="15" fill="rgb(227,88,1)" fg:x="4498" fg:w="1"/><text x="53.9369%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="53.6178%" y="261" width="0.0119%" height="15" fill="rgb(230,222,24)" fg:x="4498" fg:w="1"/><text x="53.9369%" y="271.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="53.6178%" y="245" width="0.0119%" height="15" fill="rgb(214,124,32)" fg:x="4498" fg:w="1"/><text x="53.9369%" y="255.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="53.6178%" y="229" width="0.0119%" height="15" fill="rgb(240,41,36)" fg:x="4498" fg:w="1"/><text x="53.9369%" y="239.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="53.6178%" y="213" width="0.0119%" height="15" fill="rgb(221,17,52)" fg:x="4498" fg:w="1"/><text x="53.9369%" y="223.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="53.6178%" y="197" width="0.0119%" height="15" fill="rgb(252,70,16)" fg:x="4498" fg:w="1"/><text x="53.9369%" y="207.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="53.5702%" y="341" width="0.0715%" height="15" fill="rgb(250,177,4)" fg:x="4494" fg:w="6"/><text x="53.8893%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="53.5821%" y="325" width="0.0596%" height="15" fill="rgb(240,188,47)" fg:x="4495" fg:w="5"/><text x="53.9012%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="53.6298%" y="309" width="0.0119%" height="15" fill="rgb(215,92,12)" fg:x="4499" fg:w="1"/><text x="53.9489%" y="319.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="53.6298%" y="293" width="0.0119%" height="15" fill="rgb(242,110,29)" fg:x="4499" fg:w="1"/><text x="53.9489%" y="303.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="53.6298%" y="277" width="0.0119%" height="15" fill="rgb(208,211,26)" fg:x="4499" fg:w="1"/><text x="53.9489%" y="287.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (19 samples, 0.23%)</title><rect x="53.5702%" y="357" width="0.2265%" height="15" fill="rgb(244,147,6)" fg:x="4494" fg:w="19"/><text x="53.8893%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (13 samples, 0.15%)</title><rect x="53.6417%" y="341" width="0.1550%" height="15" fill="rgb(211,130,42)" fg:x="4500" fg:w="13"/><text x="53.9608%" y="351.50"/></g><g><title>operator new (13 samples, 0.15%)</title><rect x="53.6417%" y="325" width="0.1550%" height="15" fill="rgb(220,63,1)" fg:x="4500" fg:w="13"/><text x="53.9608%" y="335.50"/></g><g><title>__GI___libc_malloc (13 samples, 0.15%)</title><rect x="53.6417%" y="309" width="0.1550%" height="15" fill="rgb(241,212,30)" fg:x="4500" fg:w="13"/><text x="53.9608%" y="319.50"/></g><g><title>_int_malloc (11 samples, 0.13%)</title><rect x="53.6655%" y="293" width="0.1311%" height="15" fill="rgb(233,153,17)" fg:x="4502" fg:w="11"/><text x="53.9846%" y="303.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (29 samples, 0.35%)</title><rect x="53.4629%" y="405" width="0.3457%" height="15" fill="rgb(236,3,10)" fg:x="4485" fg:w="29"/><text x="53.7820%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (22 samples, 0.26%)</title><rect x="53.5463%" y="389" width="0.2622%" height="15" fill="rgb(232,41,21)" fg:x="4492" fg:w="22"/><text x="53.8654%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="53.5582%" y="373" width="0.2503%" height="15" fill="rgb(206,63,51)" fg:x="4493" fg:w="21"/><text x="53.8773%" y="383.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="53.7966%" y="357" width="0.0119%" height="15" fill="rgb(250,214,3)" fg:x="4513" fg:w="1"/><text x="54.1157%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="53.8086%" y="389" width="0.0119%" height="15" fill="rgb(254,89,27)" fg:x="4514" fg:w="1"/><text x="54.1277%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="53.8086%" y="373" width="0.0119%" height="15" fill="rgb(249,41,14)" fg:x="4514" fg:w="1"/><text x="54.1277%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (71 samples, 0.85%)</title><rect x="52.9861%" y="421" width="0.8463%" height="15" fill="rgb(221,196,51)" fg:x="4445" fg:w="71"/><text x="53.3052%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="53.8086%" y="405" width="0.0238%" height="15" fill="rgb(214,116,26)" fg:x="4514" fg:w="2"/><text x="54.1277%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="53.8205%" y="389" width="0.0119%" height="15" fill="rgb(236,67,7)" fg:x="4515" fg:w="1"/><text x="54.1396%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="53.8324%" y="389" width="0.0119%" height="15" fill="rgb(253,179,32)" fg:x="4516" fg:w="1"/><text x="54.1515%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="53.8324%" y="373" width="0.0119%" height="15" fill="rgb(218,33,15)" fg:x="4516" fg:w="1"/><text x="54.1515%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="53.8443%" y="373" width="0.0119%" height="15" fill="rgb(217,202,41)" fg:x="4517" fg:w="1"/><text x="54.1634%" y="383.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="53.8443%" y="357" width="0.0119%" height="15" fill="rgb(234,133,5)" fg:x="4517" fg:w="1"/><text x="54.1634%" y="367.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="53.8443%" y="341" width="0.0119%" height="15" fill="rgb(240,47,40)" fg:x="4517" fg:w="1"/><text x="54.1634%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="53.8562%" y="341" width="0.0119%" height="15" fill="rgb(234,166,26)" fg:x="4518" fg:w="1"/><text x="54.1753%" y="351.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="53.8562%" y="325" width="0.0119%" height="15" fill="rgb(244,125,51)" fg:x="4518" fg:w="1"/><text x="54.1753%" y="335.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="53.8562%" y="309" width="0.0119%" height="15" fill="rgb(229,171,11)" fg:x="4518" fg:w="1"/><text x="54.1753%" y="319.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="53.8562%" y="293" width="0.0119%" height="15" fill="rgb(224,38,45)" fg:x="4518" fg:w="1"/><text x="54.1753%" y="303.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="53.8682%" y="261" width="0.0119%" height="15" fill="rgb(237,27,7)" fg:x="4519" fg:w="1"/><text x="54.1873%" y="271.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="53.8682%" y="245" width="0.0119%" height="15" fill="rgb(216,52,7)" fg:x="4519" fg:w="1"/><text x="54.1873%" y="255.50"/></g><g><title>operator new (10 samples, 0.12%)</title><rect x="53.8801%" y="245" width="0.1192%" height="15" fill="rgb(243,11,11)" fg:x="4520" fg:w="10"/><text x="54.1992%" y="255.50"/></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="53.8801%" y="229" width="0.1192%" height="15" fill="rgb(253,167,20)" fg:x="4520" fg:w="10"/><text x="54.1992%" y="239.50"/></g><g><title>_int_malloc (8 samples, 0.10%)</title><rect x="53.9039%" y="213" width="0.0954%" height="15" fill="rgb(215,207,5)" fg:x="4522" fg:w="8"/><text x="54.2230%" y="223.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="53.8682%" y="277" width="0.1669%" height="15" fill="rgb(252,127,31)" fg:x="4519" fg:w="14"/><text x="54.1873%" y="287.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="53.8801%" y="261" width="0.1550%" height="15" fill="rgb(209,106,27)" fg:x="4520" fg:w="13"/><text x="54.1992%" y="271.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (3 samples, 0.04%)</title><rect x="53.9993%" y="245" width="0.0358%" height="15" fill="rgb(214,220,18)" fg:x="4530" fg:w="3"/><text x="54.3184%" y="255.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.0112%" y="229" width="0.0238%" height="15" fill="rgb(237,89,12)" fg:x="4531" fg:w="2"/><text x="54.3303%" y="239.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="54.0350%" y="261" width="0.0238%" height="15" fill="rgb(209,167,36)" fg:x="4533" fg:w="2"/><text x="54.3541%" y="271.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="54.0350%" y="245" width="0.0238%" height="15" fill="rgb(243,45,22)" fg:x="4533" fg:w="2"/><text x="54.3541%" y="255.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (96 samples, 1.14%)</title><rect x="52.9384%" y="437" width="1.1444%" height="15" fill="rgb(239,2,46)" fg:x="4441" fg:w="96"/><text x="53.2575%" y="447.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (21 samples, 0.25%)</title><rect x="53.8324%" y="421" width="0.2503%" height="15" fill="rgb(241,101,0)" fg:x="4516" fg:w="21"/><text x="54.1515%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="53.8324%" y="405" width="0.2503%" height="15" fill="rgb(244,34,31)" fg:x="4516" fg:w="21"/><text x="54.1515%" y="415.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (20 samples, 0.24%)</title><rect x="53.8443%" y="389" width="0.2384%" height="15" fill="rgb(248,23,22)" fg:x="4517" fg:w="20"/><text x="54.1634%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="53.8562%" y="373" width="0.2265%" height="15" fill="rgb(218,27,48)" fg:x="4518" fg:w="19"/><text x="54.1753%" y="383.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (19 samples, 0.23%)</title><rect x="53.8562%" y="357" width="0.2265%" height="15" fill="rgb(232,78,1)" fg:x="4518" fg:w="19"/><text x="54.1753%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="53.8682%" y="341" width="0.2146%" height="15" fill="rgb(233,169,12)" fg:x="4519" fg:w="18"/><text x="54.1873%" y="351.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (18 samples, 0.21%)</title><rect x="53.8682%" y="325" width="0.2146%" height="15" fill="rgb(225,222,54)" fg:x="4519" fg:w="18"/><text x="54.1873%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="53.8682%" y="309" width="0.2146%" height="15" fill="rgb(245,126,29)" fg:x="4519" fg:w="18"/><text x="54.1873%" y="319.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (18 samples, 0.21%)</title><rect x="53.8682%" y="293" width="0.2146%" height="15" fill="rgb(241,63,48)" fg:x="4519" fg:w="18"/><text x="54.1873%" y="303.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="54.0350%" y="277" width="0.0477%" height="15" fill="rgb(235,126,38)" fg:x="4533" fg:w="4"/><text x="54.3541%" y="287.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="54.0589%" y="261" width="0.0238%" height="15" fill="rgb(232,96,49)" fg:x="4535" fg:w="2"/><text x="54.3780%" y="271.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.0589%" y="245" width="0.0238%" height="15" fill="rgb(211,146,40)" fg:x="4535" fg:w="2"/><text x="54.3780%" y="255.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="54.0589%" y="229" width="0.0238%" height="15" fill="rgb(247,93,44)" fg:x="4535" fg:w="2"/><text x="54.3780%" y="239.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.0589%" y="213" width="0.0238%" height="15" fill="rgb(251,41,49)" fg:x="4535" fg:w="2"/><text x="54.3780%" y="223.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="54.0589%" y="197" width="0.0238%" height="15" fill="rgb(218,155,12)" fg:x="4535" fg:w="2"/><text x="54.3780%" y="207.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="54.0708%" y="181" width="0.0119%" height="15" fill="rgb(221,161,30)" fg:x="4536" fg:w="1"/><text x="54.3899%" y="191.50"/></g><g><title>logic::immediate (2,751 samples, 32.79%)</title><rect x="21.4209%" y="741" width="32.7929%" height="15" fill="rgb(221,179,11)" fg:x="1797" fg:w="2751"/><text x="21.7400%" y="751.50">logic::immediate </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (709 samples, 8.45%)</title><rect x="45.7623%" y="725" width="8.4515%" height="15" fill="rgb(224,170,48)" fg:x="3839" fg:w="709"/><text x="46.0814%" y="735.50">..manager </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (379 samples, 4.52%)</title><rect x="49.6960%" y="709" width="4.5178%" height="15" fill="rgb(223,117,5)" fg:x="4169" fg:w="379"/><text x="50.0151%" y="719.50">..tion </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (379 samples, 4.52%)</title><rect x="49.6960%" y="693" width="4.5178%" height="15" fill="rgb(209,52,20)" fg:x="4169" fg:w="379"/><text x="50.0151%" y="703.50">..ger </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (378 samples, 4.51%)</title><rect x="49.7080%" y="677" width="4.5059%" height="15" fill="rgb(209,19,41)" fg:x="4170" fg:w="378"/><text x="50.0271%" y="687.50">..tion </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (325 samples, 3.87%)</title><rect x="50.3397%" y="661" width="3.8741%" height="15" fill="rgb(210,177,12)" fg:x="4223" fg:w="325"/><text x="50.6588%" y="671.50">..er </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (325 samples, 3.87%)</title><rect x="50.3397%" y="645" width="3.8741%" height="15" fill="rgb(211,159,37)" fg:x="4223" fg:w="325"/><text x="50.6588%" y="655.50">..ion </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (246 samples, 2.93%)</title><rect x="51.2814%" y="629" width="2.9324%" height="15" fill="rgb(209,20,2)" fg:x="4302" fg:w="246"/><text x="51.6005%" y="639.50">..r </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (246 samples, 2.93%)</title><rect x="51.2814%" y="613" width="2.9324%" height="15" fill="rgb(244,3,46)" fg:x="4302" fg:w="246"/><text x="51.6005%" y="623.50">..on </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (210 samples, 2.50%)</title><rect x="51.7106%" y="597" width="2.5033%" height="15" fill="rgb(220,94,38)" fg:x="4338" fg:w="210"/><text x="52.0297%" y="607.50">..r </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (208 samples, 2.48%)</title><rect x="51.7344%" y="581" width="2.4794%" height="15" fill="rgb(253,14,31)" fg:x="4340" fg:w="208"/><text x="52.0535%" y="591.50">..n </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (180 samples, 2.15%)</title><rect x="52.0682%" y="565" width="2.1457%" height="15" fill="rgb(234,176,13)" fg:x="4368" fg:w="180"/><text x="52.3873%" y="575.50">.. </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (179 samples, 2.13%)</title><rect x="52.0801%" y="549" width="2.1337%" height="15" fill="rgb(218,62,25)" fg:x="4369" fg:w="179"/><text x="52.3992%" y="559.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (118 samples, 1.41%)</title><rect x="52.8072%" y="533" width="1.4066%" height="15" fill="rgb(216,124,40)" fg:x="4430" fg:w="118"/><text x="53.1263%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (117 samples, 1.39%)</title><rect x="52.8192%" y="517" width="1.3947%" height="15" fill="rgb(228,170,12)" fg:x="4431" fg:w="117"/><text x="53.1383%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (117 samples, 1.39%)</title><rect x="52.8192%" y="501" width="1.3947%" height="15" fill="rgb(231,226,5)" fg:x="4431" fg:w="117"/><text x="53.1383%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (109 samples, 1.30%)</title><rect x="52.9145%" y="485" width="1.2993%" height="15" fill="rgb(237,122,22)" fg:x="4439" fg:w="109"/><text x="53.2336%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (108 samples, 1.29%)</title><rect x="52.9265%" y="469" width="1.2874%" height="15" fill="rgb(209,185,25)" fg:x="4440" fg:w="108"/><text x="53.2456%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (107 samples, 1.28%)</title><rect x="52.9384%" y="453" width="1.2755%" height="15" fill="rgb(228,200,32)" fg:x="4441" fg:w="107"/><text x="53.2575%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (11 samples, 0.13%)</title><rect x="54.0827%" y="437" width="0.1311%" height="15" fill="rgb(217,140,10)" fg:x="4537" fg:w="11"/><text x="54.4018%" y="447.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="54.0827%" y="421" width="0.1311%" height="15" fill="rgb(253,17,24)" fg:x="4537" fg:w="11"/><text x="54.4018%" y="431.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="54.0827%" y="405" width="0.1311%" height="15" fill="rgb(212,61,6)" fg:x="4537" fg:w="11"/><text x="54.4018%" y="415.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="54.1066%" y="389" width="0.1073%" height="15" fill="rgb(205,14,25)" fg:x="4539" fg:w="9"/><text x="54.4257%" y="399.50"/></g><g><title>parser::finish (1 samples, 0.01%)</title><rect x="54.2496%" y="709" width="0.0119%" height="15" fill="rgb(232,69,41)" fg:x="4551" fg:w="1"/><text x="54.5687%" y="719.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="54.2496%" y="693" width="0.0119%" height="15" fill="rgb(241,106,47)" fg:x="4551" fg:w="1"/><text x="54.5687%" y="703.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="54.2496%" y="677" width="0.0119%" height="15" fill="rgb(210,213,53)" fg:x="4551" fg:w="1"/><text x="54.5687%" y="687.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="54.2496%" y="661" width="0.0119%" height="15" fill="rgb(253,175,27)" fg:x="4551" fg:w="1"/><text x="54.5687%" y="671.50"/></g><g><title>parser::iff (1 samples, 0.01%)</title><rect x="54.2615%" y="709" width="0.0119%" height="15" fill="rgb(211,171,24)" fg:x="4552" fg:w="1"/><text x="54.5806%" y="719.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="54.2615%" y="693" width="0.0119%" height="15" fill="rgb(229,80,7)" fg:x="4552" fg:w="1"/><text x="54.5806%" y="703.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="54.2615%" y="677" width="0.0119%" height="15" fill="rgb(212,46,39)" fg:x="4552" fg:w="1"/><text x="54.5806%" y="687.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="54.2735%" y="693" width="0.0715%" height="15" fill="rgb(240,80,45)" fg:x="4553" fg:w="6"/><text x="54.5926%" y="703.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="54.2735%" y="677" width="0.0715%" height="15" fill="rgb(253,177,40)" fg:x="4553" fg:w="6"/><text x="54.5926%" y="687.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="54.3092%" y="661" width="0.0358%" height="15" fill="rgb(249,200,15)" fg:x="4556" fg:w="3"/><text x="54.6283%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="54.3450%" y="677" width="0.0119%" height="15" fill="rgb(217,78,26)" fg:x="4559" fg:w="1"/><text x="54.6641%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.3450%" y="661" width="0.0119%" height="15" fill="rgb(254,151,32)" fg:x="4559" fg:w="1"/><text x="54.6641%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="54.3450%" y="645" width="0.0119%" height="15" fill="rgb(226,165,27)" fg:x="4559" fg:w="1"/><text x="54.6641%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="54.3450%" y="629" width="0.0119%" height="15" fill="rgb(250,206,4)" fg:x="4559" fg:w="1"/><text x="54.6641%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.3569%" y="629" width="0.0119%" height="15" fill="rgb(231,229,27)" fg:x="4560" fg:w="1"/><text x="54.6760%" y="639.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="54.3569%" y="613" width="0.0119%" height="15" fill="rgb(239,217,8)" fg:x="4560" fg:w="1"/><text x="54.6760%" y="623.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="54.3569%" y="597" width="0.0119%" height="15" fill="rgb(225,204,27)" fg:x="4560" fg:w="1"/><text x="54.6760%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.3688%" y="597" width="0.0119%" height="15" fill="rgb(230,56,32)" fg:x="4561" fg:w="1"/><text x="54.6879%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="54.3688%" y="581" width="0.0119%" height="15" fill="rgb(222,56,27)" fg:x="4561" fg:w="1"/><text x="54.6879%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="54.3688%" y="565" width="0.0119%" height="15" fill="rgb(253,108,27)" fg:x="4561" fg:w="1"/><text x="54.6879%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="54.3807%" y="485" width="0.0119%" height="15" fill="rgb(212,87,36)" fg:x="4562" fg:w="1"/><text x="54.6998%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="54.3807%" y="469" width="0.0119%" height="15" fill="rgb(247,82,36)" fg:x="4562" fg:w="1"/><text x="54.6998%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="54.3450%" y="693" width="0.0596%" height="15" fill="rgb(222,143,9)" fg:x="4559" fg:w="5"/><text x="54.6641%" y="703.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="54.3569%" y="677" width="0.0477%" height="15" fill="rgb(238,162,48)" fg:x="4560" fg:w="4"/><text x="54.6760%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="54.3569%" y="661" width="0.0477%" height="15" fill="rgb(221,59,43)" fg:x="4560" fg:w="4"/><text x="54.6760%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="54.3569%" y="645" width="0.0477%" height="15" fill="rgb(205,166,41)" fg:x="4560" fg:w="4"/><text x="54.6760%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="54.3688%" y="629" width="0.0358%" height="15" fill="rgb(241,186,40)" fg:x="4561" fg:w="3"/><text x="54.6879%" y="639.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="54.3688%" y="613" width="0.0358%" height="15" fill="rgb(216,119,35)" fg:x="4561" fg:w="3"/><text x="54.6879%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.3807%" y="597" width="0.0238%" height="15" fill="rgb(208,68,38)" fg:x="4562" fg:w="2"/><text x="54.6998%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="54.3807%" y="581" width="0.0238%" height="15" fill="rgb(217,113,1)" fg:x="4562" fg:w="2"/><text x="54.6998%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.3807%" y="565" width="0.0238%" height="15" fill="rgb(242,153,3)" fg:x="4562" fg:w="2"/><text x="54.6998%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="54.3807%" y="549" width="0.0238%" height="15" fill="rgb(229,76,35)" fg:x="4562" fg:w="2"/><text x="54.6998%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.3807%" y="533" width="0.0238%" height="15" fill="rgb(229,125,34)" fg:x="4562" fg:w="2"/><text x="54.6998%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="54.3807%" y="517" width="0.0238%" height="15" fill="rgb(238,179,36)" fg:x="4562" fg:w="2"/><text x="54.6998%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.3807%" y="501" width="0.0238%" height="15" fill="rgb(244,183,19)" fg:x="4562" fg:w="2"/><text x="54.6998%" y="511.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.3927%" y="485" width="0.0119%" height="15" fill="rgb(216,85,49)" fg:x="4563" fg:w="1"/><text x="54.7118%" y="495.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="54.3927%" y="469" width="0.0119%" height="15" fill="rgb(208,161,47)" fg:x="4563" fg:w="1"/><text x="54.7118%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.4046%" y="693" width="0.0119%" height="15" fill="rgb(233,210,18)" fg:x="4564" fg:w="1"/><text x="54.7237%" y="703.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="54.4046%" y="677" width="0.0119%" height="15" fill="rgb(205,104,42)" fg:x="4564" fg:w="1"/><text x="54.7237%" y="687.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="54.4046%" y="661" width="0.0119%" height="15" fill="rgb(248,90,43)" fg:x="4564" fg:w="1"/><text x="54.7237%" y="671.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="54.4165%" y="677" width="0.0954%" height="15" fill="rgb(206,198,11)" fg:x="4565" fg:w="8"/><text x="54.7356%" y="687.50"/></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="54.4165%" y="661" width="0.0954%" height="15" fill="rgb(239,165,27)" fg:x="4565" fg:w="8"/><text x="54.7356%" y="671.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="54.4403%" y="645" width="0.0715%" height="15" fill="rgb(246,44,32)" fg:x="4567" fg:w="6"/><text x="54.7594%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="54.5119%" y="645" width="0.0119%" height="15" fill="rgb(252,65,42)" fg:x="4573" fg:w="1"/><text x="54.8310%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.5119%" y="629" width="0.0119%" height="15" fill="rgb(246,197,18)" fg:x="4573" fg:w="1"/><text x="54.8310%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="54.5119%" y="613" width="0.0119%" height="15" fill="rgb(216,192,4)" fg:x="4573" fg:w="1"/><text x="54.8310%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="54.5119%" y="597" width="0.0119%" height="15" fill="rgb(208,117,10)" fg:x="4573" fg:w="1"/><text x="54.8310%" y="607.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="54.5119%" y="581" width="0.0119%" height="15" fill="rgb(240,61,47)" fg:x="4573" fg:w="1"/><text x="54.8310%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="54.5238%" y="485" width="0.0119%" height="15" fill="rgb(228,178,21)" fg:x="4574" fg:w="1"/><text x="54.8429%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.5238%" y="469" width="0.0119%" height="15" fill="rgb(219,96,54)" fg:x="4574" fg:w="1"/><text x="54.8429%" y="479.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.5238%" y="453" width="0.0119%" height="15" fill="rgb(250,177,24)" fg:x="4574" fg:w="1"/><text x="54.8429%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="54.5238%" y="437" width="0.0119%" height="15" fill="rgb(242,154,46)" fg:x="4574" fg:w="1"/><text x="54.8429%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="54.5238%" y="421" width="0.0119%" height="15" fill="rgb(226,176,29)" fg:x="4574" fg:w="1"/><text x="54.8429%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="54.5119%" y="661" width="0.0358%" height="15" fill="rgb(226,29,2)" fg:x="4573" fg:w="3"/><text x="54.8310%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="54.5238%" y="645" width="0.0238%" height="15" fill="rgb(237,104,14)" fg:x="4574" fg:w="2"/><text x="54.8429%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.5238%" y="629" width="0.0238%" height="15" fill="rgb(245,207,31)" fg:x="4574" fg:w="2"/><text x="54.8429%" y="639.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="54.5238%" y="613" width="0.0238%" height="15" fill="rgb(229,211,45)" fg:x="4574" fg:w="2"/><text x="54.8429%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.5238%" y="597" width="0.0238%" height="15" fill="rgb(229,113,15)" fg:x="4574" fg:w="2"/><text x="54.8429%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="54.5238%" y="581" width="0.0238%" height="15" fill="rgb(237,147,15)" fg:x="4574" fg:w="2"/><text x="54.8429%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.5238%" y="565" width="0.0238%" height="15" fill="rgb(244,120,12)" fg:x="4574" fg:w="2"/><text x="54.8429%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="54.5238%" y="549" width="0.0238%" height="15" fill="rgb(205,120,12)" fg:x="4574" fg:w="2"/><text x="54.8429%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.5238%" y="533" width="0.0238%" height="15" fill="rgb(231,26,45)" fg:x="4574" fg:w="2"/><text x="54.8429%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="54.5238%" y="517" width="0.0238%" height="15" fill="rgb(246,98,1)" fg:x="4574" fg:w="2"/><text x="54.8429%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.5238%" y="501" width="0.0238%" height="15" fill="rgb(207,68,45)" fg:x="4574" fg:w="2"/><text x="54.8429%" y="511.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="54.5357%" y="485" width="0.0119%" height="15" fill="rgb(231,27,38)" fg:x="4575" fg:w="1"/><text x="54.8548%" y="495.50"/></g><g><title>parser::operator+ (24 samples, 0.29%)</title><rect x="54.2735%" y="709" width="0.2861%" height="15" fill="rgb(214,223,3)" fg:x="4553" fg:w="24"/><text x="54.5926%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="54.4165%" y="693" width="0.1430%" height="15" fill="rgb(228,195,46)" fg:x="4565" fg:w="12"/><text x="54.7356%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="54.5119%" y="677" width="0.0477%" height="15" fill="rgb(231,100,42)" fg:x="4573" fg:w="4"/><text x="54.8310%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.5476%" y="661" width="0.0119%" height="15" fill="rgb(236,53,4)" fg:x="4576" fg:w="1"/><text x="54.8667%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="54.5476%" y="645" width="0.0119%" height="15" fill="rgb(230,152,12)" fg:x="4576" fg:w="1"/><text x="54.8667%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.5476%" y="629" width="0.0119%" height="15" fill="rgb(226,101,19)" fg:x="4576" fg:w="1"/><text x="54.8667%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="54.5476%" y="613" width="0.0119%" height="15" fill="rgb(250,149,32)" fg:x="4576" fg:w="1"/><text x="54.8667%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.5476%" y="597" width="0.0119%" height="15" fill="rgb(232,178,12)" fg:x="4576" fg:w="1"/><text x="54.8667%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="54.5476%" y="581" width="0.0119%" height="15" fill="rgb(246,151,17)" fg:x="4576" fg:w="1"/><text x="54.8667%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="54.5476%" y="565" width="0.0119%" height="15" fill="rgb(252,17,51)" fg:x="4576" fg:w="1"/><text x="54.8667%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.5595%" y="661" width="0.0119%" height="15" fill="rgb(250,207,23)" fg:x="4577" fg:w="1"/><text x="54.8786%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="54.5595%" y="645" width="0.0119%" height="15" fill="rgb(205,27,5)" fg:x="4577" fg:w="1"/><text x="54.8786%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="54.5595%" y="629" width="0.0119%" height="15" fill="rgb(224,32,19)" fg:x="4577" fg:w="1"/><text x="54.8786%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="54.5715%" y="645" width="0.0119%" height="15" fill="rgb(247,214,40)" fg:x="4578" fg:w="1"/><text x="54.8906%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="54.5715%" y="629" width="0.0119%" height="15" fill="rgb(239,199,17)" fg:x="4578" fg:w="1"/><text x="54.8906%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.5834%" y="629" width="0.0119%" height="15" fill="rgb(251,159,9)" fg:x="4579" fg:w="1"/><text x="54.9025%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="54.5834%" y="613" width="0.0119%" height="15" fill="rgb(225,78,32)" fg:x="4579" fg:w="1"/><text x="54.9025%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="54.5834%" y="597" width="0.0119%" height="15" fill="rgb(206,97,47)" fg:x="4579" fg:w="1"/><text x="54.9025%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.5834%" y="645" width="0.0238%" height="15" fill="rgb(227,107,4)" fg:x="4579" fg:w="2"/><text x="54.9025%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.5953%" y="629" width="0.0119%" height="15" fill="rgb(241,146,50)" fg:x="4580" fg:w="1"/><text x="54.9144%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.5953%" y="613" width="0.0119%" height="15" fill="rgb(232,92,30)" fg:x="4580" fg:w="1"/><text x="54.9144%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.5953%" y="597" width="0.0119%" height="15" fill="rgb(222,0,40)" fg:x="4580" fg:w="1"/><text x="54.9144%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="54.5953%" y="581" width="0.0119%" height="15" fill="rgb(219,54,33)" fg:x="4580" fg:w="1"/><text x="54.9144%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="54.5953%" y="565" width="0.0119%" height="15" fill="rgb(226,209,28)" fg:x="4580" fg:w="1"/><text x="54.9144%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.6191%" y="565" width="0.0119%" height="15" fill="rgb(254,205,35)" fg:x="4582" fg:w="1"/><text x="54.9382%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.6191%" y="549" width="0.0119%" height="15" fill="rgb(230,159,3)" fg:x="4582" fg:w="1"/><text x="54.9382%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="54.6191%" y="533" width="0.0119%" height="15" fill="rgb(232,190,24)" fg:x="4582" fg:w="1"/><text x="54.9382%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="54.6191%" y="517" width="0.0119%" height="15" fill="rgb(217,227,44)" fg:x="4582" fg:w="1"/><text x="54.9382%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="54.6311%" y="549" width="0.0119%" height="15" fill="rgb(236,211,1)" fg:x="4583" fg:w="1"/><text x="54.9502%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="54.6311%" y="533" width="0.0119%" height="15" fill="rgb(250,127,46)" fg:x="4583" fg:w="1"/><text x="54.9502%" y="543.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="54.6311%" y="517" width="0.0119%" height="15" fill="rgb(229,213,6)" fg:x="4583" fg:w="1"/><text x="54.9502%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.6430%" y="533" width="0.0119%" height="15" fill="rgb(237,15,36)" fg:x="4584" fg:w="1"/><text x="54.9621%" y="543.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.6430%" y="517" width="0.0119%" height="15" fill="rgb(213,131,41)" fg:x="4584" fg:w="1"/><text x="54.9621%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="54.6430%" y="501" width="0.0119%" height="15" fill="rgb(225,82,44)" fg:x="4584" fg:w="1"/><text x="54.9621%" y="511.50"/></g><g><title>cond::token (10 samples, 0.12%)</title><rect x="54.5595%" y="693" width="0.1192%" height="15" fill="rgb(249,42,11)" fg:x="4577" fg:w="10"/><text x="54.8786%" y="703.50"/></g><g><title>operator&amp; (10 samples, 0.12%)</title><rect x="54.5595%" y="677" width="0.1192%" height="15" fill="rgb(253,11,29)" fg:x="4577" fg:w="10"/><text x="54.8786%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="54.5715%" y="661" width="0.1073%" height="15" fill="rgb(206,8,54)" fg:x="4578" fg:w="9"/><text x="54.8906%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="54.6072%" y="645" width="0.0715%" height="15" fill="rgb(222,186,2)" fg:x="4581" fg:w="6"/><text x="54.9263%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="54.6191%" y="629" width="0.0596%" height="15" fill="rgb(221,206,53)" fg:x="4582" fg:w="5"/><text x="54.9382%" y="639.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="54.6191%" y="613" width="0.0596%" height="15" fill="rgb(230,150,21)" fg:x="4582" fg:w="5"/><text x="54.9382%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="54.6191%" y="597" width="0.0596%" height="15" fill="rgb(253,202,10)" fg:x="4582" fg:w="5"/><text x="54.9382%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="54.6191%" y="581" width="0.0596%" height="15" fill="rgb(238,109,40)" fg:x="4582" fg:w="5"/><text x="54.9382%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="54.6311%" y="565" width="0.0477%" height="15" fill="rgb(247,120,22)" fg:x="4583" fg:w="4"/><text x="54.9502%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="54.6430%" y="549" width="0.0358%" height="15" fill="rgb(207,43,30)" fg:x="4584" fg:w="3"/><text x="54.9621%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.6549%" y="533" width="0.0238%" height="15" fill="rgb(213,211,24)" fg:x="4585" fg:w="2"/><text x="54.9740%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="54.6549%" y="517" width="0.0238%" height="15" fill="rgb(239,73,39)" fg:x="4585" fg:w="2"/><text x="54.9740%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.6549%" y="501" width="0.0238%" height="15" fill="rgb(245,182,19)" fg:x="4585" fg:w="2"/><text x="54.9740%" y="511.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.6549%" y="485" width="0.0238%" height="15" fill="rgb(247,143,26)" fg:x="4585" fg:w="2"/><text x="54.9740%" y="495.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="54.6549%" y="469" width="0.0238%" height="15" fill="rgb(228,191,23)" fg:x="4585" fg:w="2"/><text x="54.9740%" y="479.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="54.6549%" y="453" width="0.0238%" height="15" fill="rgb(253,165,31)" fg:x="4585" fg:w="2"/><text x="54.9740%" y="463.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="54.6549%" y="437" width="0.0238%" height="15" fill="rgb(234,138,20)" fg:x="4585" fg:w="2"/><text x="54.9740%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="54.6907%" y="629" width="0.0119%" height="15" fill="rgb(218,191,29)" fg:x="4588" fg:w="1"/><text x="55.0098%" y="639.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="54.6907%" y="613" width="0.0119%" height="15" fill="rgb(221,157,19)" fg:x="4588" fg:w="1"/><text x="55.0098%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="54.7026%" y="581" width="0.0358%" height="15" fill="rgb(237,26,42)" fg:x="4589" fg:w="3"/><text x="55.0217%" y="591.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="54.7026%" y="565" width="0.0358%" height="15" fill="rgb(220,163,24)" fg:x="4589" fg:w="3"/><text x="55.0217%" y="575.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="54.7026%" y="549" width="0.0358%" height="15" fill="rgb(242,115,20)" fg:x="4589" fg:w="3"/><text x="55.0217%" y="559.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="54.7026%" y="533" width="0.0358%" height="15" fill="rgb(210,206,9)" fg:x="4589" fg:w="3"/><text x="55.0217%" y="543.50"/></g><g><title>parser::iff (6 samples, 0.07%)</title><rect x="54.6787%" y="693" width="0.0715%" height="15" fill="rgb(208,71,17)" fg:x="4587" fg:w="6"/><text x="54.9978%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="54.6787%" y="677" width="0.0715%" height="15" fill="rgb(233,7,5)" fg:x="4587" fg:w="6"/><text x="54.9978%" y="687.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="54.6907%" y="661" width="0.0596%" height="15" fill="rgb(207,92,33)" fg:x="4588" fg:w="5"/><text x="55.0098%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="54.6907%" y="645" width="0.0596%" height="15" fill="rgb(218,87,9)" fg:x="4588" fg:w="5"/><text x="55.0098%" y="655.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="54.7026%" y="629" width="0.0477%" height="15" fill="rgb(219,47,37)" fg:x="4589" fg:w="4"/><text x="55.0217%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="54.7026%" y="613" width="0.0477%" height="15" fill="rgb(221,152,34)" fg:x="4589" fg:w="4"/><text x="55.0217%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="54.7026%" y="597" width="0.0477%" height="15" fill="rgb(235,176,21)" fg:x="4589" fg:w="4"/><text x="55.0217%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.7383%" y="581" width="0.0119%" height="15" fill="rgb(232,212,21)" fg:x="4592" fg:w="1"/><text x="55.0574%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="54.7383%" y="565" width="0.0119%" height="15" fill="rgb(245,82,39)" fg:x="4592" fg:w="1"/><text x="55.0574%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="54.7383%" y="549" width="0.0119%" height="15" fill="rgb(241,52,51)" fg:x="4592" fg:w="1"/><text x="55.0574%" y="559.50"/></g><g><title>parser::token (17 samples, 0.20%)</title><rect x="54.5595%" y="709" width="0.2026%" height="15" fill="rgb(219,91,24)" fg:x="4577" fg:w="17"/><text x="54.8786%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.7503%" y="693" width="0.0119%" height="15" fill="rgb(241,142,12)" fg:x="4593" fg:w="1"/><text x="55.0694%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.7503%" y="677" width="0.0119%" height="15" fill="rgb(230,27,9)" fg:x="4593" fg:w="1"/><text x="55.0694%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.7503%" y="661" width="0.0119%" height="15" fill="rgb(249,181,32)" fg:x="4593" fg:w="1"/><text x="55.0694%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.7503%" y="645" width="0.0119%" height="15" fill="rgb(230,107,3)" fg:x="4593" fg:w="1"/><text x="55.0694%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.7503%" y="629" width="0.0119%" height="15" fill="rgb(246,204,14)" fg:x="4593" fg:w="1"/><text x="55.0694%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="54.7503%" y="613" width="0.0119%" height="15" fill="rgb(213,192,47)" fg:x="4593" fg:w="1"/><text x="55.0694%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.7622%" y="709" width="0.0238%" height="15" fill="rgb(240,44,36)" fg:x="4594" fg:w="2"/><text x="55.0813%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.7741%" y="693" width="0.0119%" height="15" fill="rgb(244,209,38)" fg:x="4595" fg:w="1"/><text x="55.0932%" y="703.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="54.7741%" y="677" width="0.0119%" height="15" fill="rgb(219,34,37)" fg:x="4595" fg:w="1"/><text x="55.0932%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.7860%" y="645" width="0.0238%" height="15" fill="rgb(210,28,6)" fg:x="4596" fg:w="2"/><text x="55.1051%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="54.7979%" y="629" width="0.0119%" height="15" fill="rgb(244,110,52)" fg:x="4597" fg:w="1"/><text x="55.1170%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="54.7979%" y="613" width="0.0119%" height="15" fill="rgb(254,124,47)" fg:x="4597" fg:w="1"/><text x="55.1170%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.8099%" y="613" width="0.0119%" height="15" fill="rgb(254,110,13)" fg:x="4598" fg:w="1"/><text x="55.1290%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="54.8099%" y="597" width="0.0119%" height="15" fill="rgb(252,57,21)" fg:x="4598" fg:w="1"/><text x="55.1290%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="54.8099%" y="581" width="0.0119%" height="15" fill="rgb(242,60,45)" fg:x="4598" fg:w="1"/><text x="55.1290%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="54.8218%" y="597" width="0.0119%" height="15" fill="rgb(234,49,30)" fg:x="4599" fg:w="1"/><text x="55.1409%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="54.7860%" y="709" width="0.0596%" height="15" fill="rgb(218,98,6)" fg:x="4596" fg:w="5"/><text x="55.1051%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="54.7860%" y="693" width="0.0596%" height="15" fill="rgb(220,174,29)" fg:x="4596" fg:w="5"/><text x="55.1051%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="54.7860%" y="677" width="0.0596%" height="15" fill="rgb(236,163,23)" fg:x="4596" fg:w="5"/><text x="55.1051%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="54.7860%" y="661" width="0.0596%" height="15" fill="rgb(242,114,45)" fg:x="4596" fg:w="5"/><text x="55.1051%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="54.8099%" y="645" width="0.0358%" height="15" fill="rgb(232,10,53)" fg:x="4598" fg:w="3"/><text x="55.1290%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="54.8099%" y="629" width="0.0358%" height="15" fill="rgb(245,108,29)" fg:x="4598" fg:w="3"/><text x="55.1290%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.8218%" y="613" width="0.0238%" height="15" fill="rgb(240,89,53)" fg:x="4599" fg:w="2"/><text x="55.1409%" y="623.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="54.8337%" y="597" width="0.0119%" height="15" fill="rgb(226,60,45)" fg:x="4600" fg:w="1"/><text x="55.1528%" y="607.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="54.8576%" y="629" width="0.0119%" height="15" fill="rgb(230,41,44)" fg:x="4602" fg:w="1"/><text x="55.1767%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.8576%" y="645" width="0.0238%" height="15" fill="rgb(230,26,20)" fg:x="4602" fg:w="2"/><text x="55.1767%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.8695%" y="629" width="0.0119%" height="15" fill="rgb(237,170,32)" fg:x="4603" fg:w="1"/><text x="55.1886%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="54.8695%" y="613" width="0.0119%" height="15" fill="rgb(212,35,42)" fg:x="4603" fg:w="1"/><text x="55.1886%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.8814%" y="613" width="0.0238%" height="15" fill="rgb(227,31,34)" fg:x="4604" fg:w="2"/><text x="55.2005%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.8933%" y="597" width="0.0119%" height="15" fill="rgb(216,19,18)" fg:x="4605" fg:w="1"/><text x="55.2124%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="54.8933%" y="581" width="0.0119%" height="15" fill="rgb(211,133,42)" fg:x="4605" fg:w="1"/><text x="55.2124%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="54.8933%" y="565" width="0.0119%" height="15" fill="rgb(244,66,13)" fg:x="4605" fg:w="1"/><text x="55.2124%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="54.8456%" y="709" width="0.0834%" height="15" fill="rgb(218,185,50)" fg:x="4601" fg:w="7"/><text x="55.1647%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="54.8456%" y="693" width="0.0834%" height="15" fill="rgb(219,149,13)" fg:x="4601" fg:w="7"/><text x="55.1647%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="54.8456%" y="677" width="0.0834%" height="15" fill="rgb(221,125,0)" fg:x="4601" fg:w="7"/><text x="55.1647%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="54.8456%" y="661" width="0.0834%" height="15" fill="rgb(247,126,27)" fg:x="4601" fg:w="7"/><text x="55.1647%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="54.8814%" y="645" width="0.0477%" height="15" fill="rgb(250,138,30)" fg:x="4604" fg:w="4"/><text x="55.2005%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="54.8814%" y="629" width="0.0477%" height="15" fill="rgb(230,151,9)" fg:x="4604" fg:w="4"/><text x="55.2005%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.9052%" y="613" width="0.0238%" height="15" fill="rgb(233,80,38)" fg:x="4606" fg:w="2"/><text x="55.2243%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.9052%" y="597" width="0.0238%" height="15" fill="rgb(232,68,43)" fg:x="4606" fg:w="2"/><text x="55.2243%" y="607.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="54.9052%" y="581" width="0.0238%" height="15" fill="rgb(254,5,50)" fg:x="4606" fg:w="2"/><text x="55.2243%" y="591.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="54.9052%" y="565" width="0.0238%" height="15" fill="rgb(225,45,5)" fg:x="4606" fg:w="2"/><text x="55.2243%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="54.9291%" y="549" width="0.0119%" height="15" fill="rgb(239,22,3)" fg:x="4608" fg:w="1"/><text x="55.2482%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="54.9291%" y="533" width="0.0119%" height="15" fill="rgb(243,129,0)" fg:x="4608" fg:w="1"/><text x="55.2482%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="54.9410%" y="549" width="0.0238%" height="15" fill="rgb(223,164,0)" fg:x="4609" fg:w="2"/><text x="55.2601%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.9410%" y="533" width="0.0238%" height="15" fill="rgb(221,46,29)" fg:x="4609" fg:w="2"/><text x="55.2601%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="54.9291%" y="661" width="0.0477%" height="15" fill="rgb(205,97,47)" fg:x="4608" fg:w="4"/><text x="55.2482%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="54.9291%" y="645" width="0.0477%" height="15" fill="rgb(249,14,8)" fg:x="4608" fg:w="4"/><text x="55.2482%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="54.9291%" y="629" width="0.0477%" height="15" fill="rgb(216,77,3)" fg:x="4608" fg:w="4"/><text x="55.2482%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="54.9291%" y="613" width="0.0477%" height="15" fill="rgb(206,168,54)" fg:x="4608" fg:w="4"/><text x="55.2482%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="54.9291%" y="597" width="0.0477%" height="15" fill="rgb(236,3,41)" fg:x="4608" fg:w="4"/><text x="55.2482%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="54.9291%" y="581" width="0.0477%" height="15" fill="rgb(231,132,24)" fg:x="4608" fg:w="4"/><text x="55.2482%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="54.9291%" y="565" width="0.0477%" height="15" fill="rgb(227,221,40)" fg:x="4608" fg:w="4"/><text x="55.2482%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="54.9648%" y="549" width="0.0119%" height="15" fill="rgb(233,151,11)" fg:x="4611" fg:w="1"/><text x="55.2839%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.9648%" y="533" width="0.0119%" height="15" fill="rgb(247,81,35)" fg:x="4611" fg:w="1"/><text x="55.2839%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="54.9648%" y="517" width="0.0119%" height="15" fill="rgb(243,128,48)" fg:x="4611" fg:w="1"/><text x="55.2839%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.9648%" y="501" width="0.0119%" height="15" fill="rgb(253,16,10)" fg:x="4611" fg:w="1"/><text x="55.2839%" y="511.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="54.9648%" y="485" width="0.0119%" height="15" fill="rgb(228,67,27)" fg:x="4611" fg:w="1"/><text x="55.2839%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.9648%" y="469" width="0.0119%" height="15" fill="rgb(231,105,25)" fg:x="4611" fg:w="1"/><text x="55.2839%" y="479.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="54.9648%" y="453" width="0.0119%" height="15" fill="rgb(213,166,47)" fg:x="4611" fg:w="1"/><text x="55.2839%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="54.9648%" y="437" width="0.0119%" height="15" fill="rgb(209,27,10)" fg:x="4611" fg:w="1"/><text x="55.2839%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="54.9768%" y="661" width="0.0238%" height="15" fill="rgb(241,44,30)" fg:x="4612" fg:w="2"/><text x="55.2959%" y="671.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="54.9768%" y="645" width="0.0238%" height="15" fill="rgb(223,216,15)" fg:x="4612" fg:w="2"/><text x="55.2959%" y="655.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="54.9768%" y="629" width="0.0238%" height="15" fill="rgb(227,14,7)" fg:x="4612" fg:w="2"/><text x="55.2959%" y="639.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="55.0006%" y="613" width="0.0238%" height="15" fill="rgb(237,14,5)" fg:x="4614" fg:w="2"/><text x="55.3197%" y="623.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="55.0006%" y="597" width="0.0238%" height="15" fill="rgb(232,14,36)" fg:x="4614" fg:w="2"/><text x="55.3197%" y="607.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="55.0006%" y="581" width="0.0238%" height="15" fill="rgb(234,0,38)" fg:x="4614" fg:w="2"/><text x="55.3197%" y="591.50"/></g><g><title>parser::either (9 samples, 0.11%)</title><rect x="54.9291%" y="677" width="0.1073%" height="15" fill="rgb(207,170,14)" fg:x="4608" fg:w="9"/><text x="55.2482%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="55.0006%" y="661" width="0.0358%" height="15" fill="rgb(252,45,13)" fg:x="4614" fg:w="3"/><text x="55.3197%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="55.0006%" y="645" width="0.0358%" height="15" fill="rgb(213,142,7)" fg:x="4614" fg:w="3"/><text x="55.3197%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="55.0006%" y="629" width="0.0358%" height="15" fill="rgb(216,157,23)" fg:x="4614" fg:w="3"/><text x="55.3197%" y="639.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.0244%" y="613" width="0.0119%" height="15" fill="rgb(212,145,33)" fg:x="4616" fg:w="1"/><text x="55.3435%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.0244%" y="597" width="0.0119%" height="15" fill="rgb(233,26,13)" fg:x="4616" fg:w="1"/><text x="55.3435%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.0244%" y="581" width="0.0119%" height="15" fill="rgb(219,196,19)" fg:x="4616" fg:w="1"/><text x="55.3435%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.0244%" y="565" width="0.0119%" height="15" fill="rgb(246,56,21)" fg:x="4616" fg:w="1"/><text x="55.3435%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.0244%" y="549" width="0.0119%" height="15" fill="rgb(222,28,53)" fg:x="4616" fg:w="1"/><text x="55.3435%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.0244%" y="533" width="0.0119%" height="15" fill="rgb(224,5,27)" fg:x="4616" fg:w="1"/><text x="55.3435%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.0364%" y="661" width="0.0119%" height="15" fill="rgb(220,153,33)" fg:x="4617" fg:w="1"/><text x="55.3555%" y="671.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.0364%" y="645" width="0.0119%" height="15" fill="rgb(226,58,19)" fg:x="4617" fg:w="1"/><text x="55.3555%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="55.0483%" y="645" width="0.0119%" height="15" fill="rgb(239,112,23)" fg:x="4618" fg:w="1"/><text x="55.3674%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.0483%" y="661" width="0.0238%" height="15" fill="rgb(251,213,20)" fg:x="4618" fg:w="2"/><text x="55.3674%" y="671.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="55.0602%" y="645" width="0.0119%" height="15" fill="rgb(215,181,21)" fg:x="4619" fg:w="1"/><text x="55.3793%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.0721%" y="629" width="0.0238%" height="15" fill="rgb(240,8,35)" fg:x="4620" fg:w="2"/><text x="55.3912%" y="639.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="55.0721%" y="613" width="0.0238%" height="15" fill="rgb(232,203,3)" fg:x="4620" fg:w="2"/><text x="55.3912%" y="623.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="55.0721%" y="597" width="0.0238%" height="15" fill="rgb(214,202,43)" fg:x="4620" fg:w="2"/><text x="55.3912%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.0960%" y="613" width="0.0238%" height="15" fill="rgb(254,35,11)" fg:x="4622" fg:w="2"/><text x="55.4151%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="55.0960%" y="597" width="0.0238%" height="15" fill="rgb(239,173,13)" fg:x="4622" fg:w="2"/><text x="55.4151%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="55.1079%" y="581" width="0.0119%" height="15" fill="rgb(220,141,0)" fg:x="4623" fg:w="1"/><text x="55.4270%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.1198%" y="581" width="0.0119%" height="15" fill="rgb(210,98,12)" fg:x="4624" fg:w="1"/><text x="55.4389%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="55.1198%" y="565" width="0.0119%" height="15" fill="rgb(254,153,22)" fg:x="4624" fg:w="1"/><text x="55.4389%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="55.1198%" y="549" width="0.0119%" height="15" fill="rgb(247,223,17)" fg:x="4624" fg:w="1"/><text x="55.4389%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="55.0721%" y="661" width="0.0715%" height="15" fill="rgb(246,56,7)" fg:x="4620" fg:w="6"/><text x="55.3912%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="55.0721%" y="645" width="0.0715%" height="15" fill="rgb(240,226,12)" fg:x="4620" fg:w="6"/><text x="55.3912%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="55.0960%" y="629" width="0.0477%" height="15" fill="rgb(205,87,46)" fg:x="4622" fg:w="4"/><text x="55.4151%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.1198%" y="613" width="0.0238%" height="15" fill="rgb(245,214,51)" fg:x="4624" fg:w="2"/><text x="55.4389%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.1198%" y="597" width="0.0238%" height="15" fill="rgb(223,172,33)" fg:x="4624" fg:w="2"/><text x="55.4389%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.1317%" y="581" width="0.0119%" height="15" fill="rgb(227,203,34)" fg:x="4625" fg:w="1"/><text x="55.4508%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.1317%" y="565" width="0.0119%" height="15" fill="rgb(248,143,44)" fg:x="4625" fg:w="1"/><text x="55.4508%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.1317%" y="549" width="0.0119%" height="15" fill="rgb(226,162,5)" fg:x="4625" fg:w="1"/><text x="55.4508%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.1436%" y="645" width="0.0119%" height="15" fill="rgb(211,143,1)" fg:x="4626" fg:w="1"/><text x="55.4627%" y="655.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.1436%" y="629" width="0.0119%" height="15" fill="rgb(224,96,15)" fg:x="4626" fg:w="1"/><text x="55.4627%" y="639.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.1436%" y="613" width="0.0119%" height="15" fill="rgb(222,4,38)" fg:x="4626" fg:w="1"/><text x="55.4627%" y="623.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.1556%" y="565" width="0.0119%" height="15" fill="rgb(253,228,15)" fg:x="4627" fg:w="1"/><text x="55.4747%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.1556%" y="549" width="0.0119%" height="15" fill="rgb(242,194,12)" fg:x="4627" fg:w="1"/><text x="55.4747%" y="559.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="55.1556%" y="533" width="0.0119%" height="15" fill="rgb(214,177,31)" fg:x="4627" fg:w="1"/><text x="55.4747%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="55.0364%" y="677" width="0.1550%" height="15" fill="rgb(226,58,51)" fg:x="4617" fg:w="13"/><text x="55.3555%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="55.1436%" y="661" width="0.0477%" height="15" fill="rgb(250,119,16)" fg:x="4626" fg:w="4"/><text x="55.4627%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="55.1556%" y="645" width="0.0358%" height="15" fill="rgb(223,128,53)" fg:x="4627" fg:w="3"/><text x="55.4747%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="55.1556%" y="629" width="0.0358%" height="15" fill="rgb(251,199,15)" fg:x="4627" fg:w="3"/><text x="55.4747%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="55.1556%" y="613" width="0.0358%" height="15" fill="rgb(235,168,42)" fg:x="4627" fg:w="3"/><text x="55.4747%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="55.1556%" y="597" width="0.0358%" height="15" fill="rgb(250,210,17)" fg:x="4627" fg:w="3"/><text x="55.4747%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="55.1556%" y="581" width="0.0358%" height="15" fill="rgb(226,36,41)" fg:x="4627" fg:w="3"/><text x="55.4747%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="55.1675%" y="565" width="0.0238%" height="15" fill="rgb(225,87,10)" fg:x="4628" fg:w="2"/><text x="55.4866%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.1675%" y="549" width="0.0238%" height="15" fill="rgb(228,83,9)" fg:x="4628" fg:w="2"/><text x="55.4866%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.1794%" y="533" width="0.0119%" height="15" fill="rgb(225,16,36)" fg:x="4629" fg:w="1"/><text x="55.4985%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.1794%" y="517" width="0.0119%" height="15" fill="rgb(242,198,13)" fg:x="4629" fg:w="1"/><text x="55.4985%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.1794%" y="501" width="0.0119%" height="15" fill="rgb(239,25,51)" fg:x="4629" fg:w="1"/><text x="55.4985%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.1794%" y="485" width="0.0119%" height="15" fill="rgb(239,28,37)" fg:x="4629" fg:w="1"/><text x="55.4985%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.1794%" y="469" width="0.0119%" height="15" fill="rgb(234,70,17)" fg:x="4629" fg:w="1"/><text x="55.4985%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.1794%" y="453" width="0.0119%" height="15" fill="rgb(231,215,53)" fg:x="4629" fg:w="1"/><text x="55.4985%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.1794%" y="437" width="0.0119%" height="15" fill="rgb(218,140,42)" fg:x="4629" fg:w="1"/><text x="55.4985%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.1794%" y="421" width="0.0119%" height="15" fill="rgb(233,227,45)" fg:x="4629" fg:w="1"/><text x="55.4985%" y="431.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.1794%" y="405" width="0.0119%" height="15" fill="rgb(225,189,21)" fg:x="4629" fg:w="1"/><text x="55.4985%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.1794%" y="389" width="0.0119%" height="15" fill="rgb(237,176,54)" fg:x="4629" fg:w="1"/><text x="55.4985%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.1794%" y="373" width="0.0119%" height="15" fill="rgb(215,131,46)" fg:x="4629" fg:w="1"/><text x="55.4985%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.1913%" y="517" width="0.0238%" height="15" fill="rgb(218,95,20)" fg:x="4630" fg:w="2"/><text x="55.5104%" y="527.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.1913%" y="501" width="0.0238%" height="15" fill="rgb(208,198,12)" fg:x="4630" fg:w="2"/><text x="55.5104%" y="511.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="55.1913%" y="485" width="0.0238%" height="15" fill="rgb(239,107,50)" fg:x="4630" fg:w="2"/><text x="55.5104%" y="495.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="55.1913%" y="469" width="0.0238%" height="15" fill="rgb(240,217,37)" fg:x="4630" fg:w="2"/><text x="55.5104%" y="479.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="55.1913%" y="453" width="0.0238%" height="15" fill="rgb(242,197,49)" fg:x="4630" fg:w="2"/><text x="55.5104%" y="463.50"/></g><g><title>logic::initialize (84 samples, 1.00%)</title><rect x="54.2258%" y="725" width="1.0013%" height="15" fill="rgb(219,171,17)" fg:x="4549" fg:w="84"/><text x="54.5449%" y="735.50"/></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (25 samples, 0.30%)</title><rect x="54.9291%" y="709" width="0.2980%" height="15" fill="rgb(209,81,40)" fg:x="4608" fg:w="25"/><text x="55.2482%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (25 samples, 0.30%)</title><rect x="54.9291%" y="693" width="0.2980%" height="15" fill="rgb(237,156,30)" fg:x="4608" fg:w="25"/><text x="55.2482%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="55.1913%" y="677" width="0.0358%" height="15" fill="rgb(212,127,16)" fg:x="4630" fg:w="3"/><text x="55.5104%" y="687.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="55.1913%" y="661" width="0.0358%" height="15" fill="rgb(226,66,32)" fg:x="4630" fg:w="3"/><text x="55.5104%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="55.1913%" y="645" width="0.0358%" height="15" fill="rgb(245,22,46)" fg:x="4630" fg:w="3"/><text x="55.5104%" y="655.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="55.1913%" y="629" width="0.0358%" height="15" fill="rgb(210,112,21)" fg:x="4630" fg:w="3"/><text x="55.5104%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="55.1913%" y="613" width="0.0358%" height="15" fill="rgb(207,118,39)" fg:x="4630" fg:w="3"/><text x="55.5104%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="55.1913%" y="597" width="0.0358%" height="15" fill="rgb(205,206,35)" fg:x="4630" fg:w="3"/><text x="55.5104%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="55.1913%" y="581" width="0.0358%" height="15" fill="rgb(222,120,2)" fg:x="4630" fg:w="3"/><text x="55.5104%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="55.1913%" y="565" width="0.0358%" height="15" fill="rgb(205,38,18)" fg:x="4630" fg:w="3"/><text x="55.5104%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="55.1913%" y="549" width="0.0358%" height="15" fill="rgb(226,61,2)" fg:x="4630" fg:w="3"/><text x="55.5104%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="55.1913%" y="533" width="0.0358%" height="15" fill="rgb(242,161,23)" fg:x="4630" fg:w="3"/><text x="55.5104%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.2152%" y="517" width="0.0119%" height="15" fill="rgb(213,13,52)" fg:x="4632" fg:w="1"/><text x="55.5343%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.2152%" y="501" width="0.0119%" height="15" fill="rgb(246,209,47)" fg:x="4632" fg:w="1"/><text x="55.5343%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.2152%" y="485" width="0.0119%" height="15" fill="rgb(214,41,3)" fg:x="4632" fg:w="1"/><text x="55.5343%" y="495.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="55.2271%" y="661" width="0.0238%" height="15" fill="rgb(236,119,38)" fg:x="4633" fg:w="2"/><text x="55.5462%" y="671.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="55.2271%" y="645" width="0.0238%" height="15" fill="rgb(218,50,11)" fg:x="4633" fg:w="2"/><text x="55.5462%" y="655.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="55.2271%" y="629" width="0.0238%" height="15" fill="rgb(228,38,11)" fg:x="4633" fg:w="2"/><text x="55.5462%" y="639.50"/></g><g><title>parser::effect (3 samples, 0.04%)</title><rect x="55.2271%" y="677" width="0.0358%" height="15" fill="rgb(212,13,9)" fg:x="4633" fg:w="3"/><text x="55.5462%" y="687.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.2509%" y="661" width="0.0119%" height="15" fill="rgb(208,211,9)" fg:x="4635" fg:w="1"/><text x="55.5700%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.2509%" y="645" width="0.0119%" height="15" fill="rgb(239,39,32)" fg:x="4635" fg:w="1"/><text x="55.5700%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.2509%" y="629" width="0.0119%" height="15" fill="rgb(254,179,26)" fg:x="4635" fg:w="1"/><text x="55.5700%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.2509%" y="613" width="0.0119%" height="15" fill="rgb(249,165,28)" fg:x="4635" fg:w="1"/><text x="55.5700%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.2509%" y="597" width="0.0119%" height="15" fill="rgb(225,59,50)" fg:x="4635" fg:w="1"/><text x="55.5700%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.2509%" y="581" width="0.0119%" height="15" fill="rgb(209,122,5)" fg:x="4635" fg:w="1"/><text x="55.5700%" y="591.50"/></g><g><title>parser::sym (1 samples, 0.01%)</title><rect x="55.2628%" y="677" width="0.0119%" height="15" fill="rgb(214,65,34)" fg:x="4636" fg:w="1"/><text x="55.5819%" y="687.50"/></g><g><title>parser::iff (1 samples, 0.01%)</title><rect x="55.2628%" y="661" width="0.0119%" height="15" fill="rgb(249,183,32)" fg:x="4636" fg:w="1"/><text x="55.5819%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.2628%" y="645" width="0.0119%" height="15" fill="rgb(218,122,24)" fg:x="4636" fg:w="1"/><text x="55.5819%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.2628%" y="629" width="0.0119%" height="15" fill="rgb(224,109,18)" fg:x="4636" fg:w="1"/><text x="55.5819%" y="639.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="55.2628%" y="613" width="0.0119%" height="15" fill="rgb(210,68,50)" fg:x="4636" fg:w="1"/><text x="55.5819%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="55.2748%" y="645" width="0.0119%" height="15" fill="rgb(212,184,34)" fg:x="4637" fg:w="1"/><text x="55.5939%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.2748%" y="677" width="0.0238%" height="15" fill="rgb(238,105,48)" fg:x="4637" fg:w="2"/><text x="55.5939%" y="687.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.2748%" y="661" width="0.0238%" height="15" fill="rgb(222,134,54)" fg:x="4637" fg:w="2"/><text x="55.5939%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.2867%" y="645" width="0.0119%" height="15" fill="rgb(246,24,43)" fg:x="4638" fg:w="1"/><text x="55.6058%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.2867%" y="629" width="0.0119%" height="15" fill="rgb(227,169,22)" fg:x="4638" fg:w="1"/><text x="55.6058%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="55.2867%" y="613" width="0.0119%" height="15" fill="rgb(253,152,4)" fg:x="4638" fg:w="1"/><text x="55.6058%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="55.2867%" y="597" width="0.0119%" height="15" fill="rgb(219,158,36)" fg:x="4638" fg:w="1"/><text x="55.6058%" y="607.50"/></g><g><title>parser::either (1 samples, 0.01%)</title><rect x="55.2986%" y="661" width="0.0119%" height="15" fill="rgb(251,128,40)" fg:x="4639" fg:w="1"/><text x="55.6177%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.2986%" y="645" width="0.0119%" height="15" fill="rgb(254,101,39)" fg:x="4639" fg:w="1"/><text x="55.6177%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.2986%" y="629" width="0.0119%" height="15" fill="rgb(221,168,40)" fg:x="4639" fg:w="1"/><text x="55.6177%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.2986%" y="613" width="0.0119%" height="15" fill="rgb(221,14,27)" fg:x="4639" fg:w="1"/><text x="55.6177%" y="623.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.2986%" y="597" width="0.0119%" height="15" fill="rgb(207,36,43)" fg:x="4639" fg:w="1"/><text x="55.6177%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.2986%" y="581" width="0.0119%" height="15" fill="rgb(240,172,53)" fg:x="4639" fg:w="1"/><text x="55.6177%" y="591.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="55.2986%" y="565" width="0.0119%" height="15" fill="rgb(241,138,43)" fg:x="4639" fg:w="1"/><text x="55.6177%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.3105%" y="645" width="0.0119%" height="15" fill="rgb(227,78,19)" fg:x="4640" fg:w="1"/><text x="55.6296%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.3105%" y="629" width="0.0119%" height="15" fill="rgb(215,127,44)" fg:x="4640" fg:w="1"/><text x="55.6296%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.3105%" y="613" width="0.0119%" height="15" fill="rgb(227,13,10)" fg:x="4640" fg:w="1"/><text x="55.6296%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.3105%" y="597" width="0.0119%" height="15" fill="rgb(249,177,6)" fg:x="4640" fg:w="1"/><text x="55.6296%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="55.3105%" y="581" width="0.0119%" height="15" fill="rgb(215,154,26)" fg:x="4640" fg:w="1"/><text x="55.6296%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="55.3224%" y="629" width="0.0119%" height="15" fill="rgb(250,168,20)" fg:x="4641" fg:w="1"/><text x="55.6415%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="55.3224%" y="613" width="0.0119%" height="15" fill="rgb(222,53,38)" fg:x="4641" fg:w="1"/><text x="55.6415%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.3224%" y="645" width="0.0238%" height="15" fill="rgb(245,154,5)" fg:x="4641" fg:w="2"/><text x="55.6415%" y="655.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="55.3344%" y="629" width="0.0119%" height="15" fill="rgb(214,89,50)" fg:x="4642" fg:w="1"/><text x="55.6535%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="55.3105%" y="661" width="0.0715%" height="15" fill="rgb(232,73,14)" fg:x="4640" fg:w="6"/><text x="55.6296%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="55.3463%" y="645" width="0.0358%" height="15" fill="rgb(230,101,20)" fg:x="4643" fg:w="3"/><text x="55.6654%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="55.3463%" y="629" width="0.0358%" height="15" fill="rgb(208,56,28)" fg:x="4643" fg:w="3"/><text x="55.6654%" y="639.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="55.3463%" y="613" width="0.0358%" height="15" fill="rgb(247,205,22)" fg:x="4643" fg:w="3"/><text x="55.6654%" y="623.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="55.3463%" y="597" width="0.0358%" height="15" fill="rgb(252,109,51)" fg:x="4643" fg:w="3"/><text x="55.6654%" y="607.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="55.3463%" y="581" width="0.0358%" height="15" fill="rgb(220,40,24)" fg:x="4643" fg:w="3"/><text x="55.6654%" y="591.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="55.3463%" y="565" width="0.0358%" height="15" fill="rgb(251,108,7)" fg:x="4643" fg:w="3"/><text x="55.6654%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (8 samples, 0.10%)</title><rect x="55.2986%" y="677" width="0.0954%" height="15" fill="rgb(238,102,51)" fg:x="4639" fg:w="8"/><text x="55.6177%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.3820%" y="661" width="0.0119%" height="15" fill="rgb(219,149,34)" fg:x="4646" fg:w="1"/><text x="55.7011%" y="671.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="55.3820%" y="645" width="0.0119%" height="15" fill="rgb(239,70,0)" fg:x="4646" fg:w="1"/><text x="55.7011%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.3940%" y="677" width="0.0119%" height="15" fill="rgb(246,214,23)" fg:x="4647" fg:w="1"/><text x="55.7131%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.3940%" y="661" width="0.0119%" height="15" fill="rgb(239,221,51)" fg:x="4647" fg:w="1"/><text x="55.7131%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.3940%" y="645" width="0.0119%" height="15" fill="rgb(254,62,14)" fg:x="4647" fg:w="1"/><text x="55.7131%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="55.3940%" y="629" width="0.0119%" height="15" fill="rgb(253,57,33)" fg:x="4647" fg:w="1"/><text x="55.7131%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="55.3940%" y="613" width="0.0119%" height="15" fill="rgb(229,34,6)" fg:x="4647" fg:w="1"/><text x="55.7131%" y="623.50"/></g><g><title>parser::layout_end (16 samples, 0.19%)</title><rect x="55.2271%" y="693" width="0.1907%" height="15" fill="rgb(235,191,23)" fg:x="4633" fg:w="16"/><text x="55.5462%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.4059%" y="677" width="0.0119%" height="15" fill="rgb(217,207,27)" fg:x="4648" fg:w="1"/><text x="55.7250%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.4059%" y="661" width="0.0119%" height="15" fill="rgb(232,41,44)" fg:x="4648" fg:w="1"/><text x="55.7250%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.4059%" y="645" width="0.0119%" height="15" fill="rgb(221,188,19)" fg:x="4648" fg:w="1"/><text x="55.7250%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.4059%" y="629" width="0.0119%" height="15" fill="rgb(245,180,45)" fg:x="4648" fg:w="1"/><text x="55.7250%" y="639.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="55.4059%" y="613" width="0.0119%" height="15" fill="rgb(250,220,42)" fg:x="4648" fg:w="1"/><text x="55.7250%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.4178%" y="693" width="0.0119%" height="15" fill="rgb(234,16,34)" fg:x="4649" fg:w="1"/><text x="55.7369%" y="703.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="55.4178%" y="677" width="0.0119%" height="15" fill="rgb(233,217,23)" fg:x="4649" fg:w="1"/><text x="55.7369%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.4297%" y="661" width="0.0119%" height="15" fill="rgb(209,22,46)" fg:x="4650" fg:w="1"/><text x="55.7488%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.4297%" y="645" width="0.0119%" height="15" fill="rgb(213,101,18)" fg:x="4650" fg:w="1"/><text x="55.7488%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.4297%" y="629" width="0.0119%" height="15" fill="rgb(215,179,52)" fg:x="4650" fg:w="1"/><text x="55.7488%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.4297%" y="613" width="0.0119%" height="15" fill="rgb(223,50,25)" fg:x="4650" fg:w="1"/><text x="55.7488%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.4297%" y="597" width="0.0119%" height="15" fill="rgb(224,51,44)" fg:x="4650" fg:w="1"/><text x="55.7488%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.4297%" y="581" width="0.0119%" height="15" fill="rgb(224,13,54)" fg:x="4650" fg:w="1"/><text x="55.7488%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.4297%" y="565" width="0.0119%" height="15" fill="rgb(219,58,47)" fg:x="4650" fg:w="1"/><text x="55.7488%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.4297%" y="549" width="0.0119%" height="15" fill="rgb(246,124,34)" fg:x="4650" fg:w="1"/><text x="55.7488%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.4297%" y="533" width="0.0119%" height="15" fill="rgb(245,109,25)" fg:x="4650" fg:w="1"/><text x="55.7488%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.4297%" y="517" width="0.0119%" height="15" fill="rgb(235,48,23)" fg:x="4650" fg:w="1"/><text x="55.7488%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.4297%" y="501" width="0.0119%" height="15" fill="rgb(229,203,36)" fg:x="4650" fg:w="1"/><text x="55.7488%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.4297%" y="485" width="0.0119%" height="15" fill="rgb(234,180,9)" fg:x="4650" fg:w="1"/><text x="55.7488%" y="495.50"/></g><g><title>parser::either (2 samples, 0.02%)</title><rect x="55.4297%" y="677" width="0.0238%" height="15" fill="rgb(228,98,45)" fg:x="4650" fg:w="2"/><text x="55.7488%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.4416%" y="661" width="0.0119%" height="15" fill="rgb(240,24,36)" fg:x="4651" fg:w="1"/><text x="55.7607%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.4416%" y="645" width="0.0119%" height="15" fill="rgb(227,154,19)" fg:x="4651" fg:w="1"/><text x="55.7607%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.4416%" y="629" width="0.0119%" height="15" fill="rgb(231,2,48)" fg:x="4651" fg:w="1"/><text x="55.7607%" y="639.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="55.4416%" y="613" width="0.0119%" height="15" fill="rgb(219,216,0)" fg:x="4651" fg:w="1"/><text x="55.7607%" y="623.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="55.4536%" y="661" width="0.0119%" height="15" fill="rgb(251,88,0)" fg:x="4652" fg:w="1"/><text x="55.7727%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.4655%" y="645" width="0.0119%" height="15" fill="rgb(242,45,45)" fg:x="4653" fg:w="1"/><text x="55.7846%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.4655%" y="629" width="0.0119%" height="15" fill="rgb(218,149,45)" fg:x="4653" fg:w="1"/><text x="55.7846%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.4655%" y="613" width="0.0119%" height="15" fill="rgb(247,194,10)" fg:x="4653" fg:w="1"/><text x="55.7846%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.4655%" y="597" width="0.0119%" height="15" fill="rgb(234,33,37)" fg:x="4653" fg:w="1"/><text x="55.7846%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="55.4655%" y="581" width="0.0119%" height="15" fill="rgb(218,61,13)" fg:x="4653" fg:w="1"/><text x="55.7846%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="55.4655%" y="565" width="0.0119%" height="15" fill="rgb(210,80,52)" fg:x="4653" fg:w="1"/><text x="55.7846%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.4655%" y="661" width="0.0238%" height="15" fill="rgb(218,203,27)" fg:x="4653" fg:w="2"/><text x="55.7846%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.4774%" y="645" width="0.0119%" height="15" fill="rgb(209,126,33)" fg:x="4654" fg:w="1"/><text x="55.7965%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="55.4774%" y="629" width="0.0119%" height="15" fill="rgb(234,173,41)" fg:x="4654" fg:w="1"/><text x="55.7965%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="55.4774%" y="613" width="0.0119%" height="15" fill="rgb(228,166,9)" fg:x="4654" fg:w="1"/><text x="55.7965%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="55.4536%" y="677" width="0.0596%" height="15" fill="rgb(208,124,43)" fg:x="4652" fg:w="5"/><text x="55.7727%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="55.4893%" y="661" width="0.0238%" height="15" fill="rgb(212,154,38)" fg:x="4655" fg:w="2"/><text x="55.8084%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.5013%" y="645" width="0.0119%" height="15" fill="rgb(246,179,35)" fg:x="4656" fg:w="1"/><text x="55.8204%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.5013%" y="629" width="0.0119%" height="15" fill="rgb(251,3,50)" fg:x="4656" fg:w="1"/><text x="55.8204%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.5013%" y="613" width="0.0119%" height="15" fill="rgb(219,96,8)" fg:x="4656" fg:w="1"/><text x="55.8204%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.5013%" y="597" width="0.0119%" height="15" fill="rgb(251,216,33)" fg:x="4656" fg:w="1"/><text x="55.8204%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.5013%" y="581" width="0.0119%" height="15" fill="rgb(243,145,29)" fg:x="4656" fg:w="1"/><text x="55.8204%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.5013%" y="565" width="0.0119%" height="15" fill="rgb(210,75,20)" fg:x="4656" fg:w="1"/><text x="55.8204%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.5013%" y="549" width="0.0119%" height="15" fill="rgb(235,56,8)" fg:x="4656" fg:w="1"/><text x="55.8204%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.5013%" y="533" width="0.0119%" height="15" fill="rgb(226,175,49)" fg:x="4656" fg:w="1"/><text x="55.8204%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.5013%" y="517" width="0.0119%" height="15" fill="rgb(242,204,23)" fg:x="4656" fg:w="1"/><text x="55.8204%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.5013%" y="501" width="0.0119%" height="15" fill="rgb(225,104,24)" fg:x="4656" fg:w="1"/><text x="55.8204%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="55.5132%" y="661" width="0.0119%" height="15" fill="rgb(253,34,1)" fg:x="4657" fg:w="1"/><text x="55.8323%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="55.5132%" y="645" width="0.0119%" height="15" fill="rgb(233,199,23)" fg:x="4657" fg:w="1"/><text x="55.8323%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.5132%" y="677" width="0.0238%" height="15" fill="rgb(247,7,51)" fg:x="4657" fg:w="2"/><text x="55.8323%" y="687.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="55.5251%" y="661" width="0.0119%" height="15" fill="rgb(214,146,12)" fg:x="4658" fg:w="1"/><text x="55.8442%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (11 samples, 0.13%)</title><rect x="55.4297%" y="693" width="0.1311%" height="15" fill="rgb(234,181,43)" fg:x="4650" fg:w="11"/><text x="55.7488%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.5370%" y="677" width="0.0238%" height="15" fill="rgb(239,148,6)" fg:x="4659" fg:w="2"/><text x="55.8561%" y="687.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="55.5370%" y="661" width="0.0238%" height="15" fill="rgb(206,151,17)" fg:x="4659" fg:w="2"/><text x="55.8561%" y="671.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="55.5370%" y="645" width="0.0238%" height="15" fill="rgb(213,215,10)" fg:x="4659" fg:w="2"/><text x="55.8561%" y="655.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="55.5370%" y="629" width="0.0238%" height="15" fill="rgb(215,220,44)" fg:x="4659" fg:w="2"/><text x="55.8561%" y="639.50"/></g><g><title>logic::dedent (29 samples, 0.35%)</title><rect x="55.2271%" y="709" width="0.3457%" height="15" fill="rgb(245,205,37)" fg:x="4633" fg:w="29"/><text x="55.5462%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.5609%" y="693" width="0.0119%" height="15" fill="rgb(245,130,43)" fg:x="4661" fg:w="1"/><text x="55.8800%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.5609%" y="677" width="0.0119%" height="15" fill="rgb(231,227,38)" fg:x="4661" fg:w="1"/><text x="55.8800%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned short), cond::smaller_indent(unsigned int)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.5609%" y="661" width="0.0119%" height="15" fill="rgb(233,185,4)" fg:x="4661" fg:w="1"/><text x="55.8800%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.5728%" y="693" width="0.0119%" height="15" fill="rgb(224,154,43)" fg:x="4662" fg:w="1"/><text x="55.8919%" y="703.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.5728%" y="677" width="0.0119%" height="15" fill="rgb(235,156,15)" fg:x="4662" fg:w="1"/><text x="55.8919%" y="687.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.5847%" y="661" width="0.0119%" height="15" fill="rgb(211,55,43)" fg:x="4663" fg:w="1"/><text x="55.9038%" y="671.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.5847%" y="645" width="0.0119%" height="15" fill="rgb(247,149,40)" fg:x="4663" fg:w="1"/><text x="55.9038%" y="655.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="55.5847%" y="629" width="0.0119%" height="15" fill="rgb(232,171,16)" fg:x="4663" fg:w="1"/><text x="55.9038%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.5966%" y="661" width="0.0119%" height="15" fill="rgb(215,117,49)" fg:x="4664" fg:w="1"/><text x="55.9157%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.5966%" y="645" width="0.0119%" height="15" fill="rgb(246,194,11)" fg:x="4664" fg:w="1"/><text x="55.9157%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.5966%" y="629" width="0.0119%" height="15" fill="rgb(242,101,44)" fg:x="4664" fg:w="1"/><text x="55.9157%" y="639.50"/></g><g><title>parser::either (3 samples, 0.04%)</title><rect x="55.5847%" y="677" width="0.0358%" height="15" fill="rgb(226,174,6)" fg:x="4663" fg:w="3"/><text x="55.9038%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.6085%" y="661" width="0.0119%" height="15" fill="rgb(213,150,20)" fg:x="4665" fg:w="1"/><text x="55.9276%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.6085%" y="645" width="0.0119%" height="15" fill="rgb(222,124,42)" fg:x="4665" fg:w="1"/><text x="55.9276%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.6085%" y="629" width="0.0119%" height="15" fill="rgb(250,19,47)" fg:x="4665" fg:w="1"/><text x="55.9276%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.6205%" y="677" width="0.0119%" height="15" fill="rgb(241,217,19)" fg:x="4666" fg:w="1"/><text x="55.9396%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.6205%" y="661" width="0.0119%" height="15" fill="rgb(207,210,34)" fg:x="4666" fg:w="1"/><text x="55.9396%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="55.6205%" y="645" width="0.0119%" height="15" fill="rgb(244,45,4)" fg:x="4666" fg:w="1"/><text x="55.9396%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="55.6205%" y="629" width="0.0119%" height="15" fill="rgb(252,134,50)" fg:x="4666" fg:w="1"/><text x="55.9396%" y="639.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (5 samples, 0.06%)</title><rect x="55.5847%" y="693" width="0.0596%" height="15" fill="rgb(238,74,2)" fg:x="4663" fg:w="5"/><text x="55.9038%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.6324%" y="677" width="0.0119%" height="15" fill="rgb(226,58,46)" fg:x="4667" fg:w="1"/><text x="55.9515%" y="687.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.6324%" y="661" width="0.0119%" height="15" fill="rgb(232,83,35)" fg:x="4667" fg:w="1"/><text x="55.9515%" y="671.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.6324%" y="645" width="0.0119%" height="15" fill="rgb(212,148,47)" fg:x="4667" fg:w="1"/><text x="55.9515%" y="655.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="55.6324%" y="629" width="0.0119%" height="15" fill="rgb(235,29,1)" fg:x="4667" fg:w="1"/><text x="55.9515%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="55.6443%" y="677" width="0.0119%" height="15" fill="rgb(247,55,37)" fg:x="4668" fg:w="1"/><text x="55.9634%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="55.6443%" y="661" width="0.0119%" height="15" fill="rgb(222,48,3)" fg:x="4668" fg:w="1"/><text x="55.9634%" y="671.50"/></g><g><title>logic::newline_semicolon (8 samples, 0.10%)</title><rect x="55.5728%" y="709" width="0.0954%" height="15" fill="rgb(234,21,33)" fg:x="4662" fg:w="8"/><text x="55.8919%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.6443%" y="693" width="0.0238%" height="15" fill="rgb(247,178,53)" fg:x="4668" fg:w="2"/><text x="55.9634%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.6562%" y="677" width="0.0119%" height="15" fill="rgb(225,75,7)" fg:x="4669" fg:w="1"/><text x="55.9753%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="55.6562%" y="661" width="0.0119%" height="15" fill="rgb(219,199,7)" fg:x="4669" fg:w="1"/><text x="55.9753%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="55.6562%" y="645" width="0.0119%" height="15" fill="rgb(209,93,42)" fg:x="4669" fg:w="1"/><text x="55.9753%" y="655.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.6801%" y="677" width="0.0119%" height="15" fill="rgb(240,175,17)" fg:x="4671" fg:w="1"/><text x="55.9992%" y="687.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="55.6801%" y="661" width="0.0119%" height="15" fill="rgb(232,106,7)" fg:x="4671" fg:w="1"/><text x="55.9992%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.7039%" y="645" width="0.0119%" height="15" fill="rgb(242,106,43)" fg:x="4673" fg:w="1"/><text x="56.0230%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.7039%" y="629" width="0.0119%" height="15" fill="rgb(242,61,37)" fg:x="4673" fg:w="1"/><text x="56.0230%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="55.7158%" y="645" width="0.0238%" height="15" fill="rgb(205,72,10)" fg:x="4674" fg:w="2"/><text x="56.0349%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.7277%" y="629" width="0.0119%" height="15" fill="rgb(214,184,36)" fg:x="4675" fg:w="1"/><text x="56.0468%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.7277%" y="613" width="0.0119%" height="15" fill="rgb(206,107,18)" fg:x="4675" fg:w="1"/><text x="56.0468%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.7277%" y="597" width="0.0119%" height="15" fill="rgb(210,75,5)" fg:x="4675" fg:w="1"/><text x="56.0468%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.7277%" y="581" width="0.0119%" height="15" fill="rgb(205,3,19)" fg:x="4675" fg:w="1"/><text x="56.0468%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.7277%" y="565" width="0.0119%" height="15" fill="rgb(207,181,42)" fg:x="4675" fg:w="1"/><text x="56.0468%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="55.7039%" y="661" width="0.0477%" height="15" fill="rgb(229,179,43)" fg:x="4673" fg:w="4"/><text x="56.0230%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.7397%" y="645" width="0.0119%" height="15" fill="rgb(246,95,30)" fg:x="4676" fg:w="1"/><text x="56.0588%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.7397%" y="629" width="0.0119%" height="15" fill="rgb(234,144,45)" fg:x="4676" fg:w="1"/><text x="56.0588%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.7397%" y="613" width="0.0119%" height="15" fill="rgb(250,54,25)" fg:x="4676" fg:w="1"/><text x="56.0588%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.7397%" y="597" width="0.0119%" height="15" fill="rgb(215,195,40)" fg:x="4676" fg:w="1"/><text x="56.0588%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="55.6801%" y="693" width="0.0954%" height="15" fill="rgb(233,188,42)" fg:x="4671" fg:w="8"/><text x="55.9992%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="55.6920%" y="677" width="0.0834%" height="15" fill="rgb(247,227,35)" fg:x="4672" fg:w="7"/><text x="56.0111%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.7516%" y="661" width="0.0238%" height="15" fill="rgb(249,124,27)" fg:x="4677" fg:w="2"/><text x="56.0707%" y="671.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="55.7516%" y="645" width="0.0238%" height="15" fill="rgb(219,207,25)" fg:x="4677" fg:w="2"/><text x="56.0707%" y="655.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="55.7516%" y="629" width="0.0238%" height="15" fill="rgb(241,216,47)" fg:x="4677" fg:w="2"/><text x="56.0707%" y="639.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="55.7516%" y="613" width="0.0238%" height="15" fill="rgb(233,82,50)" fg:x="4677" fg:w="2"/><text x="56.0707%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.7754%" y="661" width="0.0119%" height="15" fill="rgb(232,63,2)" fg:x="4679" fg:w="1"/><text x="56.0945%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.7754%" y="645" width="0.0119%" height="15" fill="rgb(236,184,28)" fg:x="4679" fg:w="1"/><text x="56.0945%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.7754%" y="629" width="0.0119%" height="15" fill="rgb(254,63,27)" fg:x="4679" fg:w="1"/><text x="56.0945%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.7754%" y="613" width="0.0119%" height="15" fill="rgb(253,106,28)" fg:x="4679" fg:w="1"/><text x="56.0945%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.7754%" y="597" width="0.0119%" height="15" fill="rgb(225,141,39)" fg:x="4679" fg:w="1"/><text x="56.0945%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.7754%" y="581" width="0.0119%" height="15" fill="rgb(222,157,20)" fg:x="4679" fg:w="1"/><text x="56.0945%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.7754%" y="565" width="0.0119%" height="15" fill="rgb(210,190,9)" fg:x="4679" fg:w="1"/><text x="56.0945%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.7754%" y="549" width="0.0119%" height="15" fill="rgb(242,167,7)" fg:x="4679" fg:w="1"/><text x="56.0945%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.7754%" y="533" width="0.0119%" height="15" fill="rgb(227,82,41)" fg:x="4679" fg:w="1"/><text x="56.0945%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.7754%" y="517" width="0.0119%" height="15" fill="rgb(222,131,13)" fg:x="4679" fg:w="1"/><text x="56.0945%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.7754%" y="501" width="0.0119%" height="15" fill="rgb(221,98,26)" fg:x="4679" fg:w="1"/><text x="56.0945%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.7754%" y="485" width="0.0119%" height="15" fill="rgb(251,63,52)" fg:x="4679" fg:w="1"/><text x="56.0945%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.7873%" y="645" width="0.0119%" height="15" fill="rgb(246,25,43)" fg:x="4680" fg:w="1"/><text x="56.1064%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.7873%" y="629" width="0.0119%" height="15" fill="rgb(247,167,15)" fg:x="4680" fg:w="1"/><text x="56.1064%" y="639.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="55.8112%" y="565" width="0.0238%" height="15" fill="rgb(240,104,42)" fg:x="4682" fg:w="2"/><text x="56.1303%" y="575.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="55.8112%" y="549" width="0.0238%" height="15" fill="rgb(224,54,6)" fg:x="4682" fg:w="2"/><text x="56.1303%" y="559.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="55.8112%" y="533" width="0.0238%" height="15" fill="rgb(244,108,35)" fg:x="4682" fg:w="2"/><text x="56.1303%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.8350%" y="533" width="0.0119%" height="15" fill="rgb(216,154,2)" fg:x="4684" fg:w="1"/><text x="56.1541%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.8350%" y="517" width="0.0119%" height="15" fill="rgb(222,8,47)" fg:x="4684" fg:w="1"/><text x="56.1541%" y="527.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="55.8350%" y="501" width="0.0119%" height="15" fill="rgb(252,93,1)" fg:x="4684" fg:w="1"/><text x="56.1541%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="55.8469%" y="501" width="0.0238%" height="15" fill="rgb(223,226,51)" fg:x="4685" fg:w="2"/><text x="56.1660%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.8589%" y="485" width="0.0119%" height="15" fill="rgb(206,147,9)" fg:x="4686" fg:w="1"/><text x="56.1780%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.8589%" y="469" width="0.0119%" height="15" fill="rgb(248,180,41)" fg:x="4686" fg:w="1"/><text x="56.1780%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.8589%" y="453" width="0.0119%" height="15" fill="rgb(209,47,50)" fg:x="4686" fg:w="1"/><text x="56.1780%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.8589%" y="437" width="0.0119%" height="15" fill="rgb(243,65,31)" fg:x="4686" fg:w="1"/><text x="56.1780%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.8589%" y="421" width="0.0119%" height="15" fill="rgb(228,128,1)" fg:x="4686" fg:w="1"/><text x="56.1780%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.8589%" y="405" width="0.0119%" height="15" fill="rgb(231,192,16)" fg:x="4686" fg:w="1"/><text x="56.1780%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.8589%" y="389" width="0.0119%" height="15" fill="rgb(224,26,40)" fg:x="4686" fg:w="1"/><text x="56.1780%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.8589%" y="373" width="0.0119%" height="15" fill="rgb(214,192,17)" fg:x="4686" fg:w="1"/><text x="56.1780%" y="383.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="55.8589%" y="357" width="0.0119%" height="15" fill="rgb(225,147,18)" fg:x="4686" fg:w="1"/><text x="56.1780%" y="367.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="55.7993%" y="645" width="0.0834%" height="15" fill="rgb(205,35,11)" fg:x="4681" fg:w="7"/><text x="56.1184%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="55.7993%" y="629" width="0.0834%" height="15" fill="rgb(242,40,42)" fg:x="4681" fg:w="7"/><text x="56.1184%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="55.8112%" y="613" width="0.0715%" height="15" fill="rgb(250,170,13)" fg:x="4682" fg:w="6"/><text x="56.1303%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="55.8112%" y="597" width="0.0715%" height="15" fill="rgb(240,161,28)" fg:x="4682" fg:w="6"/><text x="56.1303%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="55.8112%" y="581" width="0.0715%" height="15" fill="rgb(245,179,12)" fg:x="4682" fg:w="6"/><text x="56.1303%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="55.8350%" y="565" width="0.0477%" height="15" fill="rgb(250,92,32)" fg:x="4684" fg:w="4"/><text x="56.1541%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="55.8350%" y="549" width="0.0477%" height="15" fill="rgb(233,10,40)" fg:x="4684" fg:w="4"/><text x="56.1541%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="55.8469%" y="533" width="0.0358%" height="15" fill="rgb(217,98,1)" fg:x="4685" fg:w="3"/><text x="56.1660%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="55.8469%" y="517" width="0.0358%" height="15" fill="rgb(238,202,7)" fg:x="4685" fg:w="3"/><text x="56.1660%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="55.8708%" y="501" width="0.0119%" height="15" fill="rgb(222,91,3)" fg:x="4687" fg:w="1"/><text x="56.1899%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="55.7873%" y="661" width="0.1073%" height="15" fill="rgb(211,170,49)" fg:x="4680" fg:w="9"/><text x="56.1064%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.8827%" y="645" width="0.0119%" height="15" fill="rgb(253,139,18)" fg:x="4688" fg:w="1"/><text x="56.2018%" y="655.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.8827%" y="629" width="0.0119%" height="15" fill="rgb(222,4,43)" fg:x="4688" fg:w="1"/><text x="56.2018%" y="639.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.8827%" y="613" width="0.0119%" height="15" fill="rgb(207,205,12)" fg:x="4688" fg:w="1"/><text x="56.2018%" y="623.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="55.8827%" y="597" width="0.0119%" height="15" fill="rgb(216,159,46)" fg:x="4688" fg:w="1"/><text x="56.2018%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.8946%" y="613" width="0.0119%" height="15" fill="rgb(236,115,1)" fg:x="4689" fg:w="1"/><text x="56.2137%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.8946%" y="597" width="0.0119%" height="15" fill="rgb(251,35,33)" fg:x="4689" fg:w="1"/><text x="56.2137%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.9065%" y="549" width="0.0119%" height="15" fill="rgb(248,62,51)" fg:x="4690" fg:w="1"/><text x="56.2256%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.9065%" y="533" width="0.0119%" height="15" fill="rgb(254,180,19)" fg:x="4690" fg:w="1"/><text x="56.2256%" y="543.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="55.9065%" y="517" width="0.0119%" height="15" fill="rgb(217,100,32)" fg:x="4690" fg:w="1"/><text x="56.2256%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="55.8946%" y="629" width="0.0477%" height="15" fill="rgb(224,71,22)" fg:x="4689" fg:w="4"/><text x="56.2137%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="55.9065%" y="613" width="0.0358%" height="15" fill="rgb(251,185,33)" fg:x="4690" fg:w="3"/><text x="56.2256%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="55.9065%" y="597" width="0.0358%" height="15" fill="rgb(209,75,48)" fg:x="4690" fg:w="3"/><text x="56.2256%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="55.9065%" y="581" width="0.0358%" height="15" fill="rgb(253,190,16)" fg:x="4690" fg:w="3"/><text x="56.2256%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="55.9065%" y="565" width="0.0358%" height="15" fill="rgb(226,140,1)" fg:x="4690" fg:w="3"/><text x="56.2256%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="55.9185%" y="549" width="0.0238%" height="15" fill="rgb(206,75,30)" fg:x="4691" fg:w="2"/><text x="56.2376%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.9185%" y="533" width="0.0238%" height="15" fill="rgb(231,208,37)" fg:x="4691" fg:w="2"/><text x="56.2376%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.9185%" y="517" width="0.0238%" height="15" fill="rgb(238,136,40)" fg:x="4691" fg:w="2"/><text x="56.2376%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="55.9185%" y="501" width="0.0238%" height="15" fill="rgb(247,137,17)" fg:x="4691" fg:w="2"/><text x="56.2376%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.9185%" y="485" width="0.0238%" height="15" fill="rgb(240,60,40)" fg:x="4691" fg:w="2"/><text x="56.2376%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="55.9185%" y="469" width="0.0238%" height="15" fill="rgb(236,68,50)" fg:x="4691" fg:w="2"/><text x="56.2376%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="55.9185%" y="453" width="0.0238%" height="15" fill="rgb(230,42,12)" fg:x="4691" fg:w="2"/><text x="56.2376%" y="463.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="55.9185%" y="437" width="0.0238%" height="15" fill="rgb(219,16,16)" fg:x="4691" fg:w="2"/><text x="56.2376%" y="447.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="55.9185%" y="421" width="0.0238%" height="15" fill="rgb(220,38,35)" fg:x="4691" fg:w="2"/><text x="56.2376%" y="431.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="55.9304%" y="405" width="0.0119%" height="15" fill="rgb(228,33,1)" fg:x="4692" fg:w="1"/><text x="56.2495%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.9423%" y="501" width="0.0119%" height="15" fill="rgb(241,46,31)" fg:x="4693" fg:w="1"/><text x="56.2614%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.9423%" y="485" width="0.0119%" height="15" fill="rgb(232,58,20)" fg:x="4693" fg:w="1"/><text x="56.2614%" y="495.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="55.9423%" y="469" width="0.0119%" height="15" fill="rgb(206,228,53)" fg:x="4693" fg:w="1"/><text x="56.2614%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.9542%" y="453" width="0.0119%" height="15" fill="rgb(206,88,33)" fg:x="4694" fg:w="1"/><text x="56.2733%" y="463.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.9542%" y="437" width="0.0119%" height="15" fill="rgb(238,69,7)" fg:x="4694" fg:w="1"/><text x="56.2733%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.9542%" y="421" width="0.0119%" height="15" fill="rgb(250,21,46)" fg:x="4694" fg:w="1"/><text x="56.2733%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.9542%" y="405" width="0.0119%" height="15" fill="rgb(215,212,21)" fg:x="4694" fg:w="1"/><text x="56.2733%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="55.9542%" y="389" width="0.0119%" height="15" fill="rgb(211,35,12)" fg:x="4694" fg:w="1"/><text x="56.2733%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="55.9542%" y="373" width="0.0119%" height="15" fill="rgb(231,184,16)" fg:x="4694" fg:w="1"/><text x="56.2733%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="55.9542%" y="357" width="0.0119%" height="15" fill="rgb(242,140,15)" fg:x="4694" fg:w="1"/><text x="56.2733%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="55.9542%" y="341" width="0.0119%" height="15" fill="rgb(220,37,14)" fg:x="4694" fg:w="1"/><text x="56.2733%" y="351.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="55.9661%" y="421" width="0.0238%" height="15" fill="rgb(223,146,22)" fg:x="4695" fg:w="2"/><text x="56.2852%" y="431.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="55.9661%" y="405" width="0.0238%" height="15" fill="rgb(216,132,15)" fg:x="4695" fg:w="2"/><text x="56.2852%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="55.9423%" y="549" width="0.0596%" height="15" fill="rgb(248,83,5)" fg:x="4693" fg:w="5"/><text x="56.2614%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="55.9423%" y="533" width="0.0596%" height="15" fill="rgb(231,206,48)" fg:x="4693" fg:w="5"/><text x="56.2614%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="55.9423%" y="517" width="0.0596%" height="15" fill="rgb(253,185,37)" fg:x="4693" fg:w="5"/><text x="56.2614%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="55.9542%" y="501" width="0.0477%" height="15" fill="rgb(208,21,44)" fg:x="4694" fg:w="4"/><text x="56.2733%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="55.9542%" y="485" width="0.0477%" height="15" fill="rgb(236,125,4)" fg:x="4694" fg:w="4"/><text x="56.2733%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="55.9542%" y="469" width="0.0477%" height="15" fill="rgb(226,134,25)" fg:x="4694" fg:w="4"/><text x="56.2733%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="55.9661%" y="453" width="0.0358%" height="15" fill="rgb(250,201,12)" fg:x="4695" fg:w="3"/><text x="56.2852%" y="463.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="55.9661%" y="437" width="0.0358%" height="15" fill="rgb(225,92,18)" fg:x="4695" fg:w="3"/><text x="56.2852%" y="447.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="55.9900%" y="421" width="0.0119%" height="15" fill="rgb(227,35,22)" fg:x="4697" fg:w="1"/><text x="56.3091%" y="431.50"/></g><g><title>parser::operator+ (31 samples, 0.37%)</title><rect x="55.6681%" y="709" width="0.3695%" height="15" fill="rgb(214,180,52)" fg:x="4670" fg:w="31"/><text x="55.9872%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (22 samples, 0.26%)</title><rect x="55.7754%" y="693" width="0.2622%" height="15" fill="rgb(233,55,38)" fg:x="4679" fg:w="22"/><text x="56.0945%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (22 samples, 0.26%)</title><rect x="55.7754%" y="677" width="0.2622%" height="15" fill="rgb(249,171,43)" fg:x="4679" fg:w="22"/><text x="56.0945%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="55.8946%" y="661" width="0.1430%" height="15" fill="rgb(239,87,2)" fg:x="4689" fg:w="12"/><text x="56.2137%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="55.8946%" y="645" width="0.1430%" height="15" fill="rgb(248,141,5)" fg:x="4689" fg:w="12"/><text x="56.2137%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="55.9423%" y="629" width="0.0954%" height="15" fill="rgb(238,33,42)" fg:x="4693" fg:w="8"/><text x="56.2614%" y="639.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="55.9423%" y="613" width="0.0954%" height="15" fill="rgb(231,57,19)" fg:x="4693" fg:w="8"/><text x="56.2614%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="55.9423%" y="597" width="0.0954%" height="15" fill="rgb(214,78,53)" fg:x="4693" fg:w="8"/><text x="56.2614%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="55.9423%" y="581" width="0.0954%" height="15" fill="rgb(206,132,29)" fg:x="4693" fg:w="8"/><text x="56.2614%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="55.9423%" y="565" width="0.0954%" height="15" fill="rgb(248,174,31)" fg:x="4693" fg:w="8"/><text x="56.2614%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="56.0019%" y="549" width="0.0358%" height="15" fill="rgb(221,87,13)" fg:x="4698" fg:w="3"/><text x="56.3210%" y="559.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="56.0019%" y="533" width="0.0358%" height="15" fill="rgb(223,197,17)" fg:x="4698" fg:w="3"/><text x="56.3210%" y="543.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="56.0019%" y="517" width="0.0358%" height="15" fill="rgb(220,144,50)" fg:x="4698" fg:w="3"/><text x="56.3210%" y="527.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="56.0257%" y="501" width="0.0119%" height="15" fill="rgb(244,201,11)" fg:x="4700" fg:w="1"/><text x="56.3448%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="56.0377%" y="693" width="0.0119%" height="15" fill="rgb(249,81,34)" fg:x="4701" fg:w="1"/><text x="56.3568%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.0496%" y="693" width="0.0238%" height="15" fill="rgb(205,161,12)" fg:x="4702" fg:w="2"/><text x="56.3687%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.0496%" y="677" width="0.0238%" height="15" fill="rgb(252,139,50)" fg:x="4702" fg:w="2"/><text x="56.3687%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.0496%" y="661" width="0.0238%" height="15" fill="rgb(205,169,14)" fg:x="4702" fg:w="2"/><text x="56.3687%" y="671.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2 samples, 0.02%)</title><rect x="56.0496%" y="645" width="0.0238%" height="15" fill="rgb(248,198,33)" fg:x="4702" fg:w="2"/><text x="56.3687%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="56.0377%" y="709" width="0.0477%" height="15" fill="rgb(236,23,21)" fg:x="4701" fg:w="4"/><text x="56.3568%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.0734%" y="693" width="0.0119%" height="15" fill="rgb(231,13,38)" fg:x="4704" fg:w="1"/><text x="56.3925%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="56.0734%" y="677" width="0.0119%" height="15" fill="rgb(239,139,21)" fg:x="4704" fg:w="1"/><text x="56.3925%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="56.0734%" y="661" width="0.0119%" height="15" fill="rgb(222,164,45)" fg:x="4704" fg:w="1"/><text x="56.3925%" y="671.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="56.0853%" y="677" width="0.0119%" height="15" fill="rgb(230,52,27)" fg:x="4705" fg:w="1"/><text x="56.4044%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="56.0973%" y="629" width="0.0119%" height="15" fill="rgb(227,143,42)" fg:x="4706" fg:w="1"/><text x="56.4164%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="56.0973%" y="613" width="0.0119%" height="15" fill="rgb(249,127,1)" fg:x="4706" fg:w="1"/><text x="56.4164%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.0973%" y="677" width="0.0238%" height="15" fill="rgb(243,107,26)" fg:x="4706" fg:w="2"/><text x="56.4164%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.0973%" y="661" width="0.0238%" height="15" fill="rgb(225,7,45)" fg:x="4706" fg:w="2"/><text x="56.4164%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.0973%" y="645" width="0.0238%" height="15" fill="rgb(241,88,38)" fg:x="4706" fg:w="2"/><text x="56.4164%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.1092%" y="629" width="0.0119%" height="15" fill="rgb(226,121,9)" fg:x="4707" fg:w="1"/><text x="56.4283%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="56.1092%" y="613" width="0.0119%" height="15" fill="rgb(253,60,29)" fg:x="4707" fg:w="1"/><text x="56.4283%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="56.1092%" y="597" width="0.0119%" height="15" fill="rgb(244,181,39)" fg:x="4707" fg:w="1"/><text x="56.4283%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="56.0853%" y="693" width="0.0596%" height="15" fill="rgb(252,203,31)" fg:x="4705" fg:w="5"/><text x="56.4044%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.1211%" y="677" width="0.0238%" height="15" fill="rgb(224,120,8)" fg:x="4708" fg:w="2"/><text x="56.4402%" y="687.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="56.1211%" y="661" width="0.0238%" height="15" fill="rgb(205,171,54)" fg:x="4708" fg:w="2"/><text x="56.4402%" y="671.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="56.1211%" y="645" width="0.0238%" height="15" fill="rgb(235,89,11)" fg:x="4708" fg:w="2"/><text x="56.4402%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="56.1450%" y="661" width="0.0119%" height="15" fill="rgb(212,180,28)" fg:x="4710" fg:w="1"/><text x="56.4641%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="56.1450%" y="645" width="0.0119%" height="15" fill="rgb(247,84,49)" fg:x="4710" fg:w="1"/><text x="56.4641%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.1450%" y="693" width="0.0238%" height="15" fill="rgb(236,187,52)" fg:x="4710" fg:w="2"/><text x="56.4641%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.1450%" y="677" width="0.0238%" height="15" fill="rgb(227,24,15)" fg:x="4710" fg:w="2"/><text x="56.4641%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.1569%" y="661" width="0.0119%" height="15" fill="rgb(227,211,13)" fg:x="4711" fg:w="1"/><text x="56.4760%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.1569%" y="645" width="0.0119%" height="15" fill="rgb(245,52,14)" fg:x="4711" fg:w="1"/><text x="56.4760%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.1569%" y="629" width="0.0119%" height="15" fill="rgb(225,185,13)" fg:x="4711" fg:w="1"/><text x="56.4760%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.1569%" y="613" width="0.0119%" height="15" fill="rgb(217,160,29)" fg:x="4711" fg:w="1"/><text x="56.4760%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.1569%" y="597" width="0.0119%" height="15" fill="rgb(216,115,53)" fg:x="4711" fg:w="1"/><text x="56.4760%" y="607.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="56.1569%" y="581" width="0.0119%" height="15" fill="rgb(236,99,5)" fg:x="4711" fg:w="1"/><text x="56.4760%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.1688%" y="677" width="0.0119%" height="15" fill="rgb(222,60,38)" fg:x="4712" fg:w="1"/><text x="56.4879%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.1688%" y="661" width="0.0119%" height="15" fill="rgb(212,82,22)" fg:x="4712" fg:w="1"/><text x="56.4879%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.1688%" y="645" width="0.0119%" height="15" fill="rgb(214,48,28)" fg:x="4712" fg:w="1"/><text x="56.4879%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="56.1688%" y="629" width="0.0119%" height="15" fill="rgb(245,196,50)" fg:x="4712" fg:w="1"/><text x="56.4879%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="56.1688%" y="613" width="0.0119%" height="15" fill="rgb(225,159,46)" fg:x="4712" fg:w="1"/><text x="56.4879%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="56.1807%" y="629" width="0.0119%" height="15" fill="rgb(207,195,48)" fg:x="4713" fg:w="1"/><text x="56.4998%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="56.1807%" y="613" width="0.0119%" height="15" fill="rgb(240,73,3)" fg:x="4713" fg:w="1"/><text x="56.4998%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="56.1926%" y="597" width="0.0119%" height="15" fill="rgb(245,57,23)" fg:x="4714" fg:w="1"/><text x="56.5117%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="56.1926%" y="581" width="0.0119%" height="15" fill="rgb(240,75,18)" fg:x="4714" fg:w="1"/><text x="56.5117%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.2046%" y="581" width="0.0119%" height="15" fill="rgb(238,168,12)" fg:x="4715" fg:w="1"/><text x="56.5237%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.2046%" y="565" width="0.0119%" height="15" fill="rgb(226,20,40)" fg:x="4715" fg:w="1"/><text x="56.5237%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="56.2046%" y="549" width="0.0119%" height="15" fill="rgb(224,130,35)" fg:x="4715" fg:w="1"/><text x="56.5237%" y="559.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="56.1807%" y="661" width="0.0596%" height="15" fill="rgb(225,63,41)" fg:x="4713" fg:w="5"/><text x="56.4998%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="56.1807%" y="645" width="0.0596%" height="15" fill="rgb(219,3,3)" fg:x="4713" fg:w="5"/><text x="56.4998%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="56.1926%" y="629" width="0.0477%" height="15" fill="rgb(218,157,4)" fg:x="4714" fg:w="4"/><text x="56.5117%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="56.1926%" y="613" width="0.0477%" height="15" fill="rgb(232,76,36)" fg:x="4714" fg:w="4"/><text x="56.5117%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="56.2046%" y="597" width="0.0358%" height="15" fill="rgb(247,36,0)" fg:x="4715" fg:w="3"/><text x="56.5237%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.2165%" y="581" width="0.0238%" height="15" fill="rgb(205,2,34)" fg:x="4716" fg:w="2"/><text x="56.5356%" y="591.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="56.2165%" y="565" width="0.0238%" height="15" fill="rgb(239,136,13)" fg:x="4716" fg:w="2"/><text x="56.5356%" y="575.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="56.2165%" y="549" width="0.0238%" height="15" fill="rgb(253,122,12)" fg:x="4716" fg:w="2"/><text x="56.5356%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="56.1688%" y="693" width="0.0834%" height="15" fill="rgb(222,174,7)" fg:x="4712" fg:w="7"/><text x="56.4879%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="56.1807%" y="677" width="0.0715%" height="15" fill="rgb(208,191,42)" fg:x="4713" fg:w="6"/><text x="56.4998%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.2403%" y="661" width="0.0119%" height="15" fill="rgb(237,212,15)" fg:x="4718" fg:w="1"/><text x="56.5594%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="56.2403%" y="645" width="0.0119%" height="15" fill="rgb(215,65,20)" fg:x="4718" fg:w="1"/><text x="56.5594%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="56.2403%" y="629" width="0.0119%" height="15" fill="rgb(232,103,11)" fg:x="4718" fg:w="1"/><text x="56.5594%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.2522%" y="677" width="0.0119%" height="15" fill="rgb(235,148,18)" fg:x="4719" fg:w="1"/><text x="56.5713%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="56.2522%" y="661" width="0.0119%" height="15" fill="rgb(240,173,7)" fg:x="4719" fg:w="1"/><text x="56.5713%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.2522%" y="645" width="0.0119%" height="15" fill="rgb(228,182,25)" fg:x="4719" fg:w="1"/><text x="56.5713%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="56.2522%" y="629" width="0.0119%" height="15" fill="rgb(247,3,52)" fg:x="4719" fg:w="1"/><text x="56.5713%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.2522%" y="613" width="0.0119%" height="15" fill="rgb(226,155,8)" fg:x="4719" fg:w="1"/><text x="56.5713%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="56.2522%" y="597" width="0.0119%" height="15" fill="rgb(243,195,38)" fg:x="4719" fg:w="1"/><text x="56.5713%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.2522%" y="581" width="0.0119%" height="15" fill="rgb(254,181,33)" fg:x="4719" fg:w="1"/><text x="56.5713%" y="591.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="56.2522%" y="565" width="0.0119%" height="15" fill="rgb(232,98,23)" fg:x="4719" fg:w="1"/><text x="56.5713%" y="575.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="56.2522%" y="549" width="0.0119%" height="15" fill="rgb(205,23,10)" fg:x="4719" fg:w="1"/><text x="56.5713%" y="559.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="56.2642%" y="517" width="0.0477%" height="15" fill="rgb(212,124,38)" fg:x="4720" fg:w="4"/><text x="56.5833%" y="527.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="56.2642%" y="501" width="0.0477%" height="15" fill="rgb(228,207,2)" fg:x="4720" fg:w="4"/><text x="56.5833%" y="511.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="56.2761%" y="485" width="0.0358%" height="15" fill="rgb(215,120,22)" fg:x="4721" fg:w="3"/><text x="56.5952%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="56.3118%" y="469" width="0.0119%" height="15" fill="rgb(251,172,33)" fg:x="4724" fg:w="1"/><text x="56.6309%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.3118%" y="453" width="0.0119%" height="15" fill="rgb(250,83,2)" fg:x="4724" fg:w="1"/><text x="56.6309%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="56.3118%" y="437" width="0.0119%" height="15" fill="rgb(210,132,53)" fg:x="4724" fg:w="1"/><text x="56.6309%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.3118%" y="421" width="0.0119%" height="15" fill="rgb(221,208,36)" fg:x="4724" fg:w="1"/><text x="56.6309%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="56.3118%" y="405" width="0.0119%" height="15" fill="rgb(205,192,46)" fg:x="4724" fg:w="1"/><text x="56.6309%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="56.3118%" y="389" width="0.0119%" height="15" fill="rgb(223,163,14)" fg:x="4724" fg:w="1"/><text x="56.6309%" y="399.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="56.3118%" y="373" width="0.0119%" height="15" fill="rgb(218,41,28)" fg:x="4724" fg:w="1"/><text x="56.6309%" y="383.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="56.2642%" y="661" width="0.0715%" height="15" fill="rgb(235,104,10)" fg:x="4720" fg:w="6"/><text x="56.5833%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="56.2642%" y="645" width="0.0715%" height="15" fill="rgb(246,17,4)" fg:x="4720" fg:w="6"/><text x="56.5833%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="56.2642%" y="629" width="0.0715%" height="15" fill="rgb(240,7,16)" fg:x="4720" fg:w="6"/><text x="56.5833%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="56.2642%" y="613" width="0.0715%" height="15" fill="rgb(213,160,23)" fg:x="4720" fg:w="6"/><text x="56.5833%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="56.2642%" y="597" width="0.0715%" height="15" fill="rgb(251,179,49)" fg:x="4720" fg:w="6"/><text x="56.5833%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="56.2642%" y="581" width="0.0715%" height="15" fill="rgb(247,198,10)" fg:x="4720" fg:w="6"/><text x="56.5833%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="56.2642%" y="565" width="0.0715%" height="15" fill="rgb(220,65,29)" fg:x="4720" fg:w="6"/><text x="56.5833%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="56.2642%" y="549" width="0.0715%" height="15" fill="rgb(237,171,28)" fg:x="4720" fg:w="6"/><text x="56.5833%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="56.2642%" y="533" width="0.0715%" height="15" fill="rgb(228,44,26)" fg:x="4720" fg:w="6"/><text x="56.5833%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="56.3118%" y="517" width="0.0238%" height="15" fill="rgb(216,210,27)" fg:x="4724" fg:w="2"/><text x="56.6309%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.3118%" y="501" width="0.0238%" height="15" fill="rgb(252,10,17)" fg:x="4724" fg:w="2"/><text x="56.6309%" y="511.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.3118%" y="485" width="0.0238%" height="15" fill="rgb(214,172,30)" fg:x="4724" fg:w="2"/><text x="56.6309%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="56.3238%" y="469" width="0.0119%" height="15" fill="rgb(253,130,48)" fg:x="4725" fg:w="1"/><text x="56.6429%" y="479.50"/></g><g><title>logic::newline_indent (95 samples, 1.13%)</title><rect x="55.2271%" y="725" width="1.1324%" height="15" fill="rgb(226,99,43)" fg:x="4633" fg:w="95"/><text x="55.5462%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="56.0853%" y="709" width="0.2742%" height="15" fill="rgb(239,111,26)" fg:x="4705" fg:w="23"/><text x="56.4044%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="56.2522%" y="693" width="0.1073%" height="15" fill="rgb(240,27,53)" fg:x="4719" fg:w="9"/><text x="56.5713%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="56.2642%" y="677" width="0.0954%" height="15" fill="rgb(254,163,12)" fg:x="4720" fg:w="8"/><text x="56.5833%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.3357%" y="661" width="0.0238%" height="15" fill="rgb(225,51,48)" fg:x="4726" fg:w="2"/><text x="56.6548%" y="671.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="56.3357%" y="645" width="0.0238%" height="15" fill="rgb(205,19,32)" fg:x="4726" fg:w="2"/><text x="56.6548%" y="655.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="56.3357%" y="629" width="0.0238%" height="15" fill="rgb(218,119,26)" fg:x="4726" fg:w="2"/><text x="56.6548%" y="639.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="56.3476%" y="613" width="0.0119%" height="15" fill="rgb(231,173,33)" fg:x="4727" fg:w="1"/><text x="56.6667%" y="623.50"/></g><g><title>cond::is_newline_where (2 samples, 0.02%)</title><rect x="56.3714%" y="693" width="0.0238%" height="15" fill="rgb(241,100,29)" fg:x="4729" fg:w="2"/><text x="56.6905%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.3834%" y="677" width="0.0119%" height="15" fill="rgb(250,194,34)" fg:x="4730" fg:w="1"/><text x="56.7025%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), not_(std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.3834%" y="661" width="0.0119%" height="15" fill="rgb(215,23,50)" fg:x="4730" fg:w="1"/><text x="56.7025%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="56.3834%" y="645" width="0.0119%" height="15" fill="rgb(206,49,37)" fg:x="4730" fg:w="1"/><text x="56.7025%" y="655.50"/></g><g><title>parser::finish_if_valid (1 samples, 0.01%)</title><rect x="56.3953%" y="677" width="0.0119%" height="15" fill="rgb(247,39,21)" fg:x="4731" fg:w="1"/><text x="56.7144%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.3953%" y="661" width="0.0119%" height="15" fill="rgb(209,220,15)" fg:x="4731" fg:w="1"/><text x="56.7144%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.3953%" y="645" width="0.0119%" height="15" fill="rgb(206,41,33)" fg:x="4731" fg:w="1"/><text x="56.7144%" y="655.50"/></g><g><title>parser::end_or_semicolon (2 samples, 0.02%)</title><rect x="56.3953%" y="693" width="0.0238%" height="15" fill="rgb(221,225,45)" fg:x="4731" fg:w="2"/><text x="56.7144%" y="703.50"/></g><g><title>parser::operator+ (1 samples, 0.01%)</title><rect x="56.4072%" y="677" width="0.0119%" height="15" fill="rgb(216,27,18)" fg:x="4732" fg:w="1"/><text x="56.7263%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.4072%" y="661" width="0.0119%" height="15" fill="rgb(250,193,34)" fg:x="4732" fg:w="1"/><text x="56.7263%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="56.4072%" y="645" width="0.0119%" height="15" fill="rgb(227,215,20)" fg:x="4732" fg:w="1"/><text x="56.7263%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.4072%" y="629" width="0.0119%" height="15" fill="rgb(242,211,27)" fg:x="4732" fg:w="1"/><text x="56.7263%" y="639.50"/></g><g><title>parser::iff (1 samples, 0.01%)</title><rect x="56.4191%" y="693" width="0.0119%" height="15" fill="rgb(229,190,30)" fg:x="4733" fg:w="1"/><text x="56.7382%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.4191%" y="677" width="0.0119%" height="15" fill="rgb(253,31,29)" fg:x="4733" fg:w="1"/><text x="56.7382%" y="687.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="56.4191%" y="661" width="0.0119%" height="15" fill="rgb(229,177,52)" fg:x="4733" fg:w="1"/><text x="56.7382%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.4191%" y="645" width="0.0119%" height="15" fill="rgb(226,88,8)" fg:x="4733" fg:w="1"/><text x="56.7382%" y="655.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="56.4191%" y="629" width="0.0119%" height="15" fill="rgb(214,55,27)" fg:x="4733" fg:w="1"/><text x="56.7382%" y="639.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="56.4191%" y="613" width="0.0119%" height="15" fill="rgb(233,202,5)" fg:x="4733" fg:w="1"/><text x="56.7382%" y="623.50"/></g><g><title>parser::mark (1 samples, 0.01%)</title><rect x="56.4310%" y="693" width="0.0119%" height="15" fill="rgb(251,49,30)" fg:x="4734" fg:w="1"/><text x="56.7501%" y="703.50"/></g><g><title>state::mark (1 samples, 0.01%)</title><rect x="56.4310%" y="677" width="0.0119%" height="15" fill="rgb(235,18,52)" fg:x="4734" fg:w="1"/><text x="56.7501%" y="687.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="56.4310%" y="661" width="0.0119%" height="15" fill="rgb(250,111,51)" fg:x="4734" fg:w="1"/><text x="56.7501%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="56.4430%" y="661" width="0.0119%" height="15" fill="rgb(218,13,25)" fg:x="4735" fg:w="1"/><text x="56.7621%" y="671.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="56.4430%" y="645" width="0.0119%" height="15" fill="rgb(248,96,7)" fg:x="4735" fg:w="1"/><text x="56.7621%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.4668%" y="581" width="0.0119%" height="15" fill="rgb(217,31,15)" fg:x="4737" fg:w="1"/><text x="56.7859%" y="591.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="56.4668%" y="565" width="0.0119%" height="15" fill="rgb(228,59,49)" fg:x="4737" fg:w="1"/><text x="56.7859%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="56.4787%" y="565" width="0.0119%" height="15" fill="rgb(210,152,38)" fg:x="4738" fg:w="1"/><text x="56.7978%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="56.4787%" y="549" width="0.0119%" height="15" fill="rgb(206,71,11)" fg:x="4738" fg:w="1"/><text x="56.7978%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="56.5026%" y="533" width="0.0119%" height="15" fill="rgb(244,199,5)" fg:x="4740" fg:w="1"/><text x="56.8217%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="56.5026%" y="517" width="0.0119%" height="15" fill="rgb(253,49,1)" fg:x="4740" fg:w="1"/><text x="56.8217%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="56.4787%" y="581" width="0.0477%" height="15" fill="rgb(225,206,40)" fg:x="4738" fg:w="4"/><text x="56.7978%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="56.4906%" y="565" width="0.0358%" height="15" fill="rgb(243,116,47)" fg:x="4739" fg:w="3"/><text x="56.8097%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.5026%" y="549" width="0.0238%" height="15" fill="rgb(219,225,16)" fg:x="4740" fg:w="2"/><text x="56.8217%" y="559.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.5145%" y="533" width="0.0119%" height="15" fill="rgb(233,29,47)" fg:x="4741" fg:w="1"/><text x="56.8336%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="56.5145%" y="517" width="0.0119%" height="15" fill="rgb(250,179,18)" fg:x="4741" fg:w="1"/><text x="56.8336%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="56.5145%" y="501" width="0.0119%" height="15" fill="rgb(215,176,6)" fg:x="4741" fg:w="1"/><text x="56.8336%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="56.4549%" y="645" width="0.0834%" height="15" fill="rgb(214,117,39)" fg:x="4736" fg:w="7"/><text x="56.7740%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="56.4549%" y="629" width="0.0834%" height="15" fill="rgb(247,183,36)" fg:x="4736" fg:w="7"/><text x="56.7740%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="56.4549%" y="613" width="0.0834%" height="15" fill="rgb(237,200,3)" fg:x="4736" fg:w="7"/><text x="56.7740%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="56.4668%" y="597" width="0.0715%" height="15" fill="rgb(212,220,24)" fg:x="4737" fg:w="6"/><text x="56.7859%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.5264%" y="581" width="0.0119%" height="15" fill="rgb(245,216,20)" fg:x="4742" fg:w="1"/><text x="56.8455%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="56.5264%" y="565" width="0.0119%" height="15" fill="rgb(219,124,7)" fg:x="4742" fg:w="1"/><text x="56.8455%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="56.4549%" y="661" width="0.1430%" height="15" fill="rgb(227,167,8)" fg:x="4736" fg:w="12"/><text x="56.7740%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (5 samples, 0.06%)</title><rect x="56.5383%" y="645" width="0.0596%" height="15" fill="rgb(241,37,2)" fg:x="4743" fg:w="5"/><text x="56.8574%" y="655.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="56.5383%" y="629" width="0.0596%" height="15" fill="rgb(238,134,33)" fg:x="4743" fg:w="5"/><text x="56.8574%" y="639.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="56.5383%" y="613" width="0.0596%" height="15" fill="rgb(248,48,27)" fg:x="4743" fg:w="5"/><text x="56.8574%" y="623.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="56.5502%" y="597" width="0.0477%" height="15" fill="rgb(212,14,16)" fg:x="4744" fg:w="4"/><text x="56.8693%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="56.4430%" y="677" width="0.1669%" height="15" fill="rgb(217,205,37)" fg:x="4735" fg:w="14"/><text x="56.7621%" y="687.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="56.5979%" y="661" width="0.0119%" height="15" fill="rgb(233,185,47)" fg:x="4748" fg:w="1"/><text x="56.9170%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.5979%" y="645" width="0.0119%" height="15" fill="rgb(244,88,8)" fg:x="4748" fg:w="1"/><text x="56.9170%" y="655.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="56.5979%" y="629" width="0.0119%" height="15" fill="rgb(213,0,20)" fg:x="4748" fg:w="1"/><text x="56.9170%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.5979%" y="613" width="0.0119%" height="15" fill="rgb(238,159,36)" fg:x="4748" fg:w="1"/><text x="56.9170%" y="623.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="56.5979%" y="597" width="0.0119%" height="15" fill="rgb(253,173,17)" fg:x="4748" fg:w="1"/><text x="56.9170%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="56.5979%" y="581" width="0.0119%" height="15" fill="rgb(221,23,28)" fg:x="4748" fg:w="1"/><text x="56.9170%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.6098%" y="549" width="0.0119%" height="15" fill="rgb(218,113,15)" fg:x="4749" fg:w="1"/><text x="56.9289%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="56.6218%" y="533" width="0.0119%" height="15" fill="rgb(233,58,3)" fg:x="4750" fg:w="1"/><text x="56.9409%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="56.6218%" y="517" width="0.0119%" height="15" fill="rgb(250,46,35)" fg:x="4750" fg:w="1"/><text x="56.9409%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="56.6098%" y="629" width="0.0358%" height="15" fill="rgb(210,169,11)" fg:x="4749" fg:w="3"/><text x="56.9289%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="56.6098%" y="613" width="0.0358%" height="15" fill="rgb(246,88,19)" fg:x="4749" fg:w="3"/><text x="56.9289%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="56.6098%" y="597" width="0.0358%" height="15" fill="rgb(206,81,49)" fg:x="4749" fg:w="3"/><text x="56.9289%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="56.6098%" y="581" width="0.0358%" height="15" fill="rgb(232,144,18)" fg:x="4749" fg:w="3"/><text x="56.9289%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="56.6098%" y="565" width="0.0358%" height="15" fill="rgb(235,2,27)" fg:x="4749" fg:w="3"/><text x="56.9289%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.6218%" y="549" width="0.0238%" height="15" fill="rgb(239,157,39)" fg:x="4750" fg:w="2"/><text x="56.9409%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="56.6337%" y="533" width="0.0119%" height="15" fill="rgb(220,11,17)" fg:x="4751" fg:w="1"/><text x="56.9528%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.6337%" y="517" width="0.0119%" height="15" fill="rgb(243,94,50)" fg:x="4751" fg:w="1"/><text x="56.9528%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.6456%" y="581" width="0.0119%" height="15" fill="rgb(218,22,0)" fg:x="4752" fg:w="1"/><text x="56.9647%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="56.6456%" y="565" width="0.0119%" height="15" fill="rgb(249,70,21)" fg:x="4752" fg:w="1"/><text x="56.9647%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="56.6456%" y="549" width="0.0119%" height="15" fill="rgb(245,111,46)" fg:x="4752" fg:w="1"/><text x="56.9647%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="56.6694%" y="533" width="0.0119%" height="15" fill="rgb(244,183,12)" fg:x="4754" fg:w="1"/><text x="56.9885%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="56.6694%" y="517" width="0.0119%" height="15" fill="rgb(207,117,0)" fg:x="4754" fg:w="1"/><text x="56.9885%" y="527.50"/></g><g><title>parser::operator+ (21 samples, 0.25%)</title><rect x="56.4430%" y="693" width="0.2503%" height="15" fill="rgb(206,20,43)" fg:x="4735" fg:w="21"/><text x="56.7621%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="56.6098%" y="677" width="0.0834%" height="15" fill="rgb(221,104,11)" fg:x="4749" fg:w="7"/><text x="56.9289%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="56.6098%" y="661" width="0.0834%" height="15" fill="rgb(254,36,50)" fg:x="4749" fg:w="7"/><text x="56.9289%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="56.6098%" y="645" width="0.0834%" height="15" fill="rgb(252,17,15)" fg:x="4749" fg:w="7"/><text x="56.9289%" y="655.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="56.6456%" y="629" width="0.0477%" height="15" fill="rgb(219,129,43)" fg:x="4752" fg:w="4"/><text x="56.9647%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="56.6456%" y="613" width="0.0477%" height="15" fill="rgb(205,34,45)" fg:x="4752" fg:w="4"/><text x="56.9647%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="56.6456%" y="597" width="0.0477%" height="15" fill="rgb(251,201,32)" fg:x="4752" fg:w="4"/><text x="56.9647%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="56.6575%" y="581" width="0.0358%" height="15" fill="rgb(205,56,0)" fg:x="4753" fg:w="3"/><text x="56.9766%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="56.6575%" y="565" width="0.0358%" height="15" fill="rgb(211,193,27)" fg:x="4753" fg:w="3"/><text x="56.9766%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.6694%" y="549" width="0.0238%" height="15" fill="rgb(231,100,42)" fg:x="4754" fg:w="2"/><text x="56.9885%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="56.6814%" y="533" width="0.0119%" height="15" fill="rgb(245,85,27)" fg:x="4755" fg:w="1"/><text x="57.0005%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.6814%" y="517" width="0.0119%" height="15" fill="rgb(241,76,24)" fg:x="4755" fg:w="1"/><text x="57.0005%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="56.6814%" y="501" width="0.0119%" height="15" fill="rgb(249,157,15)" fg:x="4755" fg:w="1"/><text x="57.0005%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="56.6814%" y="485" width="0.0119%" height="15" fill="rgb(222,218,25)" fg:x="4755" fg:w="1"/><text x="57.0005%" y="495.50"/></g><g><title>cond::seq (1 samples, 0.01%)</title><rect x="56.6933%" y="661" width="0.0119%" height="15" fill="rgb(252,156,52)" fg:x="4756" fg:w="1"/><text x="57.0124%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.7052%" y="645" width="0.0119%" height="15" fill="rgb(211,185,7)" fg:x="4757" fg:w="1"/><text x="57.0243%" y="655.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="56.7052%" y="629" width="0.0119%" height="15" fill="rgb(234,108,24)" fg:x="4757" fg:w="1"/><text x="57.0243%" y="639.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="56.7052%" y="613" width="0.0119%" height="15" fill="rgb(227,218,2)" fg:x="4757" fg:w="1"/><text x="57.0243%" y="623.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="56.7171%" y="613" width="0.0119%" height="15" fill="rgb(224,0,36)" fg:x="4758" fg:w="1"/><text x="57.0362%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="56.7290%" y="597" width="0.0119%" height="15" fill="rgb(233,201,10)" fg:x="4759" fg:w="1"/><text x="57.0481%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="56.7171%" y="629" width="0.0358%" height="15" fill="rgb(252,209,14)" fg:x="4758" fg:w="3"/><text x="57.0362%" y="639.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.7290%" y="613" width="0.0238%" height="15" fill="rgb(205,93,49)" fg:x="4759" fg:w="2"/><text x="57.0481%" y="623.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="56.7410%" y="597" width="0.0119%" height="15" fill="rgb(234,116,45)" fg:x="4760" fg:w="1"/><text x="57.0601%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="56.7529%" y="613" width="0.0119%" height="15" fill="rgb(248,89,35)" fg:x="4761" fg:w="1"/><text x="57.0720%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.7648%" y="597" width="0.0119%" height="15" fill="rgb(233,167,45)" fg:x="4762" fg:w="1"/><text x="57.0839%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.7648%" y="581" width="0.0119%" height="15" fill="rgb(248,228,14)" fg:x="4762" fg:w="1"/><text x="57.0839%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="56.7648%" y="565" width="0.0119%" height="15" fill="rgb(246,91,14)" fg:x="4762" fg:w="1"/><text x="57.0839%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="56.7529%" y="629" width="0.0358%" height="15" fill="rgb(227,142,5)" fg:x="4761" fg:w="3"/><text x="57.0720%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.7648%" y="613" width="0.0238%" height="15" fill="rgb(221,63,33)" fg:x="4762" fg:w="2"/><text x="57.0839%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.7767%" y="597" width="0.0119%" height="15" fill="rgb(233,49,0)" fg:x="4763" fg:w="1"/><text x="57.0958%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.7767%" y="581" width="0.0119%" height="15" fill="rgb(251,115,38)" fg:x="4763" fg:w="1"/><text x="57.0958%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.7767%" y="565" width="0.0119%" height="15" fill="rgb(231,214,32)" fg:x="4763" fg:w="1"/><text x="57.0958%" y="575.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="56.7767%" y="549" width="0.0119%" height="15" fill="rgb(248,73,46)" fg:x="4763" fg:w="1"/><text x="57.0958%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.7887%" y="613" width="0.0119%" height="15" fill="rgb(237,156,4)" fg:x="4764" fg:w="1"/><text x="57.1078%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.7887%" y="597" width="0.0119%" height="15" fill="rgb(227,132,2)" fg:x="4764" fg:w="1"/><text x="57.1078%" y="607.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="56.7887%" y="581" width="0.0119%" height="15" fill="rgb(248,161,9)" fg:x="4764" fg:w="1"/><text x="57.1078%" y="591.50"/></g><g><title>cond::token (11 samples, 0.13%)</title><rect x="56.6933%" y="677" width="0.1311%" height="15" fill="rgb(238,77,38)" fg:x="4756" fg:w="11"/><text x="57.0124%" y="687.50"/></g><g><title>operator&amp; (10 samples, 0.12%)</title><rect x="56.7052%" y="661" width="0.1192%" height="15" fill="rgb(222,166,40)" fg:x="4757" fg:w="10"/><text x="57.0243%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="56.7171%" y="645" width="0.1073%" height="15" fill="rgb(214,168,45)" fg:x="4758" fg:w="9"/><text x="57.0362%" y="655.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="56.7887%" y="629" width="0.0358%" height="15" fill="rgb(226,64,37)" fg:x="4764" fg:w="3"/><text x="57.1078%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.8006%" y="613" width="0.0238%" height="15" fill="rgb(232,210,43)" fg:x="4765" fg:w="2"/><text x="57.1197%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="56.8006%" y="597" width="0.0238%" height="15" fill="rgb(214,76,33)" fg:x="4765" fg:w="2"/><text x="57.1197%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.8125%" y="581" width="0.0119%" height="15" fill="rgb(210,78,5)" fg:x="4766" fg:w="1"/><text x="57.1316%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="56.8125%" y="565" width="0.0119%" height="15" fill="rgb(211,107,37)" fg:x="4766" fg:w="1"/><text x="57.1316%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="56.8125%" y="549" width="0.0119%" height="15" fill="rgb(249,67,16)" fg:x="4766" fg:w="1"/><text x="57.1316%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="56.8244%" y="645" width="0.0119%" height="15" fill="rgb(222,114,31)" fg:x="4767" fg:w="1"/><text x="57.1435%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="56.8244%" y="629" width="0.0119%" height="15" fill="rgb(242,118,19)" fg:x="4767" fg:w="1"/><text x="57.1435%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.8363%" y="629" width="0.0119%" height="15" fill="rgb(223,115,1)" fg:x="4768" fg:w="1"/><text x="57.1554%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="56.8363%" y="613" width="0.0119%" height="15" fill="rgb(241,182,54)" fg:x="4768" fg:w="1"/><text x="57.1554%" y="623.50"/></g><g><title>parser::iff (3 samples, 0.04%)</title><rect x="56.8244%" y="677" width="0.0358%" height="15" fill="rgb(244,166,36)" fg:x="4767" fg:w="3"/><text x="57.1435%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="56.8244%" y="661" width="0.0358%" height="15" fill="rgb(241,52,43)" fg:x="4767" fg:w="3"/><text x="57.1435%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="56.8363%" y="645" width="0.0238%" height="15" fill="rgb(236,82,9)" fg:x="4768" fg:w="2"/><text x="57.1554%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.8483%" y="629" width="0.0119%" height="15" fill="rgb(241,119,0)" fg:x="4769" fg:w="1"/><text x="57.1674%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="56.8483%" y="613" width="0.0119%" height="15" fill="rgb(221,19,22)" fg:x="4769" fg:w="1"/><text x="57.1674%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="56.8602%" y="661" width="0.0119%" height="15" fill="rgb(254,144,35)" fg:x="4770" fg:w="1"/><text x="57.1793%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.8721%" y="645" width="0.0119%" height="15" fill="rgb(246,132,30)" fg:x="4771" fg:w="1"/><text x="57.1912%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.8721%" y="629" width="0.0119%" height="15" fill="rgb(234,69,28)" fg:x="4771" fg:w="1"/><text x="57.1912%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.8840%" y="597" width="0.0238%" height="15" fill="rgb(219,106,47)" fg:x="4772" fg:w="2"/><text x="57.2031%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="56.8840%" y="581" width="0.0238%" height="15" fill="rgb(218,79,24)" fg:x="4772" fg:w="2"/><text x="57.2031%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="56.8959%" y="565" width="0.0119%" height="15" fill="rgb(225,26,21)" fg:x="4773" fg:w="1"/><text x="57.2150%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="56.8959%" y="549" width="0.0119%" height="15" fill="rgb(217,68,49)" fg:x="4773" fg:w="1"/><text x="57.2150%" y="559.50"/></g><g><title>parser::token (19 samples, 0.23%)</title><rect x="56.6933%" y="693" width="0.2265%" height="15" fill="rgb(220,204,28)" fg:x="4756" fg:w="19"/><text x="57.0124%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="56.8602%" y="677" width="0.0596%" height="15" fill="rgb(237,208,43)" fg:x="4770" fg:w="5"/><text x="57.1793%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="56.8721%" y="661" width="0.0477%" height="15" fill="rgb(213,97,42)" fg:x="4771" fg:w="4"/><text x="57.1912%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="56.8840%" y="645" width="0.0358%" height="15" fill="rgb(238,96,52)" fg:x="4772" fg:w="3"/><text x="57.2031%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="56.8840%" y="629" width="0.0358%" height="15" fill="rgb(228,14,13)" fg:x="4772" fg:w="3"/><text x="57.2031%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="56.8840%" y="613" width="0.0358%" height="15" fill="rgb(219,123,13)" fg:x="4772" fg:w="3"/><text x="57.2031%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.9079%" y="597" width="0.0119%" height="15" fill="rgb(216,144,17)" fg:x="4774" fg:w="1"/><text x="57.2270%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.9079%" y="581" width="0.0119%" height="15" fill="rgb(230,228,29)" fg:x="4774" fg:w="1"/><text x="57.2270%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="56.9079%" y="565" width="0.0119%" height="15" fill="rgb(233,18,5)" fg:x="4774" fg:w="1"/><text x="57.2270%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.9198%" y="645" width="0.0119%" height="15" fill="rgb(233,197,12)" fg:x="4775" fg:w="1"/><text x="57.2389%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="56.9198%" y="629" width="0.0119%" height="15" fill="rgb(234,140,29)" fg:x="4775" fg:w="1"/><text x="57.2389%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.9317%" y="645" width="0.0119%" height="15" fill="rgb(233,113,19)" fg:x="4776" fg:w="1"/><text x="57.2508%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.9317%" y="629" width="0.0119%" height="15" fill="rgb(246,209,13)" fg:x="4776" fg:w="1"/><text x="57.2508%" y="639.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.9317%" y="613" width="0.0119%" height="15" fill="rgb(242,79,54)" fg:x="4776" fg:w="1"/><text x="57.2508%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="56.9198%" y="677" width="0.0358%" height="15" fill="rgb(219,73,16)" fg:x="4775" fg:w="3"/><text x="57.2389%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="56.9198%" y="661" width="0.0358%" height="15" fill="rgb(224,52,10)" fg:x="4775" fg:w="3"/><text x="57.2389%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.9436%" y="645" width="0.0119%" height="15" fill="rgb(237,179,5)" fg:x="4777" fg:w="1"/><text x="57.2627%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="56.9436%" y="629" width="0.0119%" height="15" fill="rgb(231,20,6)" fg:x="4777" fg:w="1"/><text x="57.2627%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="56.9436%" y="613" width="0.0119%" height="15" fill="rgb(253,171,45)" fg:x="4777" fg:w="1"/><text x="57.2627%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="56.9198%" y="693" width="0.0477%" height="15" fill="rgb(230,75,49)" fg:x="4775" fg:w="4"/><text x="57.2389%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.9555%" y="677" width="0.0119%" height="15" fill="rgb(216,83,46)" fg:x="4778" fg:w="1"/><text x="57.2746%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.9555%" y="661" width="0.0119%" height="15" fill="rgb(236,56,9)" fg:x="4778" fg:w="1"/><text x="57.2746%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.9555%" y="645" width="0.0119%" height="15" fill="rgb(215,28,34)" fg:x="4778" fg:w="1"/><text x="57.2746%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.9555%" y="629" width="0.0119%" height="15" fill="rgb(230,222,20)" fg:x="4778" fg:w="1"/><text x="57.2746%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="56.9555%" y="613" width="0.0119%" height="15" fill="rgb(235,209,51)" fg:x="4778" fg:w="1"/><text x="57.2746%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="56.9555%" y="597" width="0.0119%" height="15" fill="rgb(235,167,1)" fg:x="4778" fg:w="1"/><text x="57.2746%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.9675%" y="677" width="0.0119%" height="15" fill="rgb(248,220,0)" fg:x="4779" fg:w="1"/><text x="57.2866%" y="687.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.9675%" y="661" width="0.0119%" height="15" fill="rgb(239,0,18)" fg:x="4779" fg:w="1"/><text x="57.2866%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="56.9675%" y="645" width="0.0119%" height="15" fill="rgb(229,179,11)" fg:x="4779" fg:w="1"/><text x="57.2866%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="56.9675%" y="629" width="0.0119%" height="15" fill="rgb(226,116,53)" fg:x="4779" fg:w="1"/><text x="57.2866%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="56.9794%" y="661" width="0.0119%" height="15" fill="rgb(218,1,49)" fg:x="4780" fg:w="1"/><text x="57.2985%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.9913%" y="661" width="0.0119%" height="15" fill="rgb(208,184,47)" fg:x="4781" fg:w="1"/><text x="57.3104%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.9913%" y="645" width="0.0119%" height="15" fill="rgb(238,174,3)" fg:x="4781" fg:w="1"/><text x="57.3104%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.9913%" y="629" width="0.0119%" height="15" fill="rgb(247,188,6)" fg:x="4781" fg:w="1"/><text x="57.3104%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.9913%" y="613" width="0.0119%" height="15" fill="rgb(211,165,46)" fg:x="4781" fg:w="1"/><text x="57.3104%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="56.9913%" y="597" width="0.0119%" height="15" fill="rgb(222,190,10)" fg:x="4781" fg:w="1"/><text x="57.3104%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="56.9913%" y="581" width="0.0119%" height="15" fill="rgb(206,185,3)" fg:x="4781" fg:w="1"/><text x="57.3104%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="56.9913%" y="565" width="0.0119%" height="15" fill="rgb(244,125,37)" fg:x="4781" fg:w="1"/><text x="57.3104%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="56.9675%" y="693" width="0.0477%" height="15" fill="rgb(211,43,7)" fg:x="4779" fg:w="4"/><text x="57.2866%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="56.9794%" y="677" width="0.0358%" height="15" fill="rgb(250,41,42)" fg:x="4780" fg:w="3"/><text x="57.2985%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.0032%" y="661" width="0.0119%" height="15" fill="rgb(254,54,42)" fg:x="4782" fg:w="1"/><text x="57.3223%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.0032%" y="645" width="0.0119%" height="15" fill="rgb(213,71,43)" fg:x="4782" fg:w="1"/><text x="57.3223%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.0032%" y="629" width="0.0119%" height="15" fill="rgb(249,3,44)" fg:x="4782" fg:w="1"/><text x="57.3223%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.0032%" y="613" width="0.0119%" height="15" fill="rgb(229,80,41)" fg:x="4782" fg:w="1"/><text x="57.3223%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.0032%" y="597" width="0.0119%" height="15" fill="rgb(231,25,28)" fg:x="4782" fg:w="1"/><text x="57.3223%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.0032%" y="581" width="0.0119%" height="15" fill="rgb(208,79,48)" fg:x="4782" fg:w="1"/><text x="57.3223%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.0032%" y="565" width="0.0119%" height="15" fill="rgb(207,196,38)" fg:x="4782" fg:w="1"/><text x="57.3223%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.0032%" y="549" width="0.0119%" height="15" fill="rgb(228,105,49)" fg:x="4782" fg:w="1"/><text x="57.3223%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.0151%" y="661" width="0.0119%" height="15" fill="rgb(237,99,15)" fg:x="4783" fg:w="1"/><text x="57.3342%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.0151%" y="693" width="0.0238%" height="15" fill="rgb(224,207,46)" fg:x="4783" fg:w="2"/><text x="57.3342%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.0151%" y="677" width="0.0238%" height="15" fill="rgb(249,117,50)" fg:x="4783" fg:w="2"/><text x="57.3342%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.0271%" y="661" width="0.0119%" height="15" fill="rgb(248,17,13)" fg:x="4784" fg:w="1"/><text x="57.3462%" y="671.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="57.0271%" y="645" width="0.0119%" height="15" fill="rgb(228,187,36)" fg:x="4784" fg:w="1"/><text x="57.3462%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.0390%" y="661" width="0.0119%" height="15" fill="rgb(234,132,20)" fg:x="4785" fg:w="1"/><text x="57.3581%" y="671.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="57.0390%" y="645" width="0.0119%" height="15" fill="rgb(209,170,46)" fg:x="4785" fg:w="1"/><text x="57.3581%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), not_(std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.0509%" y="645" width="0.0119%" height="15" fill="rgb(237,23,19)" fg:x="4786" fg:w="1"/><text x="57.3700%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.0509%" y="629" width="0.0119%" height="15" fill="rgb(227,21,26)" fg:x="4786" fg:w="1"/><text x="57.3700%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="57.0509%" y="613" width="0.0119%" height="15" fill="rgb(222,220,48)" fg:x="4786" fg:w="1"/><text x="57.3700%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.0509%" y="661" width="0.0238%" height="15" fill="rgb(214,9,16)" fg:x="4786" fg:w="2"/><text x="57.3700%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.0628%" y="645" width="0.0119%" height="15" fill="rgb(209,73,30)" fg:x="4787" fg:w="1"/><text x="57.3819%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.0628%" y="629" width="0.0119%" height="15" fill="rgb(207,20,33)" fg:x="4787" fg:w="1"/><text x="57.3819%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="57.0628%" y="613" width="0.0119%" height="15" fill="rgb(219,153,12)" fg:x="4787" fg:w="1"/><text x="57.3819%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.0747%" y="661" width="0.0119%" height="15" fill="rgb(235,97,25)" fg:x="4788" fg:w="1"/><text x="57.3938%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.0747%" y="645" width="0.0119%" height="15" fill="rgb(244,30,34)" fg:x="4788" fg:w="1"/><text x="57.3938%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="57.0747%" y="629" width="0.0119%" height="15" fill="rgb(214,106,45)" fg:x="4788" fg:w="1"/><text x="57.3938%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.0867%" y="629" width="0.0119%" height="15" fill="rgb(226,41,9)" fg:x="4789" fg:w="1"/><text x="57.4058%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="57.0867%" y="613" width="0.0119%" height="15" fill="rgb(253,139,29)" fg:x="4789" fg:w="1"/><text x="57.4058%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.0986%" y="629" width="0.0119%" height="15" fill="rgb(213,205,39)" fg:x="4790" fg:w="1"/><text x="57.4177%" y="639.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.0986%" y="613" width="0.0119%" height="15" fill="rgb(209,27,10)" fg:x="4790" fg:w="1"/><text x="57.4177%" y="623.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="57.0986%" y="597" width="0.0119%" height="15" fill="rgb(249,142,16)" fg:x="4790" fg:w="1"/><text x="57.4177%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.1105%" y="613" width="0.0119%" height="15" fill="rgb(242,65,12)" fg:x="4791" fg:w="1"/><text x="57.4296%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.1105%" y="597" width="0.0119%" height="15" fill="rgb(232,48,10)" fg:x="4791" fg:w="1"/><text x="57.4296%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.1105%" y="581" width="0.0119%" height="15" fill="rgb(253,67,19)" fg:x="4791" fg:w="1"/><text x="57.4296%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="57.1105%" y="565" width="0.0119%" height="15" fill="rgb(227,93,29)" fg:x="4791" fg:w="1"/><text x="57.4296%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="57.0390%" y="693" width="0.1073%" height="15" fill="rgb(226,189,53)" fg:x="4785" fg:w="9"/><text x="57.3581%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="57.0390%" y="677" width="0.1073%" height="15" fill="rgb(223,224,1)" fg:x="4785" fg:w="9"/><text x="57.3581%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="57.0867%" y="661" width="0.0596%" height="15" fill="rgb(221,84,32)" fg:x="4789" fg:w="5"/><text x="57.4058%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="57.0867%" y="645" width="0.0596%" height="15" fill="rgb(214,189,28)" fg:x="4789" fg:w="5"/><text x="57.4058%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.1105%" y="629" width="0.0358%" height="15" fill="rgb(234,7,52)" fg:x="4791" fg:w="3"/><text x="57.4296%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.1224%" y="613" width="0.0238%" height="15" fill="rgb(249,73,31)" fg:x="4792" fg:w="2"/><text x="57.4415%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="57.1224%" y="597" width="0.0238%" height="15" fill="rgb(253,153,41)" fg:x="4792" fg:w="2"/><text x="57.4415%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="57.1343%" y="581" width="0.0119%" height="15" fill="rgb(249,52,34)" fg:x="4793" fg:w="1"/><text x="57.4534%" y="591.50"/></g><g><title>parser::either (2 samples, 0.02%)</title><rect x="57.1582%" y="661" width="0.0238%" height="15" fill="rgb(236,177,47)" fg:x="4795" fg:w="2"/><text x="57.4773%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.1582%" y="645" width="0.0238%" height="15" fill="rgb(252,185,45)" fg:x="4795" fg:w="2"/><text x="57.4773%" y="655.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="57.1582%" y="629" width="0.0238%" height="15" fill="rgb(251,15,30)" fg:x="4795" fg:w="2"/><text x="57.4773%" y="639.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="57.1582%" y="613" width="0.0238%" height="15" fill="rgb(233,31,4)" fg:x="4795" fg:w="2"/><text x="57.4773%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.1820%" y="645" width="0.0119%" height="15" fill="rgb(254,44,24)" fg:x="4797" fg:w="1"/><text x="57.5011%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="57.1820%" y="629" width="0.0119%" height="15" fill="rgb(218,54,1)" fg:x="4797" fg:w="1"/><text x="57.5011%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.1939%" y="629" width="0.0119%" height="15" fill="rgb(243,209,39)" fg:x="4798" fg:w="1"/><text x="57.5130%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="57.1939%" y="613" width="0.0119%" height="15" fill="rgb(206,75,33)" fg:x="4798" fg:w="1"/><text x="57.5130%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.1939%" y="645" width="0.0238%" height="15" fill="rgb(223,108,18)" fg:x="4798" fg:w="2"/><text x="57.5130%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.2059%" y="629" width="0.0119%" height="15" fill="rgb(244,89,31)" fg:x="4799" fg:w="1"/><text x="57.5250%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.2178%" y="629" width="0.0119%" height="15" fill="rgb(222,167,27)" fg:x="4800" fg:w="1"/><text x="57.5369%" y="639.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.2178%" y="613" width="0.0119%" height="15" fill="rgb(247,41,16)" fg:x="4800" fg:w="1"/><text x="57.5369%" y="623.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="57.2178%" y="597" width="0.0119%" height="15" fill="rgb(233,168,40)" fg:x="4800" fg:w="1"/><text x="57.5369%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.2178%" y="645" width="0.0238%" height="15" fill="rgb(205,211,8)" fg:x="4800" fg:w="2"/><text x="57.5369%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.2297%" y="629" width="0.0119%" height="15" fill="rgb(238,105,11)" fg:x="4801" fg:w="1"/><text x="57.5488%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.2297%" y="613" width="0.0119%" height="15" fill="rgb(223,142,52)" fg:x="4801" fg:w="1"/><text x="57.5488%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.2297%" y="597" width="0.0119%" height="15" fill="rgb(238,51,33)" fg:x="4801" fg:w="1"/><text x="57.5488%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.2297%" y="581" width="0.0119%" height="15" fill="rgb(231,188,43)" fg:x="4801" fg:w="1"/><text x="57.5488%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.2297%" y="565" width="0.0119%" height="15" fill="rgb(216,92,17)" fg:x="4801" fg:w="1"/><text x="57.5488%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="57.1820%" y="661" width="0.0715%" height="15" fill="rgb(228,2,40)" fg:x="4797" fg:w="6"/><text x="57.5011%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="57.2416%" y="645" width="0.0119%" height="15" fill="rgb(226,73,15)" fg:x="4802" fg:w="1"/><text x="57.5607%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.2416%" y="629" width="0.0119%" height="15" fill="rgb(227,66,46)" fg:x="4802" fg:w="1"/><text x="57.5607%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="57.2416%" y="613" width="0.0119%" height="15" fill="rgb(209,71,6)" fg:x="4802" fg:w="1"/><text x="57.5607%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.2416%" y="597" width="0.0119%" height="15" fill="rgb(246,100,25)" fg:x="4802" fg:w="1"/><text x="57.5607%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.2416%" y="581" width="0.0119%" height="15" fill="rgb(248,185,27)" fg:x="4802" fg:w="1"/><text x="57.5607%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="57.2416%" y="565" width="0.0119%" height="15" fill="rgb(225,118,47)" fg:x="4802" fg:w="1"/><text x="57.5607%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="57.2416%" y="549" width="0.0119%" height="15" fill="rgb(220,185,44)" fg:x="4802" fg:w="1"/><text x="57.5607%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="57.2535%" y="645" width="0.0119%" height="15" fill="rgb(227,95,24)" fg:x="4803" fg:w="1"/><text x="57.5726%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="57.2535%" y="629" width="0.0119%" height="15" fill="rgb(252,84,24)" fg:x="4803" fg:w="1"/><text x="57.5726%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.2655%" y="645" width="0.0119%" height="15" fill="rgb(240,34,44)" fg:x="4804" fg:w="1"/><text x="57.5846%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.2655%" y="629" width="0.0119%" height="15" fill="rgb(209,72,54)" fg:x="4804" fg:w="1"/><text x="57.5846%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.2655%" y="613" width="0.0119%" height="15" fill="rgb(226,19,45)" fg:x="4804" fg:w="1"/><text x="57.5846%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.2774%" y="629" width="0.0119%" height="15" fill="rgb(246,7,45)" fg:x="4805" fg:w="1"/><text x="57.5965%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), not_(std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.2893%" y="597" width="0.0238%" height="15" fill="rgb(225,45,2)" fg:x="4806" fg:w="2"/><text x="57.6084%" y="607.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="57.2893%" y="581" width="0.0238%" height="15" fill="rgb(221,80,29)" fg:x="4806" fg:w="2"/><text x="57.6084%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="57.3012%" y="565" width="0.0119%" height="15" fill="rgb(228,11,19)" fg:x="4807" fg:w="1"/><text x="57.6203%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="57.3131%" y="581" width="0.0119%" height="15" fill="rgb(243,17,21)" fg:x="4808" fg:w="1"/><text x="57.6322%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="57.3131%" y="565" width="0.0119%" height="15" fill="rgb(243,88,8)" fg:x="4808" fg:w="1"/><text x="57.6322%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="57.2893%" y="629" width="0.0477%" height="15" fill="rgb(214,17,9)" fg:x="4806" fg:w="4"/><text x="57.6084%" y="639.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="57.2893%" y="613" width="0.0477%" height="15" fill="rgb(232,169,15)" fg:x="4806" fg:w="4"/><text x="57.6084%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.3131%" y="597" width="0.0238%" height="15" fill="rgb(232,86,53)" fg:x="4808" fg:w="2"/><text x="57.6322%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="57.3251%" y="581" width="0.0119%" height="15" fill="rgb(222,100,4)" fg:x="4809" fg:w="1"/><text x="57.6442%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.3251%" y="565" width="0.0119%" height="15" fill="rgb(253,151,38)" fg:x="4809" fg:w="1"/><text x="57.6442%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned short), cond::keep_layout(unsigned short)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.3251%" y="549" width="0.0119%" height="15" fill="rgb(238,215,29)" fg:x="4809" fg:w="1"/><text x="57.6442%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="57.2774%" y="645" width="0.0715%" height="15" fill="rgb(205,128,53)" fg:x="4805" fg:w="6"/><text x="57.5965%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.3370%" y="629" width="0.0119%" height="15" fill="rgb(248,183,14)" fg:x="4810" fg:w="1"/><text x="57.6561%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="57.3370%" y="613" width="0.0119%" height="15" fill="rgb(244,172,35)" fg:x="4810" fg:w="1"/><text x="57.6561%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="57.3370%" y="597" width="0.0119%" height="15" fill="rgb(234,93,19)" fg:x="4810" fg:w="1"/><text x="57.6561%" y="607.50"/></g><g><title>logic::newline_where (84 samples, 1.00%)</title><rect x="56.3595%" y="709" width="1.0013%" height="15" fill="rgb(227,109,7)" fg:x="4728" fg:w="84"/><text x="56.6786%" y="719.50"/></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (18 samples, 0.21%)</title><rect x="57.1463%" y="693" width="0.2146%" height="15" fill="rgb(233,136,54)" fg:x="4794" fg:w="18"/><text x="57.4654%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (18 samples, 0.21%)</title><rect x="57.1463%" y="677" width="0.2146%" height="15" fill="rgb(233,19,40)" fg:x="4794" fg:w="18"/><text x="57.4654%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="57.2535%" y="661" width="0.1073%" height="15" fill="rgb(247,41,18)" fg:x="4803" fg:w="9"/><text x="57.5726%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="57.3489%" y="645" width="0.0119%" height="15" fill="rgb(220,34,34)" fg:x="4811" fg:w="1"/><text x="57.6680%" y="655.50"/></g><g><title>operator| (1 samples, 0.01%)</title><rect x="57.3608%" y="709" width="0.0119%" height="15" fill="rgb(222,135,32)" fg:x="4812" fg:w="1"/><text x="57.6799%" y="719.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="57.3608%" y="693" width="0.0119%" height="15" fill="rgb(214,80,19)" fg:x="4812" fg:w="1"/><text x="57.6799%" y="703.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="57.3608%" y="677" width="0.0119%" height="15" fill="rgb(234,54,46)" fg:x="4812" fg:w="1"/><text x="57.6799%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.3728%" y="597" width="0.0119%" height="15" fill="rgb(251,48,23)" fg:x="4813" fg:w="1"/><text x="57.6919%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.3728%" y="581" width="0.0119%" height="15" fill="rgb(254,109,52)" fg:x="4813" fg:w="1"/><text x="57.6919%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="57.3847%" y="549" width="0.0119%" height="15" fill="rgb(240,186,19)" fg:x="4814" fg:w="1"/><text x="57.7038%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="57.3847%" y="533" width="0.0119%" height="15" fill="rgb(246,187,17)" fg:x="4814" fg:w="1"/><text x="57.7038%" y="543.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="57.3847%" y="517" width="0.0119%" height="15" fill="rgb(212,21,5)" fg:x="4814" fg:w="1"/><text x="57.7038%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.3966%" y="469" width="0.0238%" height="15" fill="rgb(225,185,18)" fg:x="4815" fg:w="2"/><text x="57.7157%" y="479.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.3966%" y="453" width="0.0238%" height="15" fill="rgb(245,114,17)" fg:x="4815" fg:w="2"/><text x="57.7157%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="57.3966%" y="437" width="0.0238%" height="15" fill="rgb(223,164,24)" fg:x="4815" fg:w="2"/><text x="57.7157%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.3966%" y="421" width="0.0238%" height="15" fill="rgb(211,228,3)" fg:x="4815" fg:w="2"/><text x="57.7157%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="57.3966%" y="405" width="0.0238%" height="15" fill="rgb(223,16,38)" fg:x="4815" fg:w="2"/><text x="57.7157%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.3966%" y="389" width="0.0238%" height="15" fill="rgb(207,31,54)" fg:x="4815" fg:w="2"/><text x="57.7157%" y="399.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="57.3966%" y="373" width="0.0238%" height="15" fill="rgb(220,39,11)" fg:x="4815" fg:w="2"/><text x="57.7157%" y="383.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="57.3966%" y="357" width="0.0238%" height="15" fill="rgb(235,185,0)" fg:x="4815" fg:w="2"/><text x="57.7157%" y="367.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="57.3966%" y="341" width="0.0238%" height="15" fill="rgb(249,39,18)" fg:x="4815" fg:w="2"/><text x="57.7157%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="57.3847%" y="581" width="0.0477%" height="15" fill="rgb(240,110,33)" fg:x="4814" fg:w="4"/><text x="57.7038%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="57.3847%" y="565" width="0.0477%" height="15" fill="rgb(210,92,42)" fg:x="4814" fg:w="4"/><text x="57.7038%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="57.3966%" y="549" width="0.0358%" height="15" fill="rgb(218,215,28)" fg:x="4815" fg:w="3"/><text x="57.7157%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.3966%" y="533" width="0.0358%" height="15" fill="rgb(238,215,36)" fg:x="4815" fg:w="3"/><text x="57.7157%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="57.3966%" y="517" width="0.0358%" height="15" fill="rgb(220,31,10)" fg:x="4815" fg:w="3"/><text x="57.7157%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.3966%" y="501" width="0.0358%" height="15" fill="rgb(212,93,14)" fg:x="4815" fg:w="3"/><text x="57.7157%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="57.3966%" y="485" width="0.0358%" height="15" fill="rgb(254,207,2)" fg:x="4815" fg:w="3"/><text x="57.7157%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.4204%" y="469" width="0.0119%" height="15" fill="rgb(205,57,44)" fg:x="4817" fg:w="1"/><text x="57.7395%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="57.3728%" y="677" width="0.0954%" height="15" fill="rgb(226,151,19)" fg:x="4813" fg:w="8"/><text x="57.6919%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="57.3728%" y="661" width="0.0954%" height="15" fill="rgb(230,72,30)" fg:x="4813" fg:w="8"/><text x="57.6919%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="57.3728%" y="645" width="0.0954%" height="15" fill="rgb(244,0,8)" fg:x="4813" fg:w="8"/><text x="57.6919%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="57.3728%" y="629" width="0.0954%" height="15" fill="rgb(230,192,6)" fg:x="4813" fg:w="8"/><text x="57.6919%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="57.3728%" y="613" width="0.0954%" height="15" fill="rgb(233,207,13)" fg:x="4813" fg:w="8"/><text x="57.6919%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="57.3847%" y="597" width="0.0834%" height="15" fill="rgb(206,227,7)" fg:x="4814" fg:w="7"/><text x="57.7038%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="57.4324%" y="581" width="0.0358%" height="15" fill="rgb(213,217,25)" fg:x="4818" fg:w="3"/><text x="57.7515%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.4324%" y="565" width="0.0358%" height="15" fill="rgb(249,75,4)" fg:x="4818" fg:w="3"/><text x="57.7515%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="57.4324%" y="549" width="0.0358%" height="15" fill="rgb(225,114,18)" fg:x="4818" fg:w="3"/><text x="57.7515%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.4324%" y="533" width="0.0358%" height="15" fill="rgb(211,162,40)" fg:x="4818" fg:w="3"/><text x="57.7515%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="57.4324%" y="517" width="0.0358%" height="15" fill="rgb(206,49,29)" fg:x="4818" fg:w="3"/><text x="57.7515%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.4324%" y="501" width="0.0358%" height="15" fill="rgb(244,8,6)" fg:x="4818" fg:w="3"/><text x="57.7515%" y="511.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="57.4324%" y="485" width="0.0358%" height="15" fill="rgb(231,194,28)" fg:x="4818" fg:w="3"/><text x="57.7515%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.4324%" y="469" width="0.0358%" height="15" fill="rgb(210,69,5)" fg:x="4818" fg:w="3"/><text x="57.7515%" y="479.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="57.4324%" y="453" width="0.0358%" height="15" fill="rgb(216,186,12)" fg:x="4818" fg:w="3"/><text x="57.7515%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.4324%" y="437" width="0.0358%" height="15" fill="rgb(238,61,15)" fg:x="4818" fg:w="3"/><text x="57.7515%" y="447.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.4324%" y="421" width="0.0358%" height="15" fill="rgb(226,104,1)" fg:x="4818" fg:w="3"/><text x="57.7515%" y="431.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="57.4324%" y="405" width="0.0358%" height="15" fill="rgb(229,128,15)" fg:x="4818" fg:w="3"/><text x="57.7515%" y="415.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="57.4324%" y="389" width="0.0358%" height="15" fill="rgb(247,110,15)" fg:x="4818" fg:w="3"/><text x="57.7515%" y="399.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="57.4443%" y="373" width="0.0238%" height="15" fill="rgb(210,74,48)" fg:x="4819" fg:w="2"/><text x="57.7634%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="57.3728%" y="693" width="0.1073%" height="15" fill="rgb(246,121,10)" fg:x="4813" fg:w="9"/><text x="57.6919%" y="703.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="57.4681%" y="677" width="0.0119%" height="15" fill="rgb(214,156,37)" fg:x="4821" fg:w="1"/><text x="57.7872%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.4681%" y="661" width="0.0119%" height="15" fill="rgb(214,210,34)" fg:x="4821" fg:w="1"/><text x="57.7872%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="57.4681%" y="645" width="0.0119%" height="15" fill="rgb(237,93,35)" fg:x="4821" fg:w="1"/><text x="57.7872%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.4681%" y="629" width="0.0119%" height="15" fill="rgb(206,36,8)" fg:x="4821" fg:w="1"/><text x="57.7872%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="57.4800%" y="613" width="0.0358%" height="15" fill="rgb(208,151,12)" fg:x="4822" fg:w="3"/><text x="57.7991%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.4800%" y="597" width="0.0358%" height="15" fill="rgb(225,133,52)" fg:x="4822" fg:w="3"/><text x="57.7991%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="57.4800%" y="581" width="0.0358%" height="15" fill="rgb(231,71,53)" fg:x="4822" fg:w="3"/><text x="57.7991%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.4800%" y="565" width="0.0358%" height="15" fill="rgb(243,76,21)" fg:x="4822" fg:w="3"/><text x="57.7991%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="57.4800%" y="549" width="0.0358%" height="15" fill="rgb(252,144,3)" fg:x="4822" fg:w="3"/><text x="57.7991%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.4800%" y="533" width="0.0358%" height="15" fill="rgb(231,199,10)" fg:x="4822" fg:w="3"/><text x="57.7991%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.4800%" y="517" width="0.0358%" height="15" fill="rgb(215,18,11)" fg:x="4822" fg:w="3"/><text x="57.7991%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="57.4800%" y="501" width="0.0358%" height="15" fill="rgb(241,65,24)" fg:x="4822" fg:w="3"/><text x="57.7991%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.4800%" y="485" width="0.0358%" height="15" fill="rgb(251,192,38)" fg:x="4822" fg:w="3"/><text x="57.7991%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="57.4800%" y="469" width="0.0358%" height="15" fill="rgb(205,9,35)" fg:x="4822" fg:w="3"/><text x="57.7991%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.4800%" y="453" width="0.0358%" height="15" fill="rgb(229,225,49)" fg:x="4822" fg:w="3"/><text x="57.7991%" y="463.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="57.4800%" y="437" width="0.0358%" height="15" fill="rgb(207,125,39)" fg:x="4822" fg:w="3"/><text x="57.7991%" y="447.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="57.4800%" y="421" width="0.0358%" height="15" fill="rgb(222,78,19)" fg:x="4822" fg:w="3"/><text x="57.7991%" y="431.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="57.4800%" y="405" width="0.0358%" height="15" fill="rgb(248,207,20)" fg:x="4822" fg:w="3"/><text x="57.7991%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="57.5158%" y="517" width="0.0119%" height="15" fill="rgb(205,103,49)" fg:x="4825" fg:w="1"/><text x="57.8349%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="57.5158%" y="501" width="0.0119%" height="15" fill="rgb(216,42,28)" fg:x="4825" fg:w="1"/><text x="57.8349%" y="511.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="57.5158%" y="485" width="0.0119%" height="15" fill="rgb(213,205,53)" fg:x="4825" fg:w="1"/><text x="57.8349%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.5277%" y="501" width="0.0119%" height="15" fill="rgb(239,140,53)" fg:x="4826" fg:w="1"/><text x="57.8468%" y="511.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.5277%" y="485" width="0.0119%" height="15" fill="rgb(248,95,9)" fg:x="4826" fg:w="1"/><text x="57.8468%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="57.5277%" y="469" width="0.0119%" height="15" fill="rgb(254,58,47)" fg:x="4826" fg:w="1"/><text x="57.8468%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="57.5277%" y="453" width="0.0119%" height="15" fill="rgb(234,227,14)" fg:x="4826" fg:w="1"/><text x="57.8468%" y="463.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="57.5277%" y="437" width="0.0119%" height="15" fill="rgb(205,192,45)" fg:x="4826" fg:w="1"/><text x="57.8468%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="57.4800%" y="693" width="0.0715%" height="15" fill="rgb(253,187,31)" fg:x="4822" fg:w="6"/><text x="57.7991%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="57.4800%" y="677" width="0.0715%" height="15" fill="rgb(222,6,32)" fg:x="4822" fg:w="6"/><text x="57.7991%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="57.4800%" y="661" width="0.0715%" height="15" fill="rgb(249,190,19)" fg:x="4822" fg:w="6"/><text x="57.7991%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="57.4800%" y="645" width="0.0715%" height="15" fill="rgb(251,28,20)" fg:x="4822" fg:w="6"/><text x="57.7991%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="57.4800%" y="629" width="0.0715%" height="15" fill="rgb(210,223,40)" fg:x="4822" fg:w="6"/><text x="57.7991%" y="639.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="57.5158%" y="613" width="0.0358%" height="15" fill="rgb(216,137,22)" fg:x="4825" fg:w="3"/><text x="57.8349%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.5158%" y="597" width="0.0358%" height="15" fill="rgb(247,39,34)" fg:x="4825" fg:w="3"/><text x="57.8349%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="57.5158%" y="581" width="0.0358%" height="15" fill="rgb(239,43,50)" fg:x="4825" fg:w="3"/><text x="57.8349%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.5158%" y="565" width="0.0358%" height="15" fill="rgb(241,212,9)" fg:x="4825" fg:w="3"/><text x="57.8349%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="57.5158%" y="549" width="0.0358%" height="15" fill="rgb(205,8,2)" fg:x="4825" fg:w="3"/><text x="57.8349%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.5158%" y="533" width="0.0358%" height="15" fill="rgb(217,173,54)" fg:x="4825" fg:w="3"/><text x="57.8349%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="57.5277%" y="517" width="0.0238%" height="15" fill="rgb(208,149,52)" fg:x="4826" fg:w="2"/><text x="57.8468%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.5396%" y="501" width="0.0119%" height="15" fill="rgb(239,99,40)" fg:x="4827" fg:w="1"/><text x="57.8587%" y="511.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="57.5396%" y="485" width="0.0119%" height="15" fill="rgb(233,214,26)" fg:x="4827" fg:w="1"/><text x="57.8587%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.5396%" y="469" width="0.0119%" height="15" fill="rgb(231,225,37)" fg:x="4827" fg:w="1"/><text x="57.8587%" y="479.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.5396%" y="453" width="0.0119%" height="15" fill="rgb(252,55,35)" fg:x="4827" fg:w="1"/><text x="57.8587%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="57.5396%" y="437" width="0.0119%" height="15" fill="rgb(239,43,18)" fg:x="4827" fg:w="1"/><text x="57.8587%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="57.5396%" y="421" width="0.0119%" height="15" fill="rgb(251,125,49)" fg:x="4827" fg:w="1"/><text x="57.8587%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="57.5516%" y="533" width="0.0119%" height="15" fill="rgb(212,83,54)" fg:x="4828" fg:w="1"/><text x="57.8707%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="57.5516%" y="517" width="0.0119%" height="15" fill="rgb(250,75,6)" fg:x="4828" fg:w="1"/><text x="57.8707%" y="527.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="57.5516%" y="501" width="0.0119%" height="15" fill="rgb(252,36,40)" fg:x="4828" fg:w="1"/><text x="57.8707%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.5516%" y="565" width="0.0238%" height="15" fill="rgb(230,91,51)" fg:x="4828" fg:w="2"/><text x="57.8707%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.5516%" y="549" width="0.0238%" height="15" fill="rgb(212,92,28)" fg:x="4828" fg:w="2"/><text x="57.8707%" y="559.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="57.5635%" y="533" width="0.0119%" height="15" fill="rgb(227,13,22)" fg:x="4829" fg:w="1"/><text x="57.8826%" y="543.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="57.5635%" y="517" width="0.0119%" height="15" fill="rgb(239,204,32)" fg:x="4829" fg:w="1"/><text x="57.8826%" y="527.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="57.5754%" y="485" width="0.0358%" height="15" fill="rgb(228,49,41)" fg:x="4830" fg:w="3"/><text x="57.8945%" y="495.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="57.5754%" y="469" width="0.0358%" height="15" fill="rgb(206,95,6)" fg:x="4830" fg:w="3"/><text x="57.8945%" y="479.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="57.5873%" y="453" width="0.0238%" height="15" fill="rgb(251,20,14)" fg:x="4831" fg:w="2"/><text x="57.9064%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="57.5754%" y="549" width="0.0596%" height="15" fill="rgb(214,99,28)" fg:x="4830" fg:w="5"/><text x="57.8945%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="57.5754%" y="533" width="0.0596%" height="15" fill="rgb(239,122,54)" fg:x="4830" fg:w="5"/><text x="57.8945%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="57.5754%" y="517" width="0.0596%" height="15" fill="rgb(218,217,46)" fg:x="4830" fg:w="5"/><text x="57.8945%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="57.5754%" y="501" width="0.0596%" height="15" fill="rgb(249,106,28)" fg:x="4830" fg:w="5"/><text x="57.8945%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="57.6112%" y="485" width="0.0238%" height="15" fill="rgb(250,158,18)" fg:x="4833" fg:w="2"/><text x="57.9303%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.6112%" y="469" width="0.0238%" height="15" fill="rgb(226,137,29)" fg:x="4833" fg:w="2"/><text x="57.9303%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="57.6112%" y="453" width="0.0238%" height="15" fill="rgb(210,188,1)" fg:x="4833" fg:w="2"/><text x="57.9303%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.6112%" y="437" width="0.0238%" height="15" fill="rgb(227,84,42)" fg:x="4833" fg:w="2"/><text x="57.9303%" y="447.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="57.6112%" y="421" width="0.0238%" height="15" fill="rgb(222,147,48)" fg:x="4833" fg:w="2"/><text x="57.9303%" y="431.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="57.6112%" y="405" width="0.0238%" height="15" fill="rgb(241,150,43)" fg:x="4833" fg:w="2"/><text x="57.9303%" y="415.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="57.6112%" y="389" width="0.0238%" height="15" fill="rgb(206,139,52)" fg:x="4833" fg:w="2"/><text x="57.9303%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="57.6350%" y="485" width="0.0119%" height="15" fill="rgb(230,63,14)" fg:x="4835" fg:w="1"/><text x="57.9541%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="57.6350%" y="469" width="0.0119%" height="15" fill="rgb(247,8,20)" fg:x="4835" fg:w="1"/><text x="57.9541%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.6469%" y="437" width="0.0358%" height="15" fill="rgb(213,115,4)" fg:x="4836" fg:w="3"/><text x="57.9660%" y="447.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="57.6469%" y="421" width="0.0358%" height="15" fill="rgb(241,79,49)" fg:x="4836" fg:w="3"/><text x="57.9660%" y="431.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="57.6469%" y="405" width="0.0358%" height="15" fill="rgb(222,42,35)" fg:x="4836" fg:w="3"/><text x="57.9660%" y="415.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="57.6708%" y="389" width="0.0119%" height="15" fill="rgb(247,59,23)" fg:x="4838" fg:w="1"/><text x="57.9899%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (14 samples, 0.17%)</title><rect x="57.5516%" y="645" width="0.1669%" height="15" fill="rgb(247,93,18)" fg:x="4828" fg:w="14"/><text x="57.8707%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="57.5516%" y="629" width="0.1669%" height="15" fill="rgb(249,107,47)" fg:x="4828" fg:w="14"/><text x="57.8707%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (14 samples, 0.17%)</title><rect x="57.5516%" y="613" width="0.1669%" height="15" fill="rgb(219,27,1)" fg:x="4828" fg:w="14"/><text x="57.8707%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="57.5516%" y="597" width="0.1669%" height="15" fill="rgb(217,82,32)" fg:x="4828" fg:w="14"/><text x="57.8707%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (14 samples, 0.17%)</title><rect x="57.5516%" y="581" width="0.1669%" height="15" fill="rgb(250,129,47)" fg:x="4828" fg:w="14"/><text x="57.8707%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="57.5754%" y="565" width="0.1430%" height="15" fill="rgb(253,88,35)" fg:x="4830" fg:w="12"/><text x="57.8945%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="57.6350%" y="549" width="0.0834%" height="15" fill="rgb(245,221,14)" fg:x="4835" fg:w="7"/><text x="57.9541%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="57.6350%" y="533" width="0.0834%" height="15" fill="rgb(217,119,54)" fg:x="4835" fg:w="7"/><text x="57.9541%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="57.6350%" y="517" width="0.0834%" height="15" fill="rgb(247,128,31)" fg:x="4835" fg:w="7"/><text x="57.9541%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="57.6350%" y="501" width="0.0834%" height="15" fill="rgb(211,99,22)" fg:x="4835" fg:w="7"/><text x="57.9541%" y="511.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="57.6469%" y="485" width="0.0715%" height="15" fill="rgb(212,20,17)" fg:x="4836" fg:w="6"/><text x="57.9660%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="57.6469%" y="469" width="0.0715%" height="15" fill="rgb(209,159,29)" fg:x="4836" fg:w="6"/><text x="57.9660%" y="479.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="57.6469%" y="453" width="0.0715%" height="15" fill="rgb(222,177,53)" fg:x="4836" fg:w="6"/><text x="57.9660%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.6827%" y="437" width="0.0358%" height="15" fill="rgb(234,46,43)" fg:x="4839" fg:w="3"/><text x="58.0018%" y="447.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="57.6827%" y="421" width="0.0358%" height="15" fill="rgb(208,108,14)" fg:x="4839" fg:w="3"/><text x="58.0018%" y="431.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="57.6827%" y="405" width="0.0358%" height="15" fill="rgb(226,78,53)" fg:x="4839" fg:w="3"/><text x="58.0018%" y="415.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="57.6946%" y="389" width="0.0238%" height="15" fill="rgb(230,20,41)" fg:x="4840" fg:w="2"/><text x="58.0137%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="57.5516%" y="661" width="0.1907%" height="15" fill="rgb(213,195,35)" fg:x="4828" fg:w="16"/><text x="57.8707%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="57.7184%" y="645" width="0.0238%" height="15" fill="rgb(242,62,36)" fg:x="4842" fg:w="2"/><text x="58.0375%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.7184%" y="629" width="0.0238%" height="15" fill="rgb(222,210,37)" fg:x="4842" fg:w="2"/><text x="58.0375%" y="639.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="57.7184%" y="613" width="0.0238%" height="15" fill="rgb(232,107,19)" fg:x="4842" fg:w="2"/><text x="58.0375%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.7184%" y="597" width="0.0238%" height="15" fill="rgb(235,85,17)" fg:x="4842" fg:w="2"/><text x="58.0375%" y="607.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="57.7184%" y="581" width="0.0238%" height="15" fill="rgb(219,195,31)" fg:x="4842" fg:w="2"/><text x="58.0375%" y="591.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="57.7184%" y="565" width="0.0238%" height="15" fill="rgb(231,183,30)" fg:x="4842" fg:w="2"/><text x="58.0375%" y="575.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="57.7184%" y="549" width="0.0238%" height="15" fill="rgb(212,0,11)" fg:x="4842" fg:w="2"/><text x="58.0375%" y="559.50"/></g><g><title>parser::operator+ (32 samples, 0.38%)</title><rect x="57.3728%" y="709" width="0.3815%" height="15" fill="rgb(249,53,54)" fg:x="4813" fg:w="32"/><text x="57.6919%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="57.5516%" y="693" width="0.2026%" height="15" fill="rgb(211,118,13)" fg:x="4828" fg:w="17"/><text x="57.8707%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (17 samples, 0.20%)</title><rect x="57.5516%" y="677" width="0.2026%" height="15" fill="rgb(237,42,9)" fg:x="4828" fg:w="17"/><text x="57.8707%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.7423%" y="661" width="0.0119%" height="15" fill="rgb(227,68,32)" fg:x="4844" fg:w="1"/><text x="58.0614%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="57.7423%" y="645" width="0.0119%" height="15" fill="rgb(238,10,7)" fg:x="4844" fg:w="1"/><text x="58.0614%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.7423%" y="629" width="0.0119%" height="15" fill="rgb(224,42,12)" fg:x="4844" fg:w="1"/><text x="58.0614%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="57.7423%" y="613" width="0.0119%" height="15" fill="rgb(252,190,5)" fg:x="4844" fg:w="1"/><text x="58.0614%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.7423%" y="597" width="0.0119%" height="15" fill="rgb(220,214,39)" fg:x="4844" fg:w="1"/><text x="58.0614%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="57.7423%" y="581" width="0.0119%" height="15" fill="rgb(247,98,4)" fg:x="4844" fg:w="1"/><text x="58.0614%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="57.7423%" y="565" width="0.0119%" height="15" fill="rgb(211,60,12)" fg:x="4844" fg:w="1"/><text x="58.0614%" y="575.50"/></g><g><title>parser::peek (1 samples, 0.01%)</title><rect x="57.7542%" y="709" width="0.0119%" height="15" fill="rgb(224,42,10)" fg:x="4845" fg:w="1"/><text x="58.0733%" y="719.50"/></g><g><title>parser::peeks (1 samples, 0.01%)</title><rect x="57.7542%" y="693" width="0.0119%" height="15" fill="rgb(217,167,4)" fg:x="4845" fg:w="1"/><text x="58.0733%" y="703.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="57.7542%" y="677" width="0.0119%" height="15" fill="rgb(253,18,17)" fg:x="4845" fg:w="1"/><text x="58.0733%" y="687.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="57.7542%" y="661" width="0.0119%" height="15" fill="rgb(249,186,44)" fg:x="4845" fg:w="1"/><text x="58.0733%" y="671.50"/></g><g><title>parser::peeks (2 samples, 0.02%)</title><rect x="57.7661%" y="709" width="0.0238%" height="15" fill="rgb(254,124,54)" fg:x="4846" fg:w="2"/><text x="58.0852%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.7780%" y="693" width="0.0119%" height="15" fill="rgb(220,124,39)" fg:x="4847" fg:w="1"/><text x="58.0971%" y="703.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="57.7780%" y="677" width="0.0119%" height="15" fill="rgb(225,96,46)" fg:x="4847" fg:w="1"/><text x="58.0971%" y="687.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="57.7780%" y="661" width="0.0119%" height="15" fill="rgb(221,106,12)" fg:x="4847" fg:w="1"/><text x="58.0971%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.7900%" y="645" width="0.0238%" height="15" fill="rgb(227,133,23)" fg:x="4848" fg:w="2"/><text x="58.1091%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.7900%" y="629" width="0.0238%" height="15" fill="rgb(216,44,52)" fg:x="4848" fg:w="2"/><text x="58.1091%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.7900%" y="613" width="0.0238%" height="15" fill="rgb(239,149,7)" fg:x="4848" fg:w="2"/><text x="58.1091%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="57.7900%" y="597" width="0.0238%" height="15" fill="rgb(211,157,31)" fg:x="4848" fg:w="2"/><text x="58.1091%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="57.7900%" y="581" width="0.0238%" height="15" fill="rgb(206,215,22)" fg:x="4848" fg:w="2"/><text x="58.1091%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.8138%" y="629" width="0.0119%" height="15" fill="rgb(208,113,15)" fg:x="4850" fg:w="1"/><text x="58.1329%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="57.8138%" y="613" width="0.0119%" height="15" fill="rgb(207,189,15)" fg:x="4850" fg:w="1"/><text x="58.1329%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.8257%" y="613" width="0.0119%" height="15" fill="rgb(231,115,4)" fg:x="4851" fg:w="1"/><text x="58.1448%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.8257%" y="597" width="0.0119%" height="15" fill="rgb(253,117,2)" fg:x="4851" fg:w="1"/><text x="58.1448%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.8257%" y="581" width="0.0119%" height="15" fill="rgb(248,48,24)" fg:x="4851" fg:w="1"/><text x="58.1448%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="57.8257%" y="565" width="0.0119%" height="15" fill="rgb(241,28,46)" fg:x="4851" fg:w="1"/><text x="58.1448%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.8376%" y="581" width="0.0119%" height="15" fill="rgb(216,165,52)" fg:x="4852" fg:w="1"/><text x="58.1567%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="57.7900%" y="693" width="0.0715%" height="15" fill="rgb(220,222,34)" fg:x="4848" fg:w="6"/><text x="58.1091%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="57.7900%" y="677" width="0.0715%" height="15" fill="rgb(247,222,49)" fg:x="4848" fg:w="6"/><text x="58.1091%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="57.7900%" y="661" width="0.0715%" height="15" fill="rgb(240,10,31)" fg:x="4848" fg:w="6"/><text x="58.1091%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="57.8138%" y="645" width="0.0477%" height="15" fill="rgb(221,199,35)" fg:x="4850" fg:w="4"/><text x="58.1329%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.8257%" y="629" width="0.0358%" height="15" fill="rgb(230,223,11)" fg:x="4851" fg:w="3"/><text x="58.1448%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.8376%" y="613" width="0.0238%" height="15" fill="rgb(218,82,45)" fg:x="4852" fg:w="2"/><text x="58.1567%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.8376%" y="597" width="0.0238%" height="15" fill="rgb(233,213,33)" fg:x="4852" fg:w="2"/><text x="58.1567%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.8496%" y="581" width="0.0119%" height="15" fill="rgb(210,143,52)" fg:x="4853" fg:w="1"/><text x="58.1687%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.8496%" y="565" width="0.0119%" height="15" fill="rgb(206,95,4)" fg:x="4853" fg:w="1"/><text x="58.1687%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.8496%" y="549" width="0.0119%" height="15" fill="rgb(246,164,46)" fg:x="4853" fg:w="1"/><text x="58.1687%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.8496%" y="533" width="0.0119%" height="15" fill="rgb(213,210,47)" fg:x="4853" fg:w="1"/><text x="58.1687%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="57.7900%" y="709" width="0.0834%" height="15" fill="rgb(210,12,38)" fg:x="4848" fg:w="7"/><text x="58.1091%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.8615%" y="693" width="0.0119%" height="15" fill="rgb(252,192,54)" fg:x="4854" fg:w="1"/><text x="58.1806%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.8615%" y="677" width="0.0119%" height="15" fill="rgb(242,92,6)" fg:x="4854" fg:w="1"/><text x="58.1806%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="57.8615%" y="661" width="0.0119%" height="15" fill="rgb(253,154,15)" fg:x="4854" fg:w="1"/><text x="58.1806%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.8734%" y="693" width="0.0119%" height="15" fill="rgb(209,20,43)" fg:x="4855" fg:w="1"/><text x="58.1925%" y="703.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="57.8734%" y="677" width="0.0119%" height="15" fill="rgb(232,28,49)" fg:x="4855" fg:w="1"/><text x="58.1925%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.8972%" y="645" width="0.0119%" height="15" fill="rgb(248,131,53)" fg:x="4857" fg:w="1"/><text x="58.2163%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="57.8972%" y="629" width="0.0119%" height="15" fill="rgb(214,16,30)" fg:x="4857" fg:w="1"/><text x="58.2163%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.8853%" y="661" width="0.0358%" height="15" fill="rgb(245,16,0)" fg:x="4856" fg:w="3"/><text x="58.2044%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.9092%" y="645" width="0.0119%" height="15" fill="rgb(245,17,35)" fg:x="4858" fg:w="1"/><text x="58.2283%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.9092%" y="629" width="0.0119%" height="15" fill="rgb(249,27,53)" fg:x="4858" fg:w="1"/><text x="58.2283%" y="639.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.9092%" y="613" width="0.0119%" height="15" fill="rgb(214,73,24)" fg:x="4858" fg:w="1"/><text x="58.2283%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.9092%" y="597" width="0.0119%" height="15" fill="rgb(223,84,37)" fg:x="4858" fg:w="1"/><text x="58.2283%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="57.9092%" y="581" width="0.0119%" height="15" fill="rgb(210,109,28)" fg:x="4858" fg:w="1"/><text x="58.2283%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.9211%" y="661" width="0.0119%" height="15" fill="rgb(208,186,6)" fg:x="4859" fg:w="1"/><text x="58.2402%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.9211%" y="645" width="0.0119%" height="15" fill="rgb(235,201,30)" fg:x="4859" fg:w="1"/><text x="58.2402%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.9330%" y="629" width="0.0119%" height="15" fill="rgb(216,198,48)" fg:x="4860" fg:w="1"/><text x="58.2521%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="57.9330%" y="613" width="0.0119%" height="15" fill="rgb(254,186,25)" fg:x="4860" fg:w="1"/><text x="58.2521%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.9449%" y="613" width="0.0119%" height="15" fill="rgb(227,87,5)" fg:x="4861" fg:w="1"/><text x="58.2640%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.9449%" y="597" width="0.0119%" height="15" fill="rgb(236,205,25)" fg:x="4861" fg:w="1"/><text x="58.2640%" y="607.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="57.9449%" y="581" width="0.0119%" height="15" fill="rgb(229,99,32)" fg:x="4861" fg:w="1"/><text x="58.2640%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.9568%" y="597" width="0.0119%" height="15" fill="rgb(231,177,31)" fg:x="4862" fg:w="1"/><text x="58.2759%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="57.9568%" y="581" width="0.0119%" height="15" fill="rgb(246,15,2)" fg:x="4862" fg:w="1"/><text x="58.2759%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="57.8853%" y="677" width="0.0954%" height="15" fill="rgb(207,39,15)" fg:x="4856" fg:w="8"/><text x="58.2044%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="57.9330%" y="661" width="0.0477%" height="15" fill="rgb(207,44,9)" fg:x="4860" fg:w="4"/><text x="58.2521%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="57.9330%" y="645" width="0.0477%" height="15" fill="rgb(225,224,33)" fg:x="4860" fg:w="4"/><text x="58.2521%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.9449%" y="629" width="0.0358%" height="15" fill="rgb(252,151,3)" fg:x="4861" fg:w="3"/><text x="58.2640%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="57.9568%" y="613" width="0.0238%" height="15" fill="rgb(211,140,13)" fg:x="4862" fg:w="2"/><text x="58.2759%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.9688%" y="597" width="0.0119%" height="15" fill="rgb(239,225,17)" fg:x="4863" fg:w="1"/><text x="58.2879%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.9688%" y="581" width="0.0119%" height="15" fill="rgb(223,170,52)" fg:x="4863" fg:w="1"/><text x="58.2879%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.9688%" y="565" width="0.0119%" height="15" fill="rgb(212,64,21)" fg:x="4863" fg:w="1"/><text x="58.2879%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="57.9688%" y="549" width="0.0119%" height="15" fill="rgb(236,126,48)" fg:x="4863" fg:w="1"/><text x="58.2879%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="57.8853%" y="693" width="0.1073%" height="15" fill="rgb(209,135,11)" fg:x="4856" fg:w="9"/><text x="58.2044%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="57.9807%" y="677" width="0.0119%" height="15" fill="rgb(228,126,40)" fg:x="4864" fg:w="1"/><text x="58.2998%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.9807%" y="661" width="0.0119%" height="15" fill="rgb(205,196,36)" fg:x="4864" fg:w="1"/><text x="58.2998%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="57.9807%" y="645" width="0.0119%" height="15" fill="rgb(243,160,33)" fg:x="4864" fg:w="1"/><text x="58.2998%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="57.9926%" y="677" width="0.0119%" height="15" fill="rgb(210,84,20)" fg:x="4865" fg:w="1"/><text x="58.3117%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.0045%" y="661" width="0.0119%" height="15" fill="rgb(228,213,30)" fg:x="4866" fg:w="1"/><text x="58.3236%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="58.0045%" y="645" width="0.0119%" height="15" fill="rgb(252,33,45)" fg:x="4866" fg:w="1"/><text x="58.3236%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="57.8734%" y="709" width="0.1550%" height="15" fill="rgb(254,227,20)" fg:x="4855" fg:w="13"/><text x="58.1925%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="57.9926%" y="693" width="0.0358%" height="15" fill="rgb(228,192,2)" fg:x="4865" fg:w="3"/><text x="58.3117%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.0045%" y="677" width="0.0238%" height="15" fill="rgb(233,32,8)" fg:x="4866" fg:w="2"/><text x="58.3236%" y="687.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="58.0165%" y="661" width="0.0119%" height="15" fill="rgb(220,146,47)" fg:x="4867" fg:w="1"/><text x="58.3356%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.0284%" y="645" width="0.0119%" height="15" fill="rgb(246,194,1)" fg:x="4868" fg:w="1"/><text x="58.3475%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.0284%" y="629" width="0.0119%" height="15" fill="rgb(218,203,9)" fg:x="4868" fg:w="1"/><text x="58.3475%" y="639.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="58.0284%" y="613" width="0.0119%" height="15" fill="rgb(237,97,14)" fg:x="4868" fg:w="1"/><text x="58.3475%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.0522%" y="597" width="0.0119%" height="15" fill="rgb(239,76,15)" fg:x="4870" fg:w="1"/><text x="58.3713%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.0641%" y="533" width="0.0119%" height="15" fill="rgb(222,53,45)" fg:x="4871" fg:w="1"/><text x="58.3832%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="58.0641%" y="517" width="0.0119%" height="15" fill="rgb(237,88,5)" fg:x="4871" fg:w="1"/><text x="58.3832%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="58.0403%" y="629" width="0.0477%" height="15" fill="rgb(218,223,35)" fg:x="4869" fg:w="4"/><text x="58.3594%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="58.0403%" y="613" width="0.0477%" height="15" fill="rgb(243,229,38)" fg:x="4869" fg:w="4"/><text x="58.3594%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.0641%" y="597" width="0.0238%" height="15" fill="rgb(240,75,41)" fg:x="4871" fg:w="2"/><text x="58.3832%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.0641%" y="581" width="0.0238%" height="15" fill="rgb(209,110,37)" fg:x="4871" fg:w="2"/><text x="58.3832%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.0641%" y="565" width="0.0238%" height="15" fill="rgb(221,130,46)" fg:x="4871" fg:w="2"/><text x="58.3832%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.0641%" y="549" width="0.0238%" height="15" fill="rgb(237,160,20)" fg:x="4871" fg:w="2"/><text x="58.3832%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.0761%" y="533" width="0.0119%" height="15" fill="rgb(234,126,24)" fg:x="4872" fg:w="1"/><text x="58.3952%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.0761%" y="517" width="0.0119%" height="15" fill="rgb(207,177,9)" fg:x="4872" fg:w="1"/><text x="58.3952%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="58.0761%" y="501" width="0.0119%" height="15" fill="rgb(231,191,33)" fg:x="4872" fg:w="1"/><text x="58.3952%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.0880%" y="613" width="0.0119%" height="15" fill="rgb(207,42,1)" fg:x="4873" fg:w="1"/><text x="58.4071%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.0880%" y="597" width="0.0119%" height="15" fill="rgb(218,34,50)" fg:x="4873" fg:w="1"/><text x="58.4071%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="58.0284%" y="661" width="0.0834%" height="15" fill="rgb(254,126,39)" fg:x="4868" fg:w="7"/><text x="58.3475%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="58.0403%" y="645" width="0.0715%" height="15" fill="rgb(251,17,26)" fg:x="4869" fg:w="6"/><text x="58.3594%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.0880%" y="629" width="0.0238%" height="15" fill="rgb(252,215,34)" fg:x="4873" fg:w="2"/><text x="58.4071%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.0999%" y="613" width="0.0119%" height="15" fill="rgb(217,120,44)" fg:x="4874" fg:w="1"/><text x="58.4190%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.0999%" y="597" width="0.0119%" height="15" fill="rgb(211,31,11)" fg:x="4874" fg:w="1"/><text x="58.4190%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.0999%" y="581" width="0.0119%" height="15" fill="rgb(222,69,51)" fg:x="4874" fg:w="1"/><text x="58.4190%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="58.0999%" y="565" width="0.0119%" height="15" fill="rgb(215,229,42)" fg:x="4874" fg:w="1"/><text x="58.4190%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="58.0284%" y="677" width="0.0954%" height="15" fill="rgb(212,102,15)" fg:x="4868" fg:w="8"/><text x="58.3475%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.1118%" y="661" width="0.0119%" height="15" fill="rgb(205,179,41)" fg:x="4875" fg:w="1"/><text x="58.4309%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.1118%" y="645" width="0.0119%" height="15" fill="rgb(219,148,46)" fg:x="4875" fg:w="1"/><text x="58.4309%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="58.1118%" y="629" width="0.0119%" height="15" fill="rgb(243,40,19)" fg:x="4875" fg:w="1"/><text x="58.4309%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="58.0284%" y="693" width="0.1073%" height="15" fill="rgb(208,206,34)" fg:x="4868" fg:w="9"/><text x="58.3475%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.1237%" y="677" width="0.0119%" height="15" fill="rgb(244,184,38)" fg:x="4876" fg:w="1"/><text x="58.4428%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.1237%" y="661" width="0.0119%" height="15" fill="rgb(244,151,47)" fg:x="4876" fg:w="1"/><text x="58.4428%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.1237%" y="645" width="0.0119%" height="15" fill="rgb(236,134,42)" fg:x="4876" fg:w="1"/><text x="58.4428%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.1237%" y="629" width="0.0119%" height="15" fill="rgb(233,93,22)" fg:x="4876" fg:w="1"/><text x="58.4428%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="58.1237%" y="613" width="0.0119%" height="15" fill="rgb(211,202,10)" fg:x="4876" fg:w="1"/><text x="58.4428%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="58.0284%" y="709" width="0.1192%" height="15" fill="rgb(240,63,8)" fg:x="4868" fg:w="10"/><text x="58.3475%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.1357%" y="693" width="0.0119%" height="15" fill="rgb(214,9,4)" fg:x="4877" fg:w="1"/><text x="58.4548%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.1357%" y="677" width="0.0119%" height="15" fill="rgb(243,66,45)" fg:x="4877" fg:w="1"/><text x="58.4548%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.1357%" y="661" width="0.0119%" height="15" fill="rgb(220,50,42)" fg:x="4877" fg:w="1"/><text x="58.4548%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.1357%" y="645" width="0.0119%" height="15" fill="rgb(220,134,27)" fg:x="4877" fg:w="1"/><text x="58.4548%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.1476%" y="693" width="0.0119%" height="15" fill="rgb(246,151,50)" fg:x="4878" fg:w="1"/><text x="58.4667%" y="703.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="58.1476%" y="677" width="0.0119%" height="15" fill="rgb(238,216,27)" fg:x="4878" fg:w="1"/><text x="58.4667%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.1476%" y="709" width="0.0238%" height="15" fill="rgb(250,92,11)" fg:x="4878" fg:w="2"/><text x="58.4667%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.1595%" y="693" width="0.0119%" height="15" fill="rgb(248,183,6)" fg:x="4879" fg:w="1"/><text x="58.4786%" y="703.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="58.1714%" y="581" width="0.0119%" height="15" fill="rgb(211,204,50)" fg:x="4880" fg:w="1"/><text x="58.4905%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="58.1714%" y="565" width="0.0119%" height="15" fill="rgb(252,55,47)" fg:x="4880" fg:w="1"/><text x="58.4905%" y="575.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="58.1714%" y="549" width="0.0119%" height="15" fill="rgb(240,198,32)" fg:x="4880" fg:w="1"/><text x="58.4905%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="58.1833%" y="533" width="0.0119%" height="15" fill="rgb(224,203,19)" fg:x="4881" fg:w="1"/><text x="58.5024%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="58.1833%" y="517" width="0.0119%" height="15" fill="rgb(205,27,16)" fg:x="4881" fg:w="1"/><text x="58.5024%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="58.1714%" y="645" width="0.0358%" height="15" fill="rgb(224,226,17)" fg:x="4880" fg:w="3"/><text x="58.4905%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="58.1714%" y="629" width="0.0358%" height="15" fill="rgb(205,216,54)" fg:x="4880" fg:w="3"/><text x="58.4905%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="58.1714%" y="613" width="0.0358%" height="15" fill="rgb(248,168,46)" fg:x="4880" fg:w="3"/><text x="58.4905%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="58.1714%" y="597" width="0.0358%" height="15" fill="rgb(226,111,45)" fg:x="4880" fg:w="3"/><text x="58.4905%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="58.1833%" y="581" width="0.0238%" height="15" fill="rgb(231,15,9)" fg:x="4881" fg:w="2"/><text x="58.5024%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.1833%" y="565" width="0.0238%" height="15" fill="rgb(243,168,3)" fg:x="4881" fg:w="2"/><text x="58.5024%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.1833%" y="549" width="0.0238%" height="15" fill="rgb(221,220,54)" fg:x="4881" fg:w="2"/><text x="58.5024%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="58.1953%" y="533" width="0.0119%" height="15" fill="rgb(232,174,38)" fg:x="4882" fg:w="1"/><text x="58.5144%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.1953%" y="517" width="0.0119%" height="15" fill="rgb(205,14,38)" fg:x="4882" fg:w="1"/><text x="58.5144%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="58.1953%" y="501" width="0.0119%" height="15" fill="rgb(234,89,19)" fg:x="4882" fg:w="1"/><text x="58.5144%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.2072%" y="501" width="0.0119%" height="15" fill="rgb(216,68,51)" fg:x="4883" fg:w="1"/><text x="58.5263%" y="511.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.2072%" y="485" width="0.0119%" height="15" fill="rgb(213,49,2)" fg:x="4883" fg:w="1"/><text x="58.5263%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="58.2072%" y="469" width="0.0119%" height="15" fill="rgb(242,146,30)" fg:x="4883" fg:w="1"/><text x="58.5263%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="58.2072%" y="453" width="0.0119%" height="15" fill="rgb(224,188,11)" fg:x="4883" fg:w="1"/><text x="58.5263%" y="463.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="58.2072%" y="437" width="0.0119%" height="15" fill="rgb(213,159,11)" fg:x="4883" fg:w="1"/><text x="58.5263%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="58.1714%" y="709" width="0.0596%" height="15" fill="rgb(229,13,31)" fg:x="4880" fg:w="5"/><text x="58.4905%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="58.1714%" y="693" width="0.0596%" height="15" fill="rgb(209,103,11)" fg:x="4880" fg:w="5"/><text x="58.4905%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="58.1714%" y="677" width="0.0596%" height="15" fill="rgb(206,3,4)" fg:x="4880" fg:w="5"/><text x="58.4905%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="58.1714%" y="661" width="0.0596%" height="15" fill="rgb(252,10,49)" fg:x="4880" fg:w="5"/><text x="58.4905%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="58.2072%" y="645" width="0.0238%" height="15" fill="rgb(217,160,32)" fg:x="4883" fg:w="2"/><text x="58.5263%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.2072%" y="629" width="0.0238%" height="15" fill="rgb(249,196,0)" fg:x="4883" fg:w="2"/><text x="58.5263%" y="639.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="58.2072%" y="613" width="0.0238%" height="15" fill="rgb(213,17,48)" fg:x="4883" fg:w="2"/><text x="58.5263%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.2072%" y="597" width="0.0238%" height="15" fill="rgb(206,42,46)" fg:x="4883" fg:w="2"/><text x="58.5263%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="58.2072%" y="581" width="0.0238%" height="15" fill="rgb(212,105,24)" fg:x="4883" fg:w="2"/><text x="58.5263%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.2072%" y="565" width="0.0238%" height="15" fill="rgb(243,216,30)" fg:x="4883" fg:w="2"/><text x="58.5263%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="58.2072%" y="549" width="0.0238%" height="15" fill="rgb(207,121,3)" fg:x="4883" fg:w="2"/><text x="58.5263%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.2072%" y="533" width="0.0238%" height="15" fill="rgb(249,78,0)" fg:x="4883" fg:w="2"/><text x="58.5263%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="58.2072%" y="517" width="0.0238%" height="15" fill="rgb(244,151,32)" fg:x="4883" fg:w="2"/><text x="58.5263%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.2191%" y="501" width="0.0119%" height="15" fill="rgb(228,63,25)" fg:x="4884" fg:w="1"/><text x="58.5382%" y="511.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="58.2191%" y="485" width="0.0119%" height="15" fill="rgb(231,158,23)" fg:x="4884" fg:w="1"/><text x="58.5382%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.2191%" y="469" width="0.0119%" height="15" fill="rgb(248,107,23)" fg:x="4884" fg:w="1"/><text x="58.5382%" y="479.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="58.2191%" y="453" width="0.0119%" height="15" fill="rgb(215,168,21)" fg:x="4884" fg:w="1"/><text x="58.5382%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.2191%" y="437" width="0.0119%" height="15" fill="rgb(227,83,22)" fg:x="4884" fg:w="1"/><text x="58.5382%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="58.2191%" y="421" width="0.0119%" height="15" fill="rgb(217,118,43)" fg:x="4884" fg:w="1"/><text x="58.5382%" y="431.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="58.2191%" y="405" width="0.0119%" height="15" fill="rgb(229,220,41)" fg:x="4884" fg:w="1"/><text x="58.5382%" y="415.50"/></g><g><title>cond::peeks (1 samples, 0.01%)</title><rect x="58.2549%" y="677" width="0.0119%" height="15" fill="rgb(254,146,46)" fg:x="4887" fg:w="1"/><text x="58.5740%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.2549%" y="661" width="0.0119%" height="15" fill="rgb(233,208,31)" fg:x="4887" fg:w="1"/><text x="58.5740%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="58.2549%" y="645" width="0.0119%" height="15" fill="rgb(222,162,7)" fg:x="4887" fg:w="1"/><text x="58.5740%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="58.2549%" y="629" width="0.0119%" height="15" fill="rgb(230,117,45)" fg:x="4887" fg:w="1"/><text x="58.5740%" y="639.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="58.2549%" y="613" width="0.0119%" height="15" fill="rgb(239,163,6)" fg:x="4887" fg:w="1"/><text x="58.5740%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.2668%" y="629" width="0.0119%" height="15" fill="rgb(246,130,17)" fg:x="4888" fg:w="1"/><text x="58.5859%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.2668%" y="613" width="0.0119%" height="15" fill="rgb(216,84,5)" fg:x="4888" fg:w="1"/><text x="58.5859%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="58.2668%" y="597" width="0.0119%" height="15" fill="rgb(230,200,21)" fg:x="4888" fg:w="1"/><text x="58.5859%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.2787%" y="597" width="0.0119%" height="15" fill="rgb(224,2,8)" fg:x="4889" fg:w="1"/><text x="58.5978%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="58.2787%" y="581" width="0.0119%" height="15" fill="rgb(238,178,10)" fg:x="4889" fg:w="1"/><text x="58.5978%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="58.2906%" y="597" width="0.0119%" height="15" fill="rgb(242,153,24)" fg:x="4890" fg:w="1"/><text x="58.6097%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="58.2668%" y="645" width="0.0477%" height="15" fill="rgb(242,32,48)" fg:x="4888" fg:w="4"/><text x="58.5859%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="58.2787%" y="629" width="0.0358%" height="15" fill="rgb(227,36,0)" fg:x="4889" fg:w="3"/><text x="58.5978%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="58.2787%" y="613" width="0.0358%" height="15" fill="rgb(251,33,35)" fg:x="4889" fg:w="3"/><text x="58.5978%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.3025%" y="597" width="0.0119%" height="15" fill="rgb(232,168,51)" fg:x="4891" fg:w="1"/><text x="58.6216%" y="607.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="58.3025%" y="581" width="0.0119%" height="15" fill="rgb(228,56,10)" fg:x="4891" fg:w="1"/><text x="58.6216%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.3145%" y="629" width="0.0119%" height="15" fill="rgb(231,10,26)" fg:x="4892" fg:w="1"/><text x="58.6336%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.3383%" y="597" width="0.0119%" height="15" fill="rgb(226,202,12)" fg:x="4894" fg:w="1"/><text x="58.6574%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="58.3383%" y="581" width="0.0119%" height="15" fill="rgb(251,49,21)" fg:x="4894" fg:w="1"/><text x="58.6574%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="58.3264%" y="613" width="0.0358%" height="15" fill="rgb(206,228,28)" fg:x="4893" fg:w="3"/><text x="58.6455%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.3502%" y="597" width="0.0119%" height="15" fill="rgb(205,198,31)" fg:x="4895" fg:w="1"/><text x="58.6693%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.3502%" y="581" width="0.0119%" height="15" fill="rgb(213,69,1)" fg:x="4895" fg:w="1"/><text x="58.6693%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="58.3502%" y="565" width="0.0119%" height="15" fill="rgb(209,177,9)" fg:x="4895" fg:w="1"/><text x="58.6693%" y="575.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="58.3621%" y="597" width="0.0238%" height="15" fill="rgb(227,119,30)" fg:x="4896" fg:w="2"/><text x="58.6812%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="58.3741%" y="581" width="0.0119%" height="15" fill="rgb(234,106,41)" fg:x="4897" fg:w="1"/><text x="58.6932%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.3860%" y="581" width="0.0119%" height="15" fill="rgb(244,103,47)" fg:x="4898" fg:w="1"/><text x="58.7051%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="58.3860%" y="565" width="0.0119%" height="15" fill="rgb(212,211,25)" fg:x="4898" fg:w="1"/><text x="58.7051%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.3860%" y="597" width="0.0238%" height="15" fill="rgb(208,63,53)" fg:x="4898" fg:w="2"/><text x="58.7051%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.3979%" y="581" width="0.0119%" height="15" fill="rgb(213,176,21)" fg:x="4899" fg:w="1"/><text x="58.7170%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="58.3979%" y="565" width="0.0119%" height="15" fill="rgb(243,124,12)" fg:x="4899" fg:w="1"/><text x="58.7170%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.4098%" y="581" width="0.0119%" height="15" fill="rgb(239,2,35)" fg:x="4900" fg:w="1"/><text x="58.7289%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="58.4098%" y="565" width="0.0119%" height="15" fill="rgb(253,169,22)" fg:x="4900" fg:w="1"/><text x="58.7289%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.4217%" y="581" width="0.0119%" height="15" fill="rgb(254,51,12)" fg:x="4901" fg:w="1"/><text x="58.7408%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.4217%" y="565" width="0.0119%" height="15" fill="rgb(244,17,47)" fg:x="4901" fg:w="1"/><text x="58.7408%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="58.4217%" y="549" width="0.0119%" height="15" fill="rgb(251,45,46)" fg:x="4901" fg:w="1"/><text x="58.7408%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.4337%" y="565" width="0.0119%" height="15" fill="rgb(223,87,43)" fg:x="4902" fg:w="1"/><text x="58.7528%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.4337%" y="549" width="0.0119%" height="15" fill="rgb(230,132,31)" fg:x="4902" fg:w="1"/><text x="58.7528%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.4337%" y="533" width="0.0119%" height="15" fill="rgb(206,99,1)" fg:x="4902" fg:w="1"/><text x="58.7528%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="58.4337%" y="517" width="0.0119%" height="15" fill="rgb(227,110,25)" fg:x="4902" fg:w="1"/><text x="58.7528%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="58.2668%" y="677" width="0.2026%" height="15" fill="rgb(217,182,7)" fg:x="4888" fg:w="17"/><text x="58.5859%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="58.2668%" y="661" width="0.2026%" height="15" fill="rgb(250,176,4)" fg:x="4888" fg:w="17"/><text x="58.5859%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="58.3145%" y="645" width="0.1550%" height="15" fill="rgb(244,98,30)" fg:x="4892" fg:w="13"/><text x="58.6336%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="58.3264%" y="629" width="0.1430%" height="15" fill="rgb(228,150,42)" fg:x="4893" fg:w="12"/><text x="58.6455%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="58.3621%" y="613" width="0.1073%" height="15" fill="rgb(231,91,46)" fg:x="4896" fg:w="9"/><text x="58.6812%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="58.4098%" y="597" width="0.0596%" height="15" fill="rgb(252,161,32)" fg:x="4900" fg:w="5"/><text x="58.7289%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="58.4337%" y="581" width="0.0358%" height="15" fill="rgb(236,69,41)" fg:x="4902" fg:w="3"/><text x="58.7528%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.4456%" y="565" width="0.0238%" height="15" fill="rgb(212,160,3)" fg:x="4903" fg:w="2"/><text x="58.7647%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.4456%" y="549" width="0.0238%" height="15" fill="rgb(216,5,50)" fg:x="4903" fg:w="2"/><text x="58.7647%" y="559.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="58.4456%" y="533" width="0.0238%" height="15" fill="rgb(241,138,25)" fg:x="4903" fg:w="2"/><text x="58.7647%" y="543.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="58.4456%" y="517" width="0.0238%" height="15" fill="rgb(239,42,18)" fg:x="4903" fg:w="2"/><text x="58.7647%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="58.4694%" y="661" width="0.0119%" height="15" fill="rgb(239,40,7)" fg:x="4905" fg:w="1"/><text x="58.7885%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.4813%" y="661" width="0.0119%" height="15" fill="rgb(239,11,31)" fg:x="4906" fg:w="1"/><text x="58.8004%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.4813%" y="645" width="0.0119%" height="15" fill="rgb(224,77,40)" fg:x="4906" fg:w="1"/><text x="58.8004%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="58.4813%" y="629" width="0.0119%" height="15" fill="rgb(226,15,5)" fg:x="4906" fg:w="1"/><text x="58.8004%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="58.4694%" y="677" width="0.0477%" height="15" fill="rgb(254,188,5)" fg:x="4905" fg:w="4"/><text x="58.7885%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.4933%" y="661" width="0.0238%" height="15" fill="rgb(241,148,52)" fg:x="4907" fg:w="2"/><text x="58.8124%" y="671.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="58.4933%" y="645" width="0.0238%" height="15" fill="rgb(251,48,36)" fg:x="4907" fg:w="2"/><text x="58.8124%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="58.5052%" y="629" width="0.0119%" height="15" fill="rgb(243,83,13)" fg:x="4908" fg:w="1"/><text x="58.8243%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.5171%" y="677" width="0.0119%" height="15" fill="rgb(210,105,0)" fg:x="4909" fg:w="1"/><text x="58.8362%" y="687.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="58.5171%" y="661" width="0.0119%" height="15" fill="rgb(239,60,36)" fg:x="4909" fg:w="1"/><text x="58.8362%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.5290%" y="677" width="0.0119%" height="15" fill="rgb(210,20,0)" fg:x="4910" fg:w="1"/><text x="58.8481%" y="687.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="58.5290%" y="661" width="0.0119%" height="15" fill="rgb(244,26,53)" fg:x="4910" fg:w="1"/><text x="58.8481%" y="671.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="58.5290%" y="645" width="0.0119%" height="15" fill="rgb(240,100,49)" fg:x="4910" fg:w="1"/><text x="58.8481%" y="655.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="58.5529%" y="613" width="0.0358%" height="15" fill="rgb(250,46,45)" fg:x="4912" fg:w="3"/><text x="58.8720%" y="623.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="58.5529%" y="597" width="0.0358%" height="15" fill="rgb(220,181,29)" fg:x="4912" fg:w="3"/><text x="58.8720%" y="607.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="58.5529%" y="581" width="0.0358%" height="15" fill="rgb(213,137,33)" fg:x="4912" fg:w="3"/><text x="58.8720%" y="591.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="58.5886%" y="549" width="0.0596%" height="15" fill="rgb(213,27,48)" fg:x="4915" fg:w="5"/><text x="58.9077%" y="559.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="58.5886%" y="533" width="0.0596%" height="15" fill="rgb(245,180,39)" fg:x="4915" fg:w="5"/><text x="58.9077%" y="543.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="58.5886%" y="517" width="0.0596%" height="15" fill="rgb(212,158,42)" fg:x="4915" fg:w="5"/><text x="58.9077%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="58.6482%" y="517" width="0.0119%" height="15" fill="rgb(228,193,18)" fg:x="4920" fg:w="1"/><text x="58.9673%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="58.6482%" y="501" width="0.0119%" height="15" fill="rgb(245,172,29)" fg:x="4920" fg:w="1"/><text x="58.9673%" y="511.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="58.6602%" y="501" width="0.0477%" height="15" fill="rgb(207,98,24)" fg:x="4921" fg:w="4"/><text x="58.9793%" y="511.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="58.6602%" y="485" width="0.0477%" height="15" fill="rgb(249,92,26)" fg:x="4921" fg:w="4"/><text x="58.9793%" y="495.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="58.6721%" y="469" width="0.0358%" height="15" fill="rgb(217,176,26)" fg:x="4922" fg:w="3"/><text x="58.9912%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="58.5886%" y="613" width="0.1550%" height="15" fill="rgb(221,8,39)" fg:x="4915" fg:w="13"/><text x="58.9077%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="58.5886%" y="597" width="0.1550%" height="15" fill="rgb(208,90,18)" fg:x="4915" fg:w="13"/><text x="58.9077%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="58.5886%" y="581" width="0.1550%" height="15" fill="rgb(207,202,30)" fg:x="4915" fg:w="13"/><text x="58.9077%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="58.5886%" y="565" width="0.1550%" height="15" fill="rgb(231,124,22)" fg:x="4915" fg:w="13"/><text x="58.9077%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="58.6482%" y="549" width="0.0954%" height="15" fill="rgb(206,15,5)" fg:x="4920" fg:w="8"/><text x="58.9673%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="58.6482%" y="533" width="0.0954%" height="15" fill="rgb(239,16,52)" fg:x="4920" fg:w="8"/><text x="58.9673%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (7 samples, 0.08%)</title><rect x="58.6602%" y="517" width="0.0834%" height="15" fill="rgb(245,213,29)" fg:x="4921" fg:w="7"/><text x="58.9793%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="58.7078%" y="501" width="0.0358%" height="15" fill="rgb(213,203,36)" fg:x="4925" fg:w="3"/><text x="59.0269%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="58.7078%" y="485" width="0.0358%" height="15" fill="rgb(209,55,18)" fg:x="4925" fg:w="3"/><text x="59.0269%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="58.7078%" y="469" width="0.0358%" height="15" fill="rgb(207,133,49)" fg:x="4925" fg:w="3"/><text x="59.0269%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="58.7078%" y="453" width="0.0358%" height="15" fill="rgb(240,33,46)" fg:x="4925" fg:w="3"/><text x="59.0269%" y="463.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="58.7078%" y="437" width="0.0358%" height="15" fill="rgb(212,35,2)" fg:x="4925" fg:w="3"/><text x="59.0269%" y="447.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="58.7198%" y="421" width="0.0238%" height="15" fill="rgb(231,119,28)" fg:x="4926" fg:w="2"/><text x="59.0389%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="58.7436%" y="565" width="0.0358%" height="15" fill="rgb(252,178,7)" fg:x="4928" fg:w="3"/><text x="59.0627%" y="575.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="58.7436%" y="549" width="0.0358%" height="15" fill="rgb(251,91,4)" fg:x="4928" fg:w="3"/><text x="59.0627%" y="559.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="58.7436%" y="533" width="0.0358%" height="15" fill="rgb(233,122,19)" fg:x="4928" fg:w="3"/><text x="59.0627%" y="543.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="58.7436%" y="517" width="0.0358%" height="15" fill="rgb(231,208,46)" fg:x="4928" fg:w="3"/><text x="59.0627%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.7794%" y="469" width="0.0119%" height="15" fill="rgb(243,15,41)" fg:x="4931" fg:w="1"/><text x="59.0985%" y="479.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.7794%" y="453" width="0.0119%" height="15" fill="rgb(210,32,43)" fg:x="4931" fg:w="1"/><text x="59.0985%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="58.7794%" y="437" width="0.0119%" height="15" fill="rgb(222,177,15)" fg:x="4931" fg:w="1"/><text x="59.0985%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="58.7794%" y="421" width="0.0119%" height="15" fill="rgb(244,121,34)" fg:x="4931" fg:w="1"/><text x="59.0985%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.7913%" y="437" width="0.0119%" height="15" fill="rgb(234,138,4)" fg:x="4932" fg:w="1"/><text x="59.1104%" y="447.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.7913%" y="421" width="0.0119%" height="15" fill="rgb(240,97,48)" fg:x="4932" fg:w="1"/><text x="59.1104%" y="431.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="58.7913%" y="405" width="0.0119%" height="15" fill="rgb(237,65,54)" fg:x="4932" fg:w="1"/><text x="59.1104%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="58.8032%" y="389" width="0.0119%" height="15" fill="rgb(214,25,24)" fg:x="4933" fg:w="1"/><text x="59.1223%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="58.8032%" y="373" width="0.0119%" height="15" fill="rgb(213,5,3)" fg:x="4933" fg:w="1"/><text x="59.1223%" y="383.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="58.7913%" y="453" width="0.0358%" height="15" fill="rgb(219,81,29)" fg:x="4932" fg:w="3"/><text x="59.1104%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.8032%" y="437" width="0.0238%" height="15" fill="rgb(220,43,48)" fg:x="4933" fg:w="2"/><text x="59.1223%" y="447.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="58.8032%" y="421" width="0.0238%" height="15" fill="rgb(239,157,2)" fg:x="4933" fg:w="2"/><text x="59.1223%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.8032%" y="405" width="0.0238%" height="15" fill="rgb(213,104,43)" fg:x="4933" fg:w="2"/><text x="59.1223%" y="415.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.8151%" y="389" width="0.0119%" height="15" fill="rgb(237,84,9)" fg:x="4934" fg:w="1"/><text x="59.1342%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="58.8151%" y="373" width="0.0119%" height="15" fill="rgb(252,6,33)" fg:x="4934" fg:w="1"/><text x="59.1342%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="58.8151%" y="357" width="0.0119%" height="15" fill="rgb(251,172,22)" fg:x="4934" fg:w="1"/><text x="59.1342%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (25 samples, 0.30%)</title><rect x="58.5409%" y="661" width="0.2980%" height="15" fill="rgb(244,91,53)" fg:x="4911" fg:w="25"/><text x="58.8600%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (25 samples, 0.30%)</title><rect x="58.5409%" y="645" width="0.2980%" height="15" fill="rgb(219,29,30)" fg:x="4911" fg:w="25"/><text x="58.8600%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (25 samples, 0.30%)</title><rect x="58.5409%" y="629" width="0.2980%" height="15" fill="rgb(213,3,15)" fg:x="4911" fg:w="25"/><text x="58.8600%" y="639.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="58.7436%" y="613" width="0.0954%" height="15" fill="rgb(208,25,28)" fg:x="4928" fg:w="8"/><text x="59.0627%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="58.7436%" y="597" width="0.0954%" height="15" fill="rgb(252,144,25)" fg:x="4928" fg:w="8"/><text x="59.0627%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="58.7436%" y="581" width="0.0954%" height="15" fill="rgb(226,220,25)" fg:x="4928" fg:w="8"/><text x="59.0627%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="58.7794%" y="565" width="0.0596%" height="15" fill="rgb(212,131,28)" fg:x="4931" fg:w="5"/><text x="59.0985%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="58.7794%" y="549" width="0.0596%" height="15" fill="rgb(219,143,52)" fg:x="4931" fg:w="5"/><text x="59.0985%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="58.7794%" y="533" width="0.0596%" height="15" fill="rgb(215,56,7)" fg:x="4931" fg:w="5"/><text x="59.0985%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="58.7794%" y="517" width="0.0596%" height="15" fill="rgb(239,59,51)" fg:x="4931" fg:w="5"/><text x="59.0985%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="58.7794%" y="501" width="0.0596%" height="15" fill="rgb(209,215,4)" fg:x="4931" fg:w="5"/><text x="59.0985%" y="511.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="58.7794%" y="485" width="0.0596%" height="15" fill="rgb(221,118,39)" fg:x="4931" fg:w="5"/><text x="59.0985%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="58.7913%" y="469" width="0.0477%" height="15" fill="rgb(236,6,44)" fg:x="4932" fg:w="4"/><text x="59.1104%" y="479.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="58.8270%" y="453" width="0.0119%" height="15" fill="rgb(216,122,9)" fg:x="4935" fg:w="1"/><text x="59.1461%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="58.8390%" y="645" width="0.0119%" height="15" fill="rgb(244,134,42)" fg:x="4936" fg:w="1"/><text x="59.1581%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="58.8390%" y="629" width="0.0119%" height="15" fill="rgb(209,189,35)" fg:x="4936" fg:w="1"/><text x="59.1581%" y="639.50"/></g><g><title>logic::newline_token (212 samples, 2.53%)</title><rect x="56.3595%" y="725" width="2.5271%" height="15" fill="rgb(250,47,36)" fg:x="4728" fg:w="212"/><text x="56.6786%" y="735.50">.. </text></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (55 samples, 0.66%)</title><rect x="58.2310%" y="709" width="0.6556%" height="15" fill="rgb(252,112,4)" fg:x="4885" fg:w="55"/><text x="58.5501%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (55 samples, 0.66%)</title><rect x="58.2310%" y="693" width="0.6556%" height="15" fill="rgb(221,79,51)" fg:x="4885" fg:w="55"/><text x="58.5501%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (29 samples, 0.35%)</title><rect x="58.5409%" y="677" width="0.3457%" height="15" fill="rgb(232,65,53)" fg:x="4911" fg:w="29"/><text x="58.8600%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="58.8390%" y="661" width="0.0477%" height="15" fill="rgb(211,37,7)" fg:x="4936" fg:w="4"/><text x="59.1581%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="58.8509%" y="645" width="0.0358%" height="15" fill="rgb(234,221,18)" fg:x="4937" fg:w="3"/><text x="59.1700%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="58.8509%" y="629" width="0.0358%" height="15" fill="rgb(220,158,26)" fg:x="4937" fg:w="3"/><text x="59.1700%" y="639.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="58.8628%" y="613" width="0.0238%" height="15" fill="rgb(220,70,6)" fg:x="4938" fg:w="2"/><text x="59.1819%" y="623.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="58.8628%" y="597" width="0.0238%" height="15" fill="rgb(250,39,48)" fg:x="4938" fg:w="2"/><text x="59.1819%" y="607.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="58.8628%" y="581" width="0.0238%" height="15" fill="rgb(206,40,27)" fg:x="4938" fg:w="2"/><text x="59.1819%" y="591.50"/></g><g><title>parser::mark (1 samples, 0.01%)</title><rect x="58.8866%" y="725" width="0.0119%" height="15" fill="rgb(247,80,36)" fg:x="4940" fg:w="1"/><text x="59.2057%" y="735.50"/></g><g><title>parser::effect (1 samples, 0.01%)</title><rect x="58.8866%" y="709" width="0.0119%" height="15" fill="rgb(222,9,20)" fg:x="4940" fg:w="1"/><text x="59.2057%" y="719.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="58.9224%" y="709" width="0.0358%" height="15" fill="rgb(217,26,45)" fg:x="4943" fg:w="3"/><text x="59.2415%" y="719.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="58.9224%" y="693" width="0.0358%" height="15" fill="rgb(221,67,14)" fg:x="4943" fg:w="3"/><text x="59.2415%" y="703.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="58.9343%" y="677" width="0.0238%" height="15" fill="rgb(248,100,24)" fg:x="4944" fg:w="2"/><text x="59.2534%" y="687.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="58.9582%" y="693" width="0.0119%" height="15" fill="rgb(230,187,16)" fg:x="4946" fg:w="1"/><text x="59.2773%" y="703.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="58.9582%" y="677" width="0.0119%" height="15" fill="rgb(205,108,13)" fg:x="4946" fg:w="1"/><text x="59.2773%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="58.9582%" y="709" width="0.0238%" height="15" fill="rgb(235,71,51)" fg:x="4946" fg:w="2"/><text x="59.2773%" y="719.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="58.9701%" y="693" width="0.0119%" height="15" fill="rgb(251,172,48)" fg:x="4947" fg:w="1"/><text x="59.2892%" y="703.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="58.9701%" y="677" width="0.0119%" height="15" fill="rgb(240,96,49)" fg:x="4947" fg:w="1"/><text x="59.2892%" y="687.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="58.9701%" y="661" width="0.0119%" height="15" fill="rgb(235,46,36)" fg:x="4947" fg:w="1"/><text x="59.2892%" y="671.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="58.9701%" y="645" width="0.0119%" height="15" fill="rgb(244,3,49)" fg:x="4947" fg:w="1"/><text x="59.2892%" y="655.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="58.9820%" y="469" width="0.0238%" height="15" fill="rgb(206,78,54)" fg:x="4948" fg:w="2"/><text x="59.3011%" y="479.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="58.9820%" y="453" width="0.0238%" height="15" fill="rgb(208,85,42)" fg:x="4948" fg:w="2"/><text x="59.3011%" y="463.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="58.9820%" y="437" width="0.0238%" height="15" fill="rgb(219,196,21)" fg:x="4948" fg:w="2"/><text x="59.3011%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="58.9820%" y="709" width="0.0358%" height="15" fill="rgb(238,19,9)" fg:x="4948" fg:w="3"/><text x="59.3011%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="58.9820%" y="693" width="0.0358%" height="15" fill="rgb(206,86,13)" fg:x="4948" fg:w="3"/><text x="59.3011%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="58.9820%" y="677" width="0.0358%" height="15" fill="rgb(214,123,40)" fg:x="4948" fg:w="3"/><text x="59.3011%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="58.9820%" y="661" width="0.0358%" height="15" fill="rgb(243,53,5)" fg:x="4948" fg:w="3"/><text x="59.3011%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="58.9820%" y="645" width="0.0358%" height="15" fill="rgb(254,186,31)" fg:x="4948" fg:w="3"/><text x="59.3011%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="58.9820%" y="629" width="0.0358%" height="15" fill="rgb(221,216,25)" fg:x="4948" fg:w="3"/><text x="59.3011%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="58.9820%" y="613" width="0.0358%" height="15" fill="rgb(248,107,42)" fg:x="4948" fg:w="3"/><text x="59.3011%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="58.9820%" y="597" width="0.0358%" height="15" fill="rgb(221,85,43)" fg:x="4948" fg:w="3"/><text x="59.3011%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="58.9820%" y="581" width="0.0358%" height="15" fill="rgb(225,34,24)" fg:x="4948" fg:w="3"/><text x="59.3011%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="58.9820%" y="565" width="0.0358%" height="15" fill="rgb(211,119,1)" fg:x="4948" fg:w="3"/><text x="59.3011%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="58.9820%" y="549" width="0.0358%" height="15" fill="rgb(254,216,46)" fg:x="4948" fg:w="3"/><text x="59.3011%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="58.9820%" y="533" width="0.0358%" height="15" fill="rgb(238,11,38)" fg:x="4948" fg:w="3"/><text x="59.3011%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="58.9820%" y="517" width="0.0358%" height="15" fill="rgb(233,50,15)" fg:x="4948" fg:w="3"/><text x="59.3011%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="58.9820%" y="501" width="0.0358%" height="15" fill="rgb(217,181,29)" fg:x="4948" fg:w="3"/><text x="59.3011%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="58.9820%" y="485" width="0.0358%" height="15" fill="rgb(214,56,3)" fg:x="4948" fg:w="3"/><text x="59.3011%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="59.0058%" y="469" width="0.0119%" height="15" fill="rgb(230,69,45)" fg:x="4950" fg:w="1"/><text x="59.3249%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.0058%" y="453" width="0.0119%" height="15" fill="rgb(224,201,50)" fg:x="4950" fg:w="1"/><text x="59.3249%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="59.0058%" y="437" width="0.0119%" height="15" fill="rgb(217,228,18)" fg:x="4950" fg:w="1"/><text x="59.3249%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.0058%" y="421" width="0.0119%" height="15" fill="rgb(239,33,44)" fg:x="4950" fg:w="1"/><text x="59.3249%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="59.0058%" y="405" width="0.0119%" height="15" fill="rgb(248,210,23)" fg:x="4950" fg:w="1"/><text x="59.3249%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.0058%" y="389" width="0.0119%" height="15" fill="rgb(253,135,8)" fg:x="4950" fg:w="1"/><text x="59.3249%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.0058%" y="373" width="0.0119%" height="15" fill="rgb(217,98,21)" fg:x="4950" fg:w="1"/><text x="59.3249%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="59.0058%" y="357" width="0.0119%" height="15" fill="rgb(253,130,21)" fg:x="4950" fg:w="1"/><text x="59.3249%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.0178%" y="629" width="0.0119%" height="15" fill="rgb(207,81,54)" fg:x="4951" fg:w="1"/><text x="59.3369%" y="639.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="59.0178%" y="613" width="0.0119%" height="15" fill="rgb(232,48,33)" fg:x="4951" fg:w="1"/><text x="59.3369%" y="623.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="59.0178%" y="597" width="0.0119%" height="15" fill="rgb(211,9,35)" fg:x="4951" fg:w="1"/><text x="59.3369%" y="607.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="59.0297%" y="565" width="0.0477%" height="15" fill="rgb(205,152,21)" fg:x="4952" fg:w="4"/><text x="59.3488%" y="575.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="59.0297%" y="549" width="0.0477%" height="15" fill="rgb(249,21,27)" fg:x="4952" fg:w="4"/><text x="59.3488%" y="559.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="59.0416%" y="533" width="0.0358%" height="15" fill="rgb(252,29,24)" fg:x="4953" fg:w="3"/><text x="59.3607%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="59.0178%" y="709" width="0.0715%" height="15" fill="rgb(230,130,50)" fg:x="4951" fg:w="6"/><text x="59.3369%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="59.0178%" y="693" width="0.0715%" height="15" fill="rgb(239,144,14)" fg:x="4951" fg:w="6"/><text x="59.3369%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="59.0178%" y="677" width="0.0715%" height="15" fill="rgb(227,111,50)" fg:x="4951" fg:w="6"/><text x="59.3369%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="59.0178%" y="661" width="0.0715%" height="15" fill="rgb(254,84,20)" fg:x="4951" fg:w="6"/><text x="59.3369%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="59.0178%" y="645" width="0.0715%" height="15" fill="rgb(232,90,48)" fg:x="4951" fg:w="6"/><text x="59.3369%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="59.0297%" y="629" width="0.0596%" height="15" fill="rgb(253,63,47)" fg:x="4952" fg:w="5"/><text x="59.3488%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="59.0297%" y="613" width="0.0596%" height="15" fill="rgb(251,146,35)" fg:x="4952" fg:w="5"/><text x="59.3488%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="59.0297%" y="597" width="0.0596%" height="15" fill="rgb(229,192,35)" fg:x="4952" fg:w="5"/><text x="59.3488%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="59.0297%" y="581" width="0.0596%" height="15" fill="rgb(225,68,9)" fg:x="4952" fg:w="5"/><text x="59.3488%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="59.0774%" y="565" width="0.0119%" height="15" fill="rgb(214,97,34)" fg:x="4956" fg:w="1"/><text x="59.3965%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.0774%" y="549" width="0.0119%" height="15" fill="rgb(253,31,26)" fg:x="4956" fg:w="1"/><text x="59.3965%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="59.0774%" y="533" width="0.0119%" height="15" fill="rgb(225,151,47)" fg:x="4956" fg:w="1"/><text x="59.3965%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.0774%" y="517" width="0.0119%" height="15" fill="rgb(206,185,9)" fg:x="4956" fg:w="1"/><text x="59.3965%" y="527.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="59.0774%" y="501" width="0.0119%" height="15" fill="rgb(249,65,17)" fg:x="4956" fg:w="1"/><text x="59.3965%" y="511.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="59.0774%" y="485" width="0.0119%" height="15" fill="rgb(220,110,10)" fg:x="4956" fg:w="1"/><text x="59.3965%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="59.0893%" y="597" width="0.0358%" height="15" fill="rgb(222,198,49)" fg:x="4957" fg:w="3"/><text x="59.4084%" y="607.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="59.0893%" y="581" width="0.0358%" height="15" fill="rgb(239,81,13)" fg:x="4957" fg:w="3"/><text x="59.4084%" y="591.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="59.0893%" y="565" width="0.0358%" height="15" fill="rgb(216,128,11)" fg:x="4957" fg:w="3"/><text x="59.4084%" y="575.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="59.0893%" y="549" width="0.0358%" height="15" fill="rgb(247,156,8)" fg:x="4957" fg:w="3"/><text x="59.4084%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.1250%" y="517" width="0.0119%" height="15" fill="rgb(219,173,1)" fg:x="4960" fg:w="1"/><text x="59.4441%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="59.1250%" y="501" width="0.0119%" height="15" fill="rgb(227,42,24)" fg:x="4960" fg:w="1"/><text x="59.4441%" y="511.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="59.1250%" y="485" width="0.0119%" height="15" fill="rgb(253,219,50)" fg:x="4960" fg:w="1"/><text x="59.4441%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="59.1250%" y="533" width="0.0238%" height="15" fill="rgb(215,191,54)" fg:x="4960" fg:w="2"/><text x="59.4441%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="59.1370%" y="517" width="0.0119%" height="15" fill="rgb(238,83,12)" fg:x="4961" fg:w="1"/><text x="59.4561%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.1370%" y="501" width="0.0119%" height="15" fill="rgb(205,124,9)" fg:x="4961" fg:w="1"/><text x="59.4561%" y="511.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="59.1370%" y="485" width="0.0119%" height="15" fill="rgb(253,174,7)" fg:x="4961" fg:w="1"/><text x="59.4561%" y="495.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="59.1370%" y="469" width="0.0119%" height="15" fill="rgb(206,134,49)" fg:x="4961" fg:w="1"/><text x="59.4561%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="59.0893%" y="709" width="0.0715%" height="15" fill="rgb(221,89,20)" fg:x="4957" fg:w="6"/><text x="59.4084%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="59.0893%" y="693" width="0.0715%" height="15" fill="rgb(240,205,13)" fg:x="4957" fg:w="6"/><text x="59.4084%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="59.0893%" y="677" width="0.0715%" height="15" fill="rgb(237,174,32)" fg:x="4957" fg:w="6"/><text x="59.4084%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="59.0893%" y="661" width="0.0715%" height="15" fill="rgb(226,12,15)" fg:x="4957" fg:w="6"/><text x="59.4084%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="59.0893%" y="645" width="0.0715%" height="15" fill="rgb(245,160,52)" fg:x="4957" fg:w="6"/><text x="59.4084%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="59.0893%" y="629" width="0.0715%" height="15" fill="rgb(253,80,21)" fg:x="4957" fg:w="6"/><text x="59.4084%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="59.0893%" y="613" width="0.0715%" height="15" fill="rgb(231,225,22)" fg:x="4957" fg:w="6"/><text x="59.4084%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="59.1250%" y="597" width="0.0358%" height="15" fill="rgb(253,185,12)" fg:x="4960" fg:w="3"/><text x="59.4441%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="59.1250%" y="581" width="0.0358%" height="15" fill="rgb(234,197,21)" fg:x="4960" fg:w="3"/><text x="59.4441%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="59.1250%" y="565" width="0.0358%" height="15" fill="rgb(210,47,30)" fg:x="4960" fg:w="3"/><text x="59.4441%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="59.1250%" y="549" width="0.0358%" height="15" fill="rgb(246,139,27)" fg:x="4960" fg:w="3"/><text x="59.4441%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.1489%" y="533" width="0.0119%" height="15" fill="rgb(226,130,16)" fg:x="4962" fg:w="1"/><text x="59.4680%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.1727%" y="629" width="0.0119%" height="15" fill="rgb(237,208,20)" fg:x="4964" fg:w="1"/><text x="59.4918%" y="639.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="59.1727%" y="613" width="0.0119%" height="15" fill="rgb(245,186,28)" fg:x="4964" fg:w="1"/><text x="59.4918%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="59.1727%" y="645" width="0.0238%" height="15" fill="rgb(238,105,39)" fg:x="4964" fg:w="2"/><text x="59.4918%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="59.1846%" y="629" width="0.0119%" height="15" fill="rgb(253,228,11)" fg:x="4965" fg:w="1"/><text x="59.5037%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.1846%" y="613" width="0.0119%" height="15" fill="rgb(224,136,38)" fg:x="4965" fg:w="1"/><text x="59.5037%" y="623.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="59.1846%" y="597" width="0.0119%" height="15" fill="rgb(211,3,25)" fg:x="4965" fg:w="1"/><text x="59.5037%" y="607.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="59.1846%" y="581" width="0.0119%" height="15" fill="rgb(238,66,34)" fg:x="4965" fg:w="1"/><text x="59.5037%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.1966%" y="581" width="0.0119%" height="15" fill="rgb(223,188,11)" fg:x="4966" fg:w="1"/><text x="59.5157%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.1966%" y="565" width="0.0119%" height="15" fill="rgb(221,10,35)" fg:x="4966" fg:w="1"/><text x="59.5157%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="59.1966%" y="549" width="0.0119%" height="15" fill="rgb(223,18,44)" fg:x="4966" fg:w="1"/><text x="59.5157%" y="559.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="59.2204%" y="533" width="0.0238%" height="15" fill="rgb(220,97,41)" fg:x="4968" fg:w="2"/><text x="59.5395%" y="543.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="59.2204%" y="517" width="0.0238%" height="15" fill="rgb(206,95,45)" fg:x="4968" fg:w="2"/><text x="59.5395%" y="527.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="59.2204%" y="501" width="0.0238%" height="15" fill="rgb(209,96,13)" fg:x="4968" fg:w="2"/><text x="59.5395%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.2442%" y="453" width="0.0119%" height="15" fill="rgb(237,39,34)" fg:x="4970" fg:w="1"/><text x="59.5633%" y="463.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.2442%" y="437" width="0.0119%" height="15" fill="rgb(213,49,47)" fg:x="4970" fg:w="1"/><text x="59.5633%" y="447.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function@plt (1 samples, 0.01%)</title><rect x="59.2442%" y="421" width="0.0119%" height="15" fill="rgb(205,107,27)" fg:x="4970" fg:w="1"/><text x="59.5633%" y="431.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="59.2562%" y="405" width="0.0238%" height="15" fill="rgb(212,142,9)" fg:x="4971" fg:w="2"/><text x="59.5753%" y="415.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="59.2562%" y="389" width="0.0238%" height="15" fill="rgb(226,182,0)" fg:x="4971" fg:w="2"/><text x="59.5753%" y="399.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="59.2562%" y="373" width="0.0238%" height="15" fill="rgb(231,3,53)" fg:x="4971" fg:w="2"/><text x="59.5753%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="59.2562%" y="421" width="0.0358%" height="15" fill="rgb(246,111,28)" fg:x="4971" fg:w="3"/><text x="59.5753%" y="431.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.2800%" y="405" width="0.0119%" height="15" fill="rgb(254,183,7)" fg:x="4973" fg:w="1"/><text x="59.5991%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.2800%" y="389" width="0.0119%" height="15" fill="rgb(247,177,28)" fg:x="4973" fg:w="1"/><text x="59.5991%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.2919%" y="389" width="0.0119%" height="15" fill="rgb(244,43,1)" fg:x="4974" fg:w="1"/><text x="59.6110%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.2919%" y="373" width="0.0119%" height="15" fill="rgb(207,2,35)" fg:x="4974" fg:w="1"/><text x="59.6110%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="59.2919%" y="357" width="0.0119%" height="15" fill="rgb(213,83,22)" fg:x="4974" fg:w="1"/><text x="59.6110%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.3039%" y="341" width="0.0119%" height="15" fill="rgb(246,212,13)" fg:x="4975" fg:w="1"/><text x="59.6230%" y="351.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="59.3039%" y="325" width="0.0119%" height="15" fill="rgb(213,127,46)" fg:x="4975" fg:w="1"/><text x="59.6230%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="59.3039%" y="357" width="0.0238%" height="15" fill="rgb(219,215,39)" fg:x="4975" fg:w="2"/><text x="59.6230%" y="367.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.3158%" y="341" width="0.0119%" height="15" fill="rgb(227,99,17)" fg:x="4976" fg:w="1"/><text x="59.6349%" y="351.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="59.3158%" y="325" width="0.0119%" height="15" fill="rgb(208,155,18)" fg:x="4976" fg:w="1"/><text x="59.6349%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="59.1966%" y="645" width="0.1430%" height="15" fill="rgb(223,204,38)" fg:x="4966" fg:w="12"/><text x="59.5157%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="59.1966%" y="629" width="0.1430%" height="15" fill="rgb(212,114,21)" fg:x="4966" fg:w="12"/><text x="59.5157%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="59.1966%" y="613" width="0.1430%" height="15" fill="rgb(250,74,13)" fg:x="4966" fg:w="12"/><text x="59.5157%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="59.1966%" y="597" width="0.1430%" height="15" fill="rgb(234,7,1)" fg:x="4966" fg:w="12"/><text x="59.5157%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="59.2085%" y="581" width="0.1311%" height="15" fill="rgb(207,138,31)" fg:x="4967" fg:w="11"/><text x="59.5276%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="59.2085%" y="565" width="0.1311%" height="15" fill="rgb(215,186,42)" fg:x="4967" fg:w="11"/><text x="59.5276%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="59.2085%" y="549" width="0.1311%" height="15" fill="rgb(229,205,49)" fg:x="4967" fg:w="11"/><text x="59.5276%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="59.2442%" y="533" width="0.0954%" height="15" fill="rgb(216,156,32)" fg:x="4970" fg:w="8"/><text x="59.5633%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="59.2442%" y="517" width="0.0954%" height="15" fill="rgb(238,7,21)" fg:x="4970" fg:w="8"/><text x="59.5633%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="59.2442%" y="501" width="0.0954%" height="15" fill="rgb(249,190,22)" fg:x="4970" fg:w="8"/><text x="59.5633%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="59.2442%" y="485" width="0.0954%" height="15" fill="rgb(253,51,31)" fg:x="4970" fg:w="8"/><text x="59.5633%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="59.2442%" y="469" width="0.0954%" height="15" fill="rgb(237,90,54)" fg:x="4970" fg:w="8"/><text x="59.5633%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="59.2562%" y="453" width="0.0834%" height="15" fill="rgb(250,214,33)" fg:x="4971" fg:w="7"/><text x="59.5753%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="59.2562%" y="437" width="0.0834%" height="15" fill="rgb(237,10,49)" fg:x="4971" fg:w="7"/><text x="59.5753%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="59.2919%" y="421" width="0.0477%" height="15" fill="rgb(241,56,36)" fg:x="4974" fg:w="4"/><text x="59.6110%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="59.2919%" y="405" width="0.0477%" height="15" fill="rgb(227,164,12)" fg:x="4974" fg:w="4"/><text x="59.6110%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="59.3039%" y="389" width="0.0358%" height="15" fill="rgb(249,149,35)" fg:x="4975" fg:w="3"/><text x="59.6230%" y="399.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="59.3039%" y="373" width="0.0358%" height="15" fill="rgb(238,227,50)" fg:x="4975" fg:w="3"/><text x="59.6230%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.3277%" y="357" width="0.0119%" height="15" fill="rgb(235,102,45)" fg:x="4977" fg:w="1"/><text x="59.6468%" y="367.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="59.3277%" y="341" width="0.0119%" height="15" fill="rgb(211,10,38)" fg:x="4977" fg:w="1"/><text x="59.6468%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.3277%" y="325" width="0.0119%" height="15" fill="rgb(219,77,48)" fg:x="4977" fg:w="1"/><text x="59.6468%" y="335.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.3277%" y="309" width="0.0119%" height="15" fill="rgb(246,6,15)" fg:x="4977" fg:w="1"/><text x="59.6468%" y="319.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.3277%" y="293" width="0.0119%" height="15" fill="rgb(207,220,2)" fg:x="4977" fg:w="1"/><text x="59.6468%" y="303.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="59.3277%" y="277" width="0.0119%" height="15" fill="rgb(242,48,14)" fg:x="4977" fg:w="1"/><text x="59.6468%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="59.1727%" y="677" width="0.2026%" height="15" fill="rgb(218,19,27)" fg:x="4964" fg:w="17"/><text x="59.4918%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (17 samples, 0.20%)</title><rect x="59.1727%" y="661" width="0.2026%" height="15" fill="rgb(228,0,35)" fg:x="4964" fg:w="17"/><text x="59.4918%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="59.3396%" y="645" width="0.0358%" height="15" fill="rgb(244,142,54)" fg:x="4978" fg:w="3"/><text x="59.6587%" y="655.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="59.3396%" y="629" width="0.0358%" height="15" fill="rgb(243,217,40)" fg:x="4978" fg:w="3"/><text x="59.6587%" y="639.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="59.3396%" y="613" width="0.0358%" height="15" fill="rgb(207,114,16)" fg:x="4978" fg:w="3"/><text x="59.6587%" y="623.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="59.3396%" y="597" width="0.0358%" height="15" fill="rgb(224,33,25)" fg:x="4978" fg:w="3"/><text x="59.6587%" y="607.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="59.3754%" y="661" width="0.0477%" height="15" fill="rgb(230,93,54)" fg:x="4981" fg:w="4"/><text x="59.6945%" y="671.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="59.3754%" y="645" width="0.0477%" height="15" fill="rgb(224,56,24)" fg:x="4981" fg:w="4"/><text x="59.6945%" y="655.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="59.3873%" y="629" width="0.0358%" height="15" fill="rgb(235,189,50)" fg:x="4982" fg:w="3"/><text x="59.7064%" y="639.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.4231%" y="661" width="0.0119%" height="15" fill="rgb(242,173,8)" fg:x="4985" fg:w="1"/><text x="59.7422%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.4231%" y="645" width="0.0119%" height="15" fill="rgb(209,206,10)" fg:x="4985" fg:w="1"/><text x="59.7422%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="59.4231%" y="629" width="0.0119%" height="15" fill="rgb(213,182,44)" fg:x="4985" fg:w="1"/><text x="59.7422%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="59.4469%" y="597" width="0.0477%" height="15" fill="rgb(243,51,15)" fg:x="4987" fg:w="4"/><text x="59.7660%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="59.4469%" y="581" width="0.0477%" height="15" fill="rgb(241,13,14)" fg:x="4987" fg:w="4"/><text x="59.7660%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="59.4469%" y="565" width="0.0477%" height="15" fill="rgb(239,147,24)" fg:x="4987" fg:w="4"/><text x="59.7660%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="59.4588%" y="549" width="0.0358%" height="15" fill="rgb(223,129,16)" fg:x="4988" fg:w="3"/><text x="59.7779%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="59.4588%" y="533" width="0.0358%" height="15" fill="rgb(209,169,13)" fg:x="4988" fg:w="3"/><text x="59.7779%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="59.4707%" y="517" width="0.0238%" height="15" fill="rgb(235,159,41)" fg:x="4989" fg:w="2"/><text x="59.7898%" y="527.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="59.4707%" y="501" width="0.0238%" height="15" fill="rgb(223,219,48)" fg:x="4989" fg:w="2"/><text x="59.7898%" y="511.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="59.4707%" y="485" width="0.0238%" height="15" fill="rgb(236,80,13)" fg:x="4989" fg:w="2"/><text x="59.7898%" y="495.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="59.4707%" y="469" width="0.0238%" height="15" fill="rgb(213,5,6)" fg:x="4989" fg:w="2"/><text x="59.7898%" y="479.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="59.4946%" y="469" width="0.0238%" height="15" fill="rgb(205,59,21)" fg:x="4991" fg:w="2"/><text x="59.8137%" y="479.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="59.4946%" y="453" width="0.0238%" height="15" fill="rgb(247,137,35)" fg:x="4991" fg:w="2"/><text x="59.8137%" y="463.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="59.5065%" y="437" width="0.0119%" height="15" fill="rgb(242,208,28)" fg:x="4992" fg:w="1"/><text x="59.8256%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.5184%" y="405" width="0.0119%" height="15" fill="rgb(245,62,25)" fg:x="4993" fg:w="1"/><text x="59.8375%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="59.5184%" y="389" width="0.0119%" height="15" fill="rgb(233,99,54)" fg:x="4993" fg:w="1"/><text x="59.8375%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="59.4469%" y="613" width="0.1073%" height="15" fill="rgb(213,10,37)" fg:x="4987" fg:w="9"/><text x="59.7660%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="59.4946%" y="597" width="0.0596%" height="15" fill="rgb(235,143,30)" fg:x="4991" fg:w="5"/><text x="59.8137%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="59.4946%" y="581" width="0.0596%" height="15" fill="rgb(250,146,33)" fg:x="4991" fg:w="5"/><text x="59.8137%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="59.4946%" y="565" width="0.0596%" height="15" fill="rgb(226,198,42)" fg:x="4991" fg:w="5"/><text x="59.8137%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="59.4946%" y="549" width="0.0596%" height="15" fill="rgb(222,55,6)" fg:x="4991" fg:w="5"/><text x="59.8137%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="59.4946%" y="533" width="0.0596%" height="15" fill="rgb(213,224,31)" fg:x="4991" fg:w="5"/><text x="59.8137%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="59.4946%" y="517" width="0.0596%" height="15" fill="rgb(226,103,35)" fg:x="4991" fg:w="5"/><text x="59.8137%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="59.4946%" y="501" width="0.0596%" height="15" fill="rgb(205,66,45)" fg:x="4991" fg:w="5"/><text x="59.8137%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="59.4946%" y="485" width="0.0596%" height="15" fill="rgb(226,51,42)" fg:x="4991" fg:w="5"/><text x="59.8137%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="59.5184%" y="469" width="0.0358%" height="15" fill="rgb(206,69,1)" fg:x="4993" fg:w="3"/><text x="59.8375%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="59.5184%" y="453" width="0.0358%" height="15" fill="rgb(213,228,47)" fg:x="4993" fg:w="3"/><text x="59.8375%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="59.5184%" y="437" width="0.0358%" height="15" fill="rgb(224,204,18)" fg:x="4993" fg:w="3"/><text x="59.8375%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="59.5184%" y="421" width="0.0358%" height="15" fill="rgb(253,187,47)" fg:x="4993" fg:w="3"/><text x="59.8375%" y="431.50"/></g><g><title>operator new@plt (2 samples, 0.02%)</title><rect x="59.5303%" y="405" width="0.0238%" height="15" fill="rgb(232,61,2)" fg:x="4994" fg:w="2"/><text x="59.8494%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="59.4350%" y="645" width="0.1430%" height="15" fill="rgb(213,132,35)" fg:x="4986" fg:w="12"/><text x="59.7541%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="59.4350%" y="629" width="0.1430%" height="15" fill="rgb(247,33,21)" fg:x="4986" fg:w="12"/><text x="59.7541%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="59.5542%" y="613" width="0.0238%" height="15" fill="rgb(233,71,46)" fg:x="4996" fg:w="2"/><text x="59.8733%" y="623.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="59.5542%" y="597" width="0.0238%" height="15" fill="rgb(222,173,43)" fg:x="4996" fg:w="2"/><text x="59.8733%" y="607.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="59.5542%" y="581" width="0.0238%" height="15" fill="rgb(249,218,47)" fg:x="4996" fg:w="2"/><text x="59.8733%" y="591.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="59.5661%" y="565" width="0.0119%" height="15" fill="rgb(254,185,48)" fg:x="4997" fg:w="1"/><text x="59.8852%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.5899%" y="581" width="0.0119%" height="15" fill="rgb(252,165,50)" fg:x="4999" fg:w="1"/><text x="59.9090%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="59.5899%" y="565" width="0.0119%" height="15" fill="rgb(206,219,6)" fg:x="4999" fg:w="1"/><text x="59.9090%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.5899%" y="549" width="0.0119%" height="15" fill="rgb(212,212,45)" fg:x="4999" fg:w="1"/><text x="59.9090%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="59.5899%" y="533" width="0.0119%" height="15" fill="rgb(221,31,9)" fg:x="4999" fg:w="1"/><text x="59.9090%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.5899%" y="517" width="0.0119%" height="15" fill="rgb(234,198,39)" fg:x="4999" fg:w="1"/><text x="59.9090%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="59.5899%" y="501" width="0.0119%" height="15" fill="rgb(252,145,46)" fg:x="4999" fg:w="1"/><text x="59.9090%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.5899%" y="485" width="0.0119%" height="15" fill="rgb(237,149,0)" fg:x="4999" fg:w="1"/><text x="59.9090%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.5899%" y="469" width="0.0119%" height="15" fill="rgb(229,65,5)" fg:x="4999" fg:w="1"/><text x="59.9090%" y="479.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="59.5899%" y="453" width="0.0119%" height="15" fill="rgb(235,60,36)" fg:x="4999" fg:w="1"/><text x="59.9090%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.5899%" y="437" width="0.0119%" height="15" fill="rgb(222,47,18)" fg:x="4999" fg:w="1"/><text x="59.9090%" y="447.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="59.5899%" y="421" width="0.0119%" height="15" fill="rgb(235,114,22)" fg:x="4999" fg:w="1"/><text x="59.9090%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.5899%" y="405" width="0.0119%" height="15" fill="rgb(209,167,11)" fg:x="4999" fg:w="1"/><text x="59.9090%" y="415.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="59.5899%" y="389" width="0.0119%" height="15" fill="rgb(251,73,18)" fg:x="4999" fg:w="1"/><text x="59.9090%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.6138%" y="517" width="0.0119%" height="15" fill="rgb(217,60,17)" fg:x="5001" fg:w="1"/><text x="59.9329%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="59.6138%" y="501" width="0.0119%" height="15" fill="rgb(224,36,37)" fg:x="5001" fg:w="1"/><text x="59.9329%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.6138%" y="485" width="0.0119%" height="15" fill="rgb(211,21,32)" fg:x="5001" fg:w="1"/><text x="59.9329%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.6138%" y="469" width="0.0119%" height="15" fill="rgb(231,55,48)" fg:x="5001" fg:w="1"/><text x="59.9329%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="59.6138%" y="453" width="0.0119%" height="15" fill="rgb(227,42,18)" fg:x="5001" fg:w="1"/><text x="59.9329%" y="463.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="59.6138%" y="437" width="0.0119%" height="15" fill="rgb(217,2,27)" fg:x="5001" fg:w="1"/><text x="59.9329%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="59.5780%" y="597" width="0.0715%" height="15" fill="rgb(251,138,23)" fg:x="4998" fg:w="6"/><text x="59.8971%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="59.6019%" y="581" width="0.0477%" height="15" fill="rgb(226,184,11)" fg:x="5000" fg:w="4"/><text x="59.9210%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="59.6019%" y="565" width="0.0477%" height="15" fill="rgb(242,142,12)" fg:x="5000" fg:w="4"/><text x="59.9210%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="59.6019%" y="549" width="0.0477%" height="15" fill="rgb(234,187,18)" fg:x="5000" fg:w="4"/><text x="59.9210%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="59.6138%" y="533" width="0.0358%" height="15" fill="rgb(237,44,42)" fg:x="5001" fg:w="3"/><text x="59.9329%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="59.6257%" y="517" width="0.0238%" height="15" fill="rgb(211,90,23)" fg:x="5002" fg:w="2"/><text x="59.9448%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="59.6257%" y="501" width="0.0238%" height="15" fill="rgb(207,81,18)" fg:x="5002" fg:w="2"/><text x="59.9448%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="59.6257%" y="485" width="0.0238%" height="15" fill="rgb(222,107,28)" fg:x="5002" fg:w="2"/><text x="59.9448%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="59.6257%" y="469" width="0.0238%" height="15" fill="rgb(237,83,52)" fg:x="5002" fg:w="2"/><text x="59.9448%" y="479.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="59.6257%" y="453" width="0.0238%" height="15" fill="rgb(208,67,11)" fg:x="5002" fg:w="2"/><text x="59.9448%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="59.6257%" y="437" width="0.0238%" height="15" fill="rgb(249,157,49)" fg:x="5002" fg:w="2"/><text x="59.9448%" y="447.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="59.6257%" y="421" width="0.0238%" height="15" fill="rgb(243,200,1)" fg:x="5002" fg:w="2"/><text x="59.9448%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="59.6257%" y="405" width="0.0238%" height="15" fill="rgb(225,162,37)" fg:x="5002" fg:w="2"/><text x="59.9448%" y="415.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="59.6257%" y="389" width="0.0238%" height="15" fill="rgb(242,92,13)" fg:x="5002" fg:w="2"/><text x="59.9448%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="59.6257%" y="373" width="0.0238%" height="15" fill="rgb(220,43,36)" fg:x="5002" fg:w="2"/><text x="59.9448%" y="383.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="59.6257%" y="357" width="0.0238%" height="15" fill="rgb(213,165,48)" fg:x="5002" fg:w="2"/><text x="59.9448%" y="367.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="59.6257%" y="341" width="0.0238%" height="15" fill="rgb(227,200,9)" fg:x="5002" fg:w="2"/><text x="59.9448%" y="351.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="59.6257%" y="325" width="0.0238%" height="15" fill="rgb(221,222,28)" fg:x="5002" fg:w="2"/><text x="59.9448%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="59.5780%" y="613" width="0.0834%" height="15" fill="rgb(223,142,26)" fg:x="4998" fg:w="7"/><text x="59.8971%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="59.6495%" y="597" width="0.0119%" height="15" fill="rgb(243,46,9)" fg:x="5004" fg:w="1"/><text x="59.9686%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.6495%" y="581" width="0.0119%" height="15" fill="rgb(250,56,11)" fg:x="5004" fg:w="1"/><text x="59.9686%" y="591.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="59.6495%" y="565" width="0.0119%" height="15" fill="rgb(229,113,5)" fg:x="5004" fg:w="1"/><text x="59.9686%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.6615%" y="597" width="0.0119%" height="15" fill="rgb(244,108,28)" fg:x="5005" fg:w="1"/><text x="59.9806%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="59.6615%" y="581" width="0.0119%" height="15" fill="rgb(242,119,50)" fg:x="5005" fg:w="1"/><text x="59.9806%" y="591.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="59.6615%" y="565" width="0.0119%" height="15" fill="rgb(224,164,23)" fg:x="5005" fg:w="1"/><text x="59.9806%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.6734%" y="581" width="0.0119%" height="15" fill="rgb(214,227,44)" fg:x="5006" fg:w="1"/><text x="59.9925%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="59.6734%" y="565" width="0.0119%" height="15" fill="rgb(238,202,4)" fg:x="5006" fg:w="1"/><text x="59.9925%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.6734%" y="549" width="0.0119%" height="15" fill="rgb(213,190,30)" fg:x="5006" fg:w="1"/><text x="59.9925%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.6734%" y="533" width="0.0119%" height="15" fill="rgb(239,15,2)" fg:x="5006" fg:w="1"/><text x="59.9925%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="59.6734%" y="517" width="0.0119%" height="15" fill="rgb(249,229,4)" fg:x="5006" fg:w="1"/><text x="59.9925%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.6853%" y="533" width="0.0119%" height="15" fill="rgb(239,75,44)" fg:x="5007" fg:w="1"/><text x="60.0044%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="59.6853%" y="517" width="0.0119%" height="15" fill="rgb(251,206,23)" fg:x="5007" fg:w="1"/><text x="60.0044%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="59.6615%" y="613" width="0.0834%" height="15" fill="rgb(215,208,0)" fg:x="5005" fg:w="7"/><text x="59.9806%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="59.6734%" y="597" width="0.0715%" height="15" fill="rgb(230,75,50)" fg:x="5006" fg:w="6"/><text x="59.9925%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="59.6853%" y="581" width="0.0596%" height="15" fill="rgb(246,180,39)" fg:x="5007" fg:w="5"/><text x="60.0044%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="59.6853%" y="565" width="0.0596%" height="15" fill="rgb(249,175,24)" fg:x="5007" fg:w="5"/><text x="60.0044%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="59.6853%" y="549" width="0.0596%" height="15" fill="rgb(247,176,22)" fg:x="5007" fg:w="5"/><text x="60.0044%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="59.6972%" y="533" width="0.0477%" height="15" fill="rgb(241,100,24)" fg:x="5008" fg:w="4"/><text x="60.0163%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="59.6972%" y="517" width="0.0477%" height="15" fill="rgb(233,4,35)" fg:x="5008" fg:w="4"/><text x="60.0163%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="59.6972%" y="501" width="0.0477%" height="15" fill="rgb(211,164,46)" fg:x="5008" fg:w="4"/><text x="60.0163%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="59.6972%" y="485" width="0.0477%" height="15" fill="rgb(242,99,53)" fg:x="5008" fg:w="4"/><text x="60.0163%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="59.6972%" y="469" width="0.0477%" height="15" fill="rgb(243,45,33)" fg:x="5008" fg:w="4"/><text x="60.0163%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="59.6972%" y="453" width="0.0477%" height="15" fill="rgb(217,55,21)" fg:x="5008" fg:w="4"/><text x="60.0163%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="59.6972%" y="437" width="0.0477%" height="15" fill="rgb(245,145,46)" fg:x="5008" fg:w="4"/><text x="60.0163%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="59.6972%" y="421" width="0.0477%" height="15" fill="rgb(215,112,45)" fg:x="5008" fg:w="4"/><text x="60.0163%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="59.7091%" y="405" width="0.0358%" height="15" fill="rgb(228,104,16)" fg:x="5009" fg:w="3"/><text x="60.0282%" y="415.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="59.7091%" y="389" width="0.0358%" height="15" fill="rgb(239,186,38)" fg:x="5009" fg:w="3"/><text x="60.0282%" y="399.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="59.7091%" y="373" width="0.0358%" height="15" fill="rgb(228,38,35)" fg:x="5009" fg:w="3"/><text x="60.0282%" y="383.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="59.7211%" y="357" width="0.0238%" height="15" fill="rgb(251,42,40)" fg:x="5010" fg:w="2"/><text x="60.0402%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (33 samples, 0.39%)</title><rect x="59.3754%" y="677" width="0.3934%" height="15" fill="rgb(210,51,19)" fg:x="4981" fg:w="33"/><text x="59.6945%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (28 samples, 0.33%)</title><rect x="59.4350%" y="661" width="0.3338%" height="15" fill="rgb(236,94,42)" fg:x="4986" fg:w="28"/><text x="59.7541%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="59.5780%" y="645" width="0.1907%" height="15" fill="rgb(239,167,16)" fg:x="4998" fg:w="16"/><text x="59.8971%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (16 samples, 0.19%)</title><rect x="59.5780%" y="629" width="0.1907%" height="15" fill="rgb(252,175,31)" fg:x="4998" fg:w="16"/><text x="59.8971%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="59.7449%" y="613" width="0.0238%" height="15" fill="rgb(206,166,30)" fg:x="5012" fg:w="2"/><text x="60.0640%" y="623.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="59.7449%" y="597" width="0.0238%" height="15" fill="rgb(206,209,37)" fg:x="5012" fg:w="2"/><text x="60.0640%" y="607.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="59.7449%" y="581" width="0.0238%" height="15" fill="rgb(226,91,4)" fg:x="5012" fg:w="2"/><text x="60.0640%" y="591.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="59.7449%" y="565" width="0.0238%" height="15" fill="rgb(222,167,0)" fg:x="5012" fg:w="2"/><text x="60.0640%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.7687%" y="517" width="0.0119%" height="15" fill="rgb(211,70,14)" fg:x="5014" fg:w="1"/><text x="60.0878%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="59.7687%" y="501" width="0.0119%" height="15" fill="rgb(214,84,42)" fg:x="5014" fg:w="1"/><text x="60.0878%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.7807%" y="469" width="0.0119%" height="15" fill="rgb(235,157,37)" fg:x="5015" fg:w="1"/><text x="60.0998%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="59.7687%" y="677" width="0.0358%" height="15" fill="rgb(225,13,6)" fg:x="5014" fg:w="3"/><text x="60.0878%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="59.7687%" y="661" width="0.0358%" height="15" fill="rgb(205,202,1)" fg:x="5014" fg:w="3"/><text x="60.0878%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="59.7687%" y="645" width="0.0358%" height="15" fill="rgb(232,195,26)" fg:x="5014" fg:w="3"/><text x="60.0878%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="59.7687%" y="629" width="0.0358%" height="15" fill="rgb(208,102,26)" fg:x="5014" fg:w="3"/><text x="60.0878%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="59.7687%" y="613" width="0.0358%" height="15" fill="rgb(215,41,39)" fg:x="5014" fg:w="3"/><text x="60.0878%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="59.7687%" y="597" width="0.0358%" height="15" fill="rgb(247,139,11)" fg:x="5014" fg:w="3"/><text x="60.0878%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="59.7687%" y="581" width="0.0358%" height="15" fill="rgb(243,99,6)" fg:x="5014" fg:w="3"/><text x="60.0878%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="59.7687%" y="565" width="0.0358%" height="15" fill="rgb(230,168,48)" fg:x="5014" fg:w="3"/><text x="60.0878%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="59.7687%" y="549" width="0.0358%" height="15" fill="rgb(238,227,13)" fg:x="5014" fg:w="3"/><text x="60.0878%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="59.7687%" y="533" width="0.0358%" height="15" fill="rgb(209,109,13)" fg:x="5014" fg:w="3"/><text x="60.0878%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="59.7807%" y="517" width="0.0238%" height="15" fill="rgb(228,195,1)" fg:x="5015" fg:w="2"/><text x="60.0998%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="59.7807%" y="501" width="0.0238%" height="15" fill="rgb(230,218,0)" fg:x="5015" fg:w="2"/><text x="60.0998%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="59.7807%" y="485" width="0.0238%" height="15" fill="rgb(206,1,45)" fg:x="5015" fg:w="2"/><text x="60.0998%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.7926%" y="469" width="0.0119%" height="15" fill="rgb(209,124,26)" fg:x="5016" fg:w="1"/><text x="60.1117%" y="479.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="59.7926%" y="453" width="0.0119%" height="15" fill="rgb(220,59,8)" fg:x="5016" fg:w="1"/><text x="60.1117%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.8045%" y="645" width="0.0119%" height="15" fill="rgb(251,41,37)" fg:x="5017" fg:w="1"/><text x="60.1236%" y="655.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.8403%" y="565" width="0.0119%" height="15" fill="rgb(239,152,21)" fg:x="5020" fg:w="1"/><text x="60.1594%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="59.8403%" y="549" width="0.0119%" height="15" fill="rgb(226,32,1)" fg:x="5020" fg:w="1"/><text x="60.1594%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.8522%" y="549" width="0.0119%" height="15" fill="rgb(230,154,36)" fg:x="5021" fg:w="1"/><text x="60.1713%" y="559.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.8522%" y="533" width="0.0119%" height="15" fill="rgb(208,228,43)" fg:x="5021" fg:w="1"/><text x="60.1713%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="59.8522%" y="517" width="0.0119%" height="15" fill="rgb(214,203,3)" fg:x="5021" fg:w="1"/><text x="60.1713%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.8522%" y="501" width="0.0119%" height="15" fill="rgb(207,149,29)" fg:x="5021" fg:w="1"/><text x="60.1713%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.8522%" y="485" width="0.0119%" height="15" fill="rgb(250,105,7)" fg:x="5021" fg:w="1"/><text x="60.1713%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="59.8522%" y="469" width="0.0119%" height="15" fill="rgb(232,222,16)" fg:x="5021" fg:w="1"/><text x="60.1713%" y="479.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="59.8522%" y="453" width="0.0119%" height="15" fill="rgb(209,32,24)" fg:x="5021" fg:w="1"/><text x="60.1713%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="59.8283%" y="613" width="0.0477%" height="15" fill="rgb(225,13,6)" fg:x="5019" fg:w="4"/><text x="60.1474%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="59.8283%" y="597" width="0.0477%" height="15" fill="rgb(245,226,26)" fg:x="5019" fg:w="4"/><text x="60.1474%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="59.8403%" y="581" width="0.0358%" height="15" fill="rgb(229,178,27)" fg:x="5020" fg:w="3"/><text x="60.1594%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="59.8522%" y="565" width="0.0238%" height="15" fill="rgb(205,227,28)" fg:x="5021" fg:w="2"/><text x="60.1713%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.8641%" y="549" width="0.0119%" height="15" fill="rgb(210,191,45)" fg:x="5022" fg:w="1"/><text x="60.1832%" y="559.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="59.8641%" y="533" width="0.0119%" height="15" fill="rgb(206,124,16)" fg:x="5022" fg:w="1"/><text x="60.1832%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.8760%" y="581" width="0.0119%" height="15" fill="rgb(210,162,0)" fg:x="5023" fg:w="1"/><text x="60.1951%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.8760%" y="565" width="0.0119%" height="15" fill="rgb(211,54,38)" fg:x="5023" fg:w="1"/><text x="60.1951%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="59.8760%" y="549" width="0.0119%" height="15" fill="rgb(248,192,3)" fg:x="5023" fg:w="1"/><text x="60.1951%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="59.8879%" y="549" width="0.0238%" height="15" fill="rgb(233,187,18)" fg:x="5024" fg:w="2"/><text x="60.2070%" y="559.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="59.8879%" y="533" width="0.0238%" height="15" fill="rgb(237,208,14)" fg:x="5024" fg:w="2"/><text x="60.2070%" y="543.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="59.8999%" y="517" width="0.0119%" height="15" fill="rgb(212,77,1)" fg:x="5025" fg:w="1"/><text x="60.2190%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="59.9118%" y="533" width="0.0119%" height="15" fill="rgb(210,163,22)" fg:x="5026" fg:w="1"/><text x="60.2309%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="59.9118%" y="517" width="0.0119%" height="15" fill="rgb(250,58,28)" fg:x="5026" fg:w="1"/><text x="60.2309%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="59.9356%" y="453" width="0.0596%" height="15" fill="rgb(254,28,41)" fg:x="5028" fg:w="5"/><text x="60.2547%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="59.9356%" y="437" width="0.0596%" height="15" fill="rgb(237,162,36)" fg:x="5028" fg:w="5"/><text x="60.2547%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="59.9356%" y="421" width="0.0596%" height="15" fill="rgb(232,56,6)" fg:x="5028" fg:w="5"/><text x="60.2547%" y="431.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (5 samples, 0.06%)</title><rect x="59.9356%" y="405" width="0.0596%" height="15" fill="rgb(216,127,42)" fg:x="5028" fg:w="5"/><text x="60.2547%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="59.9356%" y="389" width="0.0596%" height="15" fill="rgb(241,69,15)" fg:x="5028" fg:w="5"/><text x="60.2547%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="59.9356%" y="373" width="0.0596%" height="15" fill="rgb(227,180,19)" fg:x="5028" fg:w="5"/><text x="60.2547%" y="383.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="59.9356%" y="357" width="0.0596%" height="15" fill="rgb(231,188,29)" fg:x="5028" fg:w="5"/><text x="60.2547%" y="367.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="59.9356%" y="341" width="0.0596%" height="15" fill="rgb(224,176,27)" fg:x="5028" fg:w="5"/><text x="60.2547%" y="351.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="59.9356%" y="325" width="0.0596%" height="15" fill="rgb(249,214,19)" fg:x="5028" fg:w="5"/><text x="60.2547%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="59.9237%" y="533" width="0.0834%" height="15" fill="rgb(240,0,4)" fg:x="5027" fg:w="7"/><text x="60.2428%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="59.9237%" y="517" width="0.0834%" height="15" fill="rgb(233,28,41)" fg:x="5027" fg:w="7"/><text x="60.2428%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="59.9237%" y="501" width="0.0834%" height="15" fill="rgb(220,90,51)" fg:x="5027" fg:w="7"/><text x="60.2428%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="59.9237%" y="485" width="0.0834%" height="15" fill="rgb(250,52,22)" fg:x="5027" fg:w="7"/><text x="60.2428%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="59.9237%" y="469" width="0.0834%" height="15" fill="rgb(231,152,36)" fg:x="5027" fg:w="7"/><text x="60.2428%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.9952%" y="453" width="0.0119%" height="15" fill="rgb(250,218,4)" fg:x="5033" fg:w="1"/><text x="60.3143%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="59.9952%" y="437" width="0.0119%" height="15" fill="rgb(210,38,21)" fg:x="5033" fg:w="1"/><text x="60.3143%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="60.0072%" y="453" width="0.0238%" height="15" fill="rgb(230,75,13)" fg:x="5034" fg:w="2"/><text x="60.3263%" y="463.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="60.0072%" y="437" width="0.0238%" height="15" fill="rgb(250,68,53)" fg:x="5034" fg:w="2"/><text x="60.3263%" y="447.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="60.0072%" y="421" width="0.0238%" height="15" fill="rgb(250,210,16)" fg:x="5034" fg:w="2"/><text x="60.3263%" y="431.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="60.0072%" y="405" width="0.0238%" height="15" fill="rgb(240,132,5)" fg:x="5034" fg:w="2"/><text x="60.3263%" y="415.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="60.0072%" y="389" width="0.0238%" height="15" fill="rgb(222,148,48)" fg:x="5034" fg:w="2"/><text x="60.3263%" y="399.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="60.0310%" y="373" width="0.0238%" height="15" fill="rgb(247,181,24)" fg:x="5036" fg:w="2"/><text x="60.3501%" y="383.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="60.0310%" y="357" width="0.0238%" height="15" fill="rgb(239,5,31)" fg:x="5036" fg:w="2"/><text x="60.3501%" y="367.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="60.0429%" y="341" width="0.0119%" height="15" fill="rgb(241,152,38)" fg:x="5037" fg:w="1"/><text x="60.3620%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="59.9118%" y="549" width="0.1788%" height="15" fill="rgb(246,200,37)" fg:x="5026" fg:w="15"/><text x="60.2309%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="60.0072%" y="533" width="0.0834%" height="15" fill="rgb(243,210,26)" fg:x="5034" fg:w="7"/><text x="60.3263%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="60.0072%" y="517" width="0.0834%" height="15" fill="rgb(222,22,22)" fg:x="5034" fg:w="7"/><text x="60.3263%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="60.0072%" y="501" width="0.0834%" height="15" fill="rgb(208,129,28)" fg:x="5034" fg:w="7"/><text x="60.3263%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="60.0072%" y="485" width="0.0834%" height="15" fill="rgb(254,169,28)" fg:x="5034" fg:w="7"/><text x="60.3263%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="60.0072%" y="469" width="0.0834%" height="15" fill="rgb(225,45,17)" fg:x="5034" fg:w="7"/><text x="60.3263%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="60.0310%" y="453" width="0.0596%" height="15" fill="rgb(232,199,2)" fg:x="5036" fg:w="5"/><text x="60.3501%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="60.0310%" y="437" width="0.0596%" height="15" fill="rgb(235,33,40)" fg:x="5036" fg:w="5"/><text x="60.3501%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="60.0310%" y="421" width="0.0596%" height="15" fill="rgb(237,89,50)" fg:x="5036" fg:w="5"/><text x="60.3501%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="60.0310%" y="405" width="0.0596%" height="15" fill="rgb(238,126,5)" fg:x="5036" fg:w="5"/><text x="60.3501%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="60.0310%" y="389" width="0.0596%" height="15" fill="rgb(247,214,42)" fg:x="5036" fg:w="5"/><text x="60.3501%" y="399.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="60.0548%" y="373" width="0.0358%" height="15" fill="rgb(238,60,45)" fg:x="5038" fg:w="3"/><text x="60.3739%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="60.0548%" y="357" width="0.0358%" height="15" fill="rgb(225,69,44)" fg:x="5038" fg:w="3"/><text x="60.3739%" y="367.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="60.0548%" y="341" width="0.0358%" height="15" fill="rgb(241,13,44)" fg:x="5038" fg:w="3"/><text x="60.3739%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="60.0548%" y="325" width="0.0358%" height="15" fill="rgb(227,121,22)" fg:x="5038" fg:w="3"/><text x="60.3739%" y="335.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="60.0548%" y="309" width="0.0358%" height="15" fill="rgb(231,160,23)" fg:x="5038" fg:w="3"/><text x="60.3739%" y="319.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="60.0548%" y="293" width="0.0358%" height="15" fill="rgb(250,179,43)" fg:x="5038" fg:w="3"/><text x="60.3739%" y="303.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="60.0548%" y="277" width="0.0358%" height="15" fill="rgb(233,54,46)" fg:x="5038" fg:w="3"/><text x="60.3739%" y="287.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="60.0548%" y="261" width="0.0358%" height="15" fill="rgb(247,120,42)" fg:x="5038" fg:w="3"/><text x="60.3739%" y="271.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="60.0906%" y="533" width="0.0119%" height="15" fill="rgb(221,219,12)" fg:x="5041" fg:w="1"/><text x="60.4097%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="60.0906%" y="517" width="0.0119%" height="15" fill="rgb(211,126,8)" fg:x="5041" fg:w="1"/><text x="60.4097%" y="527.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="60.1025%" y="485" width="0.0358%" height="15" fill="rgb(218,154,33)" fg:x="5042" fg:w="3"/><text x="60.4216%" y="495.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="60.1025%" y="469" width="0.0358%" height="15" fill="rgb(212,199,16)" fg:x="5042" fg:w="3"/><text x="60.4216%" y="479.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="60.1025%" y="453" width="0.0358%" height="15" fill="rgb(236,215,46)" fg:x="5042" fg:w="3"/><text x="60.4216%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="60.1025%" y="517" width="0.0477%" height="15" fill="rgb(232,32,22)" fg:x="5042" fg:w="4"/><text x="60.4216%" y="527.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="60.1025%" y="501" width="0.0477%" height="15" fill="rgb(234,79,15)" fg:x="5042" fg:w="4"/><text x="60.4216%" y="511.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="60.1383%" y="485" width="0.0119%" height="15" fill="rgb(235,187,47)" fg:x="5045" fg:w="1"/><text x="60.4574%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="60.1502%" y="389" width="0.0119%" height="15" fill="rgb(244,69,37)" fg:x="5046" fg:w="1"/><text x="60.4693%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="60.1502%" y="373" width="0.0119%" height="15" fill="rgb(249,140,25)" fg:x="5046" fg:w="1"/><text x="60.4693%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="60.1502%" y="357" width="0.0119%" height="15" fill="rgb(213,69,8)" fg:x="5046" fg:w="1"/><text x="60.4693%" y="367.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="60.1502%" y="341" width="0.0119%" height="15" fill="rgb(220,136,2)" fg:x="5046" fg:w="1"/><text x="60.4693%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (27 samples, 0.32%)</title><rect x="59.8760%" y="613" width="0.3219%" height="15" fill="rgb(237,50,36)" fg:x="5023" fg:w="27"/><text x="60.1951%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (27 samples, 0.32%)</title><rect x="59.8760%" y="597" width="0.3219%" height="15" fill="rgb(226,18,11)" fg:x="5023" fg:w="27"/><text x="60.1951%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="59.8879%" y="581" width="0.3099%" height="15" fill="rgb(243,156,2)" fg:x="5024" fg:w="26"/><text x="60.2070%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (26 samples, 0.31%)</title><rect x="59.8879%" y="565" width="0.3099%" height="15" fill="rgb(218,8,34)" fg:x="5024" fg:w="26"/><text x="60.2070%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="60.0906%" y="549" width="0.1073%" height="15" fill="rgb(250,94,35)" fg:x="5041" fg:w="9"/><text x="60.4097%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="60.1025%" y="533" width="0.0954%" height="15" fill="rgb(229,127,21)" fg:x="5042" fg:w="8"/><text x="60.4216%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="60.1502%" y="517" width="0.0477%" height="15" fill="rgb(234,49,5)" fg:x="5046" fg:w="4"/><text x="60.4693%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="60.1502%" y="501" width="0.0477%" height="15" fill="rgb(248,12,16)" fg:x="5046" fg:w="4"/><text x="60.4693%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="60.1502%" y="485" width="0.0477%" height="15" fill="rgb(208,220,31)" fg:x="5046" fg:w="4"/><text x="60.4693%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="60.1502%" y="469" width="0.0477%" height="15" fill="rgb(243,184,0)" fg:x="5046" fg:w="4"/><text x="60.4693%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="60.1502%" y="453" width="0.0477%" height="15" fill="rgb(217,38,21)" fg:x="5046" fg:w="4"/><text x="60.4693%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="60.1502%" y="437" width="0.0477%" height="15" fill="rgb(239,120,45)" fg:x="5046" fg:w="4"/><text x="60.4693%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="60.1502%" y="421" width="0.0477%" height="15" fill="rgb(235,33,2)" fg:x="5046" fg:w="4"/><text x="60.4693%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="60.1502%" y="405" width="0.0477%" height="15" fill="rgb(249,161,5)" fg:x="5046" fg:w="4"/><text x="60.4693%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="60.1621%" y="389" width="0.0358%" height="15" fill="rgb(250,165,48)" fg:x="5047" fg:w="3"/><text x="60.4812%" y="399.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="60.1621%" y="373" width="0.0358%" height="15" fill="rgb(221,23,45)" fg:x="5047" fg:w="3"/><text x="60.4812%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="60.1621%" y="357" width="0.0358%" height="15" fill="rgb(217,108,46)" fg:x="5047" fg:w="3"/><text x="60.4812%" y="367.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="60.1621%" y="341" width="0.0358%" height="15" fill="rgb(254,26,35)" fg:x="5047" fg:w="3"/><text x="60.4812%" y="351.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="60.1621%" y="325" width="0.0358%" height="15" fill="rgb(218,223,28)" fg:x="5047" fg:w="3"/><text x="60.4812%" y="335.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="60.1621%" y="309" width="0.0358%" height="15" fill="rgb(242,27,47)" fg:x="5047" fg:w="3"/><text x="60.4812%" y="319.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (34 samples, 0.41%)</title><rect x="59.8164%" y="629" width="0.4053%" height="15" fill="rgb(218,39,35)" fg:x="5018" fg:w="34"/><text x="60.1355%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="60.1979%" y="613" width="0.0238%" height="15" fill="rgb(232,127,16)" fg:x="5050" fg:w="2"/><text x="60.5170%" y="623.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="60.1979%" y="597" width="0.0238%" height="15" fill="rgb(231,219,51)" fg:x="5050" fg:w="2"/><text x="60.5170%" y="607.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="60.1979%" y="581" width="0.0238%" height="15" fill="rgb(217,220,46)" fg:x="5050" fg:w="2"/><text x="60.5170%" y="591.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="60.1979%" y="565" width="0.0238%" height="15" fill="rgb(230,75,1)" fg:x="5050" fg:w="2"/><text x="60.5170%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), not_(std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="60.2217%" y="549" width="0.0119%" height="15" fill="rgb(218,2,8)" fg:x="5052" fg:w="1"/><text x="60.5408%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="60.2217%" y="533" width="0.0119%" height="15" fill="rgb(206,111,30)" fg:x="5052" fg:w="1"/><text x="60.5408%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="60.2217%" y="517" width="0.0119%" height="15" fill="rgb(209,135,6)" fg:x="5052" fg:w="1"/><text x="60.5408%" y="527.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="60.2336%" y="533" width="0.0358%" height="15" fill="rgb(205,169,10)" fg:x="5053" fg:w="3"/><text x="60.5527%" y="543.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="60.2336%" y="517" width="0.0358%" height="15" fill="rgb(212,204,38)" fg:x="5053" fg:w="3"/><text x="60.5527%" y="527.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="60.2336%" y="501" width="0.0358%" height="15" fill="rgb(205,199,14)" fg:x="5053" fg:w="3"/><text x="60.5527%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (42 samples, 0.50%)</title><rect x="59.8164%" y="645" width="0.5007%" height="15" fill="rgb(212,4,6)" fg:x="5018" fg:w="42"/><text x="60.1355%" y="655.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="60.2217%" y="629" width="0.0954%" height="15" fill="rgb(250,15,10)" fg:x="5052" fg:w="8"/><text x="60.5408%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="60.2217%" y="613" width="0.0954%" height="15" fill="rgb(212,49,51)" fg:x="5052" fg:w="8"/><text x="60.5408%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="60.2217%" y="597" width="0.0954%" height="15" fill="rgb(235,21,9)" fg:x="5052" fg:w="8"/><text x="60.5408%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="60.2217%" y="581" width="0.0954%" height="15" fill="rgb(251,31,32)" fg:x="5052" fg:w="8"/><text x="60.5408%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="60.2217%" y="565" width="0.0954%" height="15" fill="rgb(246,23,9)" fg:x="5052" fg:w="8"/><text x="60.5408%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="60.2336%" y="549" width="0.0834%" height="15" fill="rgb(225,216,14)" fg:x="5053" fg:w="7"/><text x="60.5527%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="60.2694%" y="533" width="0.0477%" height="15" fill="rgb(215,200,26)" fg:x="5056" fg:w="4"/><text x="60.5885%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="60.2694%" y="517" width="0.0477%" height="15" fill="rgb(237,130,47)" fg:x="5056" fg:w="4"/><text x="60.5885%" y="527.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="60.2694%" y="501" width="0.0477%" height="15" fill="rgb(247,74,14)" fg:x="5056" fg:w="4"/><text x="60.5885%" y="511.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="60.2694%" y="485" width="0.0477%" height="15" fill="rgb(254,97,46)" fg:x="5056" fg:w="4"/><text x="60.5885%" y="495.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="60.2694%" y="469" width="0.0477%" height="15" fill="rgb(234,191,1)" fg:x="5056" fg:w="4"/><text x="60.5885%" y="479.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="60.3171%" y="629" width="0.0238%" height="15" fill="rgb(215,165,14)" fg:x="5060" fg:w="2"/><text x="60.6362%" y="639.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="60.3171%" y="613" width="0.0238%" height="15" fill="rgb(230,182,6)" fg:x="5060" fg:w="2"/><text x="60.6362%" y="623.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="60.3171%" y="597" width="0.0238%" height="15" fill="rgb(210,127,39)" fg:x="5060" fg:w="2"/><text x="60.6362%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="60.3409%" y="629" width="0.0358%" height="15" fill="rgb(223,212,51)" fg:x="5062" fg:w="3"/><text x="60.6600%" y="639.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (3 samples, 0.04%)</title><rect x="60.3409%" y="613" width="0.0358%" height="15" fill="rgb(226,176,43)" fg:x="5062" fg:w="3"/><text x="60.6600%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="60.3528%" y="597" width="0.0238%" height="15" fill="rgb(222,155,4)" fg:x="5063" fg:w="2"/><text x="60.6719%" y="607.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="60.3528%" y="581" width="0.0238%" height="15" fill="rgb(215,149,7)" fg:x="5063" fg:w="2"/><text x="60.6719%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), bool (*)(unsigned int)&gt;::_M_manager (2 samples, 0.02%)</title><rect x="60.3528%" y="565" width="0.0238%" height="15" fill="rgb(252,199,23)" fg:x="5063" fg:w="2"/><text x="60.6719%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="60.3767%" y="517" width="0.0119%" height="15" fill="rgb(245,52,29)" fg:x="5065" fg:w="1"/><text x="60.6958%" y="527.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="60.3767%" y="501" width="0.0119%" height="15" fill="rgb(221,228,19)" fg:x="5065" fg:w="1"/><text x="60.6958%" y="511.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="60.3886%" y="469" width="0.0238%" height="15" fill="rgb(253,101,6)" fg:x="5066" fg:w="2"/><text x="60.7077%" y="479.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="60.3886%" y="453" width="0.0238%" height="15" fill="rgb(211,130,8)" fg:x="5066" fg:w="2"/><text x="60.7077%" y="463.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="60.4005%" y="437" width="0.0119%" height="15" fill="rgb(238,37,53)" fg:x="5067" fg:w="1"/><text x="60.7196%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="60.3767%" y="565" width="0.0477%" height="15" fill="rgb(235,145,5)" fg:x="5065" fg:w="4"/><text x="60.6958%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="60.3767%" y="549" width="0.0477%" height="15" fill="rgb(244,12,43)" fg:x="5065" fg:w="4"/><text x="60.6958%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="60.3767%" y="533" width="0.0477%" height="15" fill="rgb(246,195,24)" fg:x="5065" fg:w="4"/><text x="60.6958%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="60.3886%" y="517" width="0.0358%" height="15" fill="rgb(235,163,6)" fg:x="5066" fg:w="3"/><text x="60.7077%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="60.3886%" y="501" width="0.0358%" height="15" fill="rgb(236,218,17)" fg:x="5066" fg:w="3"/><text x="60.7077%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="60.3886%" y="485" width="0.0358%" height="15" fill="rgb(235,12,38)" fg:x="5066" fg:w="3"/><text x="60.7077%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="60.4124%" y="469" width="0.0119%" height="15" fill="rgb(225,195,33)" fg:x="5068" fg:w="1"/><text x="60.7315%" y="479.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="60.4124%" y="453" width="0.0119%" height="15" fill="rgb(238,54,35)" fg:x="5068" fg:w="1"/><text x="60.7315%" y="463.50"/></g><g><title>memcpy@plt (1 samples, 0.01%)</title><rect x="60.4124%" y="437" width="0.0119%" height="15" fill="rgb(238,33,7)" fg:x="5068" fg:w="1"/><text x="60.7315%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="60.4244%" y="389" width="0.0358%" height="15" fill="rgb(245,5,14)" fg:x="5069" fg:w="3"/><text x="60.7435%" y="399.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="60.4244%" y="373" width="0.0358%" height="15" fill="rgb(251,95,31)" fg:x="5069" fg:w="3"/><text x="60.7435%" y="383.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="60.4244%" y="357" width="0.0358%" height="15" fill="rgb(222,15,46)" fg:x="5069" fg:w="3"/><text x="60.7435%" y="367.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="60.4363%" y="341" width="0.0238%" height="15" fill="rgb(226,182,24)" fg:x="5070" fg:w="2"/><text x="60.7554%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="60.3767%" y="581" width="0.1073%" height="15" fill="rgb(229,105,41)" fg:x="5065" fg:w="9"/><text x="60.6958%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="60.4244%" y="565" width="0.0596%" height="15" fill="rgb(216,99,53)" fg:x="5069" fg:w="5"/><text x="60.7435%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="60.4244%" y="549" width="0.0596%" height="15" fill="rgb(253,26,20)" fg:x="5069" fg:w="5"/><text x="60.7435%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="60.4244%" y="533" width="0.0596%" height="15" fill="rgb(249,155,28)" fg:x="5069" fg:w="5"/><text x="60.7435%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="60.4244%" y="517" width="0.0596%" height="15" fill="rgb(241,221,2)" fg:x="5069" fg:w="5"/><text x="60.7435%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="60.4244%" y="501" width="0.0596%" height="15" fill="rgb(219,124,6)" fg:x="5069" fg:w="5"/><text x="60.7435%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="60.4244%" y="485" width="0.0596%" height="15" fill="rgb(233,37,6)" fg:x="5069" fg:w="5"/><text x="60.7435%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="60.4244%" y="469" width="0.0596%" height="15" fill="rgb(238,20,14)" fg:x="5069" fg:w="5"/><text x="60.7435%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="60.4244%" y="453" width="0.0596%" height="15" fill="rgb(232,106,27)" fg:x="5069" fg:w="5"/><text x="60.7435%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="60.4244%" y="437" width="0.0596%" height="15" fill="rgb(246,157,24)" fg:x="5069" fg:w="5"/><text x="60.7435%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="60.4244%" y="421" width="0.0596%" height="15" fill="rgb(214,153,10)" fg:x="5069" fg:w="5"/><text x="60.7435%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="60.4244%" y="405" width="0.0596%" height="15" fill="rgb(212,94,6)" fg:x="5069" fg:w="5"/><text x="60.7435%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="60.4601%" y="389" width="0.0238%" height="15" fill="rgb(254,25,27)" fg:x="5072" fg:w="2"/><text x="60.7792%" y="399.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="60.4601%" y="373" width="0.0238%" height="15" fill="rgb(250,43,52)" fg:x="5072" fg:w="2"/><text x="60.7792%" y="383.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="60.4601%" y="357" width="0.0238%" height="15" fill="rgb(221,226,40)" fg:x="5072" fg:w="2"/><text x="60.7792%" y="367.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="60.4601%" y="341" width="0.0238%" height="15" fill="rgb(235,162,34)" fg:x="5072" fg:w="2"/><text x="60.7792%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="60.3767%" y="613" width="0.1192%" height="15" fill="rgb(239,24,26)" fg:x="5065" fg:w="10"/><text x="60.6958%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="60.3767%" y="597" width="0.1192%" height="15" fill="rgb(244,226,11)" fg:x="5065" fg:w="10"/><text x="60.6958%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="60.4840%" y="581" width="0.0119%" height="15" fill="rgb(225,23,10)" fg:x="5074" fg:w="1"/><text x="60.8031%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="60.4840%" y="565" width="0.0119%" height="15" fill="rgb(249,125,6)" fg:x="5074" fg:w="1"/><text x="60.8031%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="60.4840%" y="549" width="0.0119%" height="15" fill="rgb(246,212,12)" fg:x="5074" fg:w="1"/><text x="60.8031%" y="559.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="60.4840%" y="533" width="0.0119%" height="15" fill="rgb(230,43,32)" fg:x="5074" fg:w="1"/><text x="60.8031%" y="543.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="60.4959%" y="533" width="0.0119%" height="15" fill="rgb(210,95,23)" fg:x="5075" fg:w="1"/><text x="60.8150%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="60.4959%" y="517" width="0.0119%" height="15" fill="rgb(229,103,33)" fg:x="5075" fg:w="1"/><text x="60.8150%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="60.4959%" y="501" width="0.0119%" height="15" fill="rgb(222,104,27)" fg:x="5075" fg:w="1"/><text x="60.8150%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="60.5078%" y="437" width="0.0119%" height="15" fill="rgb(239,221,23)" fg:x="5076" fg:w="1"/><text x="60.8269%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="60.4959%" y="549" width="0.0477%" height="15" fill="rgb(222,98,21)" fg:x="5075" fg:w="4"/><text x="60.8150%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="60.5078%" y="533" width="0.0358%" height="15" fill="rgb(231,101,20)" fg:x="5076" fg:w="3"/><text x="60.8269%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="60.5078%" y="517" width="0.0358%" height="15" fill="rgb(215,150,22)" fg:x="5076" fg:w="3"/><text x="60.8269%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="60.5078%" y="501" width="0.0358%" height="15" fill="rgb(248,3,34)" fg:x="5076" fg:w="3"/><text x="60.8269%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="60.5078%" y="485" width="0.0358%" height="15" fill="rgb(220,141,21)" fg:x="5076" fg:w="3"/><text x="60.8269%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="60.5078%" y="469" width="0.0358%" height="15" fill="rgb(223,41,48)" fg:x="5076" fg:w="3"/><text x="60.8269%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="60.5078%" y="453" width="0.0358%" height="15" fill="rgb(247,12,5)" fg:x="5076" fg:w="3"/><text x="60.8269%" y="463.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="60.5197%" y="437" width="0.0238%" height="15" fill="rgb(206,173,10)" fg:x="5077" fg:w="2"/><text x="60.8388%" y="447.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="60.5197%" y="421" width="0.0238%" height="15" fill="rgb(233,214,37)" fg:x="5077" fg:w="2"/><text x="60.8388%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="60.5197%" y="405" width="0.0238%" height="15" fill="rgb(238,86,43)" fg:x="5077" fg:w="2"/><text x="60.8388%" y="415.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="60.5197%" y="389" width="0.0238%" height="15" fill="rgb(212,182,8)" fg:x="5077" fg:w="2"/><text x="60.8388%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="60.5197%" y="373" width="0.0238%" height="15" fill="rgb(240,91,47)" fg:x="5077" fg:w="2"/><text x="60.8388%" y="383.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="60.5316%" y="357" width="0.0119%" height="15" fill="rgb(209,138,26)" fg:x="5078" fg:w="1"/><text x="60.8507%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="60.5316%" y="341" width="0.0119%" height="15" fill="rgb(231,163,20)" fg:x="5078" fg:w="1"/><text x="60.8507%" y="351.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="60.5316%" y="325" width="0.0119%" height="15" fill="rgb(214,91,54)" fg:x="5078" fg:w="1"/><text x="60.8507%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="60.5316%" y="309" width="0.0119%" height="15" fill="rgb(230,32,17)" fg:x="5078" fg:w="1"/><text x="60.8507%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="60.5436%" y="485" width="0.0358%" height="15" fill="rgb(231,34,34)" fg:x="5079" fg:w="3"/><text x="60.8627%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="60.5436%" y="469" width="0.0358%" height="15" fill="rgb(224,228,27)" fg:x="5079" fg:w="3"/><text x="60.8627%" y="479.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="60.5436%" y="453" width="0.0358%" height="15" fill="rgb(219,35,40)" fg:x="5079" fg:w="3"/><text x="60.8627%" y="463.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="60.5436%" y="437" width="0.0358%" height="15" fill="rgb(234,42,8)" fg:x="5079" fg:w="3"/><text x="60.8627%" y="447.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="60.5674%" y="421" width="0.0119%" height="15" fill="rgb(226,75,22)" fg:x="5081" fg:w="1"/><text x="60.8865%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="60.5793%" y="485" width="0.0238%" height="15" fill="rgb(242,203,28)" fg:x="5082" fg:w="2"/><text x="60.8984%" y="495.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="60.5793%" y="469" width="0.0238%" height="15" fill="rgb(221,3,9)" fg:x="5082" fg:w="2"/><text x="60.8984%" y="479.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="60.5793%" y="453" width="0.0238%" height="15" fill="rgb(214,34,31)" fg:x="5082" fg:w="2"/><text x="60.8984%" y="463.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="60.5793%" y="437" width="0.0238%" height="15" fill="rgb(252,119,15)" fg:x="5082" fg:w="2"/><text x="60.8984%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="60.6032%" y="421" width="0.0119%" height="15" fill="rgb(244,224,31)" fg:x="5084" fg:w="1"/><text x="60.9223%" y="431.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="60.6032%" y="405" width="0.0119%" height="15" fill="rgb(215,8,51)" fg:x="5084" fg:w="1"/><text x="60.9223%" y="415.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="60.6032%" y="437" width="0.0477%" height="15" fill="rgb(207,24,1)" fg:x="5084" fg:w="4"/><text x="60.9223%" y="447.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (3 samples, 0.04%)</title><rect x="60.6151%" y="421" width="0.0358%" height="15" fill="rgb(245,90,0)" fg:x="5085" fg:w="3"/><text x="60.9342%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="60.6151%" y="405" width="0.0358%" height="15" fill="rgb(246,43,48)" fg:x="5085" fg:w="3"/><text x="60.9342%" y="415.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (3 samples, 0.04%)</title><rect x="60.6151%" y="389" width="0.0358%" height="15" fill="rgb(252,218,10)" fg:x="5085" fg:w="3"/><text x="60.9342%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="60.6151%" y="373" width="0.0358%" height="15" fill="rgb(231,24,35)" fg:x="5085" fg:w="3"/><text x="60.9342%" y="383.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (3 samples, 0.04%)</title><rect x="60.6151%" y="357" width="0.0358%" height="15" fill="rgb(225,66,19)" fg:x="5085" fg:w="3"/><text x="60.9342%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="60.6151%" y="341" width="0.0358%" height="15" fill="rgb(214,96,51)" fg:x="5085" fg:w="3"/><text x="60.9342%" y="351.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="60.6151%" y="325" width="0.0358%" height="15" fill="rgb(251,151,47)" fg:x="5085" fg:w="3"/><text x="60.9342%" y="335.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="60.6151%" y="309" width="0.0358%" height="15" fill="rgb(236,79,14)" fg:x="5085" fg:w="3"/><text x="60.9342%" y="319.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="60.6151%" y="293" width="0.0358%" height="15" fill="rgb(210,205,11)" fg:x="5085" fg:w="3"/><text x="60.9342%" y="303.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="60.4959%" y="581" width="0.1669%" height="15" fill="rgb(233,142,53)" fg:x="5075" fg:w="14"/><text x="60.8150%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (14 samples, 0.17%)</title><rect x="60.4959%" y="565" width="0.1669%" height="15" fill="rgb(212,116,48)" fg:x="5075" fg:w="14"/><text x="60.8150%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="60.5436%" y="549" width="0.1192%" height="15" fill="rgb(234,55,33)" fg:x="5079" fg:w="10"/><text x="60.8627%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="60.5436%" y="533" width="0.1192%" height="15" fill="rgb(253,92,27)" fg:x="5079" fg:w="10"/><text x="60.8627%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="60.5436%" y="517" width="0.1192%" height="15" fill="rgb(220,7,35)" fg:x="5079" fg:w="10"/><text x="60.8627%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="60.5436%" y="501" width="0.1192%" height="15" fill="rgb(246,124,6)" fg:x="5079" fg:w="10"/><text x="60.8627%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="60.6032%" y="485" width="0.0596%" height="15" fill="rgb(212,111,51)" fg:x="5084" fg:w="5"/><text x="60.9223%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="60.6032%" y="469" width="0.0596%" height="15" fill="rgb(253,116,7)" fg:x="5084" fg:w="5"/><text x="60.9223%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="60.6032%" y="453" width="0.0596%" height="15" fill="rgb(213,145,18)" fg:x="5084" fg:w="5"/><text x="60.9223%" y="463.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="60.6509%" y="437" width="0.0119%" height="15" fill="rgb(219,149,7)" fg:x="5088" fg:w="1"/><text x="60.9700%" y="447.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="60.6628%" y="469" width="0.0358%" height="15" fill="rgb(225,156,20)" fg:x="5089" fg:w="3"/><text x="60.9819%" y="479.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="60.6628%" y="453" width="0.0358%" height="15" fill="rgb(211,98,19)" fg:x="5089" fg:w="3"/><text x="60.9819%" y="463.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="60.6866%" y="437" width="0.0119%" height="15" fill="rgb(231,192,31)" fg:x="5091" fg:w="1"/><text x="61.0057%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="60.6985%" y="469" width="0.0238%" height="15" fill="rgb(249,95,19)" fg:x="5092" fg:w="2"/><text x="61.0176%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="60.7105%" y="453" width="0.0119%" height="15" fill="rgb(247,101,36)" fg:x="5093" fg:w="1"/><text x="61.0296%" y="463.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="60.7105%" y="437" width="0.0119%" height="15" fill="rgb(221,45,43)" fg:x="5093" fg:w="1"/><text x="61.0296%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="60.7105%" y="421" width="0.0119%" height="15" fill="rgb(220,42,1)" fg:x="5093" fg:w="1"/><text x="61.0296%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="60.7105%" y="405" width="0.0119%" height="15" fill="rgb(236,19,24)" fg:x="5093" fg:w="1"/><text x="61.0296%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="60.7105%" y="389" width="0.0119%" height="15" fill="rgb(225,192,6)" fg:x="5093" fg:w="1"/><text x="61.0296%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="60.7105%" y="373" width="0.0119%" height="15" fill="rgb(242,30,19)" fg:x="5093" fg:w="1"/><text x="61.0296%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="60.7105%" y="357" width="0.0119%" height="15" fill="rgb(240,36,6)" fg:x="5093" fg:w="1"/><text x="61.0296%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="60.7105%" y="341" width="0.0119%" height="15" fill="rgb(246,40,28)" fg:x="5093" fg:w="1"/><text x="61.0296%" y="351.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="60.7105%" y="325" width="0.0119%" height="15" fill="rgb(225,155,33)" fg:x="5093" fg:w="1"/><text x="61.0296%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="60.6628%" y="565" width="0.0715%" height="15" fill="rgb(240,65,18)" fg:x="5089" fg:w="6"/><text x="60.9819%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="60.6628%" y="549" width="0.0715%" height="15" fill="rgb(217,0,48)" fg:x="5089" fg:w="6"/><text x="60.9819%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="60.6628%" y="533" width="0.0715%" height="15" fill="rgb(217,80,15)" fg:x="5089" fg:w="6"/><text x="60.9819%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="60.6628%" y="517" width="0.0715%" height="15" fill="rgb(253,43,51)" fg:x="5089" fg:w="6"/><text x="60.9819%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="60.6628%" y="501" width="0.0715%" height="15" fill="rgb(246,60,4)" fg:x="5089" fg:w="6"/><text x="60.9819%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="60.6628%" y="485" width="0.0715%" height="15" fill="rgb(230,40,54)" fg:x="5089" fg:w="6"/><text x="60.9819%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="60.7224%" y="469" width="0.0119%" height="15" fill="rgb(208,20,44)" fg:x="5094" fg:w="1"/><text x="61.0415%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (36 samples, 0.43%)</title><rect x="60.3171%" y="645" width="0.4291%" height="15" fill="rgb(230,22,22)" fg:x="5060" fg:w="36"/><text x="60.6362%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (31 samples, 0.37%)</title><rect x="60.3767%" y="629" width="0.3695%" height="15" fill="rgb(207,57,4)" fg:x="5065" fg:w="31"/><text x="60.6958%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="60.4959%" y="613" width="0.2503%" height="15" fill="rgb(242,130,33)" fg:x="5075" fg:w="21"/><text x="60.8150%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (21 samples, 0.25%)</title><rect x="60.4959%" y="597" width="0.2503%" height="15" fill="rgb(218,66,43)" fg:x="5075" fg:w="21"/><text x="60.8150%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="60.6628%" y="581" width="0.0834%" height="15" fill="rgb(236,105,16)" fg:x="5089" fg:w="7"/><text x="60.9819%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="60.7343%" y="565" width="0.0119%" height="15" fill="rgb(230,46,15)" fg:x="5095" fg:w="1"/><text x="61.0534%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="60.7462%" y="437" width="0.0119%" height="15" fill="rgb(251,172,40)" fg:x="5096" fg:w="1"/><text x="61.0653%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="60.7462%" y="421" width="0.0119%" height="15" fill="rgb(225,217,32)" fg:x="5096" fg:w="1"/><text x="61.0653%" y="431.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="60.7462%" y="405" width="0.0119%" height="15" fill="rgb(243,10,29)" fg:x="5096" fg:w="1"/><text x="61.0653%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="60.7462%" y="645" width="0.0238%" height="15" fill="rgb(207,102,10)" fg:x="5096" fg:w="2"/><text x="61.0653%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="60.7462%" y="629" width="0.0238%" height="15" fill="rgb(241,125,5)" fg:x="5096" fg:w="2"/><text x="61.0653%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="60.7462%" y="613" width="0.0238%" height="15" fill="rgb(230,125,29)" fg:x="5096" fg:w="2"/><text x="61.0653%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="60.7462%" y="597" width="0.0238%" height="15" fill="rgb(223,65,44)" fg:x="5096" fg:w="2"/><text x="61.0653%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="60.7462%" y="581" width="0.0238%" height="15" fill="rgb(224,188,28)" fg:x="5096" fg:w="2"/><text x="61.0653%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="60.7462%" y="565" width="0.0238%" height="15" fill="rgb(254,197,27)" fg:x="5096" fg:w="2"/><text x="61.0653%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="60.7462%" y="549" width="0.0238%" height="15" fill="rgb(220,200,25)" fg:x="5096" fg:w="2"/><text x="61.0653%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="60.7462%" y="533" width="0.0238%" height="15" fill="rgb(239,225,54)" fg:x="5096" fg:w="2"/><text x="61.0653%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="60.7462%" y="517" width="0.0238%" height="15" fill="rgb(211,59,40)" fg:x="5096" fg:w="2"/><text x="61.0653%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="60.7462%" y="501" width="0.0238%" height="15" fill="rgb(213,176,46)" fg:x="5096" fg:w="2"/><text x="61.0653%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="60.7462%" y="485" width="0.0238%" height="15" fill="rgb(226,99,4)" fg:x="5096" fg:w="2"/><text x="61.0653%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="60.7462%" y="469" width="0.0238%" height="15" fill="rgb(239,203,43)" fg:x="5096" fg:w="2"/><text x="61.0653%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="60.7462%" y="453" width="0.0238%" height="15" fill="rgb(246,1,45)" fg:x="5096" fg:w="2"/><text x="61.0653%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="60.7581%" y="437" width="0.0119%" height="15" fill="rgb(231,42,52)" fg:x="5097" fg:w="1"/><text x="61.0772%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="60.7581%" y="421" width="0.0119%" height="15" fill="rgb(240,13,50)" fg:x="5097" fg:w="1"/><text x="61.0772%" y="431.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="60.7581%" y="405" width="0.0119%" height="15" fill="rgb(225,81,14)" fg:x="5097" fg:w="1"/><text x="61.0772%" y="415.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="60.7701%" y="613" width="0.0715%" height="15" fill="rgb(216,182,23)" fg:x="5098" fg:w="6"/><text x="61.0892%" y="623.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="60.7701%" y="597" width="0.0715%" height="15" fill="rgb(233,137,19)" fg:x="5098" fg:w="6"/><text x="61.0892%" y="607.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="60.7701%" y="629" width="0.0834%" height="15" fill="rgb(242,61,46)" fg:x="5098" fg:w="7"/><text x="61.0892%" y="639.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="60.8416%" y="613" width="0.0119%" height="15" fill="rgb(221,168,51)" fg:x="5104" fg:w="1"/><text x="61.1607%" y="623.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="60.8535%" y="565" width="0.0238%" height="15" fill="rgb(238,48,15)" fg:x="5105" fg:w="2"/><text x="61.1726%" y="575.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="60.8535%" y="549" width="0.0238%" height="15" fill="rgb(216,13,16)" fg:x="5105" fg:w="2"/><text x="61.1726%" y="559.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="60.8654%" y="533" width="0.0119%" height="15" fill="rgb(223,185,34)" fg:x="5106" fg:w="1"/><text x="61.1845%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="60.8773%" y="517" width="0.0238%" height="15" fill="rgb(228,94,42)" fg:x="5107" fg:w="2"/><text x="61.1964%" y="527.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="60.8773%" y="501" width="0.0238%" height="15" fill="rgb(218,166,43)" fg:x="5107" fg:w="2"/><text x="61.1964%" y="511.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="60.8773%" y="485" width="0.0238%" height="15" fill="rgb(232,30,50)" fg:x="5107" fg:w="2"/><text x="61.1964%" y="495.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="60.8893%" y="469" width="0.0119%" height="15" fill="rgb(245,206,45)" fg:x="5108" fg:w="1"/><text x="61.2084%" y="479.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="60.9012%" y="469" width="0.0358%" height="15" fill="rgb(220,56,22)" fg:x="5109" fg:w="3"/><text x="61.2203%" y="479.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="60.9012%" y="453" width="0.0358%" height="15" fill="rgb(239,129,38)" fg:x="5109" fg:w="3"/><text x="61.2203%" y="463.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="60.9012%" y="437" width="0.0358%" height="15" fill="rgb(207,68,41)" fg:x="5109" fg:w="3"/><text x="61.2203%" y="447.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="60.9369%" y="437" width="0.0358%" height="15" fill="rgb(221,21,7)" fg:x="5112" fg:w="3"/><text x="61.2560%" y="447.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="60.9369%" y="421" width="0.0358%" height="15" fill="rgb(240,33,25)" fg:x="5112" fg:w="3"/><text x="61.2560%" y="431.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="60.9608%" y="405" width="0.0119%" height="15" fill="rgb(242,119,10)" fg:x="5114" fg:w="1"/><text x="61.2799%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="60.9727%" y="421" width="0.0119%" height="15" fill="rgb(214,149,40)" fg:x="5115" fg:w="1"/><text x="61.2918%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="60.9727%" y="405" width="0.0119%" height="15" fill="rgb(228,25,36)" fg:x="5115" fg:w="1"/><text x="61.2918%" y="415.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="60.9727%" y="389" width="0.0119%" height="15" fill="rgb(222,59,15)" fg:x="5115" fg:w="1"/><text x="61.2918%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="60.9012%" y="501" width="0.1192%" height="15" fill="rgb(218,170,0)" fg:x="5109" fg:w="10"/><text x="61.2203%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="60.9012%" y="485" width="0.1192%" height="15" fill="rgb(232,173,23)" fg:x="5109" fg:w="10"/><text x="61.2203%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="60.9369%" y="469" width="0.0834%" height="15" fill="rgb(218,116,1)" fg:x="5112" fg:w="7"/><text x="61.2560%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="60.9369%" y="453" width="0.0834%" height="15" fill="rgb(207,34,4)" fg:x="5112" fg:w="7"/><text x="61.2560%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="60.9727%" y="437" width="0.0477%" height="15" fill="rgb(229,54,52)" fg:x="5115" fg:w="4"/><text x="61.2918%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="60.9846%" y="421" width="0.0358%" height="15" fill="rgb(211,86,23)" fg:x="5116" fg:w="3"/><text x="61.3037%" y="431.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="60.9846%" y="405" width="0.0358%" height="15" fill="rgb(254,153,34)" fg:x="5116" fg:w="3"/><text x="61.3037%" y="415.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="60.9846%" y="389" width="0.0358%" height="15" fill="rgb(219,220,14)" fg:x="5116" fg:w="3"/><text x="61.3037%" y="399.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="60.9846%" y="373" width="0.0358%" height="15" fill="rgb(247,8,26)" fg:x="5116" fg:w="3"/><text x="61.3037%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.0204%" y="421" width="0.0238%" height="15" fill="rgb(213,129,42)" fg:x="5119" fg:w="2"/><text x="61.3395%" y="431.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.0204%" y="405" width="0.0238%" height="15" fill="rgb(225,95,41)" fg:x="5119" fg:w="2"/><text x="61.3395%" y="415.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="61.0204%" y="389" width="0.0238%" height="15" fill="rgb(215,134,24)" fg:x="5119" fg:w="2"/><text x="61.3395%" y="399.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="61.0204%" y="373" width="0.0238%" height="15" fill="rgb(235,23,54)" fg:x="5119" fg:w="2"/><text x="61.3395%" y="383.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="61.0204%" y="357" width="0.0238%" height="15" fill="rgb(229,96,31)" fg:x="5119" fg:w="2"/><text x="61.3395%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.0442%" y="325" width="0.0119%" height="15" fill="rgb(206,111,12)" fg:x="5121" fg:w="1"/><text x="61.3633%" y="335.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.0442%" y="309" width="0.0119%" height="15" fill="rgb(222,177,8)" fg:x="5121" fg:w="1"/><text x="61.3633%" y="319.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.0442%" y="293" width="0.0119%" height="15" fill="rgb(251,36,52)" fg:x="5121" fg:w="1"/><text x="61.3633%" y="303.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="60.9012%" y="517" width="0.1669%" height="15" fill="rgb(216,182,29)" fg:x="5109" fg:w="14"/><text x="61.2203%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="61.0204%" y="501" width="0.0477%" height="15" fill="rgb(241,145,50)" fg:x="5119" fg:w="4"/><text x="61.3395%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="61.0204%" y="485" width="0.0477%" height="15" fill="rgb(231,71,35)" fg:x="5119" fg:w="4"/><text x="61.3395%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="61.0204%" y="469" width="0.0477%" height="15" fill="rgb(218,22,17)" fg:x="5119" fg:w="4"/><text x="61.3395%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="61.0204%" y="453" width="0.0477%" height="15" fill="rgb(225,227,6)" fg:x="5119" fg:w="4"/><text x="61.3395%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="61.0204%" y="437" width="0.0477%" height="15" fill="rgb(224,204,17)" fg:x="5119" fg:w="4"/><text x="61.3395%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.0442%" y="421" width="0.0238%" height="15" fill="rgb(227,61,28)" fg:x="5121" fg:w="2"/><text x="61.3633%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="61.0442%" y="405" width="0.0238%" height="15" fill="rgb(242,148,23)" fg:x="5121" fg:w="2"/><text x="61.3633%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.0442%" y="389" width="0.0238%" height="15" fill="rgb(237,105,33)" fg:x="5121" fg:w="2"/><text x="61.3633%" y="399.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="61.0442%" y="373" width="0.0238%" height="15" fill="rgb(238,218,40)" fg:x="5121" fg:w="2"/><text x="61.3633%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.0442%" y="357" width="0.0238%" height="15" fill="rgb(209,126,11)" fg:x="5121" fg:w="2"/><text x="61.3633%" y="367.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="61.0442%" y="341" width="0.0238%" height="15" fill="rgb(245,90,11)" fg:x="5121" fg:w="2"/><text x="61.3633%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.0561%" y="325" width="0.0119%" height="15" fill="rgb(211,195,10)" fg:x="5122" fg:w="1"/><text x="61.3752%" y="335.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="61.0561%" y="309" width="0.0119%" height="15" fill="rgb(231,45,45)" fg:x="5122" fg:w="1"/><text x="61.3752%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.0561%" y="293" width="0.0119%" height="15" fill="rgb(246,100,43)" fg:x="5122" fg:w="1"/><text x="61.3752%" y="303.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.0561%" y="277" width="0.0119%" height="15" fill="rgb(241,193,8)" fg:x="5122" fg:w="1"/><text x="61.3752%" y="287.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.0561%" y="261" width="0.0119%" height="15" fill="rgb(208,76,19)" fg:x="5122" fg:w="1"/><text x="61.3752%" y="271.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.0561%" y="245" width="0.0119%" height="15" fill="rgb(223,69,40)" fg:x="5122" fg:w="1"/><text x="61.3752%" y="255.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="61.0561%" y="229" width="0.0119%" height="15" fill="rgb(207,120,39)" fg:x="5122" fg:w="1"/><text x="61.3752%" y="239.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="61.0681%" y="501" width="0.0119%" height="15" fill="rgb(212,209,28)" fg:x="5123" fg:w="1"/><text x="61.3872%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.0800%" y="357" width="0.0238%" height="15" fill="rgb(246,82,29)" fg:x="5124" fg:w="2"/><text x="61.3991%" y="367.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.0919%" y="341" width="0.0119%" height="15" fill="rgb(239,6,40)" fg:x="5125" fg:w="1"/><text x="61.4110%" y="351.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.0919%" y="325" width="0.0119%" height="15" fill="rgb(228,181,35)" fg:x="5125" fg:w="1"/><text x="61.4110%" y="335.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.0919%" y="309" width="0.0119%" height="15" fill="rgb(238,151,2)" fg:x="5125" fg:w="1"/><text x="61.4110%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.1038%" y="325" width="0.0119%" height="15" fill="rgb(236,94,18)" fg:x="5126" fg:w="1"/><text x="61.4229%" y="335.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.1038%" y="309" width="0.0119%" height="15" fill="rgb(208,38,14)" fg:x="5126" fg:w="1"/><text x="61.4229%" y="319.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.1038%" y="293" width="0.0119%" height="15" fill="rgb(234,215,27)" fg:x="5126" fg:w="1"/><text x="61.4229%" y="303.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="61.1038%" y="277" width="0.0119%" height="15" fill="rgb(254,211,53)" fg:x="5126" fg:w="1"/><text x="61.4229%" y="287.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.1157%" y="293" width="0.0119%" height="15" fill="rgb(216,175,11)" fg:x="5127" fg:w="1"/><text x="61.4348%" y="303.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.1157%" y="277" width="0.0119%" height="15" fill="rgb(246,179,26)" fg:x="5127" fg:w="1"/><text x="61.4348%" y="287.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.1157%" y="261" width="0.0119%" height="15" fill="rgb(249,19,52)" fg:x="5127" fg:w="1"/><text x="61.4348%" y="271.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (24 samples, 0.29%)</title><rect x="60.8535%" y="597" width="0.2861%" height="15" fill="rgb(230,42,52)" fg:x="5105" fg:w="24"/><text x="61.1726%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="60.8535%" y="581" width="0.2861%" height="15" fill="rgb(221,171,0)" fg:x="5105" fg:w="24"/><text x="61.1726%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (22 samples, 0.26%)</title><rect x="60.8773%" y="565" width="0.2622%" height="15" fill="rgb(222,177,40)" fg:x="5107" fg:w="22"/><text x="61.1964%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (22 samples, 0.26%)</title><rect x="60.8773%" y="549" width="0.2622%" height="15" fill="rgb(247,34,16)" fg:x="5107" fg:w="22"/><text x="61.1964%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (22 samples, 0.26%)</title><rect x="60.8773%" y="533" width="0.2622%" height="15" fill="rgb(213,217,37)" fg:x="5107" fg:w="22"/><text x="61.1964%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="61.0681%" y="517" width="0.0715%" height="15" fill="rgb(231,189,24)" fg:x="5123" fg:w="6"/><text x="61.3872%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="61.0800%" y="501" width="0.0596%" height="15" fill="rgb(214,22,9)" fg:x="5124" fg:w="5"/><text x="61.3991%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="61.0800%" y="485" width="0.0596%" height="15" fill="rgb(212,70,22)" fg:x="5124" fg:w="5"/><text x="61.3991%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="61.0800%" y="469" width="0.0596%" height="15" fill="rgb(249,64,51)" fg:x="5124" fg:w="5"/><text x="61.3991%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="61.0800%" y="453" width="0.0596%" height="15" fill="rgb(249,148,20)" fg:x="5124" fg:w="5"/><text x="61.3991%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="61.0800%" y="437" width="0.0596%" height="15" fill="rgb(246,46,48)" fg:x="5124" fg:w="5"/><text x="61.3991%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="61.0800%" y="421" width="0.0596%" height="15" fill="rgb(217,34,48)" fg:x="5124" fg:w="5"/><text x="61.3991%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="61.0800%" y="405" width="0.0596%" height="15" fill="rgb(222,45,26)" fg:x="5124" fg:w="5"/><text x="61.3991%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="61.0800%" y="389" width="0.0596%" height="15" fill="rgb(230,201,36)" fg:x="5124" fg:w="5"/><text x="61.3991%" y="399.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="61.0800%" y="373" width="0.0596%" height="15" fill="rgb(217,30,43)" fg:x="5124" fg:w="5"/><text x="61.3991%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="61.1038%" y="357" width="0.0358%" height="15" fill="rgb(230,197,40)" fg:x="5126" fg:w="3"/><text x="61.4229%" y="367.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="61.1038%" y="341" width="0.0358%" height="15" fill="rgb(239,181,18)" fg:x="5126" fg:w="3"/><text x="61.4229%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.1157%" y="325" width="0.0238%" height="15" fill="rgb(222,60,39)" fg:x="5127" fg:w="2"/><text x="61.4348%" y="335.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="61.1157%" y="309" width="0.0238%" height="15" fill="rgb(210,60,22)" fg:x="5127" fg:w="2"/><text x="61.4348%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.1277%" y="293" width="0.0119%" height="15" fill="rgb(239,213,48)" fg:x="5128" fg:w="1"/><text x="61.4468%" y="303.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="61.1277%" y="277" width="0.0119%" height="15" fill="rgb(253,214,23)" fg:x="5128" fg:w="1"/><text x="61.4468%" y="287.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.1277%" y="261" width="0.0119%" height="15" fill="rgb(211,98,45)" fg:x="5128" fg:w="1"/><text x="61.4468%" y="271.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.1277%" y="245" width="0.0119%" height="15" fill="rgb(239,130,44)" fg:x="5128" fg:w="1"/><text x="61.4468%" y="255.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.1277%" y="229" width="0.0119%" height="15" fill="rgb(222,181,35)" fg:x="5128" fg:w="1"/><text x="61.4468%" y="239.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.1277%" y="213" width="0.0119%" height="15" fill="rgb(219,219,49)" fg:x="5128" fg:w="1"/><text x="61.4468%" y="223.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.1396%" y="533" width="0.0119%" height="15" fill="rgb(227,161,51)" fg:x="5129" fg:w="1"/><text x="61.4587%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.1396%" y="517" width="0.0119%" height="15" fill="rgb(239,112,27)" fg:x="5129" fg:w="1"/><text x="61.4587%" y="527.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="61.1515%" y="533" width="0.0119%" height="15" fill="rgb(248,122,18)" fg:x="5130" fg:w="1"/><text x="61.4706%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (29 samples, 0.35%)</title><rect x="60.8535%" y="613" width="0.3457%" height="15" fill="rgb(245,130,23)" fg:x="5105" fg:w="29"/><text x="61.1726%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="61.1396%" y="597" width="0.0596%" height="15" fill="rgb(211,225,28)" fg:x="5129" fg:w="5"/><text x="61.4587%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="61.1396%" y="581" width="0.0596%" height="15" fill="rgb(242,105,44)" fg:x="5129" fg:w="5"/><text x="61.4587%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="61.1396%" y="565" width="0.0596%" height="15" fill="rgb(216,183,46)" fg:x="5129" fg:w="5"/><text x="61.4587%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="61.1396%" y="549" width="0.0596%" height="15" fill="rgb(227,112,9)" fg:x="5129" fg:w="5"/><text x="61.4587%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="61.1634%" y="533" width="0.0358%" height="15" fill="rgb(244,21,0)" fg:x="5131" fg:w="3"/><text x="61.4825%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="61.1634%" y="517" width="0.0358%" height="15" fill="rgb(236,185,14)" fg:x="5131" fg:w="3"/><text x="61.4825%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="61.1634%" y="501" width="0.0358%" height="15" fill="rgb(236,170,30)" fg:x="5131" fg:w="3"/><text x="61.4825%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="61.1634%" y="485" width="0.0358%" height="15" fill="rgb(209,198,51)" fg:x="5131" fg:w="3"/><text x="61.4825%" y="495.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="61.1634%" y="469" width="0.0358%" height="15" fill="rgb(205,171,26)" fg:x="5131" fg:w="3"/><text x="61.4825%" y="479.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="61.1634%" y="453" width="0.0358%" height="15" fill="rgb(246,41,49)" fg:x="5131" fg:w="3"/><text x="61.4825%" y="463.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="61.1634%" y="437" width="0.0358%" height="15" fill="rgb(240,229,12)" fg:x="5131" fg:w="3"/><text x="61.4825%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.1992%" y="533" width="0.0119%" height="15" fill="rgb(212,8,54)" fg:x="5134" fg:w="1"/><text x="61.5183%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.1992%" y="517" width="0.0119%" height="15" fill="rgb(230,114,13)" fg:x="5134" fg:w="1"/><text x="61.5183%" y="527.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="61.1992%" y="501" width="0.0119%" height="15" fill="rgb(229,130,28)" fg:x="5134" fg:w="1"/><text x="61.5183%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.1992%" y="581" width="0.0238%" height="15" fill="rgb(206,139,15)" fg:x="5134" fg:w="2"/><text x="61.5183%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="61.1992%" y="565" width="0.0238%" height="15" fill="rgb(241,188,35)" fg:x="5134" fg:w="2"/><text x="61.5183%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.1992%" y="549" width="0.0238%" height="15" fill="rgb(208,224,26)" fg:x="5134" fg:w="2"/><text x="61.5183%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="61.2111%" y="533" width="0.0119%" height="15" fill="rgb(251,131,28)" fg:x="5135" fg:w="1"/><text x="61.5302%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.2111%" y="517" width="0.0119%" height="15" fill="rgb(208,153,1)" fg:x="5135" fg:w="1"/><text x="61.5302%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.2230%" y="565" width="0.0119%" height="15" fill="rgb(234,33,36)" fg:x="5136" fg:w="1"/><text x="61.5421%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.2230%" y="549" width="0.0119%" height="15" fill="rgb(246,42,29)" fg:x="5136" fg:w="1"/><text x="61.5421%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.2350%" y="453" width="0.0119%" height="15" fill="rgb(251,114,16)" fg:x="5137" fg:w="1"/><text x="61.5541%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="61.2350%" y="437" width="0.0119%" height="15" fill="rgb(233,13,38)" fg:x="5137" fg:w="1"/><text x="61.5541%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.2350%" y="421" width="0.0119%" height="15" fill="rgb(247,120,19)" fg:x="5137" fg:w="1"/><text x="61.5541%" y="431.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.2350%" y="405" width="0.0119%" height="15" fill="rgb(205,11,16)" fg:x="5137" fg:w="1"/><text x="61.5541%" y="415.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="61.2350%" y="389" width="0.0119%" height="15" fill="rgb(228,185,19)" fg:x="5137" fg:w="1"/><text x="61.5541%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.2350%" y="373" width="0.0119%" height="15" fill="rgb(239,88,52)" fg:x="5137" fg:w="1"/><text x="61.5541%" y="383.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="61.2350%" y="357" width="0.0119%" height="15" fill="rgb(219,23,1)" fg:x="5137" fg:w="1"/><text x="61.5541%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.2350%" y="341" width="0.0119%" height="15" fill="rgb(253,177,16)" fg:x="5137" fg:w="1"/><text x="61.5541%" y="351.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.2350%" y="325" width="0.0119%" height="15" fill="rgb(225,150,40)" fg:x="5137" fg:w="1"/><text x="61.5541%" y="335.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.2350%" y="309" width="0.0119%" height="15" fill="rgb(208,108,30)" fg:x="5137" fg:w="1"/><text x="61.5541%" y="319.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="61.2350%" y="293" width="0.0119%" height="15" fill="rgb(214,122,4)" fg:x="5137" fg:w="1"/><text x="61.5541%" y="303.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.2350%" y="517" width="0.0238%" height="15" fill="rgb(229,74,37)" fg:x="5137" fg:w="2"/><text x="61.5541%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="61.2350%" y="501" width="0.0238%" height="15" fill="rgb(233,61,41)" fg:x="5137" fg:w="2"/><text x="61.5541%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.2350%" y="485" width="0.0238%" height="15" fill="rgb(238,191,5)" fg:x="5137" fg:w="2"/><text x="61.5541%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="61.2350%" y="469" width="0.0238%" height="15" fill="rgb(233,78,24)" fg:x="5137" fg:w="2"/><text x="61.5541%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.2469%" y="453" width="0.0119%" height="15" fill="rgb(211,142,8)" fg:x="5138" fg:w="1"/><text x="61.5660%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.2469%" y="437" width="0.0119%" height="15" fill="rgb(253,38,53)" fg:x="5138" fg:w="1"/><text x="61.5660%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.2469%" y="421" width="0.0119%" height="15" fill="rgb(234,63,51)" fg:x="5138" fg:w="1"/><text x="61.5660%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.2588%" y="469" width="0.0119%" height="15" fill="rgb(205,23,31)" fg:x="5139" fg:w="1"/><text x="61.5779%" y="479.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="61.2588%" y="453" width="0.0119%" height="15" fill="rgb(210,184,50)" fg:x="5139" fg:w="1"/><text x="61.5779%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.2707%" y="453" width="0.0119%" height="15" fill="rgb(222,112,26)" fg:x="5140" fg:w="1"/><text x="61.5898%" y="463.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="61.2707%" y="437" width="0.0119%" height="15" fill="rgb(250,98,18)" fg:x="5140" fg:w="1"/><text x="61.5898%" y="447.50"/></g><g><title>memcpy@plt (1 samples, 0.01%)</title><rect x="61.2707%" y="421" width="0.0119%" height="15" fill="rgb(250,34,12)" fg:x="5140" fg:w="1"/><text x="61.5898%" y="431.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="61.2826%" y="389" width="0.0596%" height="15" fill="rgb(236,141,30)" fg:x="5141" fg:w="5"/><text x="61.6017%" y="399.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="61.2826%" y="373" width="0.0596%" height="15" fill="rgb(246,134,38)" fg:x="5141" fg:w="5"/><text x="61.6017%" y="383.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="61.2826%" y="357" width="0.0596%" height="15" fill="rgb(240,114,4)" fg:x="5141" fg:w="5"/><text x="61.6017%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="61.2707%" y="469" width="0.1192%" height="15" fill="rgb(243,113,39)" fg:x="5140" fg:w="10"/><text x="61.5898%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="61.2826%" y="453" width="0.1073%" height="15" fill="rgb(239,215,4)" fg:x="5141" fg:w="9"/><text x="61.6017%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="61.2826%" y="437" width="0.1073%" height="15" fill="rgb(236,229,45)" fg:x="5141" fg:w="9"/><text x="61.6017%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="61.2826%" y="421" width="0.1073%" height="15" fill="rgb(242,2,6)" fg:x="5141" fg:w="9"/><text x="61.6017%" y="431.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="61.2826%" y="405" width="0.1073%" height="15" fill="rgb(239,108,21)" fg:x="5141" fg:w="9"/><text x="61.6017%" y="415.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (4 samples, 0.05%)</title><rect x="61.3422%" y="389" width="0.0477%" height="15" fill="rgb(215,168,34)" fg:x="5146" fg:w="4"/><text x="61.6613%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="61.3422%" y="373" width="0.0477%" height="15" fill="rgb(238,31,17)" fg:x="5146" fg:w="4"/><text x="61.6613%" y="383.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (4 samples, 0.05%)</title><rect x="61.3422%" y="357" width="0.0477%" height="15" fill="rgb(220,133,11)" fg:x="5146" fg:w="4"/><text x="61.6613%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="61.3422%" y="341" width="0.0477%" height="15" fill="rgb(212,158,23)" fg:x="5146" fg:w="4"/><text x="61.6613%" y="351.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="61.3422%" y="325" width="0.0477%" height="15" fill="rgb(223,172,7)" fg:x="5146" fg:w="4"/><text x="61.6613%" y="335.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="61.3422%" y="309" width="0.0477%" height="15" fill="rgb(244,3,52)" fg:x="5146" fg:w="4"/><text x="61.6613%" y="319.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="61.3422%" y="293" width="0.0477%" height="15" fill="rgb(207,69,27)" fg:x="5146" fg:w="4"/><text x="61.6613%" y="303.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (14 samples, 0.17%)</title><rect x="61.2350%" y="533" width="0.1669%" height="15" fill="rgb(213,136,45)" fg:x="5137" fg:w="14"/><text x="61.5541%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="61.2588%" y="517" width="0.1430%" height="15" fill="rgb(218,79,17)" fg:x="5139" fg:w="12"/><text x="61.5779%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="61.2588%" y="501" width="0.1430%" height="15" fill="rgb(216,106,36)" fg:x="5139" fg:w="12"/><text x="61.5779%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="61.2588%" y="485" width="0.1430%" height="15" fill="rgb(251,27,45)" fg:x="5139" fg:w="12"/><text x="61.5779%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="61.3899%" y="469" width="0.0119%" height="15" fill="rgb(232,21,34)" fg:x="5150" fg:w="1"/><text x="61.7090%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="61.2350%" y="549" width="0.1907%" height="15" fill="rgb(249,191,16)" fg:x="5137" fg:w="16"/><text x="61.5541%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="61.4018%" y="533" width="0.0238%" height="15" fill="rgb(224,88,20)" fg:x="5151" fg:w="2"/><text x="61.7209%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.4018%" y="517" width="0.0238%" height="15" fill="rgb(237,93,27)" fg:x="5151" fg:w="2"/><text x="61.7209%" y="527.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="61.4018%" y="501" width="0.0238%" height="15" fill="rgb(226,198,48)" fg:x="5151" fg:w="2"/><text x="61.7209%" y="511.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="61.4018%" y="485" width="0.0238%" height="15" fill="rgb(207,162,53)" fg:x="5151" fg:w="2"/><text x="61.7209%" y="495.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="61.4138%" y="469" width="0.0119%" height="15" fill="rgb(207,169,9)" fg:x="5152" fg:w="1"/><text x="61.7329%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.4257%" y="533" width="0.0119%" height="15" fill="rgb(224,166,46)" fg:x="5153" fg:w="1"/><text x="61.7448%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.4257%" y="517" width="0.0119%" height="15" fill="rgb(233,26,6)" fg:x="5153" fg:w="1"/><text x="61.7448%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.4495%" y="517" width="0.0119%" height="15" fill="rgb(218,106,45)" fg:x="5155" fg:w="1"/><text x="61.7686%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="61.4495%" y="501" width="0.0119%" height="15" fill="rgb(240,217,4)" fg:x="5155" fg:w="1"/><text x="61.7686%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.4495%" y="485" width="0.0119%" height="15" fill="rgb(246,171,10)" fg:x="5155" fg:w="1"/><text x="61.7686%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.4495%" y="469" width="0.0119%" height="15" fill="rgb(223,197,30)" fg:x="5155" fg:w="1"/><text x="61.7686%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.4495%" y="453" width="0.0119%" height="15" fill="rgb(207,92,16)" fg:x="5155" fg:w="1"/><text x="61.7686%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="61.4614%" y="469" width="0.0238%" height="15" fill="rgb(211,6,44)" fg:x="5156" fg:w="2"/><text x="61.7805%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.4614%" y="453" width="0.0238%" height="15" fill="rgb(219,139,2)" fg:x="5156" fg:w="2"/><text x="61.7805%" y="463.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="61.4614%" y="437" width="0.0238%" height="15" fill="rgb(224,103,21)" fg:x="5156" fg:w="2"/><text x="61.7805%" y="447.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="61.4614%" y="421" width="0.0238%" height="15" fill="rgb(254,110,48)" fg:x="5156" fg:w="2"/><text x="61.7805%" y="431.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="61.4614%" y="405" width="0.0238%" height="15" fill="rgb(212,88,19)" fg:x="5156" fg:w="2"/><text x="61.7805%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="61.4257%" y="549" width="0.0715%" height="15" fill="rgb(248,103,6)" fg:x="5153" fg:w="6"/><text x="61.7448%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="61.4376%" y="533" width="0.0596%" height="15" fill="rgb(214,53,46)" fg:x="5154" fg:w="5"/><text x="61.7567%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="61.4614%" y="517" width="0.0358%" height="15" fill="rgb(236,190,24)" fg:x="5156" fg:w="3"/><text x="61.7805%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="61.4614%" y="501" width="0.0358%" height="15" fill="rgb(254,58,28)" fg:x="5156" fg:w="3"/><text x="61.7805%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="61.4614%" y="485" width="0.0358%" height="15" fill="rgb(243,63,27)" fg:x="5156" fg:w="3"/><text x="61.7805%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="61.4853%" y="469" width="0.0119%" height="15" fill="rgb(206,81,20)" fg:x="5158" fg:w="1"/><text x="61.8044%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.4853%" y="453" width="0.0119%" height="15" fill="rgb(252,69,51)" fg:x="5158" fg:w="1"/><text x="61.8044%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (28 samples, 0.33%)</title><rect x="61.1992%" y="613" width="0.3338%" height="15" fill="rgb(222,213,4)" fg:x="5134" fg:w="28"/><text x="61.5183%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (28 samples, 0.33%)</title><rect x="61.1992%" y="597" width="0.3338%" height="15" fill="rgb(226,198,12)" fg:x="5134" fg:w="28"/><text x="61.5183%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="61.2230%" y="581" width="0.3099%" height="15" fill="rgb(248,115,11)" fg:x="5136" fg:w="26"/><text x="61.5421%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (25 samples, 0.30%)</title><rect x="61.2350%" y="565" width="0.2980%" height="15" fill="rgb(221,148,54)" fg:x="5137" fg:w="25"/><text x="61.5541%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="61.4972%" y="549" width="0.0358%" height="15" fill="rgb(214,209,51)" fg:x="5159" fg:w="3"/><text x="61.8163%" y="559.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="61.4972%" y="533" width="0.0358%" height="15" fill="rgb(249,116,53)" fg:x="5159" fg:w="3"/><text x="61.8163%" y="543.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="61.4972%" y="517" width="0.0358%" height="15" fill="rgb(248,170,1)" fg:x="5159" fg:w="3"/><text x="61.8163%" y="527.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="61.5091%" y="501" width="0.0238%" height="15" fill="rgb(244,105,10)" fg:x="5160" fg:w="2"/><text x="61.8282%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.5330%" y="549" width="0.0119%" height="15" fill="rgb(229,100,5)" fg:x="5162" fg:w="1"/><text x="61.8521%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.5330%" y="533" width="0.0119%" height="15" fill="rgb(233,221,39)" fg:x="5162" fg:w="1"/><text x="61.8521%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.5449%" y="533" width="0.0119%" height="15" fill="rgb(233,88,21)" fg:x="5163" fg:w="1"/><text x="61.8640%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.5449%" y="517" width="0.0119%" height="15" fill="rgb(206,13,0)" fg:x="5163" fg:w="1"/><text x="61.8640%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.5449%" y="501" width="0.0119%" height="15" fill="rgb(242,15,35)" fg:x="5163" fg:w="1"/><text x="61.8640%" y="511.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="61.5449%" y="485" width="0.0119%" height="15" fill="rgb(247,142,41)" fg:x="5163" fg:w="1"/><text x="61.8640%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.5687%" y="469" width="0.0119%" height="15" fill="rgb(245,51,29)" fg:x="5165" fg:w="1"/><text x="61.8878%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="61.5687%" y="453" width="0.0119%" height="15" fill="rgb(228,209,43)" fg:x="5165" fg:w="1"/><text x="61.8878%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.5687%" y="437" width="0.0119%" height="15" fill="rgb(233,185,9)" fg:x="5165" fg:w="1"/><text x="61.8878%" y="447.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.5687%" y="421" width="0.0119%" height="15" fill="rgb(226,93,0)" fg:x="5165" fg:w="1"/><text x="61.8878%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="61.5687%" y="405" width="0.0119%" height="15" fill="rgb(245,194,43)" fg:x="5165" fg:w="1"/><text x="61.8878%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.5687%" y="389" width="0.0119%" height="15" fill="rgb(211,145,34)" fg:x="5165" fg:w="1"/><text x="61.8878%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="61.5687%" y="373" width="0.0119%" height="15" fill="rgb(231,228,28)" fg:x="5165" fg:w="1"/><text x="61.8878%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.5687%" y="357" width="0.0119%" height="15" fill="rgb(236,149,4)" fg:x="5165" fg:w="1"/><text x="61.8878%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.5687%" y="341" width="0.0119%" height="15" fill="rgb(234,114,38)" fg:x="5165" fg:w="1"/><text x="61.8878%" y="351.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.5687%" y="325" width="0.0119%" height="15" fill="rgb(246,132,51)" fg:x="5165" fg:w="1"/><text x="61.8878%" y="335.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="61.5687%" y="309" width="0.0119%" height="15" fill="rgb(251,137,22)" fg:x="5165" fg:w="1"/><text x="61.8878%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="61.5568%" y="533" width="0.0358%" height="15" fill="rgb(243,59,52)" fg:x="5164" fg:w="3"/><text x="61.8759%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="61.5568%" y="517" width="0.0358%" height="15" fill="rgb(239,56,28)" fg:x="5164" fg:w="3"/><text x="61.8759%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="61.5568%" y="501" width="0.0358%" height="15" fill="rgb(218,168,27)" fg:x="5164" fg:w="3"/><text x="61.8759%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="61.5687%" y="485" width="0.0238%" height="15" fill="rgb(232,165,11)" fg:x="5165" fg:w="2"/><text x="61.8878%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.5806%" y="469" width="0.0119%" height="15" fill="rgb(253,55,41)" fg:x="5166" fg:w="1"/><text x="61.8997%" y="479.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="61.5330%" y="597" width="0.0715%" height="15" fill="rgb(233,206,24)" fg:x="5162" fg:w="6"/><text x="61.8521%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="61.5330%" y="581" width="0.0715%" height="15" fill="rgb(220,199,8)" fg:x="5162" fg:w="6"/><text x="61.8521%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="61.5330%" y="565" width="0.0715%" height="15" fill="rgb(254,65,26)" fg:x="5162" fg:w="6"/><text x="61.8521%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="61.5449%" y="549" width="0.0596%" height="15" fill="rgb(253,102,23)" fg:x="5163" fg:w="5"/><text x="61.8640%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.5926%" y="533" width="0.0119%" height="15" fill="rgb(231,103,35)" fg:x="5167" fg:w="1"/><text x="61.9117%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.5926%" y="517" width="0.0119%" height="15" fill="rgb(238,26,10)" fg:x="5167" fg:w="1"/><text x="61.9117%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.5926%" y="501" width="0.0119%" height="15" fill="rgb(234,191,34)" fg:x="5167" fg:w="1"/><text x="61.9117%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="61.5330%" y="613" width="0.0834%" height="15" fill="rgb(206,210,9)" fg:x="5162" fg:w="7"/><text x="61.8521%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.6045%" y="597" width="0.0119%" height="15" fill="rgb(219,155,3)" fg:x="5168" fg:w="1"/><text x="61.9236%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.6045%" y="581" width="0.0119%" height="15" fill="rgb(221,62,52)" fg:x="5168" fg:w="1"/><text x="61.9236%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.6045%" y="565" width="0.0119%" height="15" fill="rgb(215,197,36)" fg:x="5168" fg:w="1"/><text x="61.9236%" y="575.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="61.6164%" y="565" width="0.0238%" height="15" fill="rgb(226,222,6)" fg:x="5169" fg:w="2"/><text x="61.9355%" y="575.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="61.6164%" y="549" width="0.0238%" height="15" fill="rgb(215,58,28)" fg:x="5169" fg:w="2"/><text x="61.9355%" y="559.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="61.6164%" y="533" width="0.0238%" height="15" fill="rgb(212,148,2)" fg:x="5169" fg:w="2"/><text x="61.9355%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.6402%" y="389" width="0.0119%" height="15" fill="rgb(208,21,42)" fg:x="5171" fg:w="1"/><text x="61.9593%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.6402%" y="373" width="0.0119%" height="15" fill="rgb(209,107,26)" fg:x="5171" fg:w="1"/><text x="61.9593%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.6402%" y="357" width="0.0119%" height="15" fill="rgb(254,60,47)" fg:x="5171" fg:w="1"/><text x="61.9593%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="61.6522%" y="357" width="0.0715%" height="15" fill="rgb(207,226,45)" fg:x="5172" fg:w="6"/><text x="61.9713%" y="367.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="61.6522%" y="341" width="0.0715%" height="15" fill="rgb(223,124,22)" fg:x="5172" fg:w="6"/><text x="61.9713%" y="351.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="61.6522%" y="325" width="0.0715%" height="15" fill="rgb(240,162,13)" fg:x="5172" fg:w="6"/><text x="61.9713%" y="335.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="61.6522%" y="309" width="0.0715%" height="15" fill="rgb(244,199,31)" fg:x="5172" fg:w="6"/><text x="61.9713%" y="319.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="61.7356%" y="309" width="0.0358%" height="15" fill="rgb(207,92,16)" fg:x="5179" fg:w="3"/><text x="62.0547%" y="319.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="61.7356%" y="293" width="0.0358%" height="15" fill="rgb(215,31,19)" fg:x="5179" fg:w="3"/><text x="62.0547%" y="303.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="61.7356%" y="277" width="0.0358%" height="15" fill="rgb(245,118,14)" fg:x="5179" fg:w="3"/><text x="62.0547%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="61.6164%" y="581" width="0.1788%" height="15" fill="rgb(248,12,46)" fg:x="5169" fg:w="15"/><text x="61.9355%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="61.6402%" y="565" width="0.1550%" height="15" fill="rgb(209,119,0)" fg:x="5171" fg:w="13"/><text x="61.9593%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="61.6402%" y="549" width="0.1550%" height="15" fill="rgb(254,51,44)" fg:x="5171" fg:w="13"/><text x="61.9593%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="61.6402%" y="533" width="0.1550%" height="15" fill="rgb(253,182,35)" fg:x="5171" fg:w="13"/><text x="61.9593%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="61.6402%" y="517" width="0.1550%" height="15" fill="rgb(205,198,39)" fg:x="5171" fg:w="13"/><text x="61.9593%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="61.6402%" y="501" width="0.1550%" height="15" fill="rgb(251,175,48)" fg:x="5171" fg:w="13"/><text x="61.9593%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="61.6402%" y="485" width="0.1550%" height="15" fill="rgb(239,38,17)" fg:x="5171" fg:w="13"/><text x="61.9593%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="61.6402%" y="469" width="0.1550%" height="15" fill="rgb(212,101,8)" fg:x="5171" fg:w="13"/><text x="61.9593%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="61.6402%" y="453" width="0.1550%" height="15" fill="rgb(228,35,17)" fg:x="5171" fg:w="13"/><text x="61.9593%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="61.6402%" y="437" width="0.1550%" height="15" fill="rgb(214,95,8)" fg:x="5171" fg:w="13"/><text x="61.9593%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="61.6402%" y="421" width="0.1550%" height="15" fill="rgb(210,176,35)" fg:x="5171" fg:w="13"/><text x="61.9593%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="61.6402%" y="405" width="0.1550%" height="15" fill="rgb(226,4,3)" fg:x="5171" fg:w="13"/><text x="61.9593%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="61.6522%" y="389" width="0.1430%" height="15" fill="rgb(232,133,14)" fg:x="5172" fg:w="12"/><text x="61.9713%" y="399.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="61.6522%" y="373" width="0.1430%" height="15" fill="rgb(250,191,8)" fg:x="5172" fg:w="12"/><text x="61.9713%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="61.7237%" y="357" width="0.0715%" height="15" fill="rgb(213,12,45)" fg:x="5178" fg:w="6"/><text x="62.0428%" y="367.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="61.7356%" y="341" width="0.0596%" height="15" fill="rgb(233,78,26)" fg:x="5179" fg:w="5"/><text x="62.0547%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="61.7356%" y="325" width="0.0596%" height="15" fill="rgb(245,222,11)" fg:x="5179" fg:w="5"/><text x="62.0547%" y="335.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="61.7714%" y="309" width="0.0238%" height="15" fill="rgb(216,174,12)" fg:x="5182" fg:w="2"/><text x="62.0905%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.7714%" y="293" width="0.0238%" height="15" fill="rgb(213,15,9)" fg:x="5182" fg:w="2"/><text x="62.0905%" y="303.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="61.7714%" y="277" width="0.0238%" height="15" fill="rgb(238,103,32)" fg:x="5182" fg:w="2"/><text x="62.0905%" y="287.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.7714%" y="261" width="0.0238%" height="15" fill="rgb(245,85,15)" fg:x="5182" fg:w="2"/><text x="62.0905%" y="271.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="61.7714%" y="245" width="0.0238%" height="15" fill="rgb(254,204,5)" fg:x="5182" fg:w="2"/><text x="62.0905%" y="255.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.7714%" y="229" width="0.0238%" height="15" fill="rgb(231,178,15)" fg:x="5182" fg:w="2"/><text x="62.0905%" y="239.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="61.7714%" y="213" width="0.0238%" height="15" fill="rgb(248,151,3)" fg:x="5182" fg:w="2"/><text x="62.0905%" y="223.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="61.7714%" y="197" width="0.0238%" height="15" fill="rgb(250,139,13)" fg:x="5182" fg:w="2"/><text x="62.0905%" y="207.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="61.7714%" y="181" width="0.0238%" height="15" fill="rgb(243,107,53)" fg:x="5182" fg:w="2"/><text x="62.0905%" y="191.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="61.7952%" y="565" width="0.0477%" height="15" fill="rgb(232,81,15)" fg:x="5184" fg:w="4"/><text x="62.1143%" y="575.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="61.7952%" y="549" width="0.0477%" height="15" fill="rgb(225,187,48)" fg:x="5184" fg:w="4"/><text x="62.1143%" y="559.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="61.7952%" y="533" width="0.0477%" height="15" fill="rgb(205,116,12)" fg:x="5184" fg:w="4"/><text x="62.1143%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.8429%" y="533" width="0.0119%" height="15" fill="rgb(220,222,31)" fg:x="5188" fg:w="1"/><text x="62.1620%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.8429%" y="517" width="0.0119%" height="15" fill="rgb(233,187,49)" fg:x="5188" fg:w="1"/><text x="62.1620%" y="527.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="61.8429%" y="501" width="0.0119%" height="15" fill="rgb(211,168,53)" fg:x="5188" fg:w="1"/><text x="62.1620%" y="511.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.8548%" y="469" width="0.0119%" height="15" fill="rgb(206,160,16)" fg:x="5189" fg:w="1"/><text x="62.1739%" y="479.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="61.8548%" y="453" width="0.0119%" height="15" fill="rgb(254,164,13)" fg:x="5189" fg:w="1"/><text x="62.1739%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.8548%" y="437" width="0.0119%" height="15" fill="rgb(229,45,30)" fg:x="5189" fg:w="1"/><text x="62.1739%" y="447.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="61.8548%" y="421" width="0.0119%" height="15" fill="rgb(237,32,10)" fg:x="5189" fg:w="1"/><text x="62.1739%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="61.8548%" y="501" width="0.0358%" height="15" fill="rgb(251,20,47)" fg:x="5189" fg:w="3"/><text x="62.1739%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="61.8548%" y="485" width="0.0358%" height="15" fill="rgb(251,116,12)" fg:x="5189" fg:w="3"/><text x="62.1739%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="61.8667%" y="469" width="0.0238%" height="15" fill="rgb(214,227,27)" fg:x="5190" fg:w="2"/><text x="62.1858%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.8667%" y="453" width="0.0238%" height="15" fill="rgb(248,10,53)" fg:x="5190" fg:w="2"/><text x="62.1858%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="61.8667%" y="437" width="0.0238%" height="15" fill="rgb(221,176,25)" fg:x="5190" fg:w="2"/><text x="62.1858%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.8787%" y="421" width="0.0119%" height="15" fill="rgb(205,70,46)" fg:x="5191" fg:w="1"/><text x="62.1978%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="61.8787%" y="405" width="0.0119%" height="15" fill="rgb(217,45,38)" fg:x="5191" fg:w="1"/><text x="62.1978%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.8787%" y="389" width="0.0119%" height="15" fill="rgb(243,6,54)" fg:x="5191" fg:w="1"/><text x="62.1978%" y="399.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.8787%" y="373" width="0.0119%" height="15" fill="rgb(242,76,23)" fg:x="5191" fg:w="1"/><text x="62.1978%" y="383.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="61.8787%" y="357" width="0.0119%" height="15" fill="rgb(239,166,0)" fg:x="5191" fg:w="1"/><text x="62.1978%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.8787%" y="341" width="0.0119%" height="15" fill="rgb(238,174,32)" fg:x="5191" fg:w="1"/><text x="62.1978%" y="351.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="61.8787%" y="325" width="0.0119%" height="15" fill="rgb(238,124,44)" fg:x="5191" fg:w="1"/><text x="62.1978%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.8787%" y="309" width="0.0119%" height="15" fill="rgb(206,185,9)" fg:x="5191" fg:w="1"/><text x="62.1978%" y="319.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.8787%" y="293" width="0.0119%" height="15" fill="rgb(215,157,17)" fg:x="5191" fg:w="1"/><text x="62.1978%" y="303.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.8787%" y="277" width="0.0119%" height="15" fill="rgb(251,17,29)" fg:x="5191" fg:w="1"/><text x="62.1978%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="61.8548%" y="517" width="0.0596%" height="15" fill="rgb(227,113,27)" fg:x="5189" fg:w="5"/><text x="62.1739%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="61.8906%" y="501" width="0.0238%" height="15" fill="rgb(217,226,24)" fg:x="5192" fg:w="2"/><text x="62.2097%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.8906%" y="485" width="0.0238%" height="15" fill="rgb(251,99,38)" fg:x="5192" fg:w="2"/><text x="62.2097%" y="495.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="61.8906%" y="469" width="0.0238%" height="15" fill="rgb(231,147,19)" fg:x="5192" fg:w="2"/><text x="62.2097%" y="479.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="61.8906%" y="453" width="0.0238%" height="15" fill="rgb(230,86,8)" fg:x="5192" fg:w="2"/><text x="62.2097%" y="463.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="61.8906%" y="437" width="0.0238%" height="15" fill="rgb(237,159,39)" fg:x="5192" fg:w="2"/><text x="62.2097%" y="447.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="61.9144%" y="501" width="0.0119%" height="15" fill="rgb(247,179,47)" fg:x="5194" fg:w="1"/><text x="62.2335%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="61.9263%" y="469" width="0.0119%" height="15" fill="rgb(253,152,26)" fg:x="5195" fg:w="1"/><text x="62.2454%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="61.9263%" y="453" width="0.0119%" height="15" fill="rgb(222,211,15)" fg:x="5195" fg:w="1"/><text x="62.2454%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.9263%" y="485" width="0.0238%" height="15" fill="rgb(236,193,6)" fg:x="5195" fg:w="2"/><text x="62.2454%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="61.9383%" y="469" width="0.0119%" height="15" fill="rgb(226,206,10)" fg:x="5196" fg:w="1"/><text x="62.2574%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.9383%" y="453" width="0.0119%" height="15" fill="rgb(213,125,22)" fg:x="5196" fg:w="1"/><text x="62.2574%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="61.9383%" y="437" width="0.0119%" height="15" fill="rgb(221,66,28)" fg:x="5196" fg:w="1"/><text x="62.2574%" y="447.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="61.9502%" y="469" width="0.0477%" height="15" fill="rgb(222,84,53)" fg:x="5197" fg:w="4"/><text x="62.2693%" y="479.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="61.9502%" y="453" width="0.0477%" height="15" fill="rgb(243,50,15)" fg:x="5197" fg:w="4"/><text x="62.2693%" y="463.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="61.9621%" y="437" width="0.0358%" height="15" fill="rgb(208,184,23)" fg:x="5198" fg:w="3"/><text x="62.2812%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="61.9144%" y="517" width="0.1073%" height="15" fill="rgb(221,83,2)" fg:x="5194" fg:w="9"/><text x="62.2335%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="61.9263%" y="501" width="0.0954%" height="15" fill="rgb(236,53,24)" fg:x="5195" fg:w="8"/><text x="62.2454%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="61.9502%" y="485" width="0.0715%" height="15" fill="rgb(244,171,29)" fg:x="5197" fg:w="6"/><text x="62.2693%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="61.9979%" y="469" width="0.0238%" height="15" fill="rgb(205,19,11)" fg:x="5201" fg:w="2"/><text x="62.3170%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.9979%" y="453" width="0.0238%" height="15" fill="rgb(207,108,29)" fg:x="5201" fg:w="2"/><text x="62.3170%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="61.9979%" y="437" width="0.0238%" height="15" fill="rgb(236,215,43)" fg:x="5201" fg:w="2"/><text x="62.3170%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.9979%" y="421" width="0.0238%" height="15" fill="rgb(213,58,35)" fg:x="5201" fg:w="2"/><text x="62.3170%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="61.9979%" y="405" width="0.0238%" height="15" fill="rgb(220,211,46)" fg:x="5201" fg:w="2"/><text x="62.3170%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="61.9979%" y="389" width="0.0238%" height="15" fill="rgb(212,134,16)" fg:x="5201" fg:w="2"/><text x="62.3170%" y="399.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="61.9979%" y="373" width="0.0238%" height="15" fill="rgb(232,90,44)" fg:x="5201" fg:w="2"/><text x="62.3170%" y="383.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="61.9979%" y="357" width="0.0238%" height="15" fill="rgb(212,18,36)" fg:x="5201" fg:w="2"/><text x="62.3170%" y="367.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="61.9979%" y="341" width="0.0238%" height="15" fill="rgb(206,112,24)" fg:x="5201" fg:w="2"/><text x="62.3170%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (20 samples, 0.24%)</title><rect x="61.7952%" y="581" width="0.2384%" height="15" fill="rgb(238,223,40)" fg:x="5184" fg:w="20"/><text x="62.1143%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (16 samples, 0.19%)</title><rect x="61.8429%" y="565" width="0.1907%" height="15" fill="rgb(226,169,20)" fg:x="5188" fg:w="16"/><text x="62.1620%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="61.8429%" y="549" width="0.1907%" height="15" fill="rgb(241,64,52)" fg:x="5188" fg:w="16"/><text x="62.1620%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (15 samples, 0.18%)</title><rect x="61.8548%" y="533" width="0.1788%" height="15" fill="rgb(228,120,25)" fg:x="5189" fg:w="15"/><text x="62.1739%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.0217%" y="517" width="0.0119%" height="15" fill="rgb(234,108,19)" fg:x="5203" fg:w="1"/><text x="62.3408%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="62.0217%" y="501" width="0.0119%" height="15" fill="rgb(236,133,29)" fg:x="5203" fg:w="1"/><text x="62.3408%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="62.0217%" y="485" width="0.0119%" height="15" fill="rgb(246,174,53)" fg:x="5203" fg:w="1"/><text x="62.3408%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="62.0336%" y="565" width="0.0119%" height="15" fill="rgb(210,105,35)" fg:x="5204" fg:w="1"/><text x="62.3527%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="62.0336%" y="549" width="0.0119%" height="15" fill="rgb(225,27,26)" fg:x="5204" fg:w="1"/><text x="62.3527%" y="559.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="62.0455%" y="549" width="0.0358%" height="15" fill="rgb(233,2,39)" fg:x="5205" fg:w="3"/><text x="62.3646%" y="559.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="62.0455%" y="533" width="0.0358%" height="15" fill="rgb(219,164,26)" fg:x="5205" fg:w="3"/><text x="62.3646%" y="543.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="62.0575%" y="517" width="0.0238%" height="15" fill="rgb(236,211,5)" fg:x="5206" fg:w="2"/><text x="62.3766%" y="527.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="62.0813%" y="485" width="0.0477%" height="15" fill="rgb(244,227,23)" fg:x="5208" fg:w="4"/><text x="62.4004%" y="495.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="62.0813%" y="469" width="0.0477%" height="15" fill="rgb(230,184,8)" fg:x="5208" fg:w="4"/><text x="62.4004%" y="479.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="62.0932%" y="453" width="0.0358%" height="15" fill="rgb(217,125,48)" fg:x="5209" fg:w="3"/><text x="62.4123%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="62.0813%" y="501" width="0.0596%" height="15" fill="rgb(223,192,47)" fg:x="5208" fg:w="5"/><text x="62.4004%" y="511.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="62.1290%" y="485" width="0.0119%" height="15" fill="rgb(226,119,10)" fg:x="5212" fg:w="1"/><text x="62.4481%" y="495.50"/></g><g><title>memcpy@plt (1 samples, 0.01%)</title><rect x="62.1290%" y="469" width="0.0119%" height="15" fill="rgb(221,49,29)" fg:x="5212" fg:w="1"/><text x="62.4481%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="62.0336%" y="581" width="0.1311%" height="15" fill="rgb(217,205,19)" fg:x="5204" fg:w="11"/><text x="62.3527%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="62.0455%" y="565" width="0.1192%" height="15" fill="rgb(242,104,7)" fg:x="5205" fg:w="10"/><text x="62.3646%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="62.0813%" y="549" width="0.0834%" height="15" fill="rgb(209,154,48)" fg:x="5208" fg:w="7"/><text x="62.4004%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="62.0813%" y="533" width="0.0834%" height="15" fill="rgb(219,213,46)" fg:x="5208" fg:w="7"/><text x="62.4004%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="62.0813%" y="517" width="0.0834%" height="15" fill="rgb(229,105,38)" fg:x="5208" fg:w="7"/><text x="62.4004%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.1409%" y="501" width="0.0238%" height="15" fill="rgb(205,151,5)" fg:x="5213" fg:w="2"/><text x="62.4600%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="62.1409%" y="485" width="0.0238%" height="15" fill="rgb(248,115,40)" fg:x="5213" fg:w="2"/><text x="62.4600%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.1409%" y="469" width="0.0238%" height="15" fill="rgb(206,179,2)" fg:x="5213" fg:w="2"/><text x="62.4600%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="62.1528%" y="453" width="0.0119%" height="15" fill="rgb(230,103,24)" fg:x="5214" fg:w="1"/><text x="62.4719%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.1528%" y="437" width="0.0119%" height="15" fill="rgb(218,152,4)" fg:x="5214" fg:w="1"/><text x="62.4719%" y="447.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="62.1528%" y="421" width="0.0119%" height="15" fill="rgb(236,161,54)" fg:x="5214" fg:w="1"/><text x="62.4719%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.1528%" y="405" width="0.0119%" height="15" fill="rgb(226,65,17)" fg:x="5214" fg:w="1"/><text x="62.4719%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="62.1528%" y="389" width="0.0119%" height="15" fill="rgb(221,134,44)" fg:x="5214" fg:w="1"/><text x="62.4719%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="62.1528%" y="373" width="0.0119%" height="15" fill="rgb(251,129,4)" fg:x="5214" fg:w="1"/><text x="62.4719%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="62.1647%" y="533" width="0.0119%" height="15" fill="rgb(244,32,34)" fg:x="5215" fg:w="1"/><text x="62.4838%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="62.1647%" y="517" width="0.0119%" height="15" fill="rgb(251,224,37)" fg:x="5215" fg:w="1"/><text x="62.4838%" y="527.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="62.1767%" y="501" width="0.0358%" height="15" fill="rgb(248,117,31)" fg:x="5216" fg:w="3"/><text x="62.4958%" y="511.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="62.1767%" y="485" width="0.0358%" height="15" fill="rgb(222,208,37)" fg:x="5216" fg:w="3"/><text x="62.4958%" y="495.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="62.1767%" y="469" width="0.0358%" height="15" fill="rgb(234,211,25)" fg:x="5216" fg:w="3"/><text x="62.4958%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="62.2124%" y="325" width="0.0358%" height="15" fill="rgb(211,72,6)" fg:x="5219" fg:w="3"/><text x="62.5315%" y="335.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="62.2124%" y="309" width="0.0358%" height="15" fill="rgb(249,198,38)" fg:x="5219" fg:w="3"/><text x="62.5315%" y="319.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="62.2124%" y="293" width="0.0358%" height="15" fill="rgb(221,86,51)" fg:x="5219" fg:w="3"/><text x="62.5315%" y="303.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="62.2124%" y="277" width="0.0358%" height="15" fill="rgb(226,178,43)" fg:x="5219" fg:w="3"/><text x="62.5315%" y="287.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="62.2482%" y="213" width="0.0238%" height="15" fill="rgb(215,145,7)" fg:x="5222" fg:w="2"/><text x="62.5673%" y="223.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="62.2482%" y="197" width="0.0238%" height="15" fill="rgb(250,202,36)" fg:x="5222" fg:w="2"/><text x="62.5673%" y="207.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="62.2601%" y="181" width="0.0119%" height="15" fill="rgb(215,86,13)" fg:x="5223" fg:w="1"/><text x="62.5792%" y="191.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="62.2720%" y="213" width="0.0358%" height="15" fill="rgb(221,134,12)" fg:x="5224" fg:w="3"/><text x="62.5911%" y="223.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="62.2720%" y="197" width="0.0358%" height="15" fill="rgb(213,82,10)" fg:x="5224" fg:w="3"/><text x="62.5911%" y="207.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="62.2720%" y="181" width="0.0358%" height="15" fill="rgb(214,142,0)" fg:x="5224" fg:w="3"/><text x="62.5911%" y="191.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="62.2720%" y="165" width="0.0358%" height="15" fill="rgb(205,145,9)" fg:x="5224" fg:w="3"/><text x="62.5911%" y="175.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="62.2720%" y="149" width="0.0358%" height="15" fill="rgb(244,214,8)" fg:x="5224" fg:w="3"/><text x="62.5911%" y="159.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="62.1647%" y="549" width="0.1550%" height="15" fill="rgb(224,72,51)" fg:x="5215" fg:w="13"/><text x="62.4838%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="62.1767%" y="533" width="0.1430%" height="15" fill="rgb(233,137,37)" fg:x="5216" fg:w="12"/><text x="62.4958%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="62.1767%" y="517" width="0.1430%" height="15" fill="rgb(208,71,28)" fg:x="5216" fg:w="12"/><text x="62.4958%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="62.2124%" y="501" width="0.1073%" height="15" fill="rgb(226,31,7)" fg:x="5219" fg:w="9"/><text x="62.5315%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="62.2124%" y="485" width="0.1073%" height="15" fill="rgb(229,62,18)" fg:x="5219" fg:w="9"/><text x="62.5315%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="62.2124%" y="469" width="0.1073%" height="15" fill="rgb(226,74,28)" fg:x="5219" fg:w="9"/><text x="62.5315%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="62.2124%" y="453" width="0.1073%" height="15" fill="rgb(214,170,18)" fg:x="5219" fg:w="9"/><text x="62.5315%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="62.2124%" y="437" width="0.1073%" height="15" fill="rgb(227,229,35)" fg:x="5219" fg:w="9"/><text x="62.5315%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="62.2124%" y="421" width="0.1073%" height="15" fill="rgb(225,181,39)" fg:x="5219" fg:w="9"/><text x="62.5315%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="62.2124%" y="405" width="0.1073%" height="15" fill="rgb(253,124,44)" fg:x="5219" fg:w="9"/><text x="62.5315%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="62.2124%" y="389" width="0.1073%" height="15" fill="rgb(220,75,18)" fg:x="5219" fg:w="9"/><text x="62.5315%" y="399.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="62.2124%" y="373" width="0.1073%" height="15" fill="rgb(239,175,43)" fg:x="5219" fg:w="9"/><text x="62.5315%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="62.2124%" y="357" width="0.1073%" height="15" fill="rgb(228,112,50)" fg:x="5219" fg:w="9"/><text x="62.5315%" y="367.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="62.2124%" y="341" width="0.1073%" height="15" fill="rgb(232,105,36)" fg:x="5219" fg:w="9"/><text x="62.5315%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="62.2482%" y="325" width="0.0715%" height="15" fill="rgb(227,137,47)" fg:x="5222" fg:w="6"/><text x="62.5673%" y="335.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="62.2482%" y="309" width="0.0715%" height="15" fill="rgb(217,51,9)" fg:x="5222" fg:w="6"/><text x="62.5673%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="62.2482%" y="293" width="0.0715%" height="15" fill="rgb(245,117,0)" fg:x="5222" fg:w="6"/><text x="62.5673%" y="303.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="62.2482%" y="277" width="0.0715%" height="15" fill="rgb(252,52,30)" fg:x="5222" fg:w="6"/><text x="62.5673%" y="287.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="62.2482%" y="261" width="0.0715%" height="15" fill="rgb(227,85,33)" fg:x="5222" fg:w="6"/><text x="62.5673%" y="271.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="62.2482%" y="245" width="0.0715%" height="15" fill="rgb(220,157,20)" fg:x="5222" fg:w="6"/><text x="62.5673%" y="255.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="62.2482%" y="229" width="0.0715%" height="15" fill="rgb(254,14,34)" fg:x="5222" fg:w="6"/><text x="62.5673%" y="239.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="62.3078%" y="213" width="0.0119%" height="15" fill="rgb(216,103,41)" fg:x="5227" fg:w="1"/><text x="62.6269%" y="223.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="62.3197%" y="405" width="0.0358%" height="15" fill="rgb(245,221,9)" fg:x="5228" fg:w="3"/><text x="62.6388%" y="415.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="62.3197%" y="389" width="0.0358%" height="15" fill="rgb(254,136,47)" fg:x="5228" fg:w="3"/><text x="62.6388%" y="399.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="62.3316%" y="373" width="0.0238%" height="15" fill="rgb(235,71,46)" fg:x="5229" fg:w="2"/><text x="62.6507%" y="383.50"/></g><g><title>parser::operator+ (295 samples, 3.52%)</title><rect x="58.8986%" y="725" width="3.5165%" height="15" fill="rgb(242,154,29)" fg:x="4941" fg:w="295"/><text x="59.2177%" y="735.50">..r+ </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (273 samples, 3.25%)</title><rect x="59.1608%" y="709" width="3.2543%" height="15" fill="rgb(210,65,31)" fg:x="4963" fg:w="273"/><text x="59.4799%" y="719.50">..r </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (273 samples, 3.25%)</title><rect x="59.1608%" y="693" width="3.2543%" height="15" fill="rgb(244,9,50)" fg:x="4963" fg:w="273"/><text x="59.4799%" y="703.50">..on </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (219 samples, 2.61%)</title><rect x="59.8045%" y="677" width="2.6106%" height="15" fill="rgb(215,141,38)" fg:x="5017" fg:w="219"/><text x="60.1236%" y="687.50">..r </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (219 samples, 2.61%)</title><rect x="59.8045%" y="661" width="2.6106%" height="15" fill="rgb(241,129,6)" fg:x="5017" fg:w="219"/><text x="60.1236%" y="671.50">..n </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (138 samples, 1.65%)</title><rect x="60.7701%" y="645" width="1.6450%" height="15" fill="rgb(253,169,4)" fg:x="5098" fg:w="138"/><text x="61.0892%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (131 samples, 1.56%)</title><rect x="60.8535%" y="629" width="1.5616%" height="15" fill="rgb(237,82,36)" fg:x="5105" fg:w="131"/><text x="61.1726%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (67 samples, 0.80%)</title><rect x="61.6164%" y="613" width="0.7987%" height="15" fill="rgb(209,171,11)" fg:x="5169" fg:w="67"/><text x="61.9355%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (67 samples, 0.80%)</title><rect x="61.6164%" y="597" width="0.7987%" height="15" fill="rgb(242,19,22)" fg:x="5169" fg:w="67"/><text x="61.9355%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="62.1647%" y="581" width="0.2503%" height="15" fill="rgb(251,122,24)" fg:x="5215" fg:w="21"/><text x="62.4838%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (21 samples, 0.25%)</title><rect x="62.1647%" y="565" width="0.2503%" height="15" fill="rgb(226,166,42)" fg:x="5215" fg:w="21"/><text x="62.4838%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="62.3197%" y="549" width="0.0954%" height="15" fill="rgb(244,101,48)" fg:x="5228" fg:w="8"/><text x="62.6388%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="62.3197%" y="533" width="0.0954%" height="15" fill="rgb(227,125,1)" fg:x="5228" fg:w="8"/><text x="62.6388%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="62.3197%" y="517" width="0.0954%" height="15" fill="rgb(206,79,43)" fg:x="5228" fg:w="8"/><text x="62.6388%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="62.3197%" y="501" width="0.0954%" height="15" fill="rgb(241,109,41)" fg:x="5228" fg:w="8"/><text x="62.6388%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="62.3197%" y="485" width="0.0954%" height="15" fill="rgb(219,73,4)" fg:x="5228" fg:w="8"/><text x="62.6388%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="62.3197%" y="469" width="0.0954%" height="15" fill="rgb(239,25,41)" fg:x="5228" fg:w="8"/><text x="62.6388%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="62.3197%" y="453" width="0.0954%" height="15" fill="rgb(208,88,46)" fg:x="5228" fg:w="8"/><text x="62.6388%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="62.3197%" y="437" width="0.0954%" height="15" fill="rgb(239,184,9)" fg:x="5228" fg:w="8"/><text x="62.6388%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="62.3197%" y="421" width="0.0954%" height="15" fill="rgb(223,114,13)" fg:x="5228" fg:w="8"/><text x="62.6388%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="62.3555%" y="405" width="0.0596%" height="15" fill="rgb(214,28,42)" fg:x="5231" fg:w="5"/><text x="62.6746%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="62.3555%" y="389" width="0.0596%" height="15" fill="rgb(252,32,44)" fg:x="5231" fg:w="5"/><text x="62.6746%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="62.3555%" y="373" width="0.0596%" height="15" fill="rgb(231,159,4)" fg:x="5231" fg:w="5"/><text x="62.6746%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="62.3555%" y="357" width="0.0596%" height="15" fill="rgb(210,35,26)" fg:x="5231" fg:w="5"/><text x="62.6746%" y="367.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="62.3555%" y="341" width="0.0596%" height="15" fill="rgb(208,190,37)" fg:x="5231" fg:w="5"/><text x="62.6746%" y="351.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="62.3555%" y="325" width="0.0596%" height="15" fill="rgb(226,148,22)" fg:x="5231" fg:w="5"/><text x="62.6746%" y="335.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="62.3555%" y="309" width="0.0596%" height="15" fill="rgb(242,153,24)" fg:x="5231" fg:w="5"/><text x="62.6746%" y="319.50"/></g><g><title>parser::operator+@plt (1 samples, 0.01%)</title><rect x="62.4151%" y="725" width="0.0119%" height="15" fill="rgb(213,133,7)" fg:x="5236" fg:w="1"/><text x="62.7342%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.4270%" y="725" width="0.0119%" height="15" fill="rgb(248,206,18)" fg:x="5237" fg:w="1"/><text x="62.7461%" y="735.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.4270%" y="709" width="0.0119%" height="15" fill="rgb(233,157,4)" fg:x="5237" fg:w="1"/><text x="62.7461%" y="719.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.4270%" y="693" width="0.0119%" height="15" fill="rgb(249,179,32)" fg:x="5237" fg:w="1"/><text x="62.7461%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.4389%" y="597" width="0.0119%" height="15" fill="rgb(248,69,35)" fg:x="5238" fg:w="1"/><text x="62.7580%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.4389%" y="581" width="0.0119%" height="15" fill="rgb(249,158,38)" fg:x="5238" fg:w="1"/><text x="62.7580%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.4389%" y="613" width="0.0238%" height="15" fill="rgb(223,18,43)" fg:x="5238" fg:w="2"/><text x="62.7580%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.4508%" y="597" width="0.0119%" height="15" fill="rgb(238,42,45)" fg:x="5239" fg:w="1"/><text x="62.7699%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.4508%" y="581" width="0.0119%" height="15" fill="rgb(219,65,47)" fg:x="5239" fg:w="1"/><text x="62.7699%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.4508%" y="565" width="0.0119%" height="15" fill="rgb(248,153,12)" fg:x="5239" fg:w="1"/><text x="62.7699%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.4627%" y="597" width="0.0119%" height="15" fill="rgb(240,118,4)" fg:x="5240" fg:w="1"/><text x="62.7818%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.4627%" y="581" width="0.0119%" height="15" fill="rgb(250,96,34)" fg:x="5240" fg:w="1"/><text x="62.7818%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.4747%" y="565" width="0.0119%" height="15" fill="rgb(221,15,4)" fg:x="5241" fg:w="1"/><text x="62.7938%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.4747%" y="549" width="0.0119%" height="15" fill="rgb(217,149,33)" fg:x="5241" fg:w="1"/><text x="62.7938%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.4747%" y="597" width="0.0238%" height="15" fill="rgb(213,58,29)" fg:x="5241" fg:w="2"/><text x="62.7938%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.4747%" y="581" width="0.0238%" height="15" fill="rgb(236,218,9)" fg:x="5241" fg:w="2"/><text x="62.7938%" y="591.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="62.4866%" y="565" width="0.0119%" height="15" fill="rgb(248,40,19)" fg:x="5242" fg:w="1"/><text x="62.8057%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.4985%" y="581" width="0.0119%" height="15" fill="rgb(212,17,6)" fg:x="5243" fg:w="1"/><text x="62.8176%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.4985%" y="565" width="0.0119%" height="15" fill="rgb(206,212,20)" fg:x="5243" fg:w="1"/><text x="62.8176%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.5104%" y="549" width="0.0119%" height="15" fill="rgb(229,80,37)" fg:x="5244" fg:w="1"/><text x="62.8295%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.5104%" y="533" width="0.0119%" height="15" fill="rgb(253,8,37)" fg:x="5244" fg:w="1"/><text x="62.8295%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="62.4389%" y="725" width="0.0954%" height="15" fill="rgb(215,16,43)" fg:x="5238" fg:w="8"/><text x="62.7580%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="62.4389%" y="709" width="0.0954%" height="15" fill="rgb(236,219,16)" fg:x="5238" fg:w="8"/><text x="62.7580%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="62.4389%" y="693" width="0.0954%" height="15" fill="rgb(251,0,3)" fg:x="5238" fg:w="8"/><text x="62.7580%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="62.4389%" y="677" width="0.0954%" height="15" fill="rgb(207,133,37)" fg:x="5238" fg:w="8"/><text x="62.7580%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="62.4389%" y="661" width="0.0954%" height="15" fill="rgb(250,143,20)" fg:x="5238" fg:w="8"/><text x="62.7580%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="62.4389%" y="645" width="0.0954%" height="15" fill="rgb(242,19,50)" fg:x="5238" fg:w="8"/><text x="62.7580%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="62.4389%" y="629" width="0.0954%" height="15" fill="rgb(206,124,43)" fg:x="5238" fg:w="8"/><text x="62.7580%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="62.4627%" y="613" width="0.0715%" height="15" fill="rgb(229,4,38)" fg:x="5240" fg:w="6"/><text x="62.7818%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="62.4985%" y="597" width="0.0358%" height="15" fill="rgb(247,220,45)" fg:x="5243" fg:w="3"/><text x="62.8176%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.5104%" y="581" width="0.0238%" height="15" fill="rgb(247,195,0)" fg:x="5244" fg:w="2"/><text x="62.8295%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.5104%" y="565" width="0.0238%" height="15" fill="rgb(252,12,19)" fg:x="5244" fg:w="2"/><text x="62.8295%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.5224%" y="549" width="0.0119%" height="15" fill="rgb(222,49,50)" fg:x="5245" fg:w="1"/><text x="62.8415%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.5224%" y="533" width="0.0119%" height="15" fill="rgb(209,157,28)" fg:x="5245" fg:w="1"/><text x="62.8415%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.5224%" y="517" width="0.0119%" height="15" fill="rgb(238,174,24)" fg:x="5245" fg:w="1"/><text x="62.8415%" y="527.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="62.5343%" y="645" width="0.0119%" height="15" fill="rgb(224,17,28)" fg:x="5246" fg:w="1"/><text x="62.8534%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.5343%" y="725" width="0.0238%" height="15" fill="rgb(249,7,29)" fg:x="5246" fg:w="2"/><text x="62.8534%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.5343%" y="709" width="0.0238%" height="15" fill="rgb(243,178,4)" fg:x="5246" fg:w="2"/><text x="62.8534%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.5343%" y="693" width="0.0238%" height="15" fill="rgb(246,138,35)" fg:x="5246" fg:w="2"/><text x="62.8534%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.5343%" y="677" width="0.0238%" height="15" fill="rgb(251,85,18)" fg:x="5246" fg:w="2"/><text x="62.8534%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.5343%" y="661" width="0.0238%" height="15" fill="rgb(254,55,9)" fg:x="5246" fg:w="2"/><text x="62.8534%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.5462%" y="645" width="0.0119%" height="15" fill="rgb(248,4,50)" fg:x="5247" fg:w="1"/><text x="62.8653%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="62.5462%" y="629" width="0.0119%" height="15" fill="rgb(215,208,14)" fg:x="5247" fg:w="1"/><text x="62.8653%" y="639.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.5581%" y="709" width="0.0119%" height="15" fill="rgb(218,37,18)" fg:x="5248" fg:w="1"/><text x="62.8772%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.5581%" y="693" width="0.0119%" height="15" fill="rgb(206,104,13)" fg:x="5248" fg:w="1"/><text x="62.8772%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.5581%" y="677" width="0.0119%" height="15" fill="rgb(248,94,22)" fg:x="5248" fg:w="1"/><text x="62.8772%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.5581%" y="661" width="0.0119%" height="15" fill="rgb(235,42,46)" fg:x="5248" fg:w="1"/><text x="62.8772%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.5581%" y="645" width="0.0119%" height="15" fill="rgb(220,228,48)" fg:x="5248" fg:w="1"/><text x="62.8772%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.5581%" y="629" width="0.0119%" height="15" fill="rgb(216,58,12)" fg:x="5248" fg:w="1"/><text x="62.8772%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.5581%" y="725" width="0.0238%" height="15" fill="rgb(223,97,52)" fg:x="5248" fg:w="2"/><text x="62.8772%" y="735.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.5700%" y="709" width="0.0119%" height="15" fill="rgb(208,159,17)" fg:x="5249" fg:w="1"/><text x="62.8891%" y="719.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.5700%" y="693" width="0.0119%" height="15" fill="rgb(215,172,9)" fg:x="5249" fg:w="1"/><text x="62.8891%" y="703.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.5700%" y="677" width="0.0119%" height="15" fill="rgb(252,175,30)" fg:x="5249" fg:w="1"/><text x="62.8891%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.5820%" y="709" width="0.0119%" height="15" fill="rgb(209,159,10)" fg:x="5250" fg:w="1"/><text x="62.9011%" y="719.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.5820%" y="693" width="0.0119%" height="15" fill="rgb(229,73,51)" fg:x="5250" fg:w="1"/><text x="62.9011%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.5939%" y="677" width="0.0119%" height="15" fill="rgb(208,212,43)" fg:x="5251" fg:w="1"/><text x="62.9130%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.5939%" y="661" width="0.0119%" height="15" fill="rgb(254,123,53)" fg:x="5251" fg:w="1"/><text x="62.9130%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.5939%" y="693" width="0.0238%" height="15" fill="rgb(254,128,49)" fg:x="5251" fg:w="2"/><text x="62.9130%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.6058%" y="677" width="0.0119%" height="15" fill="rgb(246,16,16)" fg:x="5252" fg:w="1"/><text x="62.9249%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned short), cond::same_indent(unsigned int)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.6058%" y="661" width="0.0119%" height="15" fill="rgb(209,200,1)" fg:x="5252" fg:w="1"/><text x="62.9249%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.6177%" y="661" width="0.0119%" height="15" fill="rgb(235,9,3)" fg:x="5253" fg:w="1"/><text x="62.9368%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.6177%" y="645" width="0.0119%" height="15" fill="rgb(233,121,54)" fg:x="5253" fg:w="1"/><text x="62.9368%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.6177%" y="629" width="0.0119%" height="15" fill="rgb(236,80,25)" fg:x="5253" fg:w="1"/><text x="62.9368%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.6296%" y="645" width="0.0119%" height="15" fill="rgb(220,44,24)" fg:x="5254" fg:w="1"/><text x="62.9487%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.6296%" y="629" width="0.0119%" height="15" fill="rgb(236,225,16)" fg:x="5254" fg:w="1"/><text x="62.9487%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.6296%" y="613" width="0.0119%" height="15" fill="rgb(237,140,0)" fg:x="5254" fg:w="1"/><text x="62.9487%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.6296%" y="597" width="0.0119%" height="15" fill="rgb(243,225,53)" fg:x="5254" fg:w="1"/><text x="62.9487%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.6416%" y="597" width="0.0119%" height="15" fill="rgb(240,140,30)" fg:x="5255" fg:w="1"/><text x="62.9607%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="62.6416%" y="581" width="0.0119%" height="15" fill="rgb(217,51,16)" fg:x="5255" fg:w="1"/><text x="62.9607%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.6535%" y="581" width="0.0119%" height="15" fill="rgb(245,75,50)" fg:x="5256" fg:w="1"/><text x="62.9726%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.6535%" y="565" width="0.0119%" height="15" fill="rgb(208,174,22)" fg:x="5256" fg:w="1"/><text x="62.9726%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.6654%" y="581" width="0.0119%" height="15" fill="rgb(219,98,50)" fg:x="5257" fg:w="1"/><text x="62.9845%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.6654%" y="565" width="0.0119%" height="15" fill="rgb(243,138,3)" fg:x="5257" fg:w="1"/><text x="62.9845%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.6654%" y="549" width="0.0119%" height="15" fill="rgb(243,132,26)" fg:x="5257" fg:w="1"/><text x="62.9845%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="62.6773%" y="517" width="0.0119%" height="15" fill="rgb(250,201,8)" fg:x="5258" fg:w="1"/><text x="62.9964%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="62.6177%" y="693" width="0.0834%" height="15" fill="rgb(213,91,26)" fg:x="5253" fg:w="7"/><text x="62.9368%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="62.6177%" y="677" width="0.0834%" height="15" fill="rgb(229,117,1)" fg:x="5253" fg:w="7"/><text x="62.9368%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="62.6296%" y="661" width="0.0715%" height="15" fill="rgb(229,24,6)" fg:x="5254" fg:w="6"/><text x="62.9487%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="62.6416%" y="645" width="0.0596%" height="15" fill="rgb(206,69,11)" fg:x="5255" fg:w="5"/><text x="62.9607%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="62.6416%" y="629" width="0.0596%" height="15" fill="rgb(234,111,34)" fg:x="5255" fg:w="5"/><text x="62.9607%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="62.6416%" y="613" width="0.0596%" height="15" fill="rgb(213,187,51)" fg:x="5255" fg:w="5"/><text x="62.9607%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="62.6535%" y="597" width="0.0477%" height="15" fill="rgb(207,45,11)" fg:x="5256" fg:w="4"/><text x="62.9726%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.6773%" y="581" width="0.0238%" height="15" fill="rgb(225,151,47)" fg:x="5258" fg:w="2"/><text x="62.9964%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.6773%" y="565" width="0.0238%" height="15" fill="rgb(211,226,5)" fg:x="5258" fg:w="2"/><text x="62.9964%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.6773%" y="549" width="0.0238%" height="15" fill="rgb(214,83,52)" fg:x="5258" fg:w="2"/><text x="62.9964%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.6773%" y="533" width="0.0238%" height="15" fill="rgb(229,49,53)" fg:x="5258" fg:w="2"/><text x="62.9964%" y="543.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.6892%" y="517" width="0.0119%" height="15" fill="rgb(246,8,28)" fg:x="5259" fg:w="1"/><text x="63.0083%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="62.6892%" y="501" width="0.0119%" height="15" fill="rgb(207,28,41)" fg:x="5259" fg:w="1"/><text x="63.0083%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="62.5939%" y="709" width="0.1192%" height="15" fill="rgb(254,22,25)" fg:x="5251" fg:w="10"/><text x="62.9130%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.7012%" y="693" width="0.0119%" height="15" fill="rgb(209,120,42)" fg:x="5260" fg:w="1"/><text x="63.0203%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.7012%" y="677" width="0.0119%" height="15" fill="rgb(216,194,18)" fg:x="5260" fg:w="1"/><text x="63.0203%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.7012%" y="661" width="0.0119%" height="15" fill="rgb(213,70,17)" fg:x="5260" fg:w="1"/><text x="63.0203%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.7131%" y="693" width="0.0119%" height="15" fill="rgb(228,66,19)" fg:x="5261" fg:w="1"/><text x="63.0322%" y="703.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.7131%" y="677" width="0.0119%" height="15" fill="rgb(236,221,54)" fg:x="5261" fg:w="1"/><text x="63.0322%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.7250%" y="597" width="0.0119%" height="15" fill="rgb(207,175,15)" fg:x="5262" fg:w="1"/><text x="63.0441%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.7250%" y="581" width="0.0119%" height="15" fill="rgb(234,76,8)" fg:x="5262" fg:w="1"/><text x="63.0441%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.7369%" y="581" width="0.0119%" height="15" fill="rgb(243,106,0)" fg:x="5263" fg:w="1"/><text x="63.0560%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.7369%" y="565" width="0.0119%" height="15" fill="rgb(208,48,19)" fg:x="5263" fg:w="1"/><text x="63.0560%" y="575.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="62.7369%" y="549" width="0.0119%" height="15" fill="rgb(251,50,29)" fg:x="5263" fg:w="1"/><text x="63.0560%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="62.7250%" y="693" width="0.0358%" height="15" fill="rgb(222,31,49)" fg:x="5262" fg:w="3"/><text x="63.0441%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="62.7250%" y="677" width="0.0358%" height="15" fill="rgb(232,33,18)" fg:x="5262" fg:w="3"/><text x="63.0441%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="62.7250%" y="661" width="0.0358%" height="15" fill="rgb(209,1,44)" fg:x="5262" fg:w="3"/><text x="63.0441%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="62.7250%" y="645" width="0.0358%" height="15" fill="rgb(211,7,1)" fg:x="5262" fg:w="3"/><text x="63.0441%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="62.7250%" y="629" width="0.0358%" height="15" fill="rgb(224,111,27)" fg:x="5262" fg:w="3"/><text x="63.0441%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="62.7250%" y="613" width="0.0358%" height="15" fill="rgb(252,195,39)" fg:x="5262" fg:w="3"/><text x="63.0441%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.7369%" y="597" width="0.0238%" height="15" fill="rgb(237,198,5)" fg:x="5263" fg:w="2"/><text x="63.0560%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.7488%" y="581" width="0.0119%" height="15" fill="rgb(232,148,1)" fg:x="5264" fg:w="1"/><text x="63.0679%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.7488%" y="565" width="0.0119%" height="15" fill="rgb(249,41,3)" fg:x="5264" fg:w="1"/><text x="63.0679%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.7488%" y="549" width="0.0119%" height="15" fill="rgb(215,14,33)" fg:x="5264" fg:w="1"/><text x="63.0679%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.7488%" y="533" width="0.0119%" height="15" fill="rgb(209,146,24)" fg:x="5264" fg:w="1"/><text x="63.0679%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.7488%" y="517" width="0.0119%" height="15" fill="rgb(219,51,47)" fg:x="5264" fg:w="1"/><text x="63.0679%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.7608%" y="677" width="0.0119%" height="15" fill="rgb(234,217,40)" fg:x="5265" fg:w="1"/><text x="63.0799%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.7608%" y="661" width="0.0119%" height="15" fill="rgb(228,34,26)" fg:x="5265" fg:w="1"/><text x="63.0799%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.7727%" y="645" width="0.0119%" height="15" fill="rgb(224,50,29)" fg:x="5266" fg:w="1"/><text x="63.0918%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.7727%" y="629" width="0.0119%" height="15" fill="rgb(205,79,51)" fg:x="5266" fg:w="1"/><text x="63.0918%" y="639.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="62.7846%" y="645" width="0.0119%" height="15" fill="rgb(218,136,28)" fg:x="5267" fg:w="1"/><text x="63.1037%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.7965%" y="597" width="0.0119%" height="15" fill="rgb(220,150,10)" fg:x="5268" fg:w="1"/><text x="63.1156%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.7965%" y="581" width="0.0119%" height="15" fill="rgb(242,158,47)" fg:x="5268" fg:w="1"/><text x="63.1156%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.8084%" y="565" width="0.0119%" height="15" fill="rgb(209,68,0)" fg:x="5269" fg:w="1"/><text x="63.1275%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.8084%" y="549" width="0.0119%" height="15" fill="rgb(208,13,41)" fg:x="5269" fg:w="1"/><text x="63.1275%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="62.7965%" y="645" width="0.0358%" height="15" fill="rgb(226,201,7)" fg:x="5268" fg:w="3"/><text x="63.1156%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="62.7965%" y="629" width="0.0358%" height="15" fill="rgb(236,103,26)" fg:x="5268" fg:w="3"/><text x="63.1156%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="62.7965%" y="613" width="0.0358%" height="15" fill="rgb(243,162,8)" fg:x="5268" fg:w="3"/><text x="63.1156%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.8084%" y="597" width="0.0238%" height="15" fill="rgb(237,225,11)" fg:x="5269" fg:w="2"/><text x="63.1275%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.8084%" y="581" width="0.0238%" height="15" fill="rgb(247,186,32)" fg:x="5269" fg:w="2"/><text x="63.1275%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.8204%" y="565" width="0.0119%" height="15" fill="rgb(215,26,28)" fg:x="5270" fg:w="1"/><text x="63.1395%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.8204%" y="549" width="0.0119%" height="15" fill="rgb(208,121,6)" fg:x="5270" fg:w="1"/><text x="63.1395%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.8204%" y="533" width="0.0119%" height="15" fill="rgb(225,91,3)" fg:x="5270" fg:w="1"/><text x="63.1395%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.8204%" y="517" width="0.0119%" height="15" fill="rgb(246,119,36)" fg:x="5270" fg:w="1"/><text x="63.1395%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="62.8323%" y="629" width="0.0119%" height="15" fill="rgb(254,173,2)" fg:x="5271" fg:w="1"/><text x="63.1514%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="62.7727%" y="661" width="0.0834%" height="15" fill="rgb(209,87,54)" fg:x="5266" fg:w="7"/><text x="63.0918%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.8323%" y="645" width="0.0238%" height="15" fill="rgb(223,216,20)" fg:x="5271" fg:w="2"/><text x="63.1514%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.8442%" y="629" width="0.0119%" height="15" fill="rgb(220,31,8)" fg:x="5272" fg:w="1"/><text x="63.1633%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.8442%" y="613" width="0.0119%" height="15" fill="rgb(220,185,15)" fg:x="5272" fg:w="1"/><text x="63.1633%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.8442%" y="597" width="0.0119%" height="15" fill="rgb(247,190,50)" fg:x="5272" fg:w="1"/><text x="63.1633%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.8561%" y="629" width="0.0119%" height="15" fill="rgb(239,173,47)" fg:x="5273" fg:w="1"/><text x="63.1752%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.8561%" y="613" width="0.0119%" height="15" fill="rgb(218,190,42)" fg:x="5273" fg:w="1"/><text x="63.1752%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.8680%" y="629" width="0.0238%" height="15" fill="rgb(251,207,16)" fg:x="5274" fg:w="2"/><text x="63.1871%" y="639.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.8680%" y="613" width="0.0238%" height="15" fill="rgb(222,199,47)" fg:x="5274" fg:w="2"/><text x="63.1871%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="62.8680%" y="597" width="0.0238%" height="15" fill="rgb(245,190,7)" fg:x="5274" fg:w="2"/><text x="63.1871%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="62.8680%" y="581" width="0.0238%" height="15" fill="rgb(239,85,38)" fg:x="5274" fg:w="2"/><text x="63.1871%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="62.8561%" y="661" width="0.0477%" height="15" fill="rgb(229,69,51)" fg:x="5273" fg:w="4"/><text x="63.1752%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="62.8561%" y="645" width="0.0477%" height="15" fill="rgb(231,104,51)" fg:x="5273" fg:w="4"/><text x="63.1752%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.8919%" y="629" width="0.0119%" height="15" fill="rgb(235,49,4)" fg:x="5276" fg:w="1"/><text x="63.2110%" y="639.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.8919%" y="613" width="0.0119%" height="15" fill="rgb(246,166,20)" fg:x="5276" fg:w="1"/><text x="63.2110%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.8919%" y="597" width="0.0119%" height="15" fill="rgb(230,119,37)" fg:x="5276" fg:w="1"/><text x="63.2110%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.8919%" y="581" width="0.0119%" height="15" fill="rgb(234,77,34)" fg:x="5276" fg:w="1"/><text x="63.2110%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="62.7727%" y="677" width="0.1430%" height="15" fill="rgb(211,222,33)" fg:x="5266" fg:w="12"/><text x="63.0918%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.9038%" y="661" width="0.0119%" height="15" fill="rgb(226,45,42)" fg:x="5277" fg:w="1"/><text x="63.2229%" y="671.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="62.9038%" y="645" width="0.0119%" height="15" fill="rgb(215,174,28)" fg:x="5277" fg:w="1"/><text x="63.2229%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="62.7608%" y="693" width="0.1669%" height="15" fill="rgb(254,173,49)" fg:x="5265" fg:w="14"/><text x="63.0799%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.9157%" y="677" width="0.0119%" height="15" fill="rgb(229,191,6)" fg:x="5278" fg:w="1"/><text x="63.2348%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.9157%" y="661" width="0.0119%" height="15" fill="rgb(212,145,22)" fg:x="5278" fg:w="1"/><text x="63.2348%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.9157%" y="645" width="0.0119%" height="15" fill="rgb(226,6,51)" fg:x="5278" fg:w="1"/><text x="63.2348%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.9157%" y="629" width="0.0119%" height="15" fill="rgb(227,128,8)" fg:x="5278" fg:w="1"/><text x="63.2348%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.9157%" y="613" width="0.0119%" height="15" fill="rgb(205,24,10)" fg:x="5278" fg:w="1"/><text x="63.2348%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="62.7131%" y="709" width="0.2265%" height="15" fill="rgb(217,147,27)" fg:x="5261" fg:w="19"/><text x="63.0322%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.9276%" y="693" width="0.0119%" height="15" fill="rgb(250,82,42)" fg:x="5279" fg:w="1"/><text x="63.2467%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.9276%" y="677" width="0.0119%" height="15" fill="rgb(248,93,17)" fg:x="5279" fg:w="1"/><text x="63.2467%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.9396%" y="613" width="0.0119%" height="15" fill="rgb(254,212,40)" fg:x="5280" fg:w="1"/><text x="63.2587%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.9396%" y="597" width="0.0119%" height="15" fill="rgb(229,209,2)" fg:x="5280" fg:w="1"/><text x="63.2587%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.9396%" y="709" width="0.0238%" height="15" fill="rgb(211,50,43)" fg:x="5280" fg:w="2"/><text x="63.2587%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.9396%" y="693" width="0.0238%" height="15" fill="rgb(245,196,29)" fg:x="5280" fg:w="2"/><text x="63.2587%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.9396%" y="677" width="0.0238%" height="15" fill="rgb(216,132,13)" fg:x="5280" fg:w="2"/><text x="63.2587%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.9396%" y="661" width="0.0238%" height="15" fill="rgb(251,108,21)" fg:x="5280" fg:w="2"/><text x="63.2587%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.9396%" y="645" width="0.0238%" height="15" fill="rgb(229,174,54)" fg:x="5280" fg:w="2"/><text x="63.2587%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="62.9396%" y="629" width="0.0238%" height="15" fill="rgb(211,175,47)" fg:x="5280" fg:w="2"/><text x="63.2587%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.9515%" y="613" width="0.0119%" height="15" fill="rgb(234,5,37)" fg:x="5281" fg:w="1"/><text x="63.2706%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.9515%" y="597" width="0.0119%" height="15" fill="rgb(244,150,43)" fg:x="5281" fg:w="1"/><text x="63.2706%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.9515%" y="581" width="0.0119%" height="15" fill="rgb(242,172,38)" fg:x="5281" fg:w="1"/><text x="63.2706%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.9515%" y="565" width="0.0119%" height="15" fill="rgb(205,27,8)" fg:x="5281" fg:w="1"/><text x="63.2706%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.9634%" y="693" width="0.0119%" height="15" fill="rgb(217,57,3)" fg:x="5282" fg:w="1"/><text x="63.2825%" y="703.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="62.9634%" y="677" width="0.0119%" height="15" fill="rgb(242,21,38)" fg:x="5282" fg:w="1"/><text x="63.2825%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.9753%" y="693" width="0.0119%" height="15" fill="rgb(209,64,43)" fg:x="5283" fg:w="1"/><text x="63.2944%" y="703.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="62.9753%" y="677" width="0.0119%" height="15" fill="rgb(222,2,46)" fg:x="5283" fg:w="1"/><text x="63.2944%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.9753%" y="661" width="0.0119%" height="15" fill="rgb(218,19,44)" fg:x="5283" fg:w="1"/><text x="63.2944%" y="671.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="62.9872%" y="645" width="0.0119%" height="15" fill="rgb(240,203,42)" fg:x="5284" fg:w="1"/><text x="63.3063%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="62.9992%" y="597" width="0.0119%" height="15" fill="rgb(229,23,45)" fg:x="5285" fg:w="1"/><text x="63.3183%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.0111%" y="597" width="0.0119%" height="15" fill="rgb(205,228,51)" fg:x="5286" fg:w="1"/><text x="63.3302%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.0111%" y="581" width="0.0119%" height="15" fill="rgb(239,36,20)" fg:x="5286" fg:w="1"/><text x="63.3302%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="62.9992%" y="645" width="0.0358%" height="15" fill="rgb(248,172,27)" fg:x="5285" fg:w="3"/><text x="63.3183%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="62.9992%" y="629" width="0.0358%" height="15" fill="rgb(244,55,32)" fg:x="5285" fg:w="3"/><text x="63.3183%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="62.9992%" y="613" width="0.0358%" height="15" fill="rgb(215,97,16)" fg:x="5285" fg:w="3"/><text x="63.3183%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.0230%" y="597" width="0.0119%" height="15" fill="rgb(224,80,29)" fg:x="5287" fg:w="1"/><text x="63.3421%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.0230%" y="581" width="0.0119%" height="15" fill="rgb(216,93,47)" fg:x="5287" fg:w="1"/><text x="63.3421%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.0230%" y="565" width="0.0119%" height="15" fill="rgb(238,159,10)" fg:x="5287" fg:w="1"/><text x="63.3421%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="62.9872%" y="677" width="0.0596%" height="15" fill="rgb(223,98,29)" fg:x="5284" fg:w="5"/><text x="63.3063%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="62.9872%" y="661" width="0.0596%" height="15" fill="rgb(210,176,23)" fg:x="5284" fg:w="5"/><text x="63.3063%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.0349%" y="645" width="0.0119%" height="15" fill="rgb(242,162,27)" fg:x="5288" fg:w="1"/><text x="63.3540%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.0349%" y="629" width="0.0119%" height="15" fill="rgb(245,109,32)" fg:x="5288" fg:w="1"/><text x="63.3540%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.0349%" y="613" width="0.0119%" height="15" fill="rgb(248,87,8)" fg:x="5288" fg:w="1"/><text x="63.3540%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.0468%" y="661" width="0.0119%" height="15" fill="rgb(250,160,50)" fg:x="5289" fg:w="1"/><text x="63.3659%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.0468%" y="645" width="0.0119%" height="15" fill="rgb(246,165,25)" fg:x="5289" fg:w="1"/><text x="63.3659%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.0588%" y="661" width="0.0119%" height="15" fill="rgb(249,219,3)" fg:x="5290" fg:w="1"/><text x="63.3779%" y="671.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="63.0588%" y="645" width="0.0119%" height="15" fill="rgb(226,66,5)" fg:x="5290" fg:w="1"/><text x="63.3779%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="63.0707%" y="645" width="0.0119%" height="15" fill="rgb(250,220,43)" fg:x="5291" fg:w="1"/><text x="63.3898%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.0826%" y="645" width="0.0238%" height="15" fill="rgb(225,111,31)" fg:x="5292" fg:w="2"/><text x="63.4017%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="63.0945%" y="629" width="0.0119%" height="15" fill="rgb(248,106,18)" fg:x="5293" fg:w="1"/><text x="63.4136%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.1064%" y="597" width="0.0119%" height="15" fill="rgb(220,226,45)" fg:x="5294" fg:w="1"/><text x="63.4255%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.1064%" y="581" width="0.0119%" height="15" fill="rgb(208,58,53)" fg:x="5294" fg:w="1"/><text x="63.4255%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.1184%" y="581" width="0.0119%" height="15" fill="rgb(209,133,1)" fg:x="5295" fg:w="1"/><text x="63.4375%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.1184%" y="565" width="0.0119%" height="15" fill="rgb(228,216,27)" fg:x="5295" fg:w="1"/><text x="63.4375%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.1303%" y="533" width="0.0238%" height="15" fill="rgb(238,155,2)" fg:x="5296" fg:w="2"/><text x="63.4494%" y="543.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="63.1303%" y="517" width="0.0238%" height="15" fill="rgb(244,99,37)" fg:x="5296" fg:w="2"/><text x="63.4494%" y="527.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="63.1303%" y="501" width="0.0238%" height="15" fill="rgb(254,32,3)" fg:x="5296" fg:w="2"/><text x="63.4494%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.1541%" y="517" width="0.0119%" height="15" fill="rgb(234,46,50)" fg:x="5298" fg:w="1"/><text x="63.4732%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.1541%" y="501" width="0.0119%" height="15" fill="rgb(232,118,51)" fg:x="5298" fg:w="1"/><text x="63.4732%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="63.1064%" y="629" width="0.0715%" height="15" fill="rgb(207,24,32)" fg:x="5294" fg:w="6"/><text x="63.4255%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="63.1064%" y="613" width="0.0715%" height="15" fill="rgb(208,107,43)" fg:x="5294" fg:w="6"/><text x="63.4255%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="63.1184%" y="597" width="0.0596%" height="15" fill="rgb(231,28,9)" fg:x="5295" fg:w="5"/><text x="63.4375%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="63.1303%" y="581" width="0.0477%" height="15" fill="rgb(241,204,15)" fg:x="5296" fg:w="4"/><text x="63.4494%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="63.1303%" y="565" width="0.0477%" height="15" fill="rgb(214,54,15)" fg:x="5296" fg:w="4"/><text x="63.4494%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="63.1303%" y="549" width="0.0477%" height="15" fill="rgb(230,12,28)" fg:x="5296" fg:w="4"/><text x="63.4494%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.1541%" y="533" width="0.0238%" height="15" fill="rgb(221,171,5)" fg:x="5298" fg:w="2"/><text x="63.4732%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="63.1661%" y="517" width="0.0119%" height="15" fill="rgb(207,72,25)" fg:x="5299" fg:w="1"/><text x="63.4852%" y="527.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="63.1780%" y="613" width="0.0238%" height="15" fill="rgb(249,79,37)" fg:x="5300" fg:w="2"/><text x="63.4971%" y="623.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="63.1780%" y="597" width="0.0238%" height="15" fill="rgb(209,98,49)" fg:x="5300" fg:w="2"/><text x="63.4971%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="63.2018%" y="613" width="0.0119%" height="15" fill="rgb(221,62,13)" fg:x="5302" fg:w="1"/><text x="63.5209%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.2137%" y="549" width="0.0119%" height="15" fill="rgb(223,39,6)" fg:x="5303" fg:w="1"/><text x="63.5328%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.2137%" y="533" width="0.0119%" height="15" fill="rgb(246,163,20)" fg:x="5303" fg:w="1"/><text x="63.5328%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="63.1064%" y="645" width="0.1311%" height="15" fill="rgb(211,111,29)" fg:x="5294" fg:w="11"/><text x="63.4255%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="63.1780%" y="629" width="0.0596%" height="15" fill="rgb(243,118,5)" fg:x="5300" fg:w="5"/><text x="63.4971%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.2137%" y="613" width="0.0238%" height="15" fill="rgb(240,144,52)" fg:x="5303" fg:w="2"/><text x="63.5328%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.2137%" y="597" width="0.0238%" height="15" fill="rgb(244,158,36)" fg:x="5303" fg:w="2"/><text x="63.5328%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.2137%" y="581" width="0.0238%" height="15" fill="rgb(241,109,37)" fg:x="5303" fg:w="2"/><text x="63.5328%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.2137%" y="565" width="0.0238%" height="15" fill="rgb(213,95,32)" fg:x="5303" fg:w="2"/><text x="63.5328%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.2257%" y="549" width="0.0119%" height="15" fill="rgb(252,193,9)" fg:x="5304" fg:w="1"/><text x="63.5448%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.2257%" y="533" width="0.0119%" height="15" fill="rgb(225,213,21)" fg:x="5304" fg:w="1"/><text x="63.5448%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.2257%" y="517" width="0.0119%" height="15" fill="rgb(220,172,46)" fg:x="5304" fg:w="1"/><text x="63.5448%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.2257%" y="501" width="0.0119%" height="15" fill="rgb(235,75,41)" fg:x="5304" fg:w="1"/><text x="63.5448%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.2376%" y="629" width="0.0119%" height="15" fill="rgb(213,86,9)" fg:x="5305" fg:w="1"/><text x="63.5567%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.2376%" y="613" width="0.0119%" height="15" fill="rgb(238,127,51)" fg:x="5305" fg:w="1"/><text x="63.5567%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.2495%" y="565" width="0.0119%" height="15" fill="rgb(215,2,54)" fg:x="5306" fg:w="1"/><text x="63.5686%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.2495%" y="549" width="0.0119%" height="15" fill="rgb(245,80,6)" fg:x="5306" fg:w="1"/><text x="63.5686%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.2614%" y="533" width="0.0119%" height="15" fill="rgb(233,106,42)" fg:x="5307" fg:w="1"/><text x="63.5805%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="63.2614%" y="517" width="0.0119%" height="15" fill="rgb(244,86,38)" fg:x="5307" fg:w="1"/><text x="63.5805%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="63.0468%" y="677" width="0.2503%" height="15" fill="rgb(242,167,7)" fg:x="5289" fg:w="21"/><text x="63.3659%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="63.0707%" y="661" width="0.2265%" height="15" fill="rgb(218,216,3)" fg:x="5291" fg:w="19"/><text x="63.3898%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="63.2376%" y="645" width="0.0596%" height="15" fill="rgb(206,136,36)" fg:x="5305" fg:w="5"/><text x="63.5567%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="63.2495%" y="629" width="0.0477%" height="15" fill="rgb(206,206,15)" fg:x="5306" fg:w="4"/><text x="63.5686%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="63.2495%" y="613" width="0.0477%" height="15" fill="rgb(207,163,34)" fg:x="5306" fg:w="4"/><text x="63.5686%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="63.2495%" y="597" width="0.0477%" height="15" fill="rgb(240,127,22)" fg:x="5306" fg:w="4"/><text x="63.5686%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="63.2495%" y="581" width="0.0477%" height="15" fill="rgb(227,49,5)" fg:x="5306" fg:w="4"/><text x="63.5686%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="63.2614%" y="565" width="0.0358%" height="15" fill="rgb(231,8,6)" fg:x="5307" fg:w="3"/><text x="63.5805%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="63.2614%" y="549" width="0.0358%" height="15" fill="rgb(223,21,24)" fg:x="5307" fg:w="3"/><text x="63.5805%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.2733%" y="533" width="0.0238%" height="15" fill="rgb(244,44,52)" fg:x="5308" fg:w="2"/><text x="63.5924%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.2733%" y="517" width="0.0238%" height="15" fill="rgb(207,73,28)" fg:x="5308" fg:w="2"/><text x="63.5924%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.2853%" y="501" width="0.0119%" height="15" fill="rgb(234,215,10)" fg:x="5309" fg:w="1"/><text x="63.6044%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.2853%" y="485" width="0.0119%" height="15" fill="rgb(236,85,3)" fg:x="5309" fg:w="1"/><text x="63.6044%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.2972%" y="677" width="0.0119%" height="15" fill="rgb(236,102,39)" fg:x="5310" fg:w="1"/><text x="63.6163%" y="687.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="63.2972%" y="661" width="0.0119%" height="15" fill="rgb(243,50,8)" fg:x="5310" fg:w="1"/><text x="63.6163%" y="671.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="63.3091%" y="661" width="0.0119%" height="15" fill="rgb(207,111,4)" fg:x="5311" fg:w="1"/><text x="63.6282%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.3210%" y="645" width="0.0119%" height="15" fill="rgb(230,52,42)" fg:x="5312" fg:w="1"/><text x="63.6401%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.3210%" y="629" width="0.0119%" height="15" fill="rgb(252,178,50)" fg:x="5312" fg:w="1"/><text x="63.6401%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.3210%" y="661" width="0.0238%" height="15" fill="rgb(234,46,35)" fg:x="5312" fg:w="2"/><text x="63.6401%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.3329%" y="645" width="0.0119%" height="15" fill="rgb(228,69,37)" fg:x="5313" fg:w="1"/><text x="63.6520%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.3329%" y="629" width="0.0119%" height="15" fill="rgb(221,21,11)" fg:x="5313" fg:w="1"/><text x="63.6520%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.3329%" y="613" width="0.0119%" height="15" fill="rgb(223,56,9)" fg:x="5313" fg:w="1"/><text x="63.6520%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.3329%" y="597" width="0.0119%" height="15" fill="rgb(234,30,19)" fg:x="5313" fg:w="1"/><text x="63.6520%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (31 samples, 0.37%)</title><rect x="62.9872%" y="693" width="0.3695%" height="15" fill="rgb(211,64,54)" fg:x="5284" fg:w="31"/><text x="63.3063%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="63.3091%" y="677" width="0.0477%" height="15" fill="rgb(250,189,5)" fg:x="5311" fg:w="4"/><text x="63.6282%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.3449%" y="661" width="0.0119%" height="15" fill="rgb(214,180,13)" fg:x="5314" fg:w="1"/><text x="63.6640%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.3449%" y="645" width="0.0119%" height="15" fill="rgb(238,40,40)" fg:x="5314" fg:w="1"/><text x="63.6640%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.3449%" y="629" width="0.0119%" height="15" fill="rgb(214,101,38)" fg:x="5314" fg:w="1"/><text x="63.6640%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="63.3568%" y="677" width="0.0119%" height="15" fill="rgb(242,65,53)" fg:x="5315" fg:w="1"/><text x="63.6759%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.3687%" y="645" width="0.0119%" height="15" fill="rgb(230,22,45)" fg:x="5316" fg:w="1"/><text x="63.6878%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.3687%" y="629" width="0.0119%" height="15" fill="rgb(223,77,1)" fg:x="5316" fg:w="1"/><text x="63.6878%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.3687%" y="613" width="0.0119%" height="15" fill="rgb(227,33,37)" fg:x="5316" fg:w="1"/><text x="63.6878%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.3687%" y="597" width="0.0119%" height="15" fill="rgb(224,148,39)" fg:x="5316" fg:w="1"/><text x="63.6878%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.3687%" y="581" width="0.0119%" height="15" fill="rgb(232,212,39)" fg:x="5316" fg:w="1"/><text x="63.6878%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.3687%" y="565" width="0.0119%" height="15" fill="rgb(251,172,7)" fg:x="5316" fg:w="1"/><text x="63.6878%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.3687%" y="549" width="0.0119%" height="15" fill="rgb(219,39,9)" fg:x="5316" fg:w="1"/><text x="63.6878%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.3687%" y="533" width="0.0119%" height="15" fill="rgb(228,118,14)" fg:x="5316" fg:w="1"/><text x="63.6878%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.3806%" y="645" width="0.0119%" height="15" fill="rgb(207,140,10)" fg:x="5317" fg:w="1"/><text x="63.6997%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.3806%" y="629" width="0.0119%" height="15" fill="rgb(227,111,53)" fg:x="5317" fg:w="1"/><text x="63.6997%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.3806%" y="613" width="0.0119%" height="15" fill="rgb(216,165,16)" fg:x="5317" fg:w="1"/><text x="63.6997%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.3925%" y="629" width="0.0119%" height="15" fill="rgb(226,111,18)" fg:x="5318" fg:w="1"/><text x="63.7116%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.3925%" y="613" width="0.0119%" height="15" fill="rgb(251,27,17)" fg:x="5318" fg:w="1"/><text x="63.7116%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.4045%" y="581" width="0.0119%" height="15" fill="rgb(254,69,9)" fg:x="5319" fg:w="1"/><text x="63.7236%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.4045%" y="565" width="0.0119%" height="15" fill="rgb(234,140,37)" fg:x="5319" fg:w="1"/><text x="63.7236%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.4045%" y="613" width="0.0238%" height="15" fill="rgb(220,93,8)" fg:x="5319" fg:w="2"/><text x="63.7236%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.4045%" y="597" width="0.0238%" height="15" fill="rgb(236,113,3)" fg:x="5319" fg:w="2"/><text x="63.7236%" y="607.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="63.4164%" y="581" width="0.0119%" height="15" fill="rgb(234,108,23)" fg:x="5320" fg:w="1"/><text x="63.7355%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.4283%" y="565" width="0.0119%" height="15" fill="rgb(205,114,34)" fg:x="5321" fg:w="1"/><text x="63.7474%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="63.3687%" y="677" width="0.0834%" height="15" fill="rgb(236,200,45)" fg:x="5316" fg:w="7"/><text x="63.6878%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="63.3687%" y="661" width="0.0834%" height="15" fill="rgb(227,194,29)" fg:x="5316" fg:w="7"/><text x="63.6878%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="63.3925%" y="645" width="0.0596%" height="15" fill="rgb(250,76,42)" fg:x="5318" fg:w="5"/><text x="63.7116%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="63.4045%" y="629" width="0.0477%" height="15" fill="rgb(208,128,8)" fg:x="5319" fg:w="4"/><text x="63.7236%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.4283%" y="613" width="0.0238%" height="15" fill="rgb(229,209,35)" fg:x="5321" fg:w="2"/><text x="63.7474%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.4283%" y="597" width="0.0238%" height="15" fill="rgb(215,39,53)" fg:x="5321" fg:w="2"/><text x="63.7474%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.4283%" y="581" width="0.0238%" height="15" fill="rgb(219,123,41)" fg:x="5321" fg:w="2"/><text x="63.7474%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.4402%" y="565" width="0.0119%" height="15" fill="rgb(212,158,18)" fg:x="5322" fg:w="1"/><text x="63.7593%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.4402%" y="549" width="0.0119%" height="15" fill="rgb(234,196,53)" fg:x="5322" fg:w="1"/><text x="63.7593%" y="559.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.4402%" y="533" width="0.0119%" height="15" fill="rgb(210,139,12)" fg:x="5322" fg:w="1"/><text x="63.7593%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.4402%" y="517" width="0.0119%" height="15" fill="rgb(220,116,54)" fg:x="5322" fg:w="1"/><text x="63.7593%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.4402%" y="501" width="0.0119%" height="15" fill="rgb(247,103,28)" fg:x="5322" fg:w="1"/><text x="63.7593%" y="511.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="63.4641%" y="629" width="0.0119%" height="15" fill="rgb(253,156,45)" fg:x="5324" fg:w="1"/><text x="63.7832%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.4641%" y="645" width="0.0238%" height="15" fill="rgb(237,157,52)" fg:x="5324" fg:w="2"/><text x="63.7832%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.4760%" y="629" width="0.0119%" height="15" fill="rgb(253,112,16)" fg:x="5325" fg:w="1"/><text x="63.7951%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.4760%" y="613" width="0.0119%" height="15" fill="rgb(234,70,18)" fg:x="5325" fg:w="1"/><text x="63.7951%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.4760%" y="597" width="0.0119%" height="15" fill="rgb(247,138,19)" fg:x="5325" fg:w="1"/><text x="63.7951%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.4760%" y="581" width="0.0119%" height="15" fill="rgb(207,171,1)" fg:x="5325" fg:w="1"/><text x="63.7951%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.4760%" y="565" width="0.0119%" height="15" fill="rgb(239,213,3)" fg:x="5325" fg:w="1"/><text x="63.7951%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="63.4760%" y="549" width="0.0119%" height="15" fill="rgb(226,112,4)" fg:x="5325" fg:w="1"/><text x="63.7951%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.4879%" y="613" width="0.0119%" height="15" fill="rgb(252,170,12)" fg:x="5326" fg:w="1"/><text x="63.8070%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.4879%" y="597" width="0.0119%" height="15" fill="rgb(241,106,13)" fg:x="5326" fg:w="1"/><text x="63.8070%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.4879%" y="581" width="0.0119%" height="15" fill="rgb(225,73,23)" fg:x="5326" fg:w="1"/><text x="63.8070%" y="591.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="63.4998%" y="597" width="0.0238%" height="15" fill="rgb(251,227,29)" fg:x="5327" fg:w="2"/><text x="63.8189%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="63.4998%" y="581" width="0.0238%" height="15" fill="rgb(237,144,13)" fg:x="5327" fg:w="2"/><text x="63.8189%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="63.4879%" y="645" width="0.0596%" height="15" fill="rgb(232,106,46)" fg:x="5326" fg:w="5"/><text x="63.8070%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="63.4879%" y="629" width="0.0596%" height="15" fill="rgb(245,154,53)" fg:x="5326" fg:w="5"/><text x="63.8070%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="63.4998%" y="613" width="0.0477%" height="15" fill="rgb(212,119,47)" fg:x="5327" fg:w="4"/><text x="63.8189%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.5237%" y="597" width="0.0238%" height="15" fill="rgb(253,135,25)" fg:x="5329" fg:w="2"/><text x="63.8428%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="63.5237%" y="581" width="0.0238%" height="15" fill="rgb(253,208,39)" fg:x="5329" fg:w="2"/><text x="63.8428%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="63.4641%" y="661" width="0.0954%" height="15" fill="rgb(226,64,12)" fg:x="5324" fg:w="8"/><text x="63.7832%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.5475%" y="645" width="0.0119%" height="15" fill="rgb(214,162,37)" fg:x="5331" fg:w="1"/><text x="63.8666%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.5475%" y="629" width="0.0119%" height="15" fill="rgb(250,104,5)" fg:x="5331" fg:w="1"/><text x="63.8666%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.5475%" y="613" width="0.0119%" height="15" fill="rgb(220,202,50)" fg:x="5331" fg:w="1"/><text x="63.8666%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="63.3568%" y="693" width="0.2146%" height="15" fill="rgb(248,67,38)" fg:x="5315" fg:w="18"/><text x="63.6759%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="63.4521%" y="677" width="0.1192%" height="15" fill="rgb(242,94,35)" fg:x="5323" fg:w="10"/><text x="63.7712%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.5594%" y="661" width="0.0119%" height="15" fill="rgb(209,78,37)" fg:x="5332" fg:w="1"/><text x="63.8785%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.5594%" y="645" width="0.0119%" height="15" fill="rgb(230,126,47)" fg:x="5332" fg:w="1"/><text x="63.8785%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.5594%" y="629" width="0.0119%" height="15" fill="rgb(222,110,35)" fg:x="5332" fg:w="1"/><text x="63.8785%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.5713%" y="677" width="0.0119%" height="15" fill="rgb(233,154,20)" fg:x="5333" fg:w="1"/><text x="63.8904%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.5713%" y="661" width="0.0119%" height="15" fill="rgb(223,53,50)" fg:x="5333" fg:w="1"/><text x="63.8904%" y="671.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="63.5833%" y="677" width="0.0119%" height="15" fill="rgb(251,27,26)" fg:x="5334" fg:w="1"/><text x="63.9024%" y="687.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="63.5952%" y="661" width="0.0119%" height="15" fill="rgb(223,189,16)" fg:x="5335" fg:w="1"/><text x="63.9143%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="63.5713%" y="693" width="0.0477%" height="15" fill="rgb(207,5,54)" fg:x="5333" fg:w="4"/><text x="63.8904%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.5952%" y="677" width="0.0238%" height="15" fill="rgb(254,124,50)" fg:x="5335" fg:w="2"/><text x="63.9143%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.6071%" y="661" width="0.0119%" height="15" fill="rgb(253,193,24)" fg:x="5336" fg:w="1"/><text x="63.9262%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.6071%" y="645" width="0.0119%" height="15" fill="rgb(235,170,24)" fg:x="5336" fg:w="1"/><text x="63.9262%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.6071%" y="629" width="0.0119%" height="15" fill="rgb(222,212,52)" fg:x="5336" fg:w="1"/><text x="63.9262%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.6071%" y="613" width="0.0119%" height="15" fill="rgb(223,17,45)" fg:x="5336" fg:w="1"/><text x="63.9262%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.6071%" y="597" width="0.0119%" height="15" fill="rgb(227,103,26)" fg:x="5336" fg:w="1"/><text x="63.9262%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.6071%" y="581" width="0.0119%" height="15" fill="rgb(251,151,25)" fg:x="5336" fg:w="1"/><text x="63.9262%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::consume_until(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#2}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.6071%" y="565" width="0.0119%" height="15" fill="rgb(248,144,29)" fg:x="5336" fg:w="1"/><text x="63.9262%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.6071%" y="549" width="0.0119%" height="15" fill="rgb(245,97,16)" fg:x="5336" fg:w="1"/><text x="63.9262%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.6071%" y="533" width="0.0119%" height="15" fill="rgb(220,200,29)" fg:x="5336" fg:w="1"/><text x="63.9262%" y="543.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="63.6190%" y="677" width="0.0358%" height="15" fill="rgb(206,38,29)" fg:x="5337" fg:w="3"/><text x="63.9381%" y="687.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="63.6190%" y="661" width="0.0358%" height="15" fill="rgb(245,19,52)" fg:x="5337" fg:w="3"/><text x="63.9381%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.6667%" y="581" width="0.0119%" height="15" fill="rgb(205,67,43)" fg:x="5341" fg:w="1"/><text x="63.9858%" y="591.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="63.6667%" y="565" width="0.0119%" height="15" fill="rgb(217,128,23)" fg:x="5341" fg:w="1"/><text x="63.9858%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.6667%" y="613" width="0.0238%" height="15" fill="rgb(210,109,28)" fg:x="5341" fg:w="2"/><text x="63.9858%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.6667%" y="597" width="0.0238%" height="15" fill="rgb(233,181,7)" fg:x="5341" fg:w="2"/><text x="63.9858%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.6786%" y="581" width="0.0119%" height="15" fill="rgb(244,11,22)" fg:x="5342" fg:w="1"/><text x="63.9977%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.6786%" y="565" width="0.0119%" height="15" fill="rgb(205,124,54)" fg:x="5342" fg:w="1"/><text x="63.9977%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.6786%" y="549" width="0.0119%" height="15" fill="rgb(218,21,27)" fg:x="5342" fg:w="1"/><text x="63.9977%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.6786%" y="533" width="0.0119%" height="15" fill="rgb(224,153,33)" fg:x="5342" fg:w="1"/><text x="63.9977%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="63.6786%" y="517" width="0.0119%" height="15" fill="rgb(240,219,28)" fg:x="5342" fg:w="1"/><text x="63.9977%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.6905%" y="613" width="0.0119%" height="15" fill="rgb(214,80,29)" fg:x="5343" fg:w="1"/><text x="64.0096%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.6905%" y="597" width="0.0119%" height="15" fill="rgb(247,148,44)" fg:x="5343" fg:w="1"/><text x="64.0096%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.6905%" y="581" width="0.0119%" height="15" fill="rgb(243,110,30)" fg:x="5343" fg:w="1"/><text x="64.0096%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.7025%" y="565" width="0.0119%" height="15" fill="rgb(243,173,41)" fg:x="5344" fg:w="1"/><text x="64.0216%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.7025%" y="549" width="0.0119%" height="15" fill="rgb(225,160,47)" fg:x="5344" fg:w="1"/><text x="64.0216%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.7144%" y="565" width="0.0119%" height="15" fill="rgb(215,44,21)" fg:x="5345" fg:w="1"/><text x="64.0335%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.7144%" y="549" width="0.0119%" height="15" fill="rgb(248,90,3)" fg:x="5345" fg:w="1"/><text x="64.0335%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.7144%" y="533" width="0.0119%" height="15" fill="rgb(220,196,49)" fg:x="5345" fg:w="1"/><text x="64.0335%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.7144%" y="517" width="0.0119%" height="15" fill="rgb(217,138,14)" fg:x="5345" fg:w="1"/><text x="64.0335%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.7263%" y="549" width="0.0119%" height="15" fill="rgb(219,111,20)" fg:x="5346" fg:w="1"/><text x="64.0454%" y="559.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.7263%" y="533" width="0.0119%" height="15" fill="rgb(218,114,4)" fg:x="5346" fg:w="1"/><text x="64.0454%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.7263%" y="517" width="0.0119%" height="15" fill="rgb(238,133,3)" fg:x="5346" fg:w="1"/><text x="64.0454%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.7263%" y="501" width="0.0119%" height="15" fill="rgb(224,95,0)" fg:x="5346" fg:w="1"/><text x="64.0454%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="63.6667%" y="629" width="0.0954%" height="15" fill="rgb(220,169,35)" fg:x="5341" fg:w="8"/><text x="63.9858%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="63.7025%" y="613" width="0.0596%" height="15" fill="rgb(242,116,47)" fg:x="5344" fg:w="5"/><text x="64.0216%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="63.7025%" y="597" width="0.0596%" height="15" fill="rgb(251,42,20)" fg:x="5344" fg:w="5"/><text x="64.0216%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="63.7025%" y="581" width="0.0596%" height="15" fill="rgb(234,7,34)" fg:x="5344" fg:w="5"/><text x="64.0216%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="63.7263%" y="565" width="0.0358%" height="15" fill="rgb(243,208,13)" fg:x="5346" fg:w="3"/><text x="64.0454%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.7382%" y="549" width="0.0238%" height="15" fill="rgb(227,33,28)" fg:x="5347" fg:w="2"/><text x="64.0573%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.7501%" y="533" width="0.0119%" height="15" fill="rgb(250,47,37)" fg:x="5348" fg:w="1"/><text x="64.0692%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.7501%" y="517" width="0.0119%" height="15" fill="rgb(235,111,52)" fg:x="5348" fg:w="1"/><text x="64.0692%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.7501%" y="501" width="0.0119%" height="15" fill="rgb(223,64,28)" fg:x="5348" fg:w="1"/><text x="64.0692%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.7501%" y="485" width="0.0119%" height="15" fill="rgb(236,67,22)" fg:x="5348" fg:w="1"/><text x="64.0692%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.7621%" y="597" width="0.0119%" height="15" fill="rgb(243,79,24)" fg:x="5349" fg:w="1"/><text x="64.0812%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.7621%" y="581" width="0.0119%" height="15" fill="rgb(241,225,22)" fg:x="5349" fg:w="1"/><text x="64.0812%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.7621%" y="565" width="0.0119%" height="15" fill="rgb(228,214,26)" fg:x="5349" fg:w="1"/><text x="64.0812%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="63.7740%" y="581" width="0.0119%" height="15" fill="rgb(219,84,52)" fg:x="5350" fg:w="1"/><text x="64.0931%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.7859%" y="565" width="0.0119%" height="15" fill="rgb(220,12,22)" fg:x="5351" fg:w="1"/><text x="64.1050%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.7859%" y="549" width="0.0119%" height="15" fill="rgb(219,9,49)" fg:x="5351" fg:w="1"/><text x="64.1050%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.7978%" y="549" width="0.0119%" height="15" fill="rgb(237,40,43)" fg:x="5352" fg:w="1"/><text x="64.1169%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.7978%" y="533" width="0.0119%" height="15" fill="rgb(212,189,32)" fg:x="5352" fg:w="1"/><text x="64.1169%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.7978%" y="565" width="0.0238%" height="15" fill="rgb(247,48,9)" fg:x="5352" fg:w="2"/><text x="64.1169%" y="575.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="63.8098%" y="549" width="0.0119%" height="15" fill="rgb(247,112,3)" fg:x="5353" fg:w="1"/><text x="64.1289%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.8217%" y="549" width="0.0119%" height="15" fill="rgb(243,110,18)" fg:x="5354" fg:w="1"/><text x="64.1408%" y="559.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.8217%" y="533" width="0.0119%" height="15" fill="rgb(233,223,44)" fg:x="5354" fg:w="1"/><text x="64.1408%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.8217%" y="517" width="0.0119%" height="15" fill="rgb(245,160,20)" fg:x="5354" fg:w="1"/><text x="64.1408%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.8217%" y="501" width="0.0119%" height="15" fill="rgb(225,37,1)" fg:x="5354" fg:w="1"/><text x="64.1408%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="63.6548%" y="661" width="0.1907%" height="15" fill="rgb(253,227,39)" fg:x="5340" fg:w="16"/><text x="63.9739%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="63.6667%" y="645" width="0.1788%" height="15" fill="rgb(240,179,26)" fg:x="5341" fg:w="15"/><text x="63.9858%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="63.7621%" y="629" width="0.0834%" height="15" fill="rgb(237,212,23)" fg:x="5349" fg:w="7"/><text x="64.0812%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="63.7621%" y="613" width="0.0834%" height="15" fill="rgb(221,38,11)" fg:x="5349" fg:w="7"/><text x="64.0812%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="63.7740%" y="597" width="0.0715%" height="15" fill="rgb(215,85,6)" fg:x="5350" fg:w="6"/><text x="64.0931%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="63.7859%" y="581" width="0.0596%" height="15" fill="rgb(239,64,14)" fg:x="5351" fg:w="5"/><text x="64.1050%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.8217%" y="565" width="0.0238%" height="15" fill="rgb(215,150,32)" fg:x="5354" fg:w="2"/><text x="64.1408%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.8336%" y="549" width="0.0119%" height="15" fill="rgb(238,15,13)" fg:x="5355" fg:w="1"/><text x="64.1527%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.8336%" y="533" width="0.0119%" height="15" fill="rgb(251,87,8)" fg:x="5355" fg:w="1"/><text x="64.1527%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.8336%" y="517" width="0.0119%" height="15" fill="rgb(206,86,1)" fg:x="5355" fg:w="1"/><text x="64.1527%" y="527.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.8336%" y="501" width="0.0119%" height="15" fill="rgb(208,151,45)" fg:x="5355" fg:w="1"/><text x="64.1527%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.8455%" y="661" width="0.0119%" height="15" fill="rgb(231,181,24)" fg:x="5356" fg:w="1"/><text x="64.1646%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.8455%" y="645" width="0.0119%" height="15" fill="rgb(240,106,29)" fg:x="5356" fg:w="1"/><text x="64.1646%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.8455%" y="629" width="0.0119%" height="15" fill="rgb(227,166,11)" fg:x="5356" fg:w="1"/><text x="64.1646%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.8574%" y="645" width="0.0119%" height="15" fill="rgb(254,14,34)" fg:x="5357" fg:w="1"/><text x="64.1765%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.8574%" y="629" width="0.0119%" height="15" fill="rgb(223,222,6)" fg:x="5357" fg:w="1"/><text x="64.1765%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.8574%" y="613" width="0.0119%" height="15" fill="rgb(245,69,24)" fg:x="5357" fg:w="1"/><text x="64.1765%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.8574%" y="597" width="0.0119%" height="15" fill="rgb(213,193,7)" fg:x="5357" fg:w="1"/><text x="64.1765%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.8574%" y="581" width="0.0119%" height="15" fill="rgb(237,92,51)" fg:x="5357" fg:w="1"/><text x="64.1765%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="63.6548%" y="677" width="0.2265%" height="15" fill="rgb(225,194,6)" fg:x="5340" fg:w="19"/><text x="63.9739%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.8574%" y="661" width="0.0238%" height="15" fill="rgb(205,159,49)" fg:x="5357" fg:w="2"/><text x="64.1765%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.8694%" y="645" width="0.0119%" height="15" fill="rgb(219,69,2)" fg:x="5358" fg:w="1"/><text x="64.1885%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.8694%" y="629" width="0.0119%" height="15" fill="rgb(215,107,24)" fg:x="5358" fg:w="1"/><text x="64.1885%" y="639.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="63.8694%" y="613" width="0.0119%" height="15" fill="rgb(249,208,29)" fg:x="5358" fg:w="1"/><text x="64.1885%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.8813%" y="629" width="0.0119%" height="15" fill="rgb(213,147,10)" fg:x="5359" fg:w="1"/><text x="64.2004%" y="639.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.8813%" y="613" width="0.0119%" height="15" fill="rgb(254,140,42)" fg:x="5359" fg:w="1"/><text x="64.2004%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.8813%" y="597" width="0.0119%" height="15" fill="rgb(249,9,15)" fg:x="5359" fg:w="1"/><text x="64.2004%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.8813%" y="661" width="0.0238%" height="15" fill="rgb(210,19,33)" fg:x="5359" fg:w="2"/><text x="64.2004%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.8813%" y="645" width="0.0238%" height="15" fill="rgb(241,121,22)" fg:x="5359" fg:w="2"/><text x="64.2004%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.8932%" y="629" width="0.0119%" height="15" fill="rgb(244,69,52)" fg:x="5360" fg:w="1"/><text x="64.2123%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.8932%" y="613" width="0.0119%" height="15" fill="rgb(244,191,54)" fg:x="5360" fg:w="1"/><text x="64.2123%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="63.9051%" y="645" width="0.0119%" height="15" fill="rgb(250,3,53)" fg:x="5361" fg:w="1"/><text x="64.2242%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.9170%" y="629" width="0.0119%" height="15" fill="rgb(205,77,3)" fg:x="5362" fg:w="1"/><text x="64.2361%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.9170%" y="613" width="0.0119%" height="15" fill="rgb(207,155,3)" fg:x="5362" fg:w="1"/><text x="64.2361%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="63.9290%" y="629" width="0.0119%" height="15" fill="rgb(224,79,2)" fg:x="5363" fg:w="1"/><text x="64.2481%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.9409%" y="565" width="0.0119%" height="15" fill="rgb(243,172,5)" fg:x="5364" fg:w="1"/><text x="64.2600%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.9409%" y="549" width="0.0119%" height="15" fill="rgb(217,23,43)" fg:x="5364" fg:w="1"/><text x="64.2600%" y="559.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="63.9528%" y="549" width="0.0119%" height="15" fill="rgb(223,109,20)" fg:x="5365" fg:w="1"/><text x="64.2719%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="63.9647%" y="549" width="0.0119%" height="15" fill="rgb(232,159,21)" fg:x="5366" fg:w="1"/><text x="64.2838%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="63.9766%" y="533" width="0.0119%" height="15" fill="rgb(219,58,2)" fg:x="5367" fg:w="1"/><text x="64.2957%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="63.9766%" y="517" width="0.0119%" height="15" fill="rgb(241,56,8)" fg:x="5367" fg:w="1"/><text x="64.2957%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="63.9409%" y="629" width="0.0596%" height="15" fill="rgb(249,10,27)" fg:x="5364" fg:w="5"/><text x="64.2600%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="63.9409%" y="613" width="0.0596%" height="15" fill="rgb(248,177,5)" fg:x="5364" fg:w="5"/><text x="64.2600%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="63.9409%" y="597" width="0.0596%" height="15" fill="rgb(239,12,30)" fg:x="5364" fg:w="5"/><text x="64.2600%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="63.9409%" y="581" width="0.0596%" height="15" fill="rgb(229,164,25)" fg:x="5364" fg:w="5"/><text x="64.2600%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="63.9528%" y="565" width="0.0477%" height="15" fill="rgb(231,217,50)" fg:x="5365" fg:w="4"/><text x="64.2719%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="63.9766%" y="549" width="0.0238%" height="15" fill="rgb(247,99,32)" fg:x="5367" fg:w="2"/><text x="64.2957%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.9886%" y="533" width="0.0119%" height="15" fill="rgb(240,74,50)" fg:x="5368" fg:w="1"/><text x="64.3077%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="63.9886%" y="517" width="0.0119%" height="15" fill="rgb(218,54,8)" fg:x="5368" fg:w="1"/><text x="64.3077%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="64.0005%" y="597" width="0.0119%" height="15" fill="rgb(227,132,20)" fg:x="5369" fg:w="1"/><text x="64.3196%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.0124%" y="597" width="0.0119%" height="15" fill="rgb(232,134,12)" fg:x="5370" fg:w="1"/><text x="64.3315%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.0124%" y="581" width="0.0119%" height="15" fill="rgb(250,129,18)" fg:x="5370" fg:w="1"/><text x="64.3315%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.0124%" y="565" width="0.0119%" height="15" fill="rgb(232,129,47)" fg:x="5370" fg:w="1"/><text x="64.3315%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.0124%" y="549" width="0.0119%" height="15" fill="rgb(230,31,40)" fg:x="5370" fg:w="1"/><text x="64.3315%" y="559.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="64.0243%" y="549" width="0.0119%" height="15" fill="rgb(232,126,10)" fg:x="5371" fg:w="1"/><text x="64.3434%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="64.0362%" y="517" width="0.0119%" height="15" fill="rgb(205,46,31)" fg:x="5372" fg:w="1"/><text x="64.3553%" y="527.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="64.0243%" y="565" width="0.0358%" height="15" fill="rgb(232,37,37)" fg:x="5371" fg:w="3"/><text x="64.3434%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="64.0362%" y="549" width="0.0238%" height="15" fill="rgb(240,91,16)" fg:x="5372" fg:w="2"/><text x="64.3553%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="64.0362%" y="533" width="0.0238%" height="15" fill="rgb(224,160,9)" fg:x="5372" fg:w="2"/><text x="64.3553%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.0482%" y="517" width="0.0119%" height="15" fill="rgb(215,116,14)" fg:x="5373" fg:w="1"/><text x="64.3673%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="64.0005%" y="629" width="0.0715%" height="15" fill="rgb(235,46,36)" fg:x="5369" fg:w="6"/><text x="64.3196%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="64.0005%" y="613" width="0.0715%" height="15" fill="rgb(238,39,28)" fg:x="5369" fg:w="6"/><text x="64.3196%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="64.0243%" y="597" width="0.0477%" height="15" fill="rgb(242,125,29)" fg:x="5371" fg:w="4"/><text x="64.3434%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="64.0243%" y="581" width="0.0477%" height="15" fill="rgb(238,211,30)" fg:x="5371" fg:w="4"/><text x="64.3434%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.0601%" y="565" width="0.0119%" height="15" fill="rgb(227,201,28)" fg:x="5374" fg:w="1"/><text x="64.3792%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.0601%" y="549" width="0.0119%" height="15" fill="rgb(238,77,29)" fg:x="5374" fg:w="1"/><text x="64.3792%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.0601%" y="533" width="0.0119%" height="15" fill="rgb(213,221,40)" fg:x="5374" fg:w="1"/><text x="64.3792%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.0720%" y="629" width="0.0119%" height="15" fill="rgb(226,220,44)" fg:x="5375" fg:w="1"/><text x="64.3911%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="64.0720%" y="613" width="0.0119%" height="15" fill="rgb(228,90,23)" fg:x="5375" fg:w="1"/><text x="64.3911%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="63.9170%" y="645" width="0.1788%" height="15" fill="rgb(235,72,29)" fg:x="5362" fg:w="15"/><text x="64.2361%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.0839%" y="629" width="0.0119%" height="15" fill="rgb(248,117,39)" fg:x="5376" fg:w="1"/><text x="64.4030%" y="639.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="64.0839%" y="613" width="0.0119%" height="15" fill="rgb(225,43,28)" fg:x="5376" fg:w="1"/><text x="64.4030%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.0958%" y="645" width="0.0119%" height="15" fill="rgb(240,93,4)" fg:x="5377" fg:w="1"/><text x="64.4149%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.0958%" y="629" width="0.0119%" height="15" fill="rgb(234,178,27)" fg:x="5377" fg:w="1"/><text x="64.4149%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.0958%" y="613" width="0.0119%" height="15" fill="rgb(254,88,22)" fg:x="5377" fg:w="1"/><text x="64.4149%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.0958%" y="597" width="0.0119%" height="15" fill="rgb(240,206,50)" fg:x="5377" fg:w="1"/><text x="64.4149%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="63.9051%" y="661" width="0.2146%" height="15" fill="rgb(249,103,8)" fg:x="5361" fg:w="18"/><text x="64.2242%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.1078%" y="645" width="0.0119%" height="15" fill="rgb(241,178,36)" fg:x="5378" fg:w="1"/><text x="64.4269%" y="655.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="64.1078%" y="629" width="0.0119%" height="15" fill="rgb(246,110,15)" fg:x="5378" fg:w="1"/><text x="64.4269%" y="639.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="64.1197%" y="645" width="0.0358%" height="15" fill="rgb(207,14,43)" fg:x="5379" fg:w="3"/><text x="64.4388%" y="655.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="64.1197%" y="629" width="0.0358%" height="15" fill="rgb(253,219,19)" fg:x="5379" fg:w="3"/><text x="64.4388%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="64.1554%" y="645" width="0.0119%" height="15" fill="rgb(216,126,5)" fg:x="5382" fg:w="1"/><text x="64.4745%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (25 samples, 0.30%)</title><rect x="63.8813%" y="677" width="0.2980%" height="15" fill="rgb(218,78,42)" fg:x="5359" fg:w="25"/><text x="64.2004%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="64.1197%" y="661" width="0.0596%" height="15" fill="rgb(215,154,40)" fg:x="5379" fg:w="5"/><text x="64.4388%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.1674%" y="645" width="0.0119%" height="15" fill="rgb(235,129,32)" fg:x="5383" fg:w="1"/><text x="64.4865%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.1674%" y="629" width="0.0119%" height="15" fill="rgb(218,51,8)" fg:x="5383" fg:w="1"/><text x="64.4865%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.1674%" y="613" width="0.0119%" height="15" fill="rgb(245,48,4)" fg:x="5383" fg:w="1"/><text x="64.4865%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.1793%" y="629" width="0.0119%" height="15" fill="rgb(250,175,12)" fg:x="5384" fg:w="1"/><text x="64.4984%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.1793%" y="613" width="0.0119%" height="15" fill="rgb(237,95,40)" fg:x="5384" fg:w="1"/><text x="64.4984%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.1912%" y="613" width="0.0119%" height="15" fill="rgb(244,120,0)" fg:x="5385" fg:w="1"/><text x="64.5103%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.1912%" y="597" width="0.0119%" height="15" fill="rgb(241,19,42)" fg:x="5385" fg:w="1"/><text x="64.5103%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.1912%" y="581" width="0.0119%" height="15" fill="rgb(217,174,48)" fg:x="5385" fg:w="1"/><text x="64.5103%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.1912%" y="565" width="0.0119%" height="15" fill="rgb(239,36,38)" fg:x="5385" fg:w="1"/><text x="64.5103%" y="575.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="64.2031%" y="565" width="0.0238%" height="15" fill="rgb(220,63,49)" fg:x="5386" fg:w="2"/><text x="64.5222%" y="575.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="64.2031%" y="549" width="0.0238%" height="15" fill="rgb(240,101,13)" fg:x="5386" fg:w="2"/><text x="64.5222%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.2270%" y="533" width="0.0119%" height="15" fill="rgb(209,184,51)" fg:x="5388" fg:w="1"/><text x="64.5461%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.2270%" y="517" width="0.0119%" height="15" fill="rgb(206,136,39)" fg:x="5388" fg:w="1"/><text x="64.5461%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.2389%" y="533" width="0.0119%" height="15" fill="rgb(254,47,45)" fg:x="5389" fg:w="1"/><text x="64.5580%" y="543.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="64.2389%" y="517" width="0.0119%" height="15" fill="rgb(252,103,20)" fg:x="5389" fg:w="1"/><text x="64.5580%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="64.2031%" y="581" width="0.0596%" height="15" fill="rgb(230,69,12)" fg:x="5386" fg:w="5"/><text x="64.5222%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="64.2270%" y="565" width="0.0358%" height="15" fill="rgb(219,2,28)" fg:x="5388" fg:w="3"/><text x="64.5461%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="64.2270%" y="549" width="0.0358%" height="15" fill="rgb(210,9,12)" fg:x="5388" fg:w="3"/><text x="64.5461%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.2508%" y="533" width="0.0119%" height="15" fill="rgb(235,99,33)" fg:x="5390" fg:w="1"/><text x="64.5699%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.2508%" y="517" width="0.0119%" height="15" fill="rgb(230,11,38)" fg:x="5390" fg:w="1"/><text x="64.5699%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.2508%" y="501" width="0.0119%" height="15" fill="rgb(217,129,0)" fg:x="5390" fg:w="1"/><text x="64.5699%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="64.2031%" y="597" width="0.0715%" height="15" fill="rgb(222,198,4)" fg:x="5386" fg:w="6"/><text x="64.5222%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.2627%" y="581" width="0.0119%" height="15" fill="rgb(246,170,27)" fg:x="5391" fg:w="1"/><text x="64.5818%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.2627%" y="565" width="0.0119%" height="15" fill="rgb(229,17,28)" fg:x="5391" fg:w="1"/><text x="64.5818%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.2627%" y="549" width="0.0119%" height="15" fill="rgb(233,198,48)" fg:x="5391" fg:w="1"/><text x="64.5818%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="64.2031%" y="613" width="0.0834%" height="15" fill="rgb(238,103,23)" fg:x="5386" fg:w="7"/><text x="64.5222%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.2746%" y="597" width="0.0119%" height="15" fill="rgb(206,91,41)" fg:x="5392" fg:w="1"/><text x="64.5937%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.2746%" y="581" width="0.0119%" height="15" fill="rgb(227,34,25)" fg:x="5392" fg:w="1"/><text x="64.5937%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.2746%" y="565" width="0.0119%" height="15" fill="rgb(210,110,44)" fg:x="5392" fg:w="1"/><text x="64.5937%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="64.2866%" y="597" width="0.0119%" height="15" fill="rgb(216,189,8)" fg:x="5393" fg:w="1"/><text x="64.6057%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.2985%" y="581" width="0.0119%" height="15" fill="rgb(234,9,46)" fg:x="5394" fg:w="1"/><text x="64.6176%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.2985%" y="565" width="0.0119%" height="15" fill="rgb(251,200,5)" fg:x="5394" fg:w="1"/><text x="64.6176%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.2985%" y="549" width="0.0119%" height="15" fill="rgb(238,165,37)" fg:x="5394" fg:w="1"/><text x="64.6176%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="64.1793%" y="677" width="0.1430%" height="15" fill="rgb(232,77,38)" fg:x="5384" fg:w="12"/><text x="64.4984%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="64.1793%" y="661" width="0.1430%" height="15" fill="rgb(253,179,33)" fg:x="5384" fg:w="12"/><text x="64.4984%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="64.1793%" y="645" width="0.1430%" height="15" fill="rgb(240,13,35)" fg:x="5384" fg:w="12"/><text x="64.4984%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="64.1912%" y="629" width="0.1311%" height="15" fill="rgb(242,150,49)" fg:x="5385" fg:w="11"/><text x="64.5103%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="64.2866%" y="613" width="0.0358%" height="15" fill="rgb(237,176,28)" fg:x="5393" fg:w="3"/><text x="64.6057%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="64.2985%" y="597" width="0.0238%" height="15" fill="rgb(214,176,33)" fg:x="5394" fg:w="2"/><text x="64.6176%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.3104%" y="581" width="0.0119%" height="15" fill="rgb(214,25,12)" fg:x="5395" fg:w="1"/><text x="64.6295%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.3104%" y="565" width="0.0119%" height="15" fill="rgb(238,190,20)" fg:x="5395" fg:w="1"/><text x="64.6295%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.3104%" y="549" width="0.0119%" height="15" fill="rgb(208,11,19)" fg:x="5395" fg:w="1"/><text x="64.6295%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.3223%" y="565" width="0.0119%" height="15" fill="rgb(239,90,4)" fg:x="5396" fg:w="1"/><text x="64.6414%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.3223%" y="549" width="0.0119%" height="15" fill="rgb(248,110,3)" fg:x="5396" fg:w="1"/><text x="64.6414%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.3223%" y="533" width="0.0119%" height="15" fill="rgb(210,41,30)" fg:x="5396" fg:w="1"/><text x="64.6414%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.3342%" y="533" width="0.0119%" height="15" fill="rgb(239,36,8)" fg:x="5397" fg:w="1"/><text x="64.6533%" y="543.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.3342%" y="517" width="0.0119%" height="15" fill="rgb(237,201,47)" fg:x="5397" fg:w="1"/><text x="64.6533%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.3342%" y="501" width="0.0119%" height="15" fill="rgb(224,140,29)" fg:x="5397" fg:w="1"/><text x="64.6533%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.3342%" y="485" width="0.0119%" height="15" fill="rgb(231,209,17)" fg:x="5397" fg:w="1"/><text x="64.6533%" y="495.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="64.3462%" y="517" width="0.0238%" height="15" fill="rgb(249,196,1)" fg:x="5398" fg:w="2"/><text x="64.6653%" y="527.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="64.3462%" y="501" width="0.0238%" height="15" fill="rgb(223,207,51)" fg:x="5398" fg:w="2"/><text x="64.6653%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.3819%" y="501" width="0.0119%" height="15" fill="rgb(210,14,40)" fg:x="5401" fg:w="1"/><text x="64.7010%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.3819%" y="485" width="0.0119%" height="15" fill="rgb(250,20,52)" fg:x="5401" fg:w="1"/><text x="64.7010%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.3819%" y="469" width="0.0119%" height="15" fill="rgb(241,46,11)" fg:x="5401" fg:w="1"/><text x="64.7010%" y="479.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.3938%" y="485" width="0.0119%" height="15" fill="rgb(219,105,5)" fg:x="5402" fg:w="1"/><text x="64.7129%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.3938%" y="469" width="0.0119%" height="15" fill="rgb(252,77,35)" fg:x="5402" fg:w="1"/><text x="64.7129%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="64.3223%" y="661" width="0.0954%" height="15" fill="rgb(243,119,2)" fg:x="5396" fg:w="8"/><text x="64.6414%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="64.3223%" y="645" width="0.0954%" height="15" fill="rgb(206,82,28)" fg:x="5396" fg:w="8"/><text x="64.6414%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="64.3223%" y="629" width="0.0954%" height="15" fill="rgb(227,120,12)" fg:x="5396" fg:w="8"/><text x="64.6414%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="64.3223%" y="613" width="0.0954%" height="15" fill="rgb(229,134,41)" fg:x="5396" fg:w="8"/><text x="64.6414%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="64.3223%" y="597" width="0.0954%" height="15" fill="rgb(239,96,32)" fg:x="5396" fg:w="8"/><text x="64.6414%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="64.3223%" y="581" width="0.0954%" height="15" fill="rgb(225,46,27)" fg:x="5396" fg:w="8"/><text x="64.6414%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="64.3342%" y="565" width="0.0834%" height="15" fill="rgb(215,168,2)" fg:x="5397" fg:w="7"/><text x="64.6533%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="64.3342%" y="549" width="0.0834%" height="15" fill="rgb(207,170,52)" fg:x="5397" fg:w="7"/><text x="64.6533%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="64.3462%" y="533" width="0.0715%" height="15" fill="rgb(237,198,36)" fg:x="5398" fg:w="6"/><text x="64.6653%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="64.3700%" y="517" width="0.0477%" height="15" fill="rgb(213,27,14)" fg:x="5400" fg:w="4"/><text x="64.6891%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="64.3938%" y="501" width="0.0238%" height="15" fill="rgb(218,77,5)" fg:x="5402" fg:w="2"/><text x="64.7129%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.4058%" y="485" width="0.0119%" height="15" fill="rgb(230,219,39)" fg:x="5403" fg:w="1"/><text x="64.7249%" y="495.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.4058%" y="469" width="0.0119%" height="15" fill="rgb(245,177,7)" fg:x="5403" fg:w="1"/><text x="64.7249%" y="479.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.4058%" y="453" width="0.0119%" height="15" fill="rgb(246,44,46)" fg:x="5403" fg:w="1"/><text x="64.7249%" y="463.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.4058%" y="437" width="0.0119%" height="15" fill="rgb(207,173,15)" fg:x="5403" fg:w="1"/><text x="64.7249%" y="447.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.4177%" y="645" width="0.0119%" height="15" fill="rgb(245,170,50)" fg:x="5404" fg:w="1"/><text x="64.7368%" y="655.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="64.4296%" y="645" width="0.0119%" height="15" fill="rgb(233,156,21)" fg:x="5405" fg:w="1"/><text x="64.7487%" y="655.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="64.4535%" y="613" width="0.0238%" height="15" fill="rgb(253,146,27)" fg:x="5407" fg:w="2"/><text x="64.7726%" y="623.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="64.4535%" y="597" width="0.0238%" height="15" fill="rgb(247,66,29)" fg:x="5407" fg:w="2"/><text x="64.7726%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.4773%" y="597" width="0.0119%" height="15" fill="rgb(218,207,26)" fg:x="5409" fg:w="1"/><text x="64.7964%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.4773%" y="581" width="0.0119%" height="15" fill="rgb(234,93,26)" fg:x="5409" fg:w="1"/><text x="64.7964%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.4892%" y="501" width="0.0119%" height="15" fill="rgb(214,75,48)" fg:x="5410" fg:w="1"/><text x="64.8083%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.4892%" y="485" width="0.0119%" height="15" fill="rgb(229,119,22)" fg:x="5410" fg:w="1"/><text x="64.8083%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="64.4892%" y="517" width="0.0238%" height="15" fill="rgb(226,153,19)" fg:x="5410" fg:w="2"/><text x="64.8083%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="64.5011%" y="501" width="0.0119%" height="15" fill="rgb(220,204,36)" fg:x="5411" fg:w="1"/><text x="64.8202%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="64.4892%" y="597" width="0.0358%" height="15" fill="rgb(253,181,43)" fg:x="5410" fg:w="3"/><text x="64.8083%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="64.4892%" y="581" width="0.0358%" height="15" fill="rgb(211,41,51)" fg:x="5410" fg:w="3"/><text x="64.8083%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="64.4892%" y="565" width="0.0358%" height="15" fill="rgb(207,215,0)" fg:x="5410" fg:w="3"/><text x="64.8083%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="64.4892%" y="549" width="0.0358%" height="15" fill="rgb(212,153,10)" fg:x="5410" fg:w="3"/><text x="64.8083%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="64.4892%" y="533" width="0.0358%" height="15" fill="rgb(251,171,36)" fg:x="5410" fg:w="3"/><text x="64.8083%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.5131%" y="517" width="0.0119%" height="15" fill="rgb(225,219,41)" fg:x="5412" fg:w="1"/><text x="64.8322%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.5131%" y="501" width="0.0119%" height="15" fill="rgb(208,200,1)" fg:x="5412" fg:w="1"/><text x="64.8322%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.5131%" y="485" width="0.0119%" height="15" fill="rgb(206,75,47)" fg:x="5412" fg:w="1"/><text x="64.8322%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="64.4773%" y="613" width="0.0715%" height="15" fill="rgb(248,3,16)" fg:x="5409" fg:w="6"/><text x="64.7964%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="64.5250%" y="597" width="0.0238%" height="15" fill="rgb(242,157,36)" fg:x="5413" fg:w="2"/><text x="64.8441%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="64.5250%" y="581" width="0.0238%" height="15" fill="rgb(215,175,11)" fg:x="5413" fg:w="2"/><text x="64.8441%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="64.5250%" y="565" width="0.0238%" height="15" fill="rgb(252,222,22)" fg:x="5413" fg:w="2"/><text x="64.8441%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.5488%" y="581" width="0.0119%" height="15" fill="rgb(250,121,35)" fg:x="5415" fg:w="1"/><text x="64.8679%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.5488%" y="565" width="0.0119%" height="15" fill="rgb(233,120,49)" fg:x="5415" fg:w="1"/><text x="64.8679%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.5607%" y="549" width="0.0119%" height="15" fill="rgb(205,201,14)" fg:x="5416" fg:w="1"/><text x="64.8798%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.5607%" y="533" width="0.0119%" height="15" fill="rgb(219,58,45)" fg:x="5416" fg:w="1"/><text x="64.8798%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="64.5607%" y="581" width="0.0238%" height="15" fill="rgb(251,65,12)" fg:x="5416" fg:w="2"/><text x="64.8798%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="64.5607%" y="565" width="0.0238%" height="15" fill="rgb(224,47,31)" fg:x="5416" fg:w="2"/><text x="64.8798%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="64.5727%" y="549" width="0.0119%" height="15" fill="rgb(233,74,26)" fg:x="5417" fg:w="1"/><text x="64.8918%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.5846%" y="581" width="0.0119%" height="15" fill="rgb(231,211,31)" fg:x="5418" fg:w="1"/><text x="64.9037%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.5846%" y="565" width="0.0119%" height="15" fill="rgb(239,167,5)" fg:x="5418" fg:w="1"/><text x="64.9037%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), bool (*)(unsigned int)&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.5846%" y="549" width="0.0119%" height="15" fill="rgb(241,85,0)" fg:x="5418" fg:w="1"/><text x="64.9037%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.6084%" y="517" width="0.0119%" height="15" fill="rgb(229,130,21)" fg:x="5420" fg:w="1"/><text x="64.9275%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.6084%" y="501" width="0.0119%" height="15" fill="rgb(254,84,49)" fg:x="5420" fg:w="1"/><text x="64.9275%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="64.5488%" y="613" width="0.0834%" height="15" fill="rgb(235,85,21)" fg:x="5415" fg:w="7"/><text x="64.8679%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="64.5488%" y="597" width="0.0834%" height="15" fill="rgb(246,128,52)" fg:x="5415" fg:w="7"/><text x="64.8679%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="64.5965%" y="581" width="0.0358%" height="15" fill="rgb(243,114,49)" fg:x="5419" fg:w="3"/><text x="64.9156%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="64.5965%" y="565" width="0.0358%" height="15" fill="rgb(240,224,22)" fg:x="5419" fg:w="3"/><text x="64.9156%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="64.6084%" y="549" width="0.0238%" height="15" fill="rgb(247,201,52)" fg:x="5420" fg:w="2"/><text x="64.9275%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="64.6084%" y="533" width="0.0238%" height="15" fill="rgb(231,70,45)" fg:x="5420" fg:w="2"/><text x="64.9275%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.6203%" y="517" width="0.0119%" height="15" fill="rgb(217,215,20)" fg:x="5421" fg:w="1"/><text x="64.9394%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.6203%" y="501" width="0.0119%" height="15" fill="rgb(226,170,30)" fg:x="5421" fg:w="1"/><text x="64.9394%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.6203%" y="485" width="0.0119%" height="15" fill="rgb(220,190,43)" fg:x="5421" fg:w="1"/><text x="64.9394%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.6203%" y="469" width="0.0119%" height="15" fill="rgb(218,20,18)" fg:x="5421" fg:w="1"/><text x="64.9394%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.6323%" y="613" width="0.0119%" height="15" fill="rgb(245,37,26)" fg:x="5422" fg:w="1"/><text x="64.9514%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.6323%" y="597" width="0.0119%" height="15" fill="rgb(241,127,29)" fg:x="5422" fg:w="1"/><text x="64.9514%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.6323%" y="581" width="0.0119%" height="15" fill="rgb(241,33,26)" fg:x="5422" fg:w="1"/><text x="64.9514%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="64.4535%" y="629" width="0.2026%" height="15" fill="rgb(220,106,21)" fg:x="5407" fg:w="17"/><text x="64.7726%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.6442%" y="613" width="0.0119%" height="15" fill="rgb(225,125,35)" fg:x="5423" fg:w="1"/><text x="64.9633%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.6442%" y="597" width="0.0119%" height="15" fill="rgb(248,80,22)" fg:x="5423" fg:w="1"/><text x="64.9633%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.6442%" y="581" width="0.0119%" height="15" fill="rgb(231,117,39)" fg:x="5423" fg:w="1"/><text x="64.9633%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.6561%" y="613" width="0.0119%" height="15" fill="rgb(239,183,16)" fg:x="5424" fg:w="1"/><text x="64.9752%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.6561%" y="597" width="0.0119%" height="15" fill="rgb(221,61,19)" fg:x="5424" fg:w="1"/><text x="64.9752%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.6680%" y="597" width="0.0119%" height="15" fill="rgb(239,196,44)" fg:x="5425" fg:w="1"/><text x="64.9871%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.6680%" y="581" width="0.0119%" height="15" fill="rgb(206,113,19)" fg:x="5425" fg:w="1"/><text x="64.9871%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.6680%" y="565" width="0.0119%" height="15" fill="rgb(245,114,12)" fg:x="5425" fg:w="1"/><text x="64.9871%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="64.6680%" y="613" width="0.0238%" height="15" fill="rgb(247,89,39)" fg:x="5425" fg:w="2"/><text x="64.9871%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.6799%" y="597" width="0.0119%" height="15" fill="rgb(213,85,14)" fg:x="5426" fg:w="1"/><text x="64.9990%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.6799%" y="581" width="0.0119%" height="15" fill="rgb(249,206,33)" fg:x="5426" fg:w="1"/><text x="64.9990%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.6799%" y="565" width="0.0119%" height="15" fill="rgb(235,167,47)" fg:x="5426" fg:w="1"/><text x="64.9990%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="64.6919%" y="565" width="0.0119%" height="15" fill="rgb(217,177,16)" fg:x="5427" fg:w="1"/><text x="65.0110%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.7038%" y="517" width="0.0119%" height="15" fill="rgb(250,228,29)" fg:x="5428" fg:w="1"/><text x="65.0229%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.7038%" y="501" width="0.0119%" height="15" fill="rgb(216,195,42)" fg:x="5428" fg:w="1"/><text x="65.0229%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="64.6561%" y="629" width="0.0715%" height="15" fill="rgb(232,192,32)" fg:x="5424" fg:w="6"/><text x="64.9752%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="64.6919%" y="613" width="0.0358%" height="15" fill="rgb(211,8,47)" fg:x="5427" fg:w="3"/><text x="65.0110%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="64.6919%" y="597" width="0.0358%" height="15" fill="rgb(251,201,9)" fg:x="5427" fg:w="3"/><text x="65.0110%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="64.6919%" y="581" width="0.0358%" height="15" fill="rgb(206,185,47)" fg:x="5427" fg:w="3"/><text x="65.0110%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="64.7038%" y="565" width="0.0238%" height="15" fill="rgb(245,54,32)" fg:x="5428" fg:w="2"/><text x="65.0229%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="64.7038%" y="549" width="0.0238%" height="15" fill="rgb(208,1,8)" fg:x="5428" fg:w="2"/><text x="65.0229%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="64.7038%" y="533" width="0.0238%" height="15" fill="rgb(228,57,24)" fg:x="5428" fg:w="2"/><text x="65.0229%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.7157%" y="517" width="0.0119%" height="15" fill="rgb(251,24,8)" fg:x="5429" fg:w="1"/><text x="65.0348%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="64.7157%" y="501" width="0.0119%" height="15" fill="rgb(236,196,50)" fg:x="5429" fg:w="1"/><text x="65.0348%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.7276%" y="613" width="0.0119%" height="15" fill="rgb(246,222,29)" fg:x="5430" fg:w="1"/><text x="65.0467%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (28 samples, 0.33%)</title><rect x="64.4177%" y="661" width="0.3338%" height="15" fill="rgb(211,34,40)" fg:x="5404" fg:w="28"/><text x="64.7368%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="64.4415%" y="645" width="0.3099%" height="15" fill="rgb(210,66,51)" fg:x="5406" fg:w="26"/><text x="64.7606%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="64.7276%" y="629" width="0.0238%" height="15" fill="rgb(250,56,43)" fg:x="5430" fg:w="2"/><text x="65.0467%" y="639.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="64.7395%" y="613" width="0.0119%" height="15" fill="rgb(240,111,50)" fg:x="5431" fg:w="1"/><text x="65.0586%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.7515%" y="661" width="0.0119%" height="15" fill="rgb(209,117,13)" fg:x="5432" fg:w="1"/><text x="65.0706%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.7515%" y="645" width="0.0119%" height="15" fill="rgb(232,164,45)" fg:x="5432" fg:w="1"/><text x="65.0706%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.7515%" y="629" width="0.0119%" height="15" fill="rgb(205,69,32)" fg:x="5432" fg:w="1"/><text x="65.0706%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.7515%" y="613" width="0.0119%" height="15" fill="rgb(240,147,45)" fg:x="5432" fg:w="1"/><text x="65.0706%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.7634%" y="597" width="0.0119%" height="15" fill="rgb(221,94,48)" fg:x="5433" fg:w="1"/><text x="65.0825%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.7634%" y="581" width="0.0119%" height="15" fill="rgb(249,209,17)" fg:x="5433" fg:w="1"/><text x="65.0825%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.7753%" y="581" width="0.0119%" height="15" fill="rgb(228,57,28)" fg:x="5434" fg:w="1"/><text x="65.0944%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.7753%" y="565" width="0.0119%" height="15" fill="rgb(250,133,26)" fg:x="5434" fg:w="1"/><text x="65.0944%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="64.7872%" y="565" width="0.0119%" height="15" fill="rgb(254,15,16)" fg:x="5435" fg:w="1"/><text x="65.1063%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.7991%" y="565" width="0.0119%" height="15" fill="rgb(209,147,42)" fg:x="5436" fg:w="1"/><text x="65.1182%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.7991%" y="549" width="0.0119%" height="15" fill="rgb(208,5,29)" fg:x="5436" fg:w="1"/><text x="65.1182%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="64.7634%" y="645" width="0.0596%" height="15" fill="rgb(250,73,31)" fg:x="5433" fg:w="5"/><text x="65.0825%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="64.7634%" y="629" width="0.0596%" height="15" fill="rgb(238,45,10)" fg:x="5433" fg:w="5"/><text x="65.0825%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="64.7634%" y="613" width="0.0596%" height="15" fill="rgb(214,104,5)" fg:x="5433" fg:w="5"/><text x="65.0825%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="64.7753%" y="597" width="0.0477%" height="15" fill="rgb(242,217,19)" fg:x="5434" fg:w="4"/><text x="65.0944%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="64.7872%" y="581" width="0.0358%" height="15" fill="rgb(246,113,27)" fg:x="5435" fg:w="3"/><text x="65.1063%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.8111%" y="565" width="0.0119%" height="15" fill="rgb(221,34,27)" fg:x="5437" fg:w="1"/><text x="65.1302%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.8111%" y="549" width="0.0119%" height="15" fill="rgb(246,109,6)" fg:x="5437" fg:w="1"/><text x="65.1302%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.8111%" y="533" width="0.0119%" height="15" fill="rgb(217,12,25)" fg:x="5437" fg:w="1"/><text x="65.1302%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.8111%" y="517" width="0.0119%" height="15" fill="rgb(250,195,5)" fg:x="5437" fg:w="1"/><text x="65.1302%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.8111%" y="501" width="0.0119%" height="15" fill="rgb(244,140,45)" fg:x="5437" fg:w="1"/><text x="65.1302%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.8111%" y="485" width="0.0119%" height="15" fill="rgb(230,64,14)" fg:x="5437" fg:w="1"/><text x="65.1302%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::peekws::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.8111%" y="469" width="0.0119%" height="15" fill="rgb(206,27,27)" fg:x="5437" fg:w="1"/><text x="65.1302%" y="479.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.8230%" y="613" width="0.0119%" height="15" fill="rgb(230,14,50)" fg:x="5438" fg:w="1"/><text x="65.1421%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.8230%" y="597" width="0.0119%" height="15" fill="rgb(237,172,14)" fg:x="5438" fg:w="1"/><text x="65.1421%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.8349%" y="597" width="0.0119%" height="15" fill="rgb(209,25,21)" fg:x="5439" fg:w="1"/><text x="65.1540%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.8349%" y="581" width="0.0119%" height="15" fill="rgb(248,148,22)" fg:x="5439" fg:w="1"/><text x="65.1540%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.8349%" y="565" width="0.0119%" height="15" fill="rgb(234,100,22)" fg:x="5439" fg:w="1"/><text x="65.1540%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.8349%" y="549" width="0.0119%" height="15" fill="rgb(210,20,30)" fg:x="5439" fg:w="1"/><text x="65.1540%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (191 samples, 2.28%)</title><rect x="62.5820%" y="725" width="2.2768%" height="15" fill="rgb(232,58,0)" fg:x="5250" fg:w="191"/><text x="62.9011%" y="735.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (159 samples, 1.90%)</title><rect x="62.9634%" y="709" width="1.8953%" height="15" fill="rgb(221,68,13)" fg:x="5282" fg:w="159"/><text x="63.2825%" y="719.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (104 samples, 1.24%)</title><rect x="63.6190%" y="693" width="1.2397%" height="15" fill="rgb(231,194,11)" fg:x="5337" fg:w="104"/><text x="63.9381%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (45 samples, 0.54%)</title><rect x="64.3223%" y="677" width="0.5364%" height="15" fill="rgb(235,51,41)" fg:x="5396" fg:w="45"/><text x="64.6414%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="64.7634%" y="661" width="0.0954%" height="15" fill="rgb(240,50,32)" fg:x="5433" fg:w="8"/><text x="65.0825%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="64.8230%" y="645" width="0.0358%" height="15" fill="rgb(240,185,36)" fg:x="5438" fg:w="3"/><text x="65.1421%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="64.8230%" y="629" width="0.0358%" height="15" fill="rgb(211,168,15)" fg:x="5438" fg:w="3"/><text x="65.1421%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="64.8349%" y="613" width="0.0238%" height="15" fill="rgb(221,70,0)" fg:x="5439" fg:w="2"/><text x="65.1540%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.8468%" y="597" width="0.0119%" height="15" fill="rgb(205,21,33)" fg:x="5440" fg:w="1"/><text x="65.1659%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.8468%" y="581" width="0.0119%" height="15" fill="rgb(225,106,10)" fg:x="5440" fg:w="1"/><text x="65.1659%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.8468%" y="565" width="0.0119%" height="15" fill="rgb(236,200,50)" fg:x="5440" fg:w="1"/><text x="65.1659%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.8468%" y="549" width="0.0119%" height="15" fill="rgb(249,93,23)" fg:x="5440" fg:w="1"/><text x="65.1659%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.8468%" y="533" width="0.0119%" height="15" fill="rgb(244,115,35)" fg:x="5440" fg:w="1"/><text x="65.1659%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="64.8707%" y="693" width="0.0119%" height="15" fill="rgb(231,129,47)" fg:x="5442" fg:w="1"/><text x="65.1898%" y="703.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="64.8707%" y="677" width="0.0119%" height="15" fill="rgb(225,160,50)" fg:x="5442" fg:w="1"/><text x="65.1898%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.8945%" y="517" width="0.0119%" height="15" fill="rgb(218,135,23)" fg:x="5444" fg:w="1"/><text x="65.2136%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="64.8945%" y="501" width="0.0119%" height="15" fill="rgb(227,119,14)" fg:x="5444" fg:w="1"/><text x="65.2136%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="64.8945%" y="485" width="0.0119%" height="15" fill="rgb(242,138,13)" fg:x="5444" fg:w="1"/><text x="65.2136%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="64.8945%" y="549" width="0.0596%" height="15" fill="rgb(215,11,16)" fg:x="5444" fg:w="5"/><text x="65.2136%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="64.8945%" y="533" width="0.0596%" height="15" fill="rgb(234,170,50)" fg:x="5444" fg:w="5"/><text x="65.2136%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="64.9064%" y="517" width="0.0477%" height="15" fill="rgb(233,34,20)" fg:x="5445" fg:w="4"/><text x="65.2255%" y="527.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="64.9064%" y="501" width="0.0477%" height="15" fill="rgb(237,100,45)" fg:x="5445" fg:w="4"/><text x="65.2255%" y="511.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="64.9064%" y="485" width="0.0477%" height="15" fill="rgb(231,184,36)" fg:x="5445" fg:w="4"/><text x="65.2255%" y="495.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="64.9303%" y="469" width="0.0238%" height="15" fill="rgb(252,93,2)" fg:x="5447" fg:w="2"/><text x="65.2494%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="64.8945%" y="565" width="0.0715%" height="15" fill="rgb(248,176,47)" fg:x="5444" fg:w="6"/><text x="65.2136%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.9541%" y="549" width="0.0119%" height="15" fill="rgb(249,125,23)" fg:x="5449" fg:w="1"/><text x="65.2732%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="64.9541%" y="533" width="0.0119%" height="15" fill="rgb(239,67,42)" fg:x="5449" fg:w="1"/><text x="65.2732%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="64.9541%" y="517" width="0.0119%" height="15" fill="rgb(244,162,4)" fg:x="5449" fg:w="1"/><text x="65.2732%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="64.8707%" y="709" width="0.1073%" height="15" fill="rgb(214,150,38)" fg:x="5442" fg:w="9"/><text x="65.1898%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="64.8826%" y="693" width="0.0954%" height="15" fill="rgb(228,211,28)" fg:x="5443" fg:w="8"/><text x="65.2017%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="64.8826%" y="677" width="0.0954%" height="15" fill="rgb(212,98,48)" fg:x="5443" fg:w="8"/><text x="65.2017%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="64.8945%" y="661" width="0.0834%" height="15" fill="rgb(213,45,13)" fg:x="5444" fg:w="7"/><text x="65.2136%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="64.8945%" y="645" width="0.0834%" height="15" fill="rgb(218,35,29)" fg:x="5444" fg:w="7"/><text x="65.2136%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="64.8945%" y="629" width="0.0834%" height="15" fill="rgb(244,13,3)" fg:x="5444" fg:w="7"/><text x="65.2136%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="64.8945%" y="613" width="0.0834%" height="15" fill="rgb(235,170,19)" fg:x="5444" fg:w="7"/><text x="65.2136%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="64.8945%" y="597" width="0.0834%" height="15" fill="rgb(233,193,43)" fg:x="5444" fg:w="7"/><text x="65.2136%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="64.8945%" y="581" width="0.0834%" height="15" fill="rgb(228,223,20)" fg:x="5444" fg:w="7"/><text x="65.2136%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="64.9660%" y="565" width="0.0119%" height="15" fill="rgb(208,85,54)" fg:x="5450" fg:w="1"/><text x="65.2851%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="64.9660%" y="549" width="0.0119%" height="15" fill="rgb(254,14,45)" fg:x="5450" fg:w="1"/><text x="65.2851%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="64.9899%" y="597" width="0.0238%" height="15" fill="rgb(247,99,29)" fg:x="5452" fg:w="2"/><text x="65.3090%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="64.9779%" y="709" width="0.0477%" height="15" fill="rgb(225,180,54)" fg:x="5451" fg:w="4"/><text x="65.2970%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="64.9779%" y="693" width="0.0477%" height="15" fill="rgb(239,88,43)" fg:x="5451" fg:w="4"/><text x="65.2970%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="64.9779%" y="677" width="0.0477%" height="15" fill="rgb(209,47,11)" fg:x="5451" fg:w="4"/><text x="65.2970%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="64.9779%" y="661" width="0.0477%" height="15" fill="rgb(219,179,23)" fg:x="5451" fg:w="4"/><text x="65.2970%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="64.9779%" y="645" width="0.0477%" height="15" fill="rgb(213,183,19)" fg:x="5451" fg:w="4"/><text x="65.2970%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="64.9779%" y="629" width="0.0477%" height="15" fill="rgb(210,11,9)" fg:x="5451" fg:w="4"/><text x="65.2970%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="64.9779%" y="613" width="0.0477%" height="15" fill="rgb(239,194,16)" fg:x="5451" fg:w="4"/><text x="65.2970%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.0137%" y="597" width="0.0119%" height="15" fill="rgb(246,23,50)" fg:x="5454" fg:w="1"/><text x="65.3328%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="65.0137%" y="581" width="0.0119%" height="15" fill="rgb(245,10,41)" fg:x="5454" fg:w="1"/><text x="65.3328%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), logic::cpp_consume::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.0137%" y="565" width="0.0119%" height="15" fill="rgb(228,43,24)" fg:x="5454" fg:w="1"/><text x="65.3328%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="65.0256%" y="597" width="0.0119%" height="15" fill="rgb(220,151,0)" fg:x="5455" fg:w="1"/><text x="65.3447%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="65.0256%" y="581" width="0.0119%" height="15" fill="rgb(232,219,10)" fg:x="5455" fg:w="1"/><text x="65.3447%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="65.0375%" y="581" width="0.0358%" height="15" fill="rgb(227,217,48)" fg:x="5456" fg:w="3"/><text x="65.3566%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="65.0375%" y="565" width="0.0358%" height="15" fill="rgb(210,66,35)" fg:x="5456" fg:w="3"/><text x="65.3566%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="65.0495%" y="549" width="0.0238%" height="15" fill="rgb(254,6,7)" fg:x="5457" fg:w="2"/><text x="65.3686%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="65.0495%" y="533" width="0.0238%" height="15" fill="rgb(235,222,42)" fg:x="5457" fg:w="2"/><text x="65.3686%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="65.0495%" y="517" width="0.0238%" height="15" fill="rgb(245,126,5)" fg:x="5457" fg:w="2"/><text x="65.3686%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="65.0495%" y="501" width="0.0238%" height="15" fill="rgb(215,73,17)" fg:x="5457" fg:w="2"/><text x="65.3686%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="65.0495%" y="485" width="0.0238%" height="15" fill="rgb(219,198,52)" fg:x="5457" fg:w="2"/><text x="65.3686%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="65.0495%" y="469" width="0.0238%" height="15" fill="rgb(217,159,18)" fg:x="5457" fg:w="2"/><text x="65.3686%" y="479.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="65.0495%" y="453" width="0.0238%" height="15" fill="rgb(212,177,18)" fg:x="5457" fg:w="2"/><text x="65.3686%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="65.0495%" y="437" width="0.0238%" height="15" fill="rgb(241,10,11)" fg:x="5457" fg:w="2"/><text x="65.3686%" y="447.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="65.0495%" y="421" width="0.0238%" height="15" fill="rgb(232,114,35)" fg:x="5457" fg:w="2"/><text x="65.3686%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="65.0495%" y="405" width="0.0238%" height="15" fill="rgb(238,222,8)" fg:x="5457" fg:w="2"/><text x="65.3686%" y="415.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="65.0495%" y="389" width="0.0238%" height="15" fill="rgb(251,153,44)" fg:x="5457" fg:w="2"/><text x="65.3686%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="65.0495%" y="373" width="0.0238%" height="15" fill="rgb(210,140,51)" fg:x="5457" fg:w="2"/><text x="65.3686%" y="383.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="65.0495%" y="357" width="0.0238%" height="15" fill="rgb(222,63,0)" fg:x="5457" fg:w="2"/><text x="65.3686%" y="367.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="65.0495%" y="341" width="0.0238%" height="15" fill="rgb(240,18,40)" fg:x="5457" fg:w="2"/><text x="65.3686%" y="351.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="65.0495%" y="325" width="0.0238%" height="15" fill="rgb(237,88,16)" fg:x="5457" fg:w="2"/><text x="65.3686%" y="335.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="65.0733%" y="533" width="0.0119%" height="15" fill="rgb(251,117,13)" fg:x="5459" fg:w="1"/><text x="65.3924%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="65.0733%" y="517" width="0.0119%" height="15" fill="rgb(251,228,8)" fg:x="5459" fg:w="1"/><text x="65.3924%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.0852%" y="517" width="0.0119%" height="15" fill="rgb(205,107,49)" fg:x="5460" fg:w="1"/><text x="65.4043%" y="527.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.0852%" y="501" width="0.0119%" height="15" fill="rgb(238,72,41)" fg:x="5460" fg:w="1"/><text x="65.4043%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="65.0852%" y="485" width="0.0119%" height="15" fill="rgb(248,183,52)" fg:x="5460" fg:w="1"/><text x="65.4043%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="65.0852%" y="469" width="0.0119%" height="15" fill="rgb(215,58,20)" fg:x="5460" fg:w="1"/><text x="65.4043%" y="479.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="65.0972%" y="501" width="0.0238%" height="15" fill="rgb(209,49,13)" fg:x="5461" fg:w="2"/><text x="65.4163%" y="511.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="65.0972%" y="485" width="0.0238%" height="15" fill="rgb(208,113,17)" fg:x="5461" fg:w="2"/><text x="65.4163%" y="495.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="65.0972%" y="469" width="0.0238%" height="15" fill="rgb(208,14,22)" fg:x="5461" fg:w="2"/><text x="65.4163%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="65.0733%" y="581" width="0.0596%" height="15" fill="rgb(222,95,2)" fg:x="5459" fg:w="5"/><text x="65.3924%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="65.0733%" y="565" width="0.0596%" height="15" fill="rgb(253,180,37)" fg:x="5459" fg:w="5"/><text x="65.3924%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="65.0733%" y="549" width="0.0596%" height="15" fill="rgb(250,81,33)" fg:x="5459" fg:w="5"/><text x="65.3924%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="65.0852%" y="533" width="0.0477%" height="15" fill="rgb(251,151,41)" fg:x="5460" fg:w="4"/><text x="65.4043%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="65.0972%" y="517" width="0.0358%" height="15" fill="rgb(210,135,17)" fg:x="5461" fg:w="3"/><text x="65.4163%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="65.1210%" y="501" width="0.0119%" height="15" fill="rgb(239,21,29)" fg:x="5463" fg:w="1"/><text x="65.4401%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.1210%" y="485" width="0.0119%" height="15" fill="rgb(231,215,16)" fg:x="5463" fg:w="1"/><text x="65.4401%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.1210%" y="469" width="0.0119%" height="15" fill="rgb(239,151,54)" fg:x="5463" fg:w="1"/><text x="65.4401%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="65.0375%" y="597" width="0.1073%" height="15" fill="rgb(222,122,38)" fg:x="5456" fg:w="9"/><text x="65.3566%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.1329%" y="581" width="0.0119%" height="15" fill="rgb(243,128,1)" fg:x="5464" fg:w="1"/><text x="65.4520%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="65.1329%" y="565" width="0.0119%" height="15" fill="rgb(225,74,21)" fg:x="5464" fg:w="1"/><text x="65.4520%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="65.1329%" y="549" width="0.0119%" height="15" fill="rgb(216,210,10)" fg:x="5464" fg:w="1"/><text x="65.4520%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="65.1448%" y="565" width="0.0119%" height="15" fill="rgb(228,76,19)" fg:x="5465" fg:w="1"/><text x="65.4639%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="65.1448%" y="549" width="0.0119%" height="15" fill="rgb(236,80,34)" fg:x="5465" fg:w="1"/><text x="65.4639%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="65.0256%" y="613" width="0.1430%" height="15" fill="rgb(225,173,23)" fg:x="5455" fg:w="12"/><text x="65.3447%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="65.1448%" y="597" width="0.0238%" height="15" fill="rgb(253,38,1)" fg:x="5465" fg:w="2"/><text x="65.4639%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="65.1448%" y="581" width="0.0238%" height="15" fill="rgb(206,155,35)" fg:x="5465" fg:w="2"/><text x="65.4639%" y="591.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="65.1568%" y="565" width="0.0119%" height="15" fill="rgb(254,27,53)" fg:x="5466" fg:w="1"/><text x="65.4759%" y="575.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="65.1568%" y="549" width="0.0119%" height="15" fill="rgb(225,52,41)" fg:x="5466" fg:w="1"/><text x="65.4759%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (4,104 samples, 48.92%)</title><rect x="16.2594%" y="773" width="48.9212%" height="15" fill="rgb(244,53,18)" fg:x="1364" fg:w="4104"/><text x="16.5785%" y="783.50">..ult (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke </text></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;Result (State&amp;)&gt; (*)(unsigned int)&gt;::_M_invoke (3,671 samples, 43.76%)</title><rect x="21.4209%" y="757" width="43.7597%" height="15" fill="rgb(254,206,48)" fg:x="1797" fg:w="3671"/><text x="21.7400%" y="767.50">..t), std::function&lt;Result (State&amp;)&gt; (*)(unsigned int)&gt;::_M_invoke </text></g><g><title>logic::newline (920 samples, 10.97%)</title><rect x="54.2139%" y="741" width="10.9667%" height="15" fill="rgb(236,182,23)" fg:x="4548" fg:w="920"/><text x="54.5330%" y="751.50">logic::newline </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (27 samples, 0.32%)</title><rect x="64.8587%" y="725" width="0.3219%" height="15" fill="rgb(236,191,37)" fg:x="5441" fg:w="27"/><text x="65.1778%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="65.0256%" y="709" width="0.1550%" height="15" fill="rgb(245,53,8)" fg:x="5455" fg:w="13"/><text x="65.3447%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="65.0256%" y="693" width="0.1550%" height="15" fill="rgb(245,147,9)" fg:x="5455" fg:w="13"/><text x="65.3447%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="65.0256%" y="677" width="0.1550%" height="15" fill="rgb(218,24,48)" fg:x="5455" fg:w="13"/><text x="65.3447%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="65.0256%" y="661" width="0.1550%" height="15" fill="rgb(254,23,9)" fg:x="5455" fg:w="13"/><text x="65.3447%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="65.0256%" y="645" width="0.1550%" height="15" fill="rgb(244,105,9)" fg:x="5455" fg:w="13"/><text x="65.3447%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="65.0256%" y="629" width="0.1550%" height="15" fill="rgb(212,142,22)" fg:x="5455" fg:w="13"/><text x="65.3447%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.1687%" y="613" width="0.0119%" height="15" fill="rgb(221,114,49)" fg:x="5467" fg:w="1"/><text x="65.4878%" y="623.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="65.1687%" y="597" width="0.0119%" height="15" fill="rgb(223,210,25)" fg:x="5467" fg:w="1"/><text x="65.4878%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="65.1687%" y="581" width="0.0119%" height="15" fill="rgb(235,162,44)" fg:x="5467" fg:w="1"/><text x="65.4878%" y="591.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="65.1687%" y="565" width="0.0119%" height="15" fill="rgb(237,65,45)" fg:x="5467" fg:w="1"/><text x="65.4878%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (4,108 samples, 48.97%)</title><rect x="16.2594%" y="789" width="48.9689%" height="15" fill="rgb(208,79,9)" fg:x="1364" fg:w="4108"/><text x="16.5785%" y="799.50">..)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke </text></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (4 samples, 0.05%)</title><rect x="65.1806%" y="773" width="0.0477%" height="15" fill="rgb(215,228,8)" fg:x="5468" fg:w="4"/><text x="65.4997%" y="783.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (4 samples, 0.05%)</title><rect x="65.1806%" y="757" width="0.0477%" height="15" fill="rgb(205,185,17)" fg:x="5468" fg:w="4"/><text x="65.4997%" y="767.50"/></g><g><title>cond::peeks (4 samples, 0.05%)</title><rect x="65.1806%" y="741" width="0.0477%" height="15" fill="rgb(213,62,36)" fg:x="5468" fg:w="4"/><text x="65.4997%" y="751.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="65.1806%" y="725" width="0.0477%" height="15" fill="rgb(209,34,9)" fg:x="5468" fg:w="4"/><text x="65.4997%" y="735.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (4 samples, 0.05%)</title><rect x="65.1806%" y="709" width="0.0477%" height="15" fill="rgb(246,151,27)" fg:x="5468" fg:w="4"/><text x="65.4997%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="65.1806%" y="693" width="0.0477%" height="15" fill="rgb(218,206,3)" fg:x="5468" fg:w="4"/><text x="65.4997%" y="703.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="65.1806%" y="677" width="0.0477%" height="15" fill="rgb(242,202,1)" fg:x="5468" fg:w="4"/><text x="65.4997%" y="687.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="65.1806%" y="661" width="0.0477%" height="15" fill="rgb(227,185,16)" fg:x="5468" fg:w="4"/><text x="65.4997%" y="671.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="65.1806%" y="645" width="0.0477%" height="15" fill="rgb(241,1,14)" fg:x="5468" fg:w="4"/><text x="65.4997%" y="655.50"/></g><g><title>eval::eval (4,118 samples, 49.09%)</title><rect x="16.2594%" y="837" width="49.0881%" height="15" fill="rgb(212,113,25)" fg:x="1364" fg:w="4118"/><text x="16.5785%" y="847.50">eval::eval </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (4,118 samples, 49.09%)</title><rect x="16.2594%" y="821" width="49.0881%" height="15" fill="rgb(247,37,43)" fg:x="1364" fg:w="4118"/><text x="16.5785%" y="831.50">..)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (4,118 samples, 49.09%)</title><rect x="16.2594%" y="805" width="49.0881%" height="15" fill="rgb(226,54,8)" fg:x="1364" fg:w="4118"/><text x="16.5785%" y="815.50">..)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (10 samples, 0.12%)</title><rect x="65.2283%" y="789" width="0.1192%" height="15" fill="rgb(251,205,25)" fg:x="5472" fg:w="10"/><text x="65.5474%" y="799.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (10 samples, 0.12%)</title><rect x="65.2283%" y="773" width="0.1192%" height="15" fill="rgb(246,87,35)" fg:x="5472" fg:w="10"/><text x="65.5474%" y="783.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (10 samples, 0.12%)</title><rect x="65.2283%" y="757" width="0.1192%" height="15" fill="rgb(251,145,46)" fg:x="5472" fg:w="10"/><text x="65.5474%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (10 samples, 0.12%)</title><rect x="65.2283%" y="741" width="0.1192%" height="15" fill="rgb(210,210,33)" fg:x="5472" fg:w="10"/><text x="65.5474%" y="751.50"/></g><g><title>parser::as_char_parser (10 samples, 0.12%)</title><rect x="65.2283%" y="725" width="0.1192%" height="15" fill="rgb(221,151,11)" fg:x="5472" fg:w="10"/><text x="65.5474%" y="735.50"/></g><g><title>operator new (10 samples, 0.12%)</title><rect x="65.2283%" y="709" width="0.1192%" height="15" fill="rgb(208,160,28)" fg:x="5472" fg:w="10"/><text x="65.5474%" y="719.50"/></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="65.2283%" y="693" width="0.1192%" height="15" fill="rgb(243,69,29)" fg:x="5472" fg:w="10"/><text x="65.5474%" y="703.50"/></g><g><title>_int_malloc (10 samples, 0.12%)</title><rect x="65.2283%" y="677" width="0.1192%" height="15" fill="rgb(224,144,4)" fg:x="5472" fg:w="10"/><text x="65.5474%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="65.3475%" y="693" width="0.1192%" height="15" fill="rgb(211,140,38)" fg:x="5482" fg:w="10"/><text x="65.6666%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="65.3475%" y="677" width="0.1192%" height="15" fill="rgb(252,189,15)" fg:x="5482" fg:w="10"/><text x="65.6666%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="65.3475%" y="661" width="0.1192%" height="15" fill="rgb(251,175,23)" fg:x="5482" fg:w="10"/><text x="65.6666%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="65.3475%" y="645" width="0.1192%" height="15" fill="rgb(212,184,11)" fg:x="5482" fg:w="10"/><text x="65.6666%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="65.3475%" y="629" width="0.1192%" height="15" fill="rgb(217,205,6)" fg:x="5482" fg:w="10"/><text x="65.6666%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="65.3475%" y="613" width="0.1192%" height="15" fill="rgb(235,45,45)" fg:x="5482" fg:w="10"/><text x="65.6666%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="65.3475%" y="597" width="0.1192%" height="15" fill="rgb(211,157,53)" fg:x="5482" fg:w="10"/><text x="65.6666%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="65.3475%" y="581" width="0.1192%" height="15" fill="rgb(212,13,8)" fg:x="5482" fg:w="10"/><text x="65.6666%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="65.3475%" y="565" width="0.1192%" height="15" fill="rgb(218,80,36)" fg:x="5482" fg:w="10"/><text x="65.6666%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="65.3475%" y="549" width="0.1192%" height="15" fill="rgb(211,123,43)" fg:x="5482" fg:w="10"/><text x="65.6666%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (10 samples, 0.12%)</title><rect x="65.3475%" y="533" width="0.1192%" height="15" fill="rgb(206,165,2)" fg:x="5482" fg:w="10"/><text x="65.6666%" y="543.50"/></g><g><title>operator new (10 samples, 0.12%)</title><rect x="65.3475%" y="517" width="0.1192%" height="15" fill="rgb(248,63,35)" fg:x="5482" fg:w="10"/><text x="65.6666%" y="527.50"/></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="65.3475%" y="501" width="0.1192%" height="15" fill="rgb(219,133,41)" fg:x="5482" fg:w="10"/><text x="65.6666%" y="511.50"/></g><g><title>_int_malloc (10 samples, 0.12%)</title><rect x="65.3475%" y="485" width="0.1192%" height="15" fill="rgb(206,175,46)" fg:x="5482" fg:w="10"/><text x="65.6666%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.4667%" y="469" width="0.0119%" height="15" fill="rgb(224,41,35)" fg:x="5492" fg:w="1"/><text x="65.7858%" y="479.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.4667%" y="453" width="0.0119%" height="15" fill="rgb(226,113,24)" fg:x="5492" fg:w="1"/><text x="65.7858%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="65.4667%" y="437" width="0.0119%" height="15" fill="rgb(219,51,41)" fg:x="5492" fg:w="1"/><text x="65.7858%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.4667%" y="421" width="0.0119%" height="15" fill="rgb(220,145,47)" fg:x="5492" fg:w="1"/><text x="65.7858%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="65.4667%" y="405" width="0.0119%" height="15" fill="rgb(239,121,47)" fg:x="5492" fg:w="1"/><text x="65.7858%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.4667%" y="389" width="0.0119%" height="15" fill="rgb(207,60,40)" fg:x="5492" fg:w="1"/><text x="65.7858%" y="399.50"/></g><g><title>&lt;helix_term::ui::editor::EditorView as helix_term::compositor::Component&gt;::handle_event (4,221 samples, 50.32%)</title><rect x="15.3058%" y="981" width="50.3159%" height="15" fill="rgb(224,229,11)" fg:x="1284" fg:w="4221"/><text x="15.6249%" y="991.50">..:editor::EditorView as helix_term::compositor::Component&gt;::handle_event </text></g><g><title>helix_term::ui::editor::EditorView::insert_mode (4,141 samples, 49.36%)</title><rect x="16.2594%" y="965" width="49.3623%" height="15" fill="rgb(252,28,32)" fg:x="1364" fg:w="4141"/><text x="16.5785%" y="975.50">helix_term::ui::editor::EditorView::insert_mode </text></g><g><title>helix_term::commands::insert::insert_char (4,141 samples, 49.36%)</title><rect x="16.2594%" y="949" width="49.3623%" height="15" fill="rgb(207,52,49)" fg:x="1364" fg:w="4141"/><text x="16.5785%" y="959.50">helix_term::commands::insert::insert_char </text></g><g><title>helix_view::document::Document::apply (4,141 samples, 49.36%)</title><rect x="16.2594%" y="933" width="49.3623%" height="15" fill="rgb(243,51,50)" fg:x="1364" fg:w="4141"/><text x="16.5785%" y="943.50">helix_view::document::Document::apply </text></g><g><title>helix_view::document::Document::apply_impl (4,141 samples, 49.36%)</title><rect x="16.2594%" y="917" width="49.3623%" height="15" fill="rgb(212,92,21)" fg:x="1364" fg:w="4141"/><text x="16.5785%" y="927.50">helix_view::document::Document::apply_impl </text></g><g><title>helix_core::syntax::LanguageLayer::update (4,141 samples, 49.36%)</title><rect x="16.2594%" y="901" width="49.3623%" height="15" fill="rgb(230,183,50)" fg:x="1364" fg:w="4141"/><text x="16.5785%" y="911.50">helix_core::syntax::LanguageLayer::update </text></g><g><title>helix_core::syntax::LanguageLayer::parse (4,141 samples, 49.36%)</title><rect x="16.2594%" y="885" width="49.3623%" height="15" fill="rgb(225,48,9)" fg:x="1364" fg:w="4141"/><text x="16.5785%" y="895.50">helix_core::syntax::LanguageLayer::parse </text></g><g><title>ts_parser_parse (4,141 samples, 49.36%)</title><rect x="16.2594%" y="869" width="49.3623%" height="15" fill="rgb(254,44,4)" fg:x="1364" fg:w="4141"/><text x="16.5785%" y="879.50">ts_parser_parse </text></g><g><title>tree_sitter_haskell_external_scanner_scan (4,141 samples, 49.36%)</title><rect x="16.2594%" y="853" width="49.3623%" height="15" fill="rgb(252,128,37)" fg:x="1364" fg:w="4141"/><text x="16.5785%" y="863.50">tree_sitter_haskell_external_scanner_scan </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (23 samples, 0.27%)</title><rect x="65.3475%" y="837" width="0.2742%" height="15" fill="rgb(227,178,8)" fg:x="5482" fg:w="23"/><text x="65.6666%" y="847.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="65.3475%" y="821" width="0.2742%" height="15" fill="rgb(205,206,32)" fg:x="5482" fg:w="23"/><text x="65.6666%" y="831.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (23 samples, 0.27%)</title><rect x="65.3475%" y="805" width="0.2742%" height="15" fill="rgb(220,218,22)" fg:x="5482" fg:w="23"/><text x="65.6666%" y="815.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="65.3475%" y="789" width="0.2742%" height="15" fill="rgb(236,41,28)" fg:x="5482" fg:w="23"/><text x="65.6666%" y="799.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (23 samples, 0.27%)</title><rect x="65.3475%" y="773" width="0.2742%" height="15" fill="rgb(219,37,7)" fg:x="5482" fg:w="23"/><text x="65.6666%" y="783.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="65.3475%" y="757" width="0.2742%" height="15" fill="rgb(206,160,15)" fg:x="5482" fg:w="23"/><text x="65.6666%" y="767.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (23 samples, 0.27%)</title><rect x="65.3475%" y="741" width="0.2742%" height="15" fill="rgb(208,82,21)" fg:x="5482" fg:w="23"/><text x="65.6666%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="65.3475%" y="725" width="0.2742%" height="15" fill="rgb(226,130,25)" fg:x="5482" fg:w="23"/><text x="65.6666%" y="735.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (23 samples, 0.27%)</title><rect x="65.3475%" y="709" width="0.2742%" height="15" fill="rgb(212,72,24)" fg:x="5482" fg:w="23"/><text x="65.6666%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="65.4667%" y="693" width="0.1550%" height="15" fill="rgb(206,28,16)" fg:x="5492" fg:w="13"/><text x="65.7858%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="65.4667%" y="677" width="0.1550%" height="15" fill="rgb(249,41,5)" fg:x="5492" fg:w="13"/><text x="65.7858%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="65.4667%" y="661" width="0.1550%" height="15" fill="rgb(233,96,48)" fg:x="5492" fg:w="13"/><text x="65.7858%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="65.4667%" y="645" width="0.1550%" height="15" fill="rgb(240,198,11)" fg:x="5492" fg:w="13"/><text x="65.7858%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="65.4667%" y="629" width="0.1550%" height="15" fill="rgb(209,175,35)" fg:x="5492" fg:w="13"/><text x="65.7858%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="65.4667%" y="613" width="0.1550%" height="15" fill="rgb(214,40,51)" fg:x="5492" fg:w="13"/><text x="65.7858%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="65.4667%" y="597" width="0.1550%" height="15" fill="rgb(252,56,4)" fg:x="5492" fg:w="13"/><text x="65.7858%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="65.4667%" y="581" width="0.1550%" height="15" fill="rgb(219,131,5)" fg:x="5492" fg:w="13"/><text x="65.7858%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="65.4667%" y="565" width="0.1550%" height="15" fill="rgb(223,67,53)" fg:x="5492" fg:w="13"/><text x="65.7858%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="65.4667%" y="549" width="0.1550%" height="15" fill="rgb(227,154,8)" fg:x="5492" fg:w="13"/><text x="65.7858%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="65.4667%" y="533" width="0.1550%" height="15" fill="rgb(216,174,51)" fg:x="5492" fg:w="13"/><text x="65.7858%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="65.4667%" y="517" width="0.1550%" height="15" fill="rgb(239,60,34)" fg:x="5492" fg:w="13"/><text x="65.7858%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="65.4667%" y="501" width="0.1550%" height="15" fill="rgb(236,165,48)" fg:x="5492" fg:w="13"/><text x="65.7858%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="65.4667%" y="485" width="0.1550%" height="15" fill="rgb(210,37,26)" fg:x="5492" fg:w="13"/><text x="65.7858%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="65.4786%" y="469" width="0.1430%" height="15" fill="rgb(211,3,17)" fg:x="5493" fg:w="12"/><text x="65.7977%" y="479.50"/></g><g><title>operator new (12 samples, 0.14%)</title><rect x="65.4786%" y="453" width="0.1430%" height="15" fill="rgb(234,88,49)" fg:x="5493" fg:w="12"/><text x="65.7977%" y="463.50"/></g><g><title>__GI___libc_malloc (12 samples, 0.14%)</title><rect x="65.4786%" y="437" width="0.1430%" height="15" fill="rgb(233,40,17)" fg:x="5493" fg:w="12"/><text x="65.7977%" y="447.50"/></g><g><title>_int_malloc (12 samples, 0.14%)</title><rect x="65.4786%" y="421" width="0.1430%" height="15" fill="rgb(235,127,31)" fg:x="5493" fg:w="12"/><text x="65.7977%" y="431.50"/></g><g><title>helix_core::indent::auto_detect_indent_style (1 samples, 0.01%)</title><rect x="65.6216%" y="901" width="0.0119%" height="15" fill="rgb(248,167,17)" fg:x="5505" fg:w="1"/><text x="65.9407%" y="911.50"/></g><g><title>ropey::iter::Chars::from_str_at (1 samples, 0.01%)</title><rect x="65.6216%" y="885" width="0.0119%" height="15" fill="rgb(218,179,8)" fg:x="5505" fg:w="1"/><text x="65.9407%" y="895.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="65.6336%" y="741" width="0.0119%" height="15" fill="rgb(216,92,14)" fg:x="5506" fg:w="1"/><text x="65.9527%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="65.6336%" y="725" width="0.0119%" height="15" fill="rgb(221,198,46)" fg:x="5506" fg:w="1"/><text x="65.9527%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="65.6336%" y="709" width="0.0119%" height="15" fill="rgb(244,7,25)" fg:x="5506" fg:w="1"/><text x="65.9527%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="65.6336%" y="757" width="0.0238%" height="15" fill="rgb(233,75,6)" fg:x="5506" fg:w="2"/><text x="65.9527%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.6455%" y="741" width="0.0119%" height="15" fill="rgb(240,189,41)" fg:x="5507" fg:w="1"/><text x="65.9646%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.6455%" y="725" width="0.0119%" height="15" fill="rgb(237,157,21)" fg:x="5507" fg:w="1"/><text x="65.9646%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.6455%" y="709" width="0.0119%" height="15" fill="rgb(210,136,49)" fg:x="5507" fg:w="1"/><text x="65.9646%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.6455%" y="693" width="0.0119%" height="15" fill="rgb(210,68,29)" fg:x="5507" fg:w="1"/><text x="65.9646%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.6455%" y="677" width="0.0119%" height="15" fill="rgb(247,207,20)" fg:x="5507" fg:w="1"/><text x="65.9646%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.6455%" y="661" width="0.0119%" height="15" fill="rgb(224,73,48)" fg:x="5507" fg:w="1"/><text x="65.9646%" y="671.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="65.6455%" y="645" width="0.0119%" height="15" fill="rgb(215,136,47)" fg:x="5507" fg:w="1"/><text x="65.9646%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="65.6336%" y="773" width="0.0358%" height="15" fill="rgb(232,222,16)" fg:x="5506" fg:w="3"/><text x="65.9527%" y="783.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="65.6574%" y="757" width="0.0119%" height="15" fill="rgb(249,202,47)" fg:x="5508" fg:w="1"/><text x="65.9765%" y="767.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="65.6574%" y="741" width="0.0119%" height="15" fill="rgb(236,56,8)" fg:x="5508" fg:w="1"/><text x="65.9765%" y="751.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.6574%" y="725" width="0.0119%" height="15" fill="rgb(222,6,3)" fg:x="5508" fg:w="1"/><text x="65.9765%" y="735.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.6574%" y="709" width="0.0119%" height="15" fill="rgb(254,222,28)" fg:x="5508" fg:w="1"/><text x="65.9765%" y="719.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="65.6574%" y="693" width="0.0119%" height="15" fill="rgb(219,57,23)" fg:x="5508" fg:w="1"/><text x="65.9765%" y="703.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="65.6574%" y="677" width="0.0119%" height="15" fill="rgb(251,106,48)" fg:x="5508" fg:w="1"/><text x="65.9765%" y="687.50"/></g><g><title>eval::eval (4 samples, 0.05%)</title><rect x="65.6336%" y="821" width="0.0477%" height="15" fill="rgb(242,2,23)" fg:x="5506" fg:w="4"/><text x="65.9527%" y="831.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (4 samples, 0.05%)</title><rect x="65.6336%" y="805" width="0.0477%" height="15" fill="rgb(212,109,31)" fg:x="5506" fg:w="4"/><text x="65.9527%" y="815.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (4 samples, 0.05%)</title><rect x="65.6336%" y="789" width="0.0477%" height="15" fill="rgb(241,9,22)" fg:x="5506" fg:w="4"/><text x="65.9527%" y="799.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="65.6693%" y="773" width="0.0119%" height="15" fill="rgb(209,64,27)" fg:x="5509" fg:w="1"/><text x="65.9884%" y="783.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="65.6693%" y="757" width="0.0119%" height="15" fill="rgb(248,13,44)" fg:x="5509" fg:w="1"/><text x="65.9884%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="65.6693%" y="741" width="0.0119%" height="15" fill="rgb(213,86,6)" fg:x="5509" fg:w="1"/><text x="65.9884%" y="751.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), parser::skipspace::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="65.6693%" y="725" width="0.0119%" height="15" fill="rgb(247,11,18)" fg:x="5509" fg:w="1"/><text x="65.9884%" y="735.50"/></g><g><title>cond::peek (1 samples, 0.01%)</title><rect x="65.6693%" y="709" width="0.0119%" height="15" fill="rgb(252,31,11)" fg:x="5509" fg:w="1"/><text x="65.9884%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.6693%" y="693" width="0.0119%" height="15" fill="rgb(215,63,51)" fg:x="5509" fg:w="1"/><text x="65.9884%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.6693%" y="677" width="0.0119%" height="15" fill="rgb(222,180,4)" fg:x="5509" fg:w="1"/><text x="65.9884%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.6812%" y="789" width="0.0119%" height="15" fill="rgb(233,4,23)" fg:x="5510" fg:w="1"/><text x="66.0003%" y="799.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.6812%" y="773" width="0.0119%" height="15" fill="rgb(230,116,22)" fg:x="5510" fg:w="1"/><text x="66.0003%" y="783.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.6812%" y="757" width="0.0119%" height="15" fill="rgb(222,20,14)" fg:x="5510" fg:w="1"/><text x="66.0003%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.6812%" y="741" width="0.0119%" height="15" fill="rgb(210,176,43)" fg:x="5510" fg:w="1"/><text x="66.0003%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.6812%" y="725" width="0.0119%" height="15" fill="rgb(219,67,32)" fg:x="5510" fg:w="1"/><text x="66.0003%" y="735.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="65.6812%" y="709" width="0.0119%" height="15" fill="rgb(228,91,39)" fg:x="5510" fg:w="1"/><text x="66.0003%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.6932%" y="677" width="0.0119%" height="15" fill="rgb(254,63,14)" fg:x="5511" fg:w="1"/><text x="66.0123%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.6932%" y="661" width="0.0119%" height="15" fill="rgb(216,171,39)" fg:x="5511" fg:w="1"/><text x="66.0123%" y="671.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="65.6932%" y="645" width="0.0119%" height="15" fill="rgb(248,68,25)" fg:x="5511" fg:w="1"/><text x="66.0123%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="65.6932%" y="773" width="0.0238%" height="15" fill="rgb(239,63,16)" fg:x="5511" fg:w="2"/><text x="66.0123%" y="783.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="65.6932%" y="757" width="0.0238%" height="15" fill="rgb(225,111,43)" fg:x="5511" fg:w="2"/><text x="66.0123%" y="767.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="65.6932%" y="741" width="0.0238%" height="15" fill="rgb(246,165,17)" fg:x="5511" fg:w="2"/><text x="66.0123%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="65.6932%" y="725" width="0.0238%" height="15" fill="rgb(208,124,1)" fg:x="5511" fg:w="2"/><text x="66.0123%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="65.6932%" y="709" width="0.0238%" height="15" fill="rgb(234,147,33)" fg:x="5511" fg:w="2"/><text x="66.0123%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="65.6932%" y="693" width="0.0238%" height="15" fill="rgb(240,86,30)" fg:x="5511" fg:w="2"/><text x="66.0123%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.7051%" y="677" width="0.0119%" height="15" fill="rgb(237,34,51)" fg:x="5512" fg:w="1"/><text x="66.0242%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="65.7051%" y="661" width="0.0119%" height="15" fill="rgb(232,131,41)" fg:x="5512" fg:w="1"/><text x="66.0242%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="65.7051%" y="645" width="0.0119%" height="15" fill="rgb(227,129,53)" fg:x="5512" fg:w="1"/><text x="66.0242%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.7170%" y="757" width="0.0119%" height="15" fill="rgb(230,90,35)" fg:x="5513" fg:w="1"/><text x="66.0361%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.7170%" y="741" width="0.0119%" height="15" fill="rgb(248,88,27)" fg:x="5513" fg:w="1"/><text x="66.0361%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.7170%" y="725" width="0.0119%" height="15" fill="rgb(223,18,17)" fg:x="5513" fg:w="1"/><text x="66.0361%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.7170%" y="709" width="0.0119%" height="15" fill="rgb(241,11,10)" fg:x="5513" fg:w="1"/><text x="66.0361%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.7170%" y="693" width="0.0119%" height="15" fill="rgb(232,111,52)" fg:x="5513" fg:w="1"/><text x="66.0361%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="65.7170%" y="677" width="0.0119%" height="15" fill="rgb(228,67,8)" fg:x="5513" fg:w="1"/><text x="66.0361%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="65.7170%" y="661" width="0.0119%" height="15" fill="rgb(251,168,31)" fg:x="5513" fg:w="1"/><text x="66.0361%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="65.6812%" y="821" width="0.0596%" height="15" fill="rgb(249,164,11)" fg:x="5510" fg:w="5"/><text x="66.0003%" y="831.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="65.6812%" y="805" width="0.0596%" height="15" fill="rgb(239,81,9)" fg:x="5510" fg:w="5"/><text x="66.0003%" y="815.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="65.6932%" y="789" width="0.0477%" height="15" fill="rgb(222,145,38)" fg:x="5511" fg:w="4"/><text x="66.0123%" y="799.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="65.7170%" y="773" width="0.0238%" height="15" fill="rgb(238,80,54)" fg:x="5513" fg:w="2"/><text x="66.0361%" y="783.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.7289%" y="757" width="0.0119%" height="15" fill="rgb(237,116,16)" fg:x="5514" fg:w="1"/><text x="66.0480%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.7289%" y="741" width="0.0119%" height="15" fill="rgb(218,135,19)" fg:x="5514" fg:w="1"/><text x="66.0480%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.7289%" y="725" width="0.0119%" height="15" fill="rgb(216,207,44)" fg:x="5514" fg:w="1"/><text x="66.0480%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.7289%" y="709" width="0.0119%" height="15" fill="rgb(226,152,40)" fg:x="5514" fg:w="1"/><text x="66.0480%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.7289%" y="693" width="0.0119%" height="15" fill="rgb(219,98,35)" fg:x="5514" fg:w="1"/><text x="66.0480%" y="703.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="65.7289%" y="677" width="0.0119%" height="15" fill="rgb(222,136,46)" fg:x="5514" fg:w="1"/><text x="66.0480%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.7409%" y="741" width="0.0119%" height="15" fill="rgb(222,71,8)" fg:x="5515" fg:w="1"/><text x="66.0600%" y="751.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="65.7409%" y="725" width="0.0119%" height="15" fill="rgb(209,89,53)" fg:x="5515" fg:w="1"/><text x="66.0600%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.7409%" y="709" width="0.0119%" height="15" fill="rgb(210,97,51)" fg:x="5515" fg:w="1"/><text x="66.0600%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.7409%" y="693" width="0.0119%" height="15" fill="rgb(248,65,21)" fg:x="5515" fg:w="1"/><text x="66.0600%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="65.7409%" y="677" width="0.0119%" height="15" fill="rgb(222,5,31)" fg:x="5515" fg:w="1"/><text x="66.0600%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.7409%" y="661" width="0.0119%" height="15" fill="rgb(241,16,30)" fg:x="5515" fg:w="1"/><text x="66.0600%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="65.7409%" y="645" width="0.0119%" height="15" fill="rgb(215,86,30)" fg:x="5515" fg:w="1"/><text x="66.0600%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.7409%" y="629" width="0.0119%" height="15" fill="rgb(235,26,44)" fg:x="5515" fg:w="1"/><text x="66.0600%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="65.7409%" y="613" width="0.0119%" height="15" fill="rgb(228,147,14)" fg:x="5515" fg:w="1"/><text x="66.0600%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="65.7409%" y="597" width="0.0119%" height="15" fill="rgb(253,38,50)" fg:x="5515" fg:w="1"/><text x="66.0600%" y="607.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="65.7409%" y="581" width="0.0119%" height="15" fill="rgb(251,151,16)" fg:x="5515" fg:w="1"/><text x="66.0600%" y="591.50"/></g><g><title>tree_sitter_haskell_external_scanner_scan (11 samples, 0.13%)</title><rect x="65.6336%" y="837" width="0.1311%" height="15" fill="rgb(224,64,19)" fg:x="5506" fg:w="11"/><text x="65.9527%" y="847.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="65.7409%" y="821" width="0.0238%" height="15" fill="rgb(235,214,47)" fg:x="5515" fg:w="2"/><text x="66.0600%" y="831.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="65.7409%" y="805" width="0.0238%" height="15" fill="rgb(218,15,19)" fg:x="5515" fg:w="2"/><text x="66.0600%" y="815.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="65.7409%" y="789" width="0.0238%" height="15" fill="rgb(247,209,3)" fg:x="5515" fg:w="2"/><text x="66.0600%" y="799.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="65.7409%" y="773" width="0.0238%" height="15" fill="rgb(217,29,2)" fg:x="5515" fg:w="2"/><text x="66.0600%" y="783.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="65.7409%" y="757" width="0.0238%" height="15" fill="rgb(234,9,9)" fg:x="5515" fg:w="2"/><text x="66.0600%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.7528%" y="741" width="0.0119%" height="15" fill="rgb(207,43,14)" fg:x="5516" fg:w="1"/><text x="66.0719%" y="751.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="65.7528%" y="725" width="0.0119%" height="15" fill="rgb(216,219,36)" fg:x="5516" fg:w="1"/><text x="66.0719%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.7528%" y="709" width="0.0119%" height="15" fill="rgb(238,12,26)" fg:x="5516" fg:w="1"/><text x="66.0719%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="65.7528%" y="693" width="0.0119%" height="15" fill="rgb(226,67,30)" fg:x="5516" fg:w="1"/><text x="66.0719%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.7528%" y="677" width="0.0119%" height="15" fill="rgb(229,154,7)" fg:x="5516" fg:w="1"/><text x="66.0719%" y="687.50"/></g><g><title>helix_term::compositor::Compositor::handle_event (4,234 samples, 50.47%)</title><rect x="15.3058%" y="997" width="50.4709%" height="15" fill="rgb(249,90,18)" fg:x="1284" fg:w="4234"/><text x="15.6249%" y="1007.50">helix_term::compositor::Compositor::handle_event </text></g><g><title>&lt;helix_term::ui::prompt::Prompt as helix_term::compositor::Component&gt;::handle_event (13 samples, 0.15%)</title><rect x="65.6216%" y="981" width="0.1550%" height="15" fill="rgb(223,53,15)" fg:x="5505" fg:w="13"/><text x="65.9407%" y="991.50"/></g><g><title>helix_term::commands::command_mode::_{{closure}} (13 samples, 0.15%)</title><rect x="65.6216%" y="965" width="0.1550%" height="15" fill="rgb(253,86,38)" fg:x="5505" fg:w="13"/><text x="65.9407%" y="975.50"/></g><g><title>helix_term::commands::cmd::open (13 samples, 0.15%)</title><rect x="65.6216%" y="949" width="0.1550%" height="15" fill="rgb(222,198,9)" fg:x="5505" fg:w="13"/><text x="65.9407%" y="959.50"/></g><g><title>helix_view::editor::Editor::open (13 samples, 0.15%)</title><rect x="65.6216%" y="933" width="0.1550%" height="15" fill="rgb(240,146,25)" fg:x="5505" fg:w="13"/><text x="65.9407%" y="943.50"/></g><g><title>helix_view::document::Document::open (13 samples, 0.15%)</title><rect x="65.6216%" y="917" width="0.1550%" height="15" fill="rgb(225,38,10)" fg:x="5505" fg:w="13"/><text x="65.9407%" y="927.50"/></g><g><title>helix_view::document::Document::set_language (12 samples, 0.14%)</title><rect x="65.6336%" y="901" width="0.1430%" height="15" fill="rgb(246,93,4)" fg:x="5506" fg:w="12"/><text x="65.9527%" y="911.50"/></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.14%)</title><rect x="65.6336%" y="885" width="0.1430%" height="15" fill="rgb(222,55,18)" fg:x="5506" fg:w="12"/><text x="65.9527%" y="895.50"/></g><g><title>helix_core::syntax::LanguageLayer::parse (12 samples, 0.14%)</title><rect x="65.6336%" y="869" width="0.1430%" height="15" fill="rgb(233,137,48)" fg:x="5506" fg:w="12"/><text x="65.9527%" y="879.50"/></g><g><title>ts_parser_parse (12 samples, 0.14%)</title><rect x="65.6336%" y="853" width="0.1430%" height="15" fill="rgb(214,8,54)" fg:x="5506" fg:w="12"/><text x="65.9527%" y="863.50"/></g><g><title>ts_stack_is_paused (1 samples, 0.01%)</title><rect x="65.7647%" y="837" width="0.0119%" height="15" fill="rgb(206,75,4)" fg:x="5517" fg:w="1"/><text x="66.0838%" y="847.50"/></g><g><title>ts_node_start_point (1 samples, 0.01%)</title><rect x="65.8243%" y="853" width="0.0119%" height="15" fill="rgb(238,171,14)" fg:x="5522" fg:w="1"/><text x="66.1434%" y="863.50"/></g><g><title>ts_tree_cursor_current_status (2 samples, 0.02%)</title><rect x="65.8362%" y="853" width="0.0238%" height="15" fill="rgb(233,70,41)" fg:x="5523" fg:w="2"/><text x="66.1553%" y="863.50"/></g><g><title>&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.12%)</title><rect x="65.7766%" y="901" width="0.1192%" height="15" fill="rgb(214,68,36)" fg:x="5518" fg:w="10"/><text x="66.0957%" y="911.50"/></g><g><title>ts_query_cursor_next_capture (10 samples, 0.12%)</title><rect x="65.7766%" y="885" width="0.1192%" height="15" fill="rgb(223,29,5)" fg:x="5518" fg:w="10"/><text x="66.0957%" y="895.50"/></g><g><title>ts_query_cursor__advance (10 samples, 0.12%)</title><rect x="65.7766%" y="869" width="0.1192%" height="15" fill="rgb(251,22,40)" fg:x="5518" fg:w="10"/><text x="66.0957%" y="879.50"/></g><g><title>ts_tree_cursor_goto_next_sibling (3 samples, 0.04%)</title><rect x="65.8601%" y="853" width="0.0358%" height="15" fill="rgb(210,67,41)" fg:x="5525" fg:w="3"/><text x="66.1792%" y="863.50"/></g><g><title>ts_tree_cursor_goto_first_child (2 samples, 0.02%)</title><rect x="65.8720%" y="837" width="0.0238%" height="15" fill="rgb(225,177,31)" fg:x="5526" fg:w="2"/><text x="66.1911%" y="847.50"/></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,247 samples, 50.63%)</title><rect x="15.2938%" y="1045" width="50.6258%" height="15" fill="rgb(221,229,11)" fg:x="1283" fg:w="4247"/><text x="15.6129%" y="1055.50">..ture::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll </text></g><g><title>helix_term::application::Application::run::{{closure}} (4,246 samples, 50.61%)</title><rect x="15.3058%" y="1029" width="50.6139%" height="15" fill="rgb(247,172,52)" fg:x="1284" fg:w="4246"/><text x="15.6249%" y="1039.50">helix_term::application::Application::run::{{closure}} </text></g><g><title>helix_term::application::Application::handle_terminal_events (4,246 samples, 50.61%)</title><rect x="15.3058%" y="1013" width="50.6139%" height="15" fill="rgb(212,73,19)" fg:x="1284" fg:w="4246"/><text x="15.6249%" y="1023.50">helix_term::application::Application::handle_terminal_events </text></g><g><title>helix_term::compositor::Compositor::render (12 samples, 0.14%)</title><rect x="65.7766%" y="997" width="0.1430%" height="15" fill="rgb(244,7,46)" fg:x="5518" fg:w="12"/><text x="66.0957%" y="1007.50"/></g><g><title>&lt;helix_term::ui::editor::EditorView as helix_term::compositor::Component&gt;::render (12 samples, 0.14%)</title><rect x="65.7766%" y="981" width="0.1430%" height="15" fill="rgb(230,113,20)" fg:x="5518" fg:w="12"/><text x="66.0957%" y="991.50"/></g><g><title>helix_term::ui::editor::EditorView::render_view (12 samples, 0.14%)</title><rect x="65.7766%" y="965" width="0.1430%" height="15" fill="rgb(209,97,30)" fg:x="5518" fg:w="12"/><text x="66.0957%" y="975.50"/></g><g><title>helix_term::ui::editor::EditorView::doc_syntax_highlights (12 samples, 0.14%)</title><rect x="65.7766%" y="949" width="0.1430%" height="15" fill="rgb(243,89,12)" fg:x="5518" fg:w="12"/><text x="66.0957%" y="959.50"/></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.14%)</title><rect x="65.7766%" y="933" width="0.1430%" height="15" fill="rgb(228,32,19)" fg:x="5518" fg:w="12"/><text x="66.0957%" y="943.50"/></g><g><title>&lt;helix_core::syntax::HighlightIter&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.14%)</title><rect x="65.7766%" y="917" width="0.1430%" height="15" fill="rgb(248,25,17)" fg:x="5518" fg:w="12"/><text x="66.0957%" y="927.50"/></g><g><title>helix_core::syntax::byte_range_to_str (2 samples, 0.02%)</title><rect x="65.8958%" y="901" width="0.0238%" height="15" fill="rgb(232,161,29)" fg:x="5528" fg:w="2"/><text x="66.2149%" y="911.50"/></g><g><title>ropey::slice::RopeSlice::slice (2 samples, 0.02%)</title><rect x="65.8958%" y="885" width="0.0238%" height="15" fill="rgb(251,192,11)" fg:x="5528" fg:w="2"/><text x="66.2149%" y="895.50"/></g><g><title>ropey::slice::RopeSlice::new_with_range (2 samples, 0.02%)</title><rect x="65.8958%" y="869" width="0.0238%" height="15" fill="rgb(240,47,32)" fg:x="5528" fg:w="2"/><text x="66.2149%" y="879.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="65.9197%" y="965" width="0.0119%" height="15" fill="rgb(250,16,45)" fg:x="5530" fg:w="1"/><text x="66.2388%" y="975.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="65.9197%" y="949" width="0.0119%" height="15" fill="rgb(227,217,42)" fg:x="5530" fg:w="1"/><text x="66.2388%" y="959.50"/></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="65.9197%" y="933" width="0.0119%" height="15" fill="rgb(206,82,54)" fg:x="5530" fg:w="1"/><text x="66.2388%" y="943.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="65.9316%" y="965" width="0.0119%" height="15" fill="rgb(243,145,25)" fg:x="5531" fg:w="1"/><text x="66.2507%" y="975.50"/></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.05%)</title><rect x="65.9197%" y="1045" width="0.0477%" height="15" fill="rgb(207,166,24)" fg:x="5530" fg:w="4"/><text x="66.2388%" y="1055.50"/></g><g><title>ignore::dir::Ignore::add_child_path (4 samples, 0.05%)</title><rect x="65.9197%" y="1029" width="0.0477%" height="15" fill="rgb(215,191,44)" fg:x="5530" fg:w="4"/><text x="66.2388%" y="1039.50"/></g><g><title>ignore::dir::create_gitignore (4 samples, 0.05%)</title><rect x="65.9197%" y="1013" width="0.0477%" height="15" fill="rgb(234,218,51)" fg:x="5530" fg:w="4"/><text x="66.2388%" y="1023.50"/></g><g><title>ignore::gitignore::GitignoreBuilder::build (4 samples, 0.05%)</title><rect x="65.9197%" y="997" width="0.0477%" height="15" fill="rgb(245,133,21)" fg:x="5530" fg:w="4"/><text x="66.2388%" y="1007.50"/></g><g><title>globset::GlobSetBuilder::build (4 samples, 0.05%)</title><rect x="65.9197%" y="981" width="0.0477%" height="15" fill="rgb(230,136,45)" fg:x="5530" fg:w="4"/><text x="66.2388%" y="991.50"/></g><g><title>globset::glob::MatchStrategy::new (2 samples, 0.02%)</title><rect x="65.9435%" y="965" width="0.0238%" height="15" fill="rgb(247,63,43)" fg:x="5532" fg:w="2"/><text x="66.2626%" y="975.50"/></g><g><title>&lt;helix_term::keymap::Keymaps as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="65.9673%" y="1045" width="0.0119%" height="15" fill="rgb(254,223,31)" fg:x="5534" fg:w="1"/><text x="66.2864%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.9793%" y="485" width="0.0119%" height="15" fill="rgb(236,185,0)" fg:x="5535" fg:w="1"/><text x="66.2984%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="65.9793%" y="469" width="0.0119%" height="15" fill="rgb(231,139,46)" fg:x="5535" fg:w="1"/><text x="66.2984%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.9793%" y="453" width="0.0119%" height="15" fill="rgb(236,147,31)" fg:x="5535" fg:w="1"/><text x="66.2984%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="65.9793%" y="437" width="0.0119%" height="15" fill="rgb(225,222,22)" fg:x="5535" fg:w="1"/><text x="66.2984%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.9793%" y="421" width="0.0119%" height="15" fill="rgb(225,193,14)" fg:x="5535" fg:w="1"/><text x="66.2984%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="65.9793%" y="405" width="0.0119%" height="15" fill="rgb(253,193,46)" fg:x="5535" fg:w="1"/><text x="66.2984%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.9793%" y="389" width="0.0119%" height="15" fill="rgb(218,187,39)" fg:x="5535" fg:w="1"/><text x="66.2984%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="65.9793%" y="373" width="0.0119%" height="15" fill="rgb(227,162,48)" fg:x="5535" fg:w="1"/><text x="66.2984%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.9793%" y="357" width="0.0119%" height="15" fill="rgb(222,25,5)" fg:x="5535" fg:w="1"/><text x="66.2984%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="65.9793%" y="341" width="0.0119%" height="15" fill="rgb(211,205,16)" fg:x="5535" fg:w="1"/><text x="66.2984%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.9793%" y="325" width="0.0119%" height="15" fill="rgb(244,191,2)" fg:x="5535" fg:w="1"/><text x="66.2984%" y="335.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.9793%" y="309" width="0.0119%" height="15" fill="rgb(248,159,12)" fg:x="5535" fg:w="1"/><text x="66.2984%" y="319.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="65.9793%" y="293" width="0.0119%" height="15" fill="rgb(235,204,17)" fg:x="5535" fg:w="1"/><text x="66.2984%" y="303.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="65.9793%" y="277" width="0.0119%" height="15" fill="rgb(240,21,27)" fg:x="5535" fg:w="1"/><text x="66.2984%" y="287.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="65.9793%" y="261" width="0.0119%" height="15" fill="rgb(224,170,31)" fg:x="5535" fg:w="1"/><text x="66.2984%" y="271.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="65.9793%" y="245" width="0.0119%" height="15" fill="rgb(223,145,32)" fg:x="5535" fg:w="1"/><text x="66.2984%" y="255.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="65.9793%" y="229" width="0.0119%" height="15" fill="rgb(243,100,5)" fg:x="5535" fg:w="1"/><text x="66.2984%" y="239.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="65.9912%" y="293" width="0.0238%" height="15" fill="rgb(242,131,51)" fg:x="5536" fg:w="2"/><text x="66.3103%" y="303.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="65.9912%" y="277" width="0.0238%" height="15" fill="rgb(223,156,46)" fg:x="5536" fg:w="2"/><text x="66.3103%" y="287.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="65.9912%" y="261" width="0.0238%" height="15" fill="rgb(215,10,40)" fg:x="5536" fg:w="2"/><text x="66.3103%" y="271.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="65.9912%" y="245" width="0.0238%" height="15" fill="rgb(233,155,0)" fg:x="5536" fg:w="2"/><text x="66.3103%" y="255.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="65.9912%" y="453" width="0.0596%" height="15" fill="rgb(247,78,6)" fg:x="5536" fg:w="5"/><text x="66.3103%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="65.9912%" y="437" width="0.0596%" height="15" fill="rgb(237,217,21)" fg:x="5536" fg:w="5"/><text x="66.3103%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="65.9912%" y="421" width="0.0596%" height="15" fill="rgb(212,1,21)" fg:x="5536" fg:w="5"/><text x="66.3103%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="65.9912%" y="405" width="0.0596%" height="15" fill="rgb(213,7,14)" fg:x="5536" fg:w="5"/><text x="66.3103%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="65.9912%" y="389" width="0.0596%" height="15" fill="rgb(225,84,14)" fg:x="5536" fg:w="5"/><text x="66.3103%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="65.9912%" y="373" width="0.0596%" height="15" fill="rgb(239,216,39)" fg:x="5536" fg:w="5"/><text x="66.3103%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="65.9912%" y="357" width="0.0596%" height="15" fill="rgb(253,29,23)" fg:x="5536" fg:w="5"/><text x="66.3103%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="65.9912%" y="341" width="0.0596%" height="15" fill="rgb(220,167,50)" fg:x="5536" fg:w="5"/><text x="66.3103%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="65.9912%" y="325" width="0.0596%" height="15" fill="rgb(232,141,1)" fg:x="5536" fg:w="5"/><text x="66.3103%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="65.9912%" y="309" width="0.0596%" height="15" fill="rgb(222,210,1)" fg:x="5536" fg:w="5"/><text x="66.3103%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="66.0150%" y="293" width="0.0358%" height="15" fill="rgb(219,84,10)" fg:x="5538" fg:w="3"/><text x="66.3341%" y="303.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="66.0150%" y="277" width="0.0358%" height="15" fill="rgb(245,188,6)" fg:x="5538" fg:w="3"/><text x="66.3341%" y="287.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="66.0150%" y="261" width="0.0358%" height="15" fill="rgb(252,139,39)" fg:x="5538" fg:w="3"/><text x="66.3341%" y="271.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="66.0150%" y="245" width="0.0358%" height="15" fill="rgb(218,42,26)" fg:x="5538" fg:w="3"/><text x="66.3341%" y="255.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="66.0508%" y="197" width="0.0715%" height="15" fill="rgb(237,226,51)" fg:x="5541" fg:w="6"/><text x="66.3699%" y="207.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="66.0508%" y="181" width="0.0715%" height="15" fill="rgb(246,15,17)" fg:x="5541" fg:w="6"/><text x="66.3699%" y="191.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="66.0508%" y="165" width="0.0715%" height="15" fill="rgb(228,170,42)" fg:x="5541" fg:w="6"/><text x="66.3699%" y="175.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="66.0508%" y="421" width="0.0834%" height="15" fill="rgb(248,118,53)" fg:x="5541" fg:w="7"/><text x="66.3699%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="66.0508%" y="405" width="0.0834%" height="15" fill="rgb(207,30,10)" fg:x="5541" fg:w="7"/><text x="66.3699%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="66.0508%" y="389" width="0.0834%" height="15" fill="rgb(217,104,38)" fg:x="5541" fg:w="7"/><text x="66.3699%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="66.0508%" y="373" width="0.0834%" height="15" fill="rgb(211,165,26)" fg:x="5541" fg:w="7"/><text x="66.3699%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="66.0508%" y="357" width="0.0834%" height="15" fill="rgb(247,38,9)" fg:x="5541" fg:w="7"/><text x="66.3699%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="66.0508%" y="341" width="0.0834%" height="15" fill="rgb(218,187,8)" fg:x="5541" fg:w="7"/><text x="66.3699%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="66.0508%" y="325" width="0.0834%" height="15" fill="rgb(247,94,28)" fg:x="5541" fg:w="7"/><text x="66.3699%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="66.0508%" y="309" width="0.0834%" height="15" fill="rgb(218,173,30)" fg:x="5541" fg:w="7"/><text x="66.3699%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="66.0508%" y="293" width="0.0834%" height="15" fill="rgb(245,45,36)" fg:x="5541" fg:w="7"/><text x="66.3699%" y="303.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="66.0508%" y="277" width="0.0834%" height="15" fill="rgb(221,172,44)" fg:x="5541" fg:w="7"/><text x="66.3699%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="66.0508%" y="261" width="0.0834%" height="15" fill="rgb(222,45,12)" fg:x="5541" fg:w="7"/><text x="66.3699%" y="271.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (7 samples, 0.08%)</title><rect x="66.0508%" y="245" width="0.0834%" height="15" fill="rgb(250,10,22)" fg:x="5541" fg:w="7"/><text x="66.3699%" y="255.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="66.0508%" y="229" width="0.0834%" height="15" fill="rgb(239,27,0)" fg:x="5541" fg:w="7"/><text x="66.3699%" y="239.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="66.0508%" y="213" width="0.0834%" height="15" fill="rgb(223,118,22)" fg:x="5541" fg:w="7"/><text x="66.3699%" y="223.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="66.1223%" y="197" width="0.0119%" height="15" fill="rgb(251,81,25)" fg:x="5547" fg:w="1"/><text x="66.4414%" y="207.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="66.1223%" y="181" width="0.0119%" height="15" fill="rgb(237,225,53)" fg:x="5547" fg:w="1"/><text x="66.4414%" y="191.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="66.1223%" y="165" width="0.0119%" height="15" fill="rgb(237,186,51)" fg:x="5547" fg:w="1"/><text x="66.4414%" y="175.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="66.1223%" y="149" width="0.0119%" height="15" fill="rgb(247,209,11)" fg:x="5547" fg:w="1"/><text x="66.4414%" y="159.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="66.1342%" y="325" width="0.0358%" height="15" fill="rgb(223,109,27)" fg:x="5548" fg:w="3"/><text x="66.4533%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="66.1342%" y="309" width="0.0358%" height="15" fill="rgb(246,181,13)" fg:x="5548" fg:w="3"/><text x="66.4533%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="66.1342%" y="293" width="0.0358%" height="15" fill="rgb(234,57,44)" fg:x="5548" fg:w="3"/><text x="66.4533%" y="303.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="66.1342%" y="277" width="0.0358%" height="15" fill="rgb(211,227,50)" fg:x="5548" fg:w="3"/><text x="66.4533%" y="287.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="66.1342%" y="261" width="0.0358%" height="15" fill="rgb(254,57,34)" fg:x="5548" fg:w="3"/><text x="66.4533%" y="271.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="66.1342%" y="245" width="0.0358%" height="15" fill="rgb(227,212,26)" fg:x="5548" fg:w="3"/><text x="66.4533%" y="255.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="66.1700%" y="213" width="0.0119%" height="15" fill="rgb(244,169,44)" fg:x="5551" fg:w="1"/><text x="66.4891%" y="223.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="66.1700%" y="197" width="0.0119%" height="15" fill="rgb(236,135,50)" fg:x="5551" fg:w="1"/><text x="66.4891%" y="207.50"/></g><g><title>memcpy@plt (1 samples, 0.01%)</title><rect x="66.1700%" y="181" width="0.0119%" height="15" fill="rgb(241,89,30)" fg:x="5551" fg:w="1"/><text x="66.4891%" y="191.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="66.1342%" y="389" width="0.0715%" height="15" fill="rgb(206,113,34)" fg:x="5548" fg:w="6"/><text x="66.4533%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="66.1342%" y="373" width="0.0715%" height="15" fill="rgb(218,104,52)" fg:x="5548" fg:w="6"/><text x="66.4533%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="66.1342%" y="357" width="0.0715%" height="15" fill="rgb(223,82,32)" fg:x="5548" fg:w="6"/><text x="66.4533%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="66.1342%" y="341" width="0.0715%" height="15" fill="rgb(249,219,30)" fg:x="5548" fg:w="6"/><text x="66.4533%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="66.1700%" y="325" width="0.0358%" height="15" fill="rgb(233,141,21)" fg:x="5551" fg:w="3"/><text x="66.4891%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="66.1700%" y="309" width="0.0358%" height="15" fill="rgb(252,87,44)" fg:x="5551" fg:w="3"/><text x="66.4891%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="66.1700%" y="293" width="0.0358%" height="15" fill="rgb(229,48,33)" fg:x="5551" fg:w="3"/><text x="66.4891%" y="303.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="66.1700%" y="277" width="0.0358%" height="15" fill="rgb(229,23,22)" fg:x="5551" fg:w="3"/><text x="66.4891%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="66.1700%" y="261" width="0.0358%" height="15" fill="rgb(244,116,16)" fg:x="5551" fg:w="3"/><text x="66.4891%" y="271.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="66.1700%" y="245" width="0.0358%" height="15" fill="rgb(247,45,10)" fg:x="5551" fg:w="3"/><text x="66.4891%" y="255.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="66.1700%" y="229" width="0.0358%" height="15" fill="rgb(228,60,29)" fg:x="5551" fg:w="3"/><text x="66.4891%" y="239.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="66.1819%" y="213" width="0.0238%" height="15" fill="rgb(205,129,15)" fg:x="5552" fg:w="2"/><text x="66.5010%" y="223.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="66.1819%" y="197" width="0.0238%" height="15" fill="rgb(206,229,4)" fg:x="5552" fg:w="2"/><text x="66.5010%" y="207.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="66.1819%" y="181" width="0.0238%" height="15" fill="rgb(249,191,30)" fg:x="5552" fg:w="2"/><text x="66.5010%" y="191.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="66.1819%" y="165" width="0.0238%" height="15" fill="rgb(250,84,54)" fg:x="5552" fg:w="2"/><text x="66.5010%" y="175.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="66.1819%" y="149" width="0.0238%" height="15" fill="rgb(207,25,53)" fg:x="5552" fg:w="2"/><text x="66.5010%" y="159.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="66.1819%" y="133" width="0.0238%" height="15" fill="rgb(235,40,8)" fg:x="5552" fg:w="2"/><text x="66.5010%" y="143.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="66.1819%" y="117" width="0.0238%" height="15" fill="rgb(226,169,33)" fg:x="5552" fg:w="2"/><text x="66.5010%" y="127.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="66.1819%" y="101" width="0.0238%" height="15" fill="rgb(238,110,8)" fg:x="5552" fg:w="2"/><text x="66.5010%" y="111.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="66.2057%" y="229" width="0.0238%" height="15" fill="rgb(251,206,12)" fg:x="5554" fg:w="2"/><text x="66.5248%" y="239.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="66.2057%" y="213" width="0.0238%" height="15" fill="rgb(248,171,18)" fg:x="5554" fg:w="2"/><text x="66.5248%" y="223.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="66.2057%" y="197" width="0.0238%" height="15" fill="rgb(213,65,46)" fg:x="5554" fg:w="2"/><text x="66.5248%" y="207.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="66.2057%" y="181" width="0.0238%" height="15" fill="rgb(211,154,15)" fg:x="5554" fg:w="2"/><text x="66.5248%" y="191.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="66.2057%" y="165" width="0.0238%" height="15" fill="rgb(217,75,43)" fg:x="5554" fg:w="2"/><text x="66.5248%" y="175.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="66.2057%" y="357" width="0.0477%" height="15" fill="rgb(230,32,33)" fg:x="5554" fg:w="4"/><text x="66.5248%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="66.2057%" y="341" width="0.0477%" height="15" fill="rgb(221,100,16)" fg:x="5554" fg:w="4"/><text x="66.5248%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="66.2057%" y="325" width="0.0477%" height="15" fill="rgb(212,129,47)" fg:x="5554" fg:w="4"/><text x="66.5248%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="66.2057%" y="309" width="0.0477%" height="15" fill="rgb(239,217,47)" fg:x="5554" fg:w="4"/><text x="66.5248%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="66.2057%" y="293" width="0.0477%" height="15" fill="rgb(230,84,24)" fg:x="5554" fg:w="4"/><text x="66.5248%" y="303.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="66.2057%" y="277" width="0.0477%" height="15" fill="rgb(214,153,51)" fg:x="5554" fg:w="4"/><text x="66.5248%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="66.2057%" y="261" width="0.0477%" height="15" fill="rgb(231,6,35)" fg:x="5554" fg:w="4"/><text x="66.5248%" y="271.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="66.2057%" y="245" width="0.0477%" height="15" fill="rgb(229,122,30)" fg:x="5554" fg:w="4"/><text x="66.5248%" y="255.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="66.2296%" y="229" width="0.0238%" height="15" fill="rgb(234,71,10)" fg:x="5556" fg:w="2"/><text x="66.5487%" y="239.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="66.2296%" y="213" width="0.0238%" height="15" fill="rgb(215,173,26)" fg:x="5556" fg:w="2"/><text x="66.5487%" y="223.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="66.2296%" y="197" width="0.0238%" height="15" fill="rgb(248,118,52)" fg:x="5556" fg:w="2"/><text x="66.5487%" y="207.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="66.2296%" y="181" width="0.0238%" height="15" fill="rgb(237,55,46)" fg:x="5556" fg:w="2"/><text x="66.5487%" y="191.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="66.2534%" y="181" width="0.0119%" height="15" fill="rgb(243,214,43)" fg:x="5558" fg:w="1"/><text x="66.5725%" y="191.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="66.2534%" y="165" width="0.0119%" height="15" fill="rgb(252,123,30)" fg:x="5558" fg:w="1"/><text x="66.5725%" y="175.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="66.2534%" y="197" width="0.0238%" height="15" fill="rgb(215,73,39)" fg:x="5558" fg:w="2"/><text x="66.5725%" y="207.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="66.2653%" y="181" width="0.0119%" height="15" fill="rgb(251,194,29)" fg:x="5559" fg:w="1"/><text x="66.5844%" y="191.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="66.2653%" y="165" width="0.0119%" height="15" fill="rgb(224,58,52)" fg:x="5559" fg:w="1"/><text x="66.5844%" y="175.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="66.2653%" y="149" width="0.0119%" height="15" fill="rgb(248,106,46)" fg:x="5559" fg:w="1"/><text x="66.5844%" y="159.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="66.2653%" y="133" width="0.0119%" height="15" fill="rgb(223,80,29)" fg:x="5559" fg:w="1"/><text x="66.5844%" y="143.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="66.2653%" y="117" width="0.0119%" height="15" fill="rgb(243,137,9)" fg:x="5559" fg:w="1"/><text x="66.5844%" y="127.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="66.2653%" y="101" width="0.0119%" height="15" fill="rgb(235,121,28)" fg:x="5559" fg:w="1"/><text x="66.5844%" y="111.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="66.2653%" y="85" width="0.0119%" height="15" fill="rgb(219,121,41)" fg:x="5559" fg:w="1"/><text x="66.5844%" y="95.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="66.2653%" y="69" width="0.0119%" height="15" fill="rgb(251,60,6)" fg:x="5559" fg:w="1"/><text x="66.5844%" y="79.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="66.2653%" y="53" width="0.0119%" height="15" fill="rgb(208,12,30)" fg:x="5559" fg:w="1"/><text x="66.5844%" y="63.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="66.2653%" y="37" width="0.0119%" height="15" fill="rgb(207,176,36)" fg:x="5559" fg:w="1"/><text x="66.5844%" y="47.50"/></g><g><title>&lt;helix_term::ui::editor::EditorView as helix_term::compositor::Component&gt;::handle_event (26 samples, 0.31%)</title><rect x="65.9793%" y="1045" width="0.3099%" height="15" fill="rgb(211,188,29)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="1055.50"/></g><g><title>helix_term::ui::editor::EditorView::insert_mode (26 samples, 0.31%)</title><rect x="65.9793%" y="1029" width="0.3099%" height="15" fill="rgb(220,184,37)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="1039.50"/></g><g><title>helix_term::commands::insert::insert_char (26 samples, 0.31%)</title><rect x="65.9793%" y="1013" width="0.3099%" height="15" fill="rgb(239,87,37)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="1023.50"/></g><g><title>helix_view::document::Document::apply (26 samples, 0.31%)</title><rect x="65.9793%" y="997" width="0.3099%" height="15" fill="rgb(232,113,44)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="1007.50"/></g><g><title>helix_view::document::Document::apply_impl (26 samples, 0.31%)</title><rect x="65.9793%" y="981" width="0.3099%" height="15" fill="rgb(246,25,39)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="991.50"/></g><g><title>helix_core::syntax::LanguageLayer::update (26 samples, 0.31%)</title><rect x="65.9793%" y="965" width="0.3099%" height="15" fill="rgb(247,30,13)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="975.50"/></g><g><title>helix_core::syntax::LanguageLayer::parse (26 samples, 0.31%)</title><rect x="65.9793%" y="949" width="0.3099%" height="15" fill="rgb(230,176,35)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="959.50"/></g><g><title>ts_parser_parse (26 samples, 0.31%)</title><rect x="65.9793%" y="933" width="0.3099%" height="15" fill="rgb(222,23,18)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="943.50"/></g><g><title>tree_sitter_haskell_external_scanner_scan (26 samples, 0.31%)</title><rect x="65.9793%" y="917" width="0.3099%" height="15" fill="rgb(234,86,8)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="927.50"/></g><g><title>eval::eval (26 samples, 0.31%)</title><rect x="65.9793%" y="901" width="0.3099%" height="15" fill="rgb(206,218,47)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="911.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="65.9793%" y="885" width="0.3099%" height="15" fill="rgb(229,35,31)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="895.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="65.9793%" y="869" width="0.3099%" height="15" fill="rgb(242,81,7)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="879.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="65.9793%" y="853" width="0.3099%" height="15" fill="rgb(231,11,35)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="863.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="65.9793%" y="837" width="0.3099%" height="15" fill="rgb(219,218,17)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="847.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="65.9793%" y="821" width="0.3099%" height="15" fill="rgb(221,83,32)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="831.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="65.9793%" y="805" width="0.3099%" height="15" fill="rgb(233,49,54)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="815.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="65.9793%" y="789" width="0.3099%" height="15" fill="rgb(206,18,51)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="799.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="65.9793%" y="773" width="0.3099%" height="15" fill="rgb(249,193,15)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="783.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="65.9793%" y="757" width="0.3099%" height="15" fill="rgb(245,186,19)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="65.9793%" y="741" width="0.3099%" height="15" fill="rgb(230,4,24)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="751.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic), std::function&lt;Result (State&amp;)&gt; (*)(symbolic::Symbolic)&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="65.9793%" y="725" width="0.3099%" height="15" fill="rgb(234,75,27)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="735.50"/></g><g><title>logic::symop (26 samples, 0.31%)</title><rect x="65.9793%" y="709" width="0.3099%" height="15" fill="rgb(244,187,35)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="719.50"/></g><g><title>parser::operator+ (26 samples, 0.31%)</title><rect x="65.9793%" y="693" width="0.3099%" height="15" fill="rgb(241,97,43)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="65.9793%" y="677" width="0.3099%" height="15" fill="rgb(236,94,2)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (26 samples, 0.31%)</title><rect x="65.9793%" y="661" width="0.3099%" height="15" fill="rgb(231,175,7)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="65.9793%" y="645" width="0.3099%" height="15" fill="rgb(236,89,47)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (26 samples, 0.31%)</title><rect x="65.9793%" y="629" width="0.3099%" height="15" fill="rgb(213,191,37)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="65.9793%" y="613" width="0.3099%" height="15" fill="rgb(252,0,34)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (26 samples, 0.31%)</title><rect x="65.9793%" y="597" width="0.3099%" height="15" fill="rgb(208,145,44)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="65.9793%" y="581" width="0.3099%" height="15" fill="rgb(227,95,50)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (26 samples, 0.31%)</title><rect x="65.9793%" y="565" width="0.3099%" height="15" fill="rgb(222,136,24)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="65.9793%" y="549" width="0.3099%" height="15" fill="rgb(218,105,10)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (26 samples, 0.31%)</title><rect x="65.9793%" y="533" width="0.3099%" height="15" fill="rgb(216,65,28)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="65.9793%" y="517" width="0.3099%" height="15" fill="rgb(229,6,28)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (26 samples, 0.31%)</title><rect x="65.9793%" y="501" width="0.3099%" height="15" fill="rgb(222,160,42)" fg:x="5535" fg:w="26"/><text x="66.2984%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (25 samples, 0.30%)</title><rect x="65.9912%" y="485" width="0.2980%" height="15" fill="rgb(235,83,49)" fg:x="5536" fg:w="25"/><text x="66.3103%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (25 samples, 0.30%)</title><rect x="65.9912%" y="469" width="0.2980%" height="15" fill="rgb(236,86,36)" fg:x="5536" fg:w="25"/><text x="66.3103%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (20 samples, 0.24%)</title><rect x="66.0508%" y="453" width="0.2384%" height="15" fill="rgb(236,19,41)" fg:x="5541" fg:w="20"/><text x="66.3699%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (20 samples, 0.24%)</title><rect x="66.0508%" y="437" width="0.2384%" height="15" fill="rgb(217,71,31)" fg:x="5541" fg:w="20"/><text x="66.3699%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="66.1342%" y="421" width="0.1550%" height="15" fill="rgb(236,209,25)" fg:x="5548" fg:w="13"/><text x="66.4533%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="66.1342%" y="405" width="0.1550%" height="15" fill="rgb(247,104,21)" fg:x="5548" fg:w="13"/><text x="66.4533%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="66.2057%" y="389" width="0.0834%" height="15" fill="rgb(243,80,38)" fg:x="5554" fg:w="7"/><text x="66.5248%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="66.2057%" y="373" width="0.0834%" height="15" fill="rgb(232,109,38)" fg:x="5554" fg:w="7"/><text x="66.5248%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="66.2534%" y="357" width="0.0358%" height="15" fill="rgb(212,177,53)" fg:x="5558" fg:w="3"/><text x="66.5725%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="66.2534%" y="341" width="0.0358%" height="15" fill="rgb(227,30,34)" fg:x="5558" fg:w="3"/><text x="66.5725%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="66.2534%" y="325" width="0.0358%" height="15" fill="rgb(205,175,25)" fg:x="5558" fg:w="3"/><text x="66.5725%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="66.2534%" y="309" width="0.0358%" height="15" fill="rgb(249,39,54)" fg:x="5558" fg:w="3"/><text x="66.5725%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="66.2534%" y="293" width="0.0358%" height="15" fill="rgb(215,54,37)" fg:x="5558" fg:w="3"/><text x="66.5725%" y="303.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="66.2534%" y="277" width="0.0358%" height="15" fill="rgb(205,60,46)" fg:x="5558" fg:w="3"/><text x="66.5725%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="66.2534%" y="261" width="0.0358%" height="15" fill="rgb(238,89,29)" fg:x="5558" fg:w="3"/><text x="66.5725%" y="271.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="66.2534%" y="245" width="0.0358%" height="15" fill="rgb(212,48,10)" fg:x="5558" fg:w="3"/><text x="66.5725%" y="255.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="66.2534%" y="229" width="0.0358%" height="15" fill="rgb(237,186,28)" fg:x="5558" fg:w="3"/><text x="66.5725%" y="239.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="66.2534%" y="213" width="0.0358%" height="15" fill="rgb(237,204,4)" fg:x="5558" fg:w="3"/><text x="66.5725%" y="223.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="66.2773%" y="197" width="0.0119%" height="15" fill="rgb(237,15,47)" fg:x="5560" fg:w="1"/><text x="66.5964%" y="207.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="66.2773%" y="181" width="0.0119%" height="15" fill="rgb(244,110,25)" fg:x="5560" fg:w="1"/><text x="66.5964%" y="191.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="66.2773%" y="165" width="0.0119%" height="15" fill="rgb(241,12,16)" fg:x="5560" fg:w="1"/><text x="66.5964%" y="175.50"/></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (13 samples, 0.15%)</title><rect x="66.2892%" y="949" width="0.1550%" height="15" fill="rgb(235,25,9)" fg:x="5561" fg:w="13"/><text x="66.6083%" y="959.50"/></g><g><title>once_cell::imp::initialize_inner (13 samples, 0.15%)</title><rect x="66.2892%" y="933" width="0.1550%" height="15" fill="rgb(245,159,19)" fg:x="5561" fg:w="13"/><text x="66.6083%" y="943.50"/></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (13 samples, 0.15%)</title><rect x="66.2892%" y="917" width="0.1550%" height="15" fill="rgb(236,63,32)" fg:x="5561" fg:w="13"/><text x="66.6083%" y="927.50"/></g><g><title>helix_core::syntax::LanguageConfiguration::initialize_highlight (13 samples, 0.15%)</title><rect x="66.2892%" y="901" width="0.1550%" height="15" fill="rgb(235,32,52)" fg:x="5561" fg:w="13"/><text x="66.6083%" y="911.50"/></g><g><title>helix_core::syntax::HighlightConfiguration::new (13 samples, 0.15%)</title><rect x="66.2892%" y="885" width="0.1550%" height="15" fill="rgb(209,176,21)" fg:x="5561" fg:w="13"/><text x="66.6083%" y="895.50"/></g><g><title>tree_sitter::Query::new (13 samples, 0.15%)</title><rect x="66.2892%" y="869" width="0.1550%" height="15" fill="rgb(205,90,42)" fg:x="5561" fg:w="13"/><text x="66.6083%" y="879.50"/></g><g><title>ts_query_new (13 samples, 0.15%)</title><rect x="66.2892%" y="853" width="0.1550%" height="15" fill="rgb(213,132,16)" fg:x="5561" fg:w="13"/><text x="66.6083%" y="863.50"/></g><g><title>ts_query__analyze_patterns (13 samples, 0.15%)</title><rect x="66.2892%" y="837" width="0.1550%" height="15" fill="rgb(232,11,22)" fg:x="5561" fg:w="13"/><text x="66.6083%" y="847.50"/></g><g><title>array__splice.constprop.0 (13 samples, 0.15%)</title><rect x="66.2892%" y="821" width="0.1550%" height="15" fill="rgb(248,167,41)" fg:x="5561" fg:w="13"/><text x="66.6083%" y="831.50"/></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.07%)</title><rect x="66.3726%" y="805" width="0.0715%" height="15" fill="rgb(209,127,6)" fg:x="5568" fg:w="6"/><text x="66.6917%" y="815.50"/></g><g><title>helix_term::commands::command_mode::_{{closure}} (14 samples, 0.17%)</title><rect x="66.2892%" y="1029" width="0.1669%" height="15" fill="rgb(246,210,34)" fg:x="5561" fg:w="14"/><text x="66.6083%" y="1039.50"/></g><g><title>helix_term::commands::cmd::open (14 samples, 0.17%)</title><rect x="66.2892%" y="1013" width="0.1669%" height="15" fill="rgb(238,165,13)" fg:x="5561" fg:w="14"/><text x="66.6083%" y="1023.50"/></g><g><title>helix_view::editor::Editor::open (14 samples, 0.17%)</title><rect x="66.2892%" y="997" width="0.1669%" height="15" fill="rgb(233,98,15)" fg:x="5561" fg:w="14"/><text x="66.6083%" y="1007.50"/></g><g><title>helix_view::document::Document::open (14 samples, 0.17%)</title><rect x="66.2892%" y="981" width="0.1669%" height="15" fill="rgb(215,215,51)" fg:x="5561" fg:w="14"/><text x="66.6083%" y="991.50"/></g><g><title>helix_view::document::Document::set_language (14 samples, 0.17%)</title><rect x="66.2892%" y="965" width="0.1669%" height="15" fill="rgb(217,161,25)" fg:x="5561" fg:w="14"/><text x="66.6083%" y="975.50"/></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="66.4442%" y="949" width="0.0119%" height="15" fill="rgb(217,167,48)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="959.50"/></g><g><title>helix_core::syntax::LanguageLayer::parse (1 samples, 0.01%)</title><rect x="66.4442%" y="933" width="0.0119%" height="15" fill="rgb(205,163,34)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="943.50"/></g><g><title>ts_parser_parse (1 samples, 0.01%)</title><rect x="66.4442%" y="917" width="0.0119%" height="15" fill="rgb(241,197,31)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="927.50"/></g><g><title>tree_sitter_haskell_external_scanner_scan (1 samples, 0.01%)</title><rect x="66.4442%" y="901" width="0.0119%" height="15" fill="rgb(225,123,11)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="911.50"/></g><g><title>eval::eval (1 samples, 0.01%)</title><rect x="66.4442%" y="885" width="0.0119%" height="15" fill="rgb(217,4,20)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="895.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="66.4442%" y="869" width="0.0119%" height="15" fill="rgb(215,55,9)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="879.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="66.4442%" y="853" width="0.0119%" height="15" fill="rgb(218,165,5)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="863.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="66.4442%" y="837" width="0.0119%" height="15" fill="rgb(222,175,15)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="847.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="66.4442%" y="821" width="0.0119%" height="15" fill="rgb(223,85,34)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="831.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;Result (State&amp;)&gt; (*)(unsigned int)&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="66.4442%" y="805" width="0.0119%" height="15" fill="rgb(234,228,29)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="815.50"/></g><g><title>logic::newline (1 samples, 0.01%)</title><rect x="66.4442%" y="789" width="0.0119%" height="15" fill="rgb(239,7,28)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="799.50"/></g><g><title>logic::newline_token (1 samples, 0.01%)</title><rect x="66.4442%" y="773" width="0.0119%" height="15" fill="rgb(252,222,53)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="783.50"/></g><g><title>logic::newline_where (1 samples, 0.01%)</title><rect x="66.4442%" y="757" width="0.0119%" height="15" fill="rgb(232,146,44)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="767.50"/></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (1 samples, 0.01%)</title><rect x="66.4442%" y="741" width="0.0119%" height="15" fill="rgb(243,223,53)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="751.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="66.4442%" y="725" width="0.0119%" height="15" fill="rgb(219,128,25)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="735.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="66.4442%" y="709" width="0.0119%" height="15" fill="rgb(223,56,32)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="719.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="66.4442%" y="693" width="0.0119%" height="15" fill="rgb(237,41,3)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="66.4442%" y="677" width="0.0119%" height="15" fill="rgb(235,138,9)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="687.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="66.4442%" y="661" width="0.0119%" height="15" fill="rgb(214,131,10)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="66.4442%" y="645" width="0.0119%" height="15" fill="rgb(229,89,7)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="655.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="66.4442%" y="629" width="0.0119%" height="15" fill="rgb(240,24,42)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="639.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="66.4442%" y="613" width="0.0119%" height="15" fill="rgb(243,188,54)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="623.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="66.4442%" y="597" width="0.0119%" height="15" fill="rgb(246,92,22)" fg:x="5574" fg:w="1"/><text x="66.7633%" y="607.50"/></g><g><title>walkdir::IntoIter::pop (2 samples, 0.02%)</title><rect x="66.4561%" y="933" width="0.0238%" height="15" fill="rgb(211,176,51)" fg:x="5575" fg:w="2"/><text x="66.7752%" y="943.50"/></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.02%)</title><rect x="66.4561%" y="917" width="0.0238%" height="15" fill="rgb(246,207,34)" fg:x="5575" fg:w="2"/><text x="66.7752%" y="927.50"/></g><g><title>__closedir (2 samples, 0.02%)</title><rect x="66.4561%" y="901" width="0.0238%" height="15" fill="rgb(239,95,2)" fg:x="5575" fg:w="2"/><text x="66.7752%" y="911.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="66.4561%" y="885" width="0.0238%" height="15" fill="rgb(211,124,25)" fg:x="5575" fg:w="2"/><text x="66.7752%" y="895.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="66.4561%" y="869" width="0.0238%" height="15" fill="rgb(231,221,19)" fg:x="5575" fg:w="2"/><text x="66.7752%" y="879.50"/></g><g><title>malloc_consolidate (2 samples, 0.02%)</title><rect x="66.4561%" y="853" width="0.0238%" height="15" fill="rgb(239,183,19)" fg:x="5575" fg:w="2"/><text x="66.7752%" y="863.50"/></g><g><title>&lt;walkdir::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="66.4561%" y="949" width="0.0358%" height="15" fill="rgb(221,130,29)" fg:x="5575" fg:w="3"/><text x="66.7752%" y="959.50"/></g><g><title>walkdir::dent::DirEntry::from_entry (1 samples, 0.01%)</title><rect x="66.4799%" y="933" width="0.0119%" height="15" fill="rgb(206,130,36)" fg:x="5577" fg:w="1"/><text x="66.7990%" y="943.50"/></g><g><title>std::fs::DirEntry::path (1 samples, 0.01%)</title><rect x="66.4799%" y="917" width="0.0119%" height="15" fill="rgb(215,70,19)" fg:x="5577" fg:w="1"/><text x="66.7990%" y="927.50"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="66.4799%" y="901" width="0.0119%" height="15" fill="rgb(244,16,43)" fg:x="5577" fg:w="1"/><text x="66.7990%" y="911.50"/></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="66.4799%" y="885" width="0.0119%" height="15" fill="rgb(222,115,32)" fg:x="5577" fg:w="1"/><text x="66.7990%" y="895.50"/></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="66.4799%" y="869" width="0.0119%" height="15" fill="rgb(247,48,25)" fg:x="5577" fg:w="1"/><text x="66.7990%" y="879.50"/></g><g><title>&lt;helix_term::ui::prompt::Prompt as helix_term::compositor::Component&gt;::handle_event (18 samples, 0.21%)</title><rect x="66.2892%" y="1045" width="0.2146%" height="15" fill="rgb(226,180,51)" fg:x="5561" fg:w="18"/><text x="66.6083%" y="1055.50"/></g><g><title>helix_term::ui::prompt::Prompt::insert_char (4 samples, 0.05%)</title><rect x="66.4561%" y="1029" width="0.0477%" height="15" fill="rgb(217,142,42)" fg:x="5575" fg:w="4"/><text x="66.7752%" y="1039.50"/></g><g><title>helix_term::commands::command_mode::_{{closure}} (4 samples, 0.05%)</title><rect x="66.4561%" y="1013" width="0.0477%" height="15" fill="rgb(220,178,3)" fg:x="5575" fg:w="4"/><text x="66.7752%" y="1023.50"/></g><g><title>helix_term::ui::completers::filename (4 samples, 0.05%)</title><rect x="66.4561%" y="997" width="0.0477%" height="15" fill="rgb(217,221,4)" fg:x="5575" fg:w="4"/><text x="66.7752%" y="1007.50"/></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.05%)</title><rect x="66.4561%" y="981" width="0.0477%" height="15" fill="rgb(237,63,43)" fg:x="5575" fg:w="4"/><text x="66.7752%" y="991.50"/></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.05%)</title><rect x="66.4561%" y="965" width="0.0477%" height="15" fill="rgb(220,57,8)" fg:x="5575" fg:w="4"/><text x="66.7752%" y="975.50"/></g><g><title>ignore::dir::Ignore::add_child_path (1 samples, 0.01%)</title><rect x="66.4918%" y="949" width="0.0119%" height="15" fill="rgb(254,186,27)" fg:x="5578" fg:w="1"/><text x="66.8109%" y="959.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="66.5038%" y="1029" width="0.0119%" height="15" fill="rgb(251,57,28)" fg:x="5579" fg:w="1"/><text x="66.8229%" y="1039.50"/></g><g><title>[haskell.so] (2 samples, 0.02%)</title><rect x="66.5038%" y="1045" width="0.0238%" height="15" fill="rgb(215,228,0)" fg:x="5579" fg:w="2"/><text x="66.8229%" y="1055.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function&lt;std::function&lt;Result (State)&gt;, void, void&gt; (1 samples, 0.01%)</title><rect x="66.5157%" y="1029" width="0.0119%" height="15" fill="rgb(237,218,39)" fg:x="5580" fg:w="1"/><text x="66.8348%" y="1039.50"/></g><g><title>__GI___libc_free (12 samples, 0.14%)</title><rect x="66.5276%" y="1045" width="0.1430%" height="15" fill="rgb(207,2,54)" fg:x="5581" fg:w="12"/><text x="66.8467%" y="1055.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="66.6706%" y="1045" width="0.0119%" height="15" fill="rgb(232,76,50)" fg:x="5593" fg:w="1"/><text x="66.9897%" y="1055.50"/></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="66.6826%" y="1045" width="0.0119%" height="15" fill="rgb(211,85,31)" fg:x="5594" fg:w="1"/><text x="67.0017%" y="1055.50"/></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="66.6945%" y="1045" width="0.0238%" height="15" fill="rgb(223,210,27)" fg:x="5595" fg:w="2"/><text x="67.0136%" y="1055.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="66.7183%" y="1045" width="0.0238%" height="15" fill="rgb(254,36,8)" fg:x="5597" fg:w="2"/><text x="67.0374%" y="1055.50"/></g><g><title>_int_malloc (12 samples, 0.14%)</title><rect x="66.7422%" y="1045" width="0.1430%" height="15" fill="rgb(213,4,25)" fg:x="5599" fg:w="12"/><text x="67.0613%" y="1055.50"/></g><g><title>aho_corasick::nfa::Builder::build (1 samples, 0.01%)</title><rect x="66.8852%" y="1045" width="0.0119%" height="15" fill="rgb(224,2,39)" fg:x="5611" fg:w="1"/><text x="67.2043%" y="1055.50"/></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="66.8971%" y="1045" width="0.0119%" height="15" fill="rgb(208,8,39)" fg:x="5612" fg:w="1"/><text x="67.2162%" y="1055.50"/></g><g><title>array__splice.constprop.0 (3 samples, 0.04%)</title><rect x="66.9090%" y="1045" width="0.0358%" height="15" fill="rgb(216,226,3)" fg:x="5613" fg:w="3"/><text x="67.2281%" y="1055.50"/></g><g><title>crossterm::event::read::InternalEventReader::poll (1 samples, 0.01%)</title><rect x="66.9448%" y="1045" width="0.0119%" height="15" fill="rgb(249,139,31)" fg:x="5616" fg:w="1"/><text x="67.2639%" y="1055.50"/></g><g><title>globset::glob::MatchStrategy::new (1 samples, 0.01%)</title><rect x="66.9567%" y="1045" width="0.0119%" height="15" fill="rgb(242,170,35)" fg:x="5617" fg:w="1"/><text x="67.2758%" y="1055.50"/></g><g><title>helix_core::graphemes::nth_next_grapheme_boundary (1 samples, 0.01%)</title><rect x="66.9686%" y="1045" width="0.0119%" height="15" fill="rgb(238,14,9)" fg:x="5618" fg:w="1"/><text x="67.2877%" y="1055.50"/></g><g><title>helix_term::ui::editor::EditorView::handle_keymap_event (1 samples, 0.01%)</title><rect x="66.9806%" y="997" width="0.0119%" height="15" fill="rgb(251,81,46)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="1007.50"/></g><g><title>helix_term::commands::open (1 samples, 0.01%)</title><rect x="66.9806%" y="981" width="0.0119%" height="15" fill="rgb(230,23,4)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="991.50"/></g><g><title>helix_view::document::Document::apply (1 samples, 0.01%)</title><rect x="66.9806%" y="965" width="0.0119%" height="15" fill="rgb(211,85,25)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="975.50"/></g><g><title>helix_view::document::Document::apply_impl (1 samples, 0.01%)</title><rect x="66.9806%" y="949" width="0.0119%" height="15" fill="rgb(252,23,31)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="959.50"/></g><g><title>helix_core::syntax::LanguageLayer::update (1 samples, 0.01%)</title><rect x="66.9806%" y="933" width="0.0119%" height="15" fill="rgb(234,163,38)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="943.50"/></g><g><title>helix_core::syntax::LanguageLayer::parse (1 samples, 0.01%)</title><rect x="66.9806%" y="917" width="0.0119%" height="15" fill="rgb(210,190,50)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="927.50"/></g><g><title>ts_parser_parse (1 samples, 0.01%)</title><rect x="66.9806%" y="901" width="0.0119%" height="15" fill="rgb(228,158,3)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="911.50"/></g><g><title>tree_sitter_haskell_external_scanner_scan (1 samples, 0.01%)</title><rect x="66.9806%" y="885" width="0.0119%" height="15" fill="rgb(216,130,0)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="895.50"/></g><g><title>eval::eval (1 samples, 0.01%)</title><rect x="66.9806%" y="869" width="0.0119%" height="15" fill="rgb(224,184,10)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="879.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="66.9806%" y="853" width="0.0119%" height="15" fill="rgb(214,202,18)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="863.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="66.9806%" y="837" width="0.0119%" height="15" fill="rgb(213,229,54)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="847.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="66.9806%" y="821" width="0.0119%" height="15" fill="rgb(246,120,0)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="831.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="66.9806%" y="805" width="0.0119%" height="15" fill="rgb(237,6,15)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="815.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="66.9806%" y="789" width="0.0119%" height="15" fill="rgb(252,156,15)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="799.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="66.9806%" y="773" width="0.0119%" height="15" fill="rgb(249,78,18)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="783.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="66.9806%" y="757" width="0.0119%" height="15" fill="rgb(230,223,44)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="66.9806%" y="741" width="0.0119%" height="15" fill="rgb(230,222,32)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="66.9806%" y="725" width="0.0119%" height="15" fill="rgb(247,54,6)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="66.9806%" y="709" width="0.0119%" height="15" fill="rgb(247,115,45)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic), std::function&lt;Result (State&amp;)&gt; (*)(symbolic::Symbolic)&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="66.9806%" y="693" width="0.0119%" height="15" fill="rgb(213,203,37)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="703.50"/></g><g><title>logic::symop (1 samples, 0.01%)</title><rect x="66.9806%" y="677" width="0.0119%" height="15" fill="rgb(248,188,18)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="687.50"/></g><g><title>parser::operator+ (1 samples, 0.01%)</title><rect x="66.9806%" y="661" width="0.0119%" height="15" fill="rgb(206,80,8)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="66.9806%" y="645" width="0.0119%" height="15" fill="rgb(245,217,31)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="66.9806%" y="629" width="0.0119%" height="15" fill="rgb(220,193,15)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="66.9806%" y="613" width="0.0119%" height="15" fill="rgb(226,7,19)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="66.9806%" y="597" width="0.0119%" height="15" fill="rgb(222,145,31)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="66.9806%" y="581" width="0.0119%" height="15" fill="rgb(241,193,36)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="66.9806%" y="565" width="0.0119%" height="15" fill="rgb(225,123,33)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="66.9806%" y="549" width="0.0119%" height="15" fill="rgb(246,136,38)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="66.9806%" y="533" width="0.0119%" height="15" fill="rgb(243,56,24)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="66.9806%" y="517" width="0.0119%" height="15" fill="rgb(215,147,2)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="66.9806%" y="501" width="0.0119%" height="15" fill="rgb(209,155,27)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="66.9806%" y="485" width="0.0119%" height="15" fill="rgb(222,177,11)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="66.9806%" y="469" width="0.0119%" height="15" fill="rgb(212,227,15)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="66.9806%" y="453" width="0.0119%" height="15" fill="rgb(214,138,20)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="66.9806%" y="437" width="0.0119%" height="15" fill="rgb(221,170,31)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="66.9806%" y="421" width="0.0119%" height="15" fill="rgb(253,207,5)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="66.9806%" y="405" width="0.0119%" height="15" fill="rgb(212,64,37)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="66.9806%" y="389" width="0.0119%" height="15" fill="rgb(208,113,51)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="66.9806%" y="373" width="0.0119%" height="15" fill="rgb(237,15,5)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="66.9806%" y="357" width="0.0119%" height="15" fill="rgb(238,33,18)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="367.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="66.9806%" y="341" width="0.0119%" height="15" fill="rgb(253,206,50)" fg:x="5619" fg:w="1"/><text x="67.2997%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="66.9925%" y="613" width="0.0238%" height="15" fill="rgb(242,158,43)" fg:x="5620" fg:w="2"/><text x="67.3116%" y="623.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="66.9925%" y="597" width="0.0238%" height="15" fill="rgb(213,125,27)" fg:x="5620" fg:w="2"/><text x="67.3116%" y="607.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="66.9925%" y="581" width="0.0238%" height="15" fill="rgb(233,161,31)" fg:x="5620" fg:w="2"/><text x="67.3116%" y="591.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="66.9925%" y="565" width="0.0238%" height="15" fill="rgb(218,135,6)" fg:x="5620" fg:w="2"/><text x="67.3116%" y="575.50"/></g><g><title>parser::finish_if_valid (3 samples, 0.04%)</title><rect x="66.9925%" y="661" width="0.0358%" height="15" fill="rgb(222,73,53)" fg:x="5620" fg:w="3"/><text x="67.3116%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="66.9925%" y="645" width="0.0358%" height="15" fill="rgb(229,66,53)" fg:x="5620" fg:w="3"/><text x="67.3116%" y="655.50"/></g><g><title>parser::either (3 samples, 0.04%)</title><rect x="66.9925%" y="629" width="0.0358%" height="15" fill="rgb(208,128,19)" fg:x="5620" fg:w="3"/><text x="67.3116%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.0163%" y="613" width="0.0119%" height="15" fill="rgb(235,70,27)" fg:x="5622" fg:w="1"/><text x="67.3354%" y="623.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="67.0163%" y="597" width="0.0119%" height="15" fill="rgb(241,130,30)" fg:x="5622" fg:w="1"/><text x="67.3354%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.0163%" y="581" width="0.0119%" height="15" fill="rgb(222,57,48)" fg:x="5622" fg:w="1"/><text x="67.3354%" y="591.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="67.0163%" y="565" width="0.0119%" height="15" fill="rgb(225,204,29)" fg:x="5622" fg:w="1"/><text x="67.3354%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="67.0283%" y="565" width="0.0119%" height="15" fill="rgb(240,196,35)" fg:x="5623" fg:w="1"/><text x="67.3474%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.0283%" y="549" width="0.0119%" height="15" fill="rgb(215,150,16)" fg:x="5623" fg:w="1"/><text x="67.3474%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.0283%" y="581" width="0.0238%" height="15" fill="rgb(209,170,13)" fg:x="5623" fg:w="2"/><text x="67.3474%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.0402%" y="565" width="0.0119%" height="15" fill="rgb(235,75,31)" fg:x="5624" fg:w="1"/><text x="67.3593%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.0402%" y="549" width="0.0119%" height="15" fill="rgb(252,1,47)" fg:x="5624" fg:w="1"/><text x="67.3593%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.0402%" y="533" width="0.0119%" height="15" fill="rgb(241,2,36)" fg:x="5624" fg:w="1"/><text x="67.3593%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="67.0402%" y="517" width="0.0119%" height="15" fill="rgb(236,191,4)" fg:x="5624" fg:w="1"/><text x="67.3593%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.0402%" y="501" width="0.0119%" height="15" fill="rgb(212,65,35)" fg:x="5624" fg:w="1"/><text x="67.3593%" y="511.50"/></g><g><title>parser::layout_end (3 samples, 0.04%)</title><rect x="67.0283%" y="661" width="0.0358%" height="15" fill="rgb(209,49,33)" fg:x="5623" fg:w="3"/><text x="67.3474%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="67.0283%" y="645" width="0.0358%" height="15" fill="rgb(208,36,46)" fg:x="5623" fg:w="3"/><text x="67.3474%" y="655.50"/></g><g><title>parser::either (3 samples, 0.04%)</title><rect x="67.0283%" y="629" width="0.0358%" height="15" fill="rgb(210,125,2)" fg:x="5623" fg:w="3"/><text x="67.3474%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="67.0283%" y="613" width="0.0358%" height="15" fill="rgb(225,62,6)" fg:x="5623" fg:w="3"/><text x="67.3474%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="67.0283%" y="597" width="0.0358%" height="15" fill="rgb(210,54,27)" fg:x="5623" fg:w="3"/><text x="67.3474%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.0521%" y="581" width="0.0119%" height="15" fill="rgb(249,189,52)" fg:x="5625" fg:w="1"/><text x="67.3712%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="67.0521%" y="565" width="0.0119%" height="15" fill="rgb(225,134,40)" fg:x="5625" fg:w="1"/><text x="67.3712%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.0521%" y="549" width="0.0119%" height="15" fill="rgb(206,13,37)" fg:x="5625" fg:w="1"/><text x="67.3712%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.0640%" y="645" width="0.0238%" height="15" fill="rgb(232,114,28)" fg:x="5626" fg:w="2"/><text x="67.3831%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.0640%" y="629" width="0.0238%" height="15" fill="rgb(253,215,8)" fg:x="5626" fg:w="2"/><text x="67.3831%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.0640%" y="613" width="0.0238%" height="15" fill="rgb(254,64,19)" fg:x="5626" fg:w="2"/><text x="67.3831%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.0640%" y="597" width="0.0238%" height="15" fill="rgb(242,18,46)" fg:x="5626" fg:w="2"/><text x="67.3831%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.0640%" y="581" width="0.0238%" height="15" fill="rgb(239,192,30)" fg:x="5626" fg:w="2"/><text x="67.3831%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.0640%" y="565" width="0.0238%" height="15" fill="rgb(232,73,14)" fg:x="5626" fg:w="2"/><text x="67.3831%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.0640%" y="549" width="0.0238%" height="15" fill="rgb(225,51,9)" fg:x="5626" fg:w="2"/><text x="67.3831%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.0640%" y="533" width="0.0238%" height="15" fill="rgb(242,217,54)" fg:x="5626" fg:w="2"/><text x="67.3831%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.0640%" y="517" width="0.0238%" height="15" fill="rgb(216,93,3)" fg:x="5626" fg:w="2"/><text x="67.3831%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.0640%" y="501" width="0.0238%" height="15" fill="rgb(230,119,33)" fg:x="5626" fg:w="2"/><text x="67.3831%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.0640%" y="485" width="0.0238%" height="15" fill="rgb(238,170,27)" fg:x="5626" fg:w="2"/><text x="67.3831%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.0640%" y="469" width="0.0238%" height="15" fill="rgb(229,8,2)" fg:x="5626" fg:w="2"/><text x="67.3831%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.0640%" y="453" width="0.0238%" height="15" fill="rgb(205,214,42)" fg:x="5626" fg:w="2"/><text x="67.3831%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.0640%" y="437" width="0.0238%" height="15" fill="rgb(245,113,1)" fg:x="5626" fg:w="2"/><text x="67.3831%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.0640%" y="421" width="0.0238%" height="15" fill="rgb(252,50,2)" fg:x="5626" fg:w="2"/><text x="67.3831%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.0640%" y="405" width="0.0238%" height="15" fill="rgb(225,122,24)" fg:x="5626" fg:w="2"/><text x="67.3831%" y="415.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="67.0640%" y="389" width="0.0238%" height="15" fill="rgb(234,129,31)" fg:x="5626" fg:w="2"/><text x="67.3831%" y="399.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="67.0640%" y="373" width="0.0238%" height="15" fill="rgb(219,177,4)" fg:x="5626" fg:w="2"/><text x="67.3831%" y="383.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="67.0640%" y="357" width="0.0238%" height="15" fill="rgb(225,142,27)" fg:x="5626" fg:w="2"/><text x="67.3831%" y="367.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="67.0879%" y="389" width="0.0238%" height="15" fill="rgb(205,107,51)" fg:x="5628" fg:w="2"/><text x="67.4070%" y="399.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="67.0879%" y="373" width="0.0238%" height="15" fill="rgb(236,223,15)" fg:x="5628" fg:w="2"/><text x="67.4070%" y="383.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="67.0879%" y="357" width="0.0238%" height="15" fill="rgb(235,133,11)" fg:x="5628" fg:w="2"/><text x="67.4070%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="67.0879%" y="613" width="0.0477%" height="15" fill="rgb(247,172,13)" fg:x="5628" fg:w="4"/><text x="67.4070%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="67.0879%" y="597" width="0.0477%" height="15" fill="rgb(233,191,41)" fg:x="5628" fg:w="4"/><text x="67.4070%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="67.0879%" y="581" width="0.0477%" height="15" fill="rgb(250,65,16)" fg:x="5628" fg:w="4"/><text x="67.4070%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="67.0879%" y="565" width="0.0477%" height="15" fill="rgb(206,10,27)" fg:x="5628" fg:w="4"/><text x="67.4070%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="67.0879%" y="549" width="0.0477%" height="15" fill="rgb(212,96,22)" fg:x="5628" fg:w="4"/><text x="67.4070%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="67.0879%" y="533" width="0.0477%" height="15" fill="rgb(206,50,0)" fg:x="5628" fg:w="4"/><text x="67.4070%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="67.0879%" y="517" width="0.0477%" height="15" fill="rgb(249,105,52)" fg:x="5628" fg:w="4"/><text x="67.4070%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="67.0879%" y="501" width="0.0477%" height="15" fill="rgb(216,93,51)" fg:x="5628" fg:w="4"/><text x="67.4070%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="67.0879%" y="485" width="0.0477%" height="15" fill="rgb(217,172,13)" fg:x="5628" fg:w="4"/><text x="67.4070%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="67.0879%" y="469" width="0.0477%" height="15" fill="rgb(235,199,38)" fg:x="5628" fg:w="4"/><text x="67.4070%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="67.0879%" y="453" width="0.0477%" height="15" fill="rgb(221,97,33)" fg:x="5628" fg:w="4"/><text x="67.4070%" y="463.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="67.0879%" y="437" width="0.0477%" height="15" fill="rgb(205,156,50)" fg:x="5628" fg:w="4"/><text x="67.4070%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="67.0879%" y="421" width="0.0477%" height="15" fill="rgb(215,142,19)" fg:x="5628" fg:w="4"/><text x="67.4070%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="67.0879%" y="405" width="0.0477%" height="15" fill="rgb(232,170,7)" fg:x="5628" fg:w="4"/><text x="67.4070%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.1117%" y="389" width="0.0238%" height="15" fill="rgb(223,50,17)" fg:x="5630" fg:w="2"/><text x="67.4308%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.1117%" y="373" width="0.0238%" height="15" fill="rgb(230,103,46)" fg:x="5630" fg:w="2"/><text x="67.4308%" y="383.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="67.1117%" y="357" width="0.0238%" height="15" fill="rgb(254,30,34)" fg:x="5630" fg:w="2"/><text x="67.4308%" y="367.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="67.1117%" y="341" width="0.0238%" height="15" fill="rgb(235,198,1)" fg:x="5630" fg:w="2"/><text x="67.4308%" y="351.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="67.1117%" y="325" width="0.0238%" height="15" fill="rgb(217,105,47)" fg:x="5630" fg:w="2"/><text x="67.4308%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="67.1355%" y="549" width="0.0358%" height="15" fill="rgb(231,18,12)" fg:x="5632" fg:w="3"/><text x="67.4546%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="67.1355%" y="533" width="0.0358%" height="15" fill="rgb(218,196,1)" fg:x="5632" fg:w="3"/><text x="67.4546%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="67.1355%" y="517" width="0.0358%" height="15" fill="rgb(210,32,3)" fg:x="5632" fg:w="3"/><text x="67.4546%" y="527.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="67.1355%" y="501" width="0.0358%" height="15" fill="rgb(227,178,30)" fg:x="5632" fg:w="3"/><text x="67.4546%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="67.1355%" y="485" width="0.0358%" height="15" fill="rgb(231,140,27)" fg:x="5632" fg:w="3"/><text x="67.4546%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="67.1355%" y="469" width="0.0358%" height="15" fill="rgb(206,66,35)" fg:x="5632" fg:w="3"/><text x="67.4546%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="67.1355%" y="453" width="0.0358%" height="15" fill="rgb(212,34,2)" fg:x="5632" fg:w="3"/><text x="67.4546%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="67.1355%" y="437" width="0.0358%" height="15" fill="rgb(207,201,33)" fg:x="5632" fg:w="3"/><text x="67.4546%" y="447.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="67.1355%" y="421" width="0.0358%" height="15" fill="rgb(221,135,32)" fg:x="5632" fg:w="3"/><text x="67.4546%" y="431.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.04%)</title><rect x="67.1355%" y="405" width="0.0358%" height="15" fill="rgb(206,77,31)" fg:x="5632" fg:w="3"/><text x="67.4546%" y="415.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="67.1355%" y="389" width="0.0358%" height="15" fill="rgb(252,198,50)" fg:x="5632" fg:w="3"/><text x="67.4546%" y="399.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="67.1355%" y="373" width="0.0358%" height="15" fill="rgb(206,79,27)" fg:x="5632" fg:w="3"/><text x="67.4546%" y="383.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="67.1355%" y="357" width="0.0358%" height="15" fill="rgb(228,108,9)" fg:x="5632" fg:w="3"/><text x="67.4546%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="67.1355%" y="581" width="0.0596%" height="15" fill="rgb(213,9,39)" fg:x="5632" fg:w="5"/><text x="67.4546%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="67.1355%" y="565" width="0.0596%" height="15" fill="rgb(252,51,13)" fg:x="5632" fg:w="5"/><text x="67.4546%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.1713%" y="549" width="0.0238%" height="15" fill="rgb(218,202,39)" fg:x="5635" fg:w="2"/><text x="67.4904%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.1713%" y="533" width="0.0238%" height="15" fill="rgb(214,122,21)" fg:x="5635" fg:w="2"/><text x="67.4904%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.1713%" y="517" width="0.0238%" height="15" fill="rgb(217,205,48)" fg:x="5635" fg:w="2"/><text x="67.4904%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.1713%" y="501" width="0.0238%" height="15" fill="rgb(230,216,13)" fg:x="5635" fg:w="2"/><text x="67.4904%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.1713%" y="485" width="0.0238%" height="15" fill="rgb(249,118,4)" fg:x="5635" fg:w="2"/><text x="67.4904%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.1713%" y="469" width="0.0238%" height="15" fill="rgb(212,207,40)" fg:x="5635" fg:w="2"/><text x="67.4904%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.1713%" y="453" width="0.0238%" height="15" fill="rgb(217,156,26)" fg:x="5635" fg:w="2"/><text x="67.4904%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.1713%" y="437" width="0.0238%" height="15" fill="rgb(226,86,34)" fg:x="5635" fg:w="2"/><text x="67.4904%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.1713%" y="421" width="0.0238%" height="15" fill="rgb(217,111,30)" fg:x="5635" fg:w="2"/><text x="67.4904%" y="431.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.1713%" y="405" width="0.0238%" height="15" fill="rgb(228,64,18)" fg:x="5635" fg:w="2"/><text x="67.4904%" y="415.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="67.1713%" y="389" width="0.0238%" height="15" fill="rgb(254,217,48)" fg:x="5635" fg:w="2"/><text x="67.4904%" y="399.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="67.1713%" y="373" width="0.0238%" height="15" fill="rgb(226,156,48)" fg:x="5635" fg:w="2"/><text x="67.4904%" y="383.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="67.1713%" y="357" width="0.0238%" height="15" fill="rgb(236,168,20)" fg:x="5635" fg:w="2"/><text x="67.4904%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.1951%" y="549" width="0.0119%" height="15" fill="rgb(239,210,33)" fg:x="5637" fg:w="1"/><text x="67.5142%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.1951%" y="533" width="0.0119%" height="15" fill="rgb(242,85,17)" fg:x="5637" fg:w="1"/><text x="67.5142%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.1951%" y="517" width="0.0119%" height="15" fill="rgb(221,196,15)" fg:x="5637" fg:w="1"/><text x="67.5142%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.1951%" y="501" width="0.0119%" height="15" fill="rgb(249,76,21)" fg:x="5637" fg:w="1"/><text x="67.5142%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.1951%" y="485" width="0.0119%" height="15" fill="rgb(243,67,29)" fg:x="5637" fg:w="1"/><text x="67.5142%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.1951%" y="469" width="0.0119%" height="15" fill="rgb(240,159,2)" fg:x="5637" fg:w="1"/><text x="67.5142%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.1951%" y="453" width="0.0119%" height="15" fill="rgb(244,64,3)" fg:x="5637" fg:w="1"/><text x="67.5142%" y="463.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.1951%" y="437" width="0.0119%" height="15" fill="rgb(220,86,40)" fg:x="5637" fg:w="1"/><text x="67.5142%" y="447.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="67.1951%" y="421" width="0.0119%" height="15" fill="rgb(222,194,51)" fg:x="5637" fg:w="1"/><text x="67.5142%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.1951%" y="405" width="0.0119%" height="15" fill="rgb(207,154,19)" fg:x="5637" fg:w="1"/><text x="67.5142%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="67.1951%" y="389" width="0.0119%" height="15" fill="rgb(206,178,36)" fg:x="5637" fg:w="1"/><text x="67.5142%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.1951%" y="373" width="0.0119%" height="15" fill="rgb(218,8,24)" fg:x="5637" fg:w="1"/><text x="67.5142%" y="383.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="67.1951%" y="357" width="0.0119%" height="15" fill="rgb(226,83,41)" fg:x="5637" fg:w="1"/><text x="67.5142%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.2071%" y="469" width="0.0119%" height="15" fill="rgb(224,23,22)" fg:x="5638" fg:w="1"/><text x="67.5262%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.2071%" y="453" width="0.0119%" height="15" fill="rgb(218,198,45)" fg:x="5638" fg:w="1"/><text x="67.5262%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.2071%" y="437" width="0.0119%" height="15" fill="rgb(249,147,41)" fg:x="5638" fg:w="1"/><text x="67.5262%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.2071%" y="421" width="0.0119%" height="15" fill="rgb(244,224,13)" fg:x="5638" fg:w="1"/><text x="67.5262%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.2071%" y="405" width="0.0119%" height="15" fill="rgb(225,97,27)" fg:x="5638" fg:w="1"/><text x="67.5262%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.2071%" y="389" width="0.0119%" height="15" fill="rgb(254,64,0)" fg:x="5638" fg:w="1"/><text x="67.5262%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="67.2071%" y="373" width="0.0119%" height="15" fill="rgb(208,130,43)" fg:x="5638" fg:w="1"/><text x="67.5262%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.2071%" y="357" width="0.0119%" height="15" fill="rgb(247,91,25)" fg:x="5638" fg:w="1"/><text x="67.5262%" y="367.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="67.2071%" y="341" width="0.0119%" height="15" fill="rgb(215,218,42)" fg:x="5638" fg:w="1"/><text x="67.5262%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.2071%" y="485" width="0.0238%" height="15" fill="rgb(233,9,24)" fg:x="5638" fg:w="2"/><text x="67.5262%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.2190%" y="469" width="0.0119%" height="15" fill="rgb(252,105,38)" fg:x="5639" fg:w="1"/><text x="67.5381%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.2190%" y="453" width="0.0119%" height="15" fill="rgb(225,40,49)" fg:x="5639" fg:w="1"/><text x="67.5381%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.2190%" y="437" width="0.0119%" height="15" fill="rgb(232,196,19)" fg:x="5639" fg:w="1"/><text x="67.5381%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.2190%" y="421" width="0.0119%" height="15" fill="rgb(207,35,15)" fg:x="5639" fg:w="1"/><text x="67.5381%" y="431.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.2190%" y="405" width="0.0119%" height="15" fill="rgb(238,68,36)" fg:x="5639" fg:w="1"/><text x="67.5381%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="67.2190%" y="389" width="0.0119%" height="15" fill="rgb(205,158,20)" fg:x="5639" fg:w="1"/><text x="67.5381%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.2190%" y="373" width="0.0119%" height="15" fill="rgb(232,32,22)" fg:x="5639" fg:w="1"/><text x="67.5381%" y="383.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="67.2190%" y="357" width="0.0119%" height="15" fill="rgb(210,169,6)" fg:x="5639" fg:w="1"/><text x="67.5381%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.2309%" y="357" width="0.0119%" height="15" fill="rgb(229,28,12)" fg:x="5640" fg:w="1"/><text x="67.5500%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="67.2309%" y="341" width="0.0119%" height="15" fill="rgb(229,78,10)" fg:x="5640" fg:w="1"/><text x="67.5500%" y="351.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.2309%" y="325" width="0.0119%" height="15" fill="rgb(223,139,54)" fg:x="5640" fg:w="1"/><text x="67.5500%" y="335.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="67.2309%" y="309" width="0.0119%" height="15" fill="rgb(207,110,4)" fg:x="5640" fg:w="1"/><text x="67.5500%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="67.2071%" y="517" width="0.0715%" height="15" fill="rgb(248,30,41)" fg:x="5638" fg:w="6"/><text x="67.5262%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="67.2071%" y="501" width="0.0715%" height="15" fill="rgb(235,54,25)" fg:x="5638" fg:w="6"/><text x="67.5262%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="67.2309%" y="485" width="0.0477%" height="15" fill="rgb(213,107,41)" fg:x="5640" fg:w="4"/><text x="67.5500%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="67.2309%" y="469" width="0.0477%" height="15" fill="rgb(237,102,9)" fg:x="5640" fg:w="4"/><text x="67.5500%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="67.2309%" y="453" width="0.0477%" height="15" fill="rgb(252,137,49)" fg:x="5640" fg:w="4"/><text x="67.5500%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="67.2309%" y="437" width="0.0477%" height="15" fill="rgb(233,202,33)" fg:x="5640" fg:w="4"/><text x="67.5500%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="67.2309%" y="421" width="0.0477%" height="15" fill="rgb(223,14,51)" fg:x="5640" fg:w="4"/><text x="67.5500%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="67.2309%" y="405" width="0.0477%" height="15" fill="rgb(248,70,23)" fg:x="5640" fg:w="4"/><text x="67.5500%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="67.2309%" y="389" width="0.0477%" height="15" fill="rgb(209,207,47)" fg:x="5640" fg:w="4"/><text x="67.5500%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="67.2309%" y="373" width="0.0477%" height="15" fill="rgb(245,124,2)" fg:x="5640" fg:w="4"/><text x="67.5500%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="67.2428%" y="357" width="0.0358%" height="15" fill="rgb(249,208,11)" fg:x="5641" fg:w="3"/><text x="67.5619%" y="367.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="67.2428%" y="341" width="0.0358%" height="15" fill="rgb(247,112,7)" fg:x="5641" fg:w="3"/><text x="67.5619%" y="351.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="67.2428%" y="325" width="0.0358%" height="15" fill="rgb(209,192,31)" fg:x="5641" fg:w="3"/><text x="67.5619%" y="335.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="67.2428%" y="309" width="0.0358%" height="15" fill="rgb(236,55,19)" fg:x="5641" fg:w="3"/><text x="67.5619%" y="319.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="67.2786%" y="437" width="0.0477%" height="15" fill="rgb(252,89,41)" fg:x="5644" fg:w="4"/><text x="67.5977%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="67.2786%" y="421" width="0.0477%" height="15" fill="rgb(220,172,14)" fg:x="5644" fg:w="4"/><text x="67.5977%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="67.2786%" y="405" width="0.0477%" height="15" fill="rgb(252,65,2)" fg:x="5644" fg:w="4"/><text x="67.5977%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="67.2786%" y="389" width="0.0477%" height="15" fill="rgb(250,20,8)" fg:x="5644" fg:w="4"/><text x="67.5977%" y="399.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="67.2786%" y="373" width="0.0477%" height="15" fill="rgb(234,149,13)" fg:x="5644" fg:w="4"/><text x="67.5977%" y="383.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="67.2786%" y="357" width="0.0477%" height="15" fill="rgb(223,219,12)" fg:x="5644" fg:w="4"/><text x="67.5977%" y="367.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="67.2786%" y="341" width="0.0477%" height="15" fill="rgb(234,13,49)" fg:x="5644" fg:w="4"/><text x="67.5977%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="67.2786%" y="453" width="0.0596%" height="15" fill="rgb(214,41,25)" fg:x="5644" fg:w="5"/><text x="67.5977%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.3263%" y="437" width="0.0119%" height="15" fill="rgb(232,198,52)" fg:x="5648" fg:w="1"/><text x="67.6454%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.3263%" y="421" width="0.0119%" height="15" fill="rgb(236,111,46)" fg:x="5648" fg:w="1"/><text x="67.6454%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.3263%" y="405" width="0.0119%" height="15" fill="rgb(253,30,20)" fg:x="5648" fg:w="1"/><text x="67.6454%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.3263%" y="389" width="0.0119%" height="15" fill="rgb(247,141,17)" fg:x="5648" fg:w="1"/><text x="67.6454%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="67.3263%" y="373" width="0.0119%" height="15" fill="rgb(214,195,21)" fg:x="5648" fg:w="1"/><text x="67.6454%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.3263%" y="357" width="0.0119%" height="15" fill="rgb(214,98,12)" fg:x="5648" fg:w="1"/><text x="67.6454%" y="367.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="67.3263%" y="341" width="0.0119%" height="15" fill="rgb(239,4,26)" fg:x="5648" fg:w="1"/><text x="67.6454%" y="351.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="67.3382%" y="325" width="0.0834%" height="15" fill="rgb(234,210,35)" fg:x="5649" fg:w="7"/><text x="67.6573%" y="335.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="67.3382%" y="309" width="0.0834%" height="15" fill="rgb(252,178,27)" fg:x="5649" fg:w="7"/><text x="67.6573%" y="319.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="67.3382%" y="293" width="0.0834%" height="15" fill="rgb(217,50,1)" fg:x="5649" fg:w="7"/><text x="67.6573%" y="303.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="67.3382%" y="389" width="0.0954%" height="15" fill="rgb(233,137,5)" fg:x="5649" fg:w="8"/><text x="67.6573%" y="399.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="67.3382%" y="373" width="0.0954%" height="15" fill="rgb(217,227,25)" fg:x="5649" fg:w="8"/><text x="67.6573%" y="383.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (8 samples, 0.10%)</title><rect x="67.3382%" y="357" width="0.0954%" height="15" fill="rgb(242,89,38)" fg:x="5649" fg:w="8"/><text x="67.6573%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="67.3382%" y="341" width="0.0954%" height="15" fill="rgb(212,190,30)" fg:x="5649" fg:w="8"/><text x="67.6573%" y="351.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="67.4216%" y="325" width="0.0119%" height="15" fill="rgb(222,120,8)" fg:x="5656" fg:w="1"/><text x="67.7407%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.4216%" y="309" width="0.0119%" height="15" fill="rgb(227,181,9)" fg:x="5656" fg:w="1"/><text x="67.7407%" y="319.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="67.4216%" y="293" width="0.0119%" height="15" fill="rgb(222,125,29)" fg:x="5656" fg:w="1"/><text x="67.7407%" y="303.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.4216%" y="277" width="0.0119%" height="15" fill="rgb(215,153,31)" fg:x="5656" fg:w="1"/><text x="67.7407%" y="287.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function@plt (1 samples, 0.01%)</title><rect x="67.4216%" y="261" width="0.0119%" height="15" fill="rgb(228,77,30)" fg:x="5656" fg:w="1"/><text x="67.7407%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="67.2786%" y="485" width="0.2026%" height="15" fill="rgb(226,110,9)" fg:x="5644" fg:w="17"/><text x="67.5977%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (17 samples, 0.20%)</title><rect x="67.2786%" y="469" width="0.2026%" height="15" fill="rgb(219,111,7)" fg:x="5644" fg:w="17"/><text x="67.5977%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="67.3382%" y="453" width="0.1430%" height="15" fill="rgb(229,167,25)" fg:x="5649" fg:w="12"/><text x="67.6573%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="67.3382%" y="437" width="0.1430%" height="15" fill="rgb(209,77,43)" fg:x="5649" fg:w="12"/><text x="67.6573%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="67.3382%" y="421" width="0.1430%" height="15" fill="rgb(233,70,39)" fg:x="5649" fg:w="12"/><text x="67.6573%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="67.3382%" y="405" width="0.1430%" height="15" fill="rgb(207,171,44)" fg:x="5649" fg:w="12"/><text x="67.6573%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="67.4335%" y="389" width="0.0477%" height="15" fill="rgb(244,91,6)" fg:x="5657" fg:w="4"/><text x="67.7526%" y="399.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="67.4335%" y="373" width="0.0477%" height="15" fill="rgb(234,136,12)" fg:x="5657" fg:w="4"/><text x="67.7526%" y="383.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="67.4335%" y="357" width="0.0477%" height="15" fill="rgb(216,210,38)" fg:x="5657" fg:w="4"/><text x="67.7526%" y="367.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="67.4335%" y="341" width="0.0477%" height="15" fill="rgb(241,227,7)" fg:x="5657" fg:w="4"/><text x="67.7526%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.4812%" y="421" width="0.0119%" height="15" fill="rgb(241,222,11)" fg:x="5661" fg:w="1"/><text x="67.8003%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.4812%" y="405" width="0.0119%" height="15" fill="rgb(246,86,18)" fg:x="5661" fg:w="1"/><text x="67.8003%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.4812%" y="389" width="0.0119%" height="15" fill="rgb(224,151,49)" fg:x="5661" fg:w="1"/><text x="67.8003%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="67.4812%" y="373" width="0.0119%" height="15" fill="rgb(235,4,41)" fg:x="5661" fg:w="1"/><text x="67.8003%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.4812%" y="357" width="0.0119%" height="15" fill="rgb(218,30,52)" fg:x="5661" fg:w="1"/><text x="67.8003%" y="367.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="67.4812%" y="341" width="0.0119%" height="15" fill="rgb(205,124,51)" fg:x="5661" fg:w="1"/><text x="67.8003%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.4931%" y="293" width="0.0119%" height="15" fill="rgb(237,126,51)" fg:x="5662" fg:w="1"/><text x="67.8122%" y="303.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.4931%" y="277" width="0.0119%" height="15" fill="rgb(225,32,46)" fg:x="5662" fg:w="1"/><text x="67.8122%" y="287.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.4931%" y="261" width="0.0119%" height="15" fill="rgb(251,60,49)" fg:x="5662" fg:w="1"/><text x="67.8122%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.4931%" y="245" width="0.0119%" height="15" fill="rgb(234,18,23)" fg:x="5662" fg:w="1"/><text x="67.8122%" y="255.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="67.4931%" y="229" width="0.0119%" height="15" fill="rgb(234,25,23)" fg:x="5662" fg:w="1"/><text x="67.8122%" y="239.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.4931%" y="213" width="0.0119%" height="15" fill="rgb(210,43,52)" fg:x="5662" fg:w="1"/><text x="67.8122%" y="223.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="67.4812%" y="453" width="0.0358%" height="15" fill="rgb(237,198,21)" fg:x="5661" fg:w="3"/><text x="67.8003%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="67.4812%" y="437" width="0.0358%" height="15" fill="rgb(211,20,34)" fg:x="5661" fg:w="3"/><text x="67.8003%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.4931%" y="421" width="0.0238%" height="15" fill="rgb(221,155,50)" fg:x="5662" fg:w="2"/><text x="67.8122%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.4931%" y="405" width="0.0238%" height="15" fill="rgb(213,214,53)" fg:x="5662" fg:w="2"/><text x="67.8122%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.4931%" y="389" width="0.0238%" height="15" fill="rgb(215,229,48)" fg:x="5662" fg:w="2"/><text x="67.8122%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.4931%" y="373" width="0.0238%" height="15" fill="rgb(243,88,5)" fg:x="5662" fg:w="2"/><text x="67.8122%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.4931%" y="357" width="0.0238%" height="15" fill="rgb(216,199,8)" fg:x="5662" fg:w="2"/><text x="67.8122%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.4931%" y="341" width="0.0238%" height="15" fill="rgb(241,22,4)" fg:x="5662" fg:w="2"/><text x="67.8122%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.4931%" y="325" width="0.0238%" height="15" fill="rgb(209,190,22)" fg:x="5662" fg:w="2"/><text x="67.8122%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.4931%" y="309" width="0.0238%" height="15" fill="rgb(251,138,45)" fg:x="5662" fg:w="2"/><text x="67.8122%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.5051%" y="293" width="0.0119%" height="15" fill="rgb(219,111,22)" fg:x="5663" fg:w="1"/><text x="67.8242%" y="303.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="67.5051%" y="277" width="0.0119%" height="15" fill="rgb(253,29,49)" fg:x="5663" fg:w="1"/><text x="67.8242%" y="287.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.5051%" y="261" width="0.0119%" height="15" fill="rgb(238,129,49)" fg:x="5663" fg:w="1"/><text x="67.8242%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.5170%" y="389" width="0.0119%" height="15" fill="rgb(240,26,41)" fg:x="5664" fg:w="1"/><text x="67.8361%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.5170%" y="373" width="0.0119%" height="15" fill="rgb(221,47,33)" fg:x="5664" fg:w="1"/><text x="67.8361%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.5170%" y="357" width="0.0119%" height="15" fill="rgb(216,200,17)" fg:x="5664" fg:w="1"/><text x="67.8361%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.5170%" y="341" width="0.0119%" height="15" fill="rgb(230,151,26)" fg:x="5664" fg:w="1"/><text x="67.8361%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.5170%" y="325" width="0.0119%" height="15" fill="rgb(242,182,16)" fg:x="5664" fg:w="1"/><text x="67.8361%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.5170%" y="309" width="0.0119%" height="15" fill="rgb(236,35,53)" fg:x="5664" fg:w="1"/><text x="67.8361%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.5170%" y="293" width="0.0119%" height="15" fill="rgb(214,180,28)" fg:x="5664" fg:w="1"/><text x="67.8361%" y="303.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.5170%" y="277" width="0.0119%" height="15" fill="rgb(208,173,36)" fg:x="5664" fg:w="1"/><text x="67.8361%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.5170%" y="261" width="0.0119%" height="15" fill="rgb(218,39,15)" fg:x="5664" fg:w="1"/><text x="67.8361%" y="271.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="67.5289%" y="277" width="0.0119%" height="15" fill="rgb(213,145,15)" fg:x="5665" fg:w="1"/><text x="67.8480%" y="287.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.5289%" y="261" width="0.0119%" height="15" fill="rgb(242,110,37)" fg:x="5665" fg:w="1"/><text x="67.8480%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.5289%" y="389" width="0.0238%" height="15" fill="rgb(247,146,22)" fg:x="5665" fg:w="2"/><text x="67.8480%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.5289%" y="373" width="0.0238%" height="15" fill="rgb(215,191,7)" fg:x="5665" fg:w="2"/><text x="67.8480%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.5289%" y="357" width="0.0238%" height="15" fill="rgb(240,158,1)" fg:x="5665" fg:w="2"/><text x="67.8480%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.5289%" y="341" width="0.0238%" height="15" fill="rgb(241,78,32)" fg:x="5665" fg:w="2"/><text x="67.8480%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.5289%" y="325" width="0.0238%" height="15" fill="rgb(248,83,10)" fg:x="5665" fg:w="2"/><text x="67.8480%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.5289%" y="309" width="0.0238%" height="15" fill="rgb(241,52,0)" fg:x="5665" fg:w="2"/><text x="67.8480%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.5289%" y="293" width="0.0238%" height="15" fill="rgb(238,37,13)" fg:x="5665" fg:w="2"/><text x="67.8480%" y="303.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.5408%" y="277" width="0.0119%" height="15" fill="rgb(242,194,17)" fg:x="5666" fg:w="1"/><text x="67.8599%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.5408%" y="261" width="0.0119%" height="15" fill="rgb(236,96,3)" fg:x="5666" fg:w="1"/><text x="67.8599%" y="271.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="67.5408%" y="245" width="0.0119%" height="15" fill="rgb(235,148,34)" fg:x="5666" fg:w="1"/><text x="67.8599%" y="255.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.5408%" y="229" width="0.0119%" height="15" fill="rgb(254,12,11)" fg:x="5666" fg:w="1"/><text x="67.8599%" y="239.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="67.5170%" y="421" width="0.0954%" height="15" fill="rgb(207,31,54)" fg:x="5664" fg:w="8"/><text x="67.8361%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="67.5170%" y="405" width="0.0954%" height="15" fill="rgb(252,14,28)" fg:x="5664" fg:w="8"/><text x="67.8361%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (5 samples, 0.06%)</title><rect x="67.5527%" y="389" width="0.0596%" height="15" fill="rgb(252,108,36)" fg:x="5667" fg:w="5"/><text x="67.8718%" y="399.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="67.5527%" y="373" width="0.0596%" height="15" fill="rgb(214,149,7)" fg:x="5667" fg:w="5"/><text x="67.8718%" y="383.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="67.5527%" y="357" width="0.0596%" height="15" fill="rgb(243,94,12)" fg:x="5667" fg:w="5"/><text x="67.8718%" y="367.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="67.5527%" y="341" width="0.0596%" height="15" fill="rgb(208,36,10)" fg:x="5667" fg:w="5"/><text x="67.8718%" y="351.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="67.6123%" y="341" width="0.0358%" height="15" fill="rgb(233,185,52)" fg:x="5672" fg:w="3"/><text x="67.9314%" y="351.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="67.6123%" y="325" width="0.0358%" height="15" fill="rgb(234,50,45)" fg:x="5672" fg:w="3"/><text x="67.9314%" y="335.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="67.6123%" y="309" width="0.0358%" height="15" fill="rgb(228,92,54)" fg:x="5672" fg:w="3"/><text x="67.9314%" y="319.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.6481%" y="309" width="0.0119%" height="15" fill="rgb(224,85,25)" fg:x="5675" fg:w="1"/><text x="67.9672%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.6481%" y="293" width="0.0119%" height="15" fill="rgb(246,1,45)" fg:x="5675" fg:w="1"/><text x="67.9672%" y="303.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="67.6481%" y="277" width="0.0119%" height="15" fill="rgb(240,66,23)" fg:x="5675" fg:w="1"/><text x="67.9672%" y="287.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.6481%" y="261" width="0.0119%" height="15" fill="rgb(222,96,27)" fg:x="5675" fg:w="1"/><text x="67.9672%" y="271.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="67.6123%" y="373" width="0.0596%" height="15" fill="rgb(212,136,10)" fg:x="5672" fg:w="5"/><text x="67.9314%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="67.6123%" y="357" width="0.0596%" height="15" fill="rgb(226,192,50)" fg:x="5672" fg:w="5"/><text x="67.9314%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.6481%" y="341" width="0.0238%" height="15" fill="rgb(241,182,31)" fg:x="5675" fg:w="2"/><text x="67.9672%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.6481%" y="325" width="0.0238%" height="15" fill="rgb(219,205,47)" fg:x="5675" fg:w="2"/><text x="67.9672%" y="335.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.6600%" y="309" width="0.0119%" height="15" fill="rgb(207,96,14)" fg:x="5676" fg:w="1"/><text x="67.9791%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.6600%" y="293" width="0.0119%" height="15" fill="rgb(216,119,9)" fg:x="5676" fg:w="1"/><text x="67.9791%" y="303.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="67.6600%" y="277" width="0.0119%" height="15" fill="rgb(235,62,36)" fg:x="5676" fg:w="1"/><text x="67.9791%" y="287.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.6600%" y="261" width="0.0119%" height="15" fill="rgb(214,41,27)" fg:x="5676" fg:w="1"/><text x="67.9791%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="67.6123%" y="389" width="0.1430%" height="15" fill="rgb(214,174,37)" fg:x="5672" fg:w="12"/><text x="67.9314%" y="399.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="67.6720%" y="373" width="0.0834%" height="15" fill="rgb(212,11,25)" fg:x="5677" fg:w="7"/><text x="67.9911%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (7 samples, 0.08%)</title><rect x="67.6720%" y="357" width="0.0834%" height="15" fill="rgb(217,71,35)" fg:x="5677" fg:w="7"/><text x="67.9911%" y="367.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="67.6720%" y="341" width="0.0834%" height="15" fill="rgb(234,152,9)" fg:x="5677" fg:w="7"/><text x="67.9911%" y="351.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="67.6720%" y="325" width="0.0834%" height="15" fill="rgb(228,32,51)" fg:x="5677" fg:w="7"/><text x="67.9911%" y="335.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="67.6720%" y="309" width="0.0834%" height="15" fill="rgb(209,14,47)" fg:x="5677" fg:w="7"/><text x="67.9911%" y="319.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="67.7554%" y="373" width="0.0477%" height="15" fill="rgb(218,201,17)" fg:x="5684" fg:w="4"/><text x="68.0745%" y="383.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="67.7554%" y="357" width="0.0477%" height="15" fill="rgb(218,98,15)" fg:x="5684" fg:w="4"/><text x="68.0745%" y="367.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="67.7554%" y="341" width="0.0477%" height="15" fill="rgb(233,202,29)" fg:x="5684" fg:w="4"/><text x="68.0745%" y="351.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="67.8031%" y="341" width="0.0715%" height="15" fill="rgb(207,196,44)" fg:x="5688" fg:w="6"/><text x="68.1222%" y="351.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="67.8031%" y="325" width="0.0715%" height="15" fill="rgb(218,63,34)" fg:x="5688" fg:w="6"/><text x="68.1222%" y="335.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="67.8031%" y="309" width="0.0715%" height="15" fill="rgb(209,10,5)" fg:x="5688" fg:w="6"/><text x="68.1222%" y="319.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="67.8746%" y="277" width="0.0119%" height="15" fill="rgb(224,36,28)" fg:x="5694" fg:w="1"/><text x="68.1937%" y="287.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.8746%" y="261" width="0.0119%" height="15" fill="rgb(249,178,7)" fg:x="5694" fg:w="1"/><text x="68.1937%" y="271.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.8865%" y="277" width="0.0238%" height="15" fill="rgb(253,163,10)" fg:x="5695" fg:w="2"/><text x="68.2056%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.8865%" y="261" width="0.0238%" height="15" fill="rgb(245,67,46)" fg:x="5695" fg:w="2"/><text x="68.2056%" y="271.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="67.8865%" y="245" width="0.0238%" height="15" fill="rgb(225,14,18)" fg:x="5695" fg:w="2"/><text x="68.2056%" y="255.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="67.8865%" y="229" width="0.0238%" height="15" fill="rgb(217,41,54)" fg:x="5695" fg:w="2"/><text x="68.2056%" y="239.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="67.8746%" y="293" width="0.0477%" height="15" fill="rgb(222,111,11)" fg:x="5694" fg:w="4"/><text x="68.1937%" y="303.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.9104%" y="277" width="0.0119%" height="15" fill="rgb(211,85,31)" fg:x="5697" fg:w="1"/><text x="68.2295%" y="287.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.9104%" y="261" width="0.0119%" height="15" fill="rgb(223,29,26)" fg:x="5697" fg:w="1"/><text x="68.2295%" y="271.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="67.9223%" y="245" width="0.0119%" height="15" fill="rgb(236,124,50)" fg:x="5698" fg:w="1"/><text x="68.2414%" y="255.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="67.8031%" y="357" width="0.1430%" height="15" fill="rgb(219,148,15)" fg:x="5688" fg:w="12"/><text x="68.1222%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="67.8746%" y="341" width="0.0715%" height="15" fill="rgb(248,159,33)" fg:x="5694" fg:w="6"/><text x="68.1937%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="67.8746%" y="325" width="0.0715%" height="15" fill="rgb(252,65,8)" fg:x="5694" fg:w="6"/><text x="68.1937%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="67.8746%" y="309" width="0.0715%" height="15" fill="rgb(236,45,7)" fg:x="5694" fg:w="6"/><text x="68.1937%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.9223%" y="293" width="0.0238%" height="15" fill="rgb(244,3,48)" fg:x="5698" fg:w="2"/><text x="68.2414%" y="303.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="67.9223%" y="277" width="0.0238%" height="15" fill="rgb(224,123,53)" fg:x="5698" fg:w="2"/><text x="68.2414%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="67.9223%" y="261" width="0.0238%" height="15" fill="rgb(223,173,15)" fg:x="5698" fg:w="2"/><text x="68.2414%" y="271.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.9342%" y="245" width="0.0119%" height="15" fill="rgb(254,181,5)" fg:x="5699" fg:w="1"/><text x="68.2533%" y="255.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.9342%" y="229" width="0.0119%" height="15" fill="rgb(243,124,33)" fg:x="5699" fg:w="1"/><text x="68.2533%" y="239.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.9461%" y="325" width="0.0119%" height="15" fill="rgb(253,220,11)" fg:x="5700" fg:w="1"/><text x="68.2652%" y="335.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.9461%" y="309" width="0.0119%" height="15" fill="rgb(217,14,4)" fg:x="5700" fg:w="1"/><text x="68.2652%" y="319.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="67.9461%" y="293" width="0.0119%" height="15" fill="rgb(209,196,12)" fg:x="5700" fg:w="1"/><text x="68.2652%" y="303.50"/></g><g><title>memcpy@plt (1 samples, 0.01%)</title><rect x="67.9461%" y="277" width="0.0119%" height="15" fill="rgb(237,108,29)" fg:x="5700" fg:w="1"/><text x="68.2652%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.9580%" y="325" width="0.0119%" height="15" fill="rgb(216,173,20)" fg:x="5701" fg:w="1"/><text x="68.2771%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.9580%" y="309" width="0.0119%" height="15" fill="rgb(245,27,6)" fg:x="5701" fg:w="1"/><text x="68.2771%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.9580%" y="293" width="0.0119%" height="15" fill="rgb(210,181,20)" fg:x="5701" fg:w="1"/><text x="68.2771%" y="303.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.9580%" y="277" width="0.0119%" height="15" fill="rgb(235,213,1)" fg:x="5701" fg:w="1"/><text x="68.2771%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.9580%" y="261" width="0.0119%" height="15" fill="rgb(239,68,43)" fg:x="5701" fg:w="1"/><text x="68.2771%" y="271.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.9580%" y="245" width="0.0119%" height="15" fill="rgb(254,137,43)" fg:x="5701" fg:w="1"/><text x="68.2771%" y="255.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.9580%" y="229" width="0.0119%" height="15" fill="rgb(252,170,38)" fg:x="5701" fg:w="1"/><text x="68.2771%" y="239.50"/></g><g><title>parser::operator+ (77 samples, 0.92%)</title><rect x="67.0640%" y="661" width="0.9179%" height="15" fill="rgb(234,21,42)" fg:x="5626" fg:w="77"/><text x="67.3831%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (75 samples, 0.89%)</title><rect x="67.0879%" y="645" width="0.8940%" height="15" fill="rgb(216,145,40)" fg:x="5628" fg:w="75"/><text x="67.4070%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (75 samples, 0.89%)</title><rect x="67.0879%" y="629" width="0.8940%" height="15" fill="rgb(251,73,9)" fg:x="5628" fg:w="75"/><text x="67.4070%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (71 samples, 0.85%)</title><rect x="67.1355%" y="613" width="0.8463%" height="15" fill="rgb(242,54,6)" fg:x="5632" fg:w="71"/><text x="67.4546%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (71 samples, 0.85%)</title><rect x="67.1355%" y="597" width="0.8463%" height="15" fill="rgb(239,70,7)" fg:x="5632" fg:w="71"/><text x="67.4546%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (66 samples, 0.79%)</title><rect x="67.1951%" y="581" width="0.7867%" height="15" fill="rgb(216,159,35)" fg:x="5637" fg:w="66"/><text x="67.5142%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (66 samples, 0.79%)</title><rect x="67.1951%" y="565" width="0.7867%" height="15" fill="rgb(224,50,39)" fg:x="5637" fg:w="66"/><text x="67.5142%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (65 samples, 0.77%)</title><rect x="67.2071%" y="549" width="0.7748%" height="15" fill="rgb(235,9,35)" fg:x="5638" fg:w="65"/><text x="67.5262%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (65 samples, 0.77%)</title><rect x="67.2071%" y="533" width="0.7748%" height="15" fill="rgb(239,34,21)" fg:x="5638" fg:w="65"/><text x="67.5262%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (59 samples, 0.70%)</title><rect x="67.2786%" y="517" width="0.7033%" height="15" fill="rgb(218,162,43)" fg:x="5644" fg:w="59"/><text x="67.5977%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (59 samples, 0.70%)</title><rect x="67.2786%" y="501" width="0.7033%" height="15" fill="rgb(219,89,33)" fg:x="5644" fg:w="59"/><text x="67.5977%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (42 samples, 0.50%)</title><rect x="67.4812%" y="485" width="0.5007%" height="15" fill="rgb(226,125,37)" fg:x="5661" fg:w="42"/><text x="67.8003%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (42 samples, 0.50%)</title><rect x="67.4812%" y="469" width="0.5007%" height="15" fill="rgb(233,149,30)" fg:x="5661" fg:w="42"/><text x="67.8003%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (39 samples, 0.46%)</title><rect x="67.5170%" y="453" width="0.4649%" height="15" fill="rgb(236,8,18)" fg:x="5664" fg:w="39"/><text x="67.8361%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (39 samples, 0.46%)</title><rect x="67.5170%" y="437" width="0.4649%" height="15" fill="rgb(205,176,9)" fg:x="5664" fg:w="39"/><text x="67.8361%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (31 samples, 0.37%)</title><rect x="67.6123%" y="421" width="0.3695%" height="15" fill="rgb(252,103,44)" fg:x="5672" fg:w="31"/><text x="67.9314%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (31 samples, 0.37%)</title><rect x="67.6123%" y="405" width="0.3695%" height="15" fill="rgb(207,68,53)" fg:x="5672" fg:w="31"/><text x="67.9314%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="67.7554%" y="389" width="0.2265%" height="15" fill="rgb(218,193,48)" fg:x="5684" fg:w="19"/><text x="68.0745%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (15 samples, 0.18%)</title><rect x="67.8031%" y="373" width="0.1788%" height="15" fill="rgb(234,121,52)" fg:x="5688" fg:w="15"/><text x="68.1222%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="67.9461%" y="357" width="0.0358%" height="15" fill="rgb(227,218,49)" fg:x="5700" fg:w="3"/><text x="68.2652%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="67.9461%" y="341" width="0.0358%" height="15" fill="rgb(221,8,7)" fg:x="5700" fg:w="3"/><text x="68.2652%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.9700%" y="325" width="0.0119%" height="15" fill="rgb(217,151,36)" fg:x="5702" fg:w="1"/><text x="68.2891%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.9700%" y="309" width="0.0119%" height="15" fill="rgb(213,71,5)" fg:x="5702" fg:w="1"/><text x="68.2891%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.9700%" y="293" width="0.0119%" height="15" fill="rgb(225,145,43)" fg:x="5702" fg:w="1"/><text x="68.2891%" y="303.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="67.9700%" y="277" width="0.0119%" height="15" fill="rgb(235,118,19)" fg:x="5702" fg:w="1"/><text x="68.2891%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="67.9700%" y="261" width="0.0119%" height="15" fill="rgb(214,102,36)" fg:x="5702" fg:w="1"/><text x="68.2891%" y="271.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="67.9700%" y="245" width="0.0119%" height="15" fill="rgb(220,56,43)" fg:x="5702" fg:w="1"/><text x="68.2891%" y="255.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.9700%" y="229" width="0.0119%" height="15" fill="rgb(246,136,46)" fg:x="5702" fg:w="1"/><text x="68.2891%" y="239.50"/></g><g><title>&lt;helix_term::ui::editor::EditorView as helix_term::compositor::Component&gt;::handle_event (87 samples, 1.04%)</title><rect x="66.9806%" y="1013" width="1.0371%" height="15" fill="rgb(249,99,12)" fg:x="5619" fg:w="87"/><text x="67.2997%" y="1023.50"/></g><g><title>helix_term::ui::editor::EditorView::insert_mode (86 samples, 1.03%)</title><rect x="66.9925%" y="997" width="1.0252%" height="15" fill="rgb(224,31,42)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="1007.50"/></g><g><title>helix_term::commands::insert::insert_char (86 samples, 1.03%)</title><rect x="66.9925%" y="981" width="1.0252%" height="15" fill="rgb(208,96,21)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="991.50"/></g><g><title>helix_view::document::Document::apply (86 samples, 1.03%)</title><rect x="66.9925%" y="965" width="1.0252%" height="15" fill="rgb(237,229,7)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="975.50"/></g><g><title>helix_view::document::Document::apply_impl (86 samples, 1.03%)</title><rect x="66.9925%" y="949" width="1.0252%" height="15" fill="rgb(210,12,6)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="959.50"/></g><g><title>helix_core::syntax::LanguageLayer::update (86 samples, 1.03%)</title><rect x="66.9925%" y="933" width="1.0252%" height="15" fill="rgb(240,9,34)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="943.50"/></g><g><title>helix_core::syntax::LanguageLayer::parse (86 samples, 1.03%)</title><rect x="66.9925%" y="917" width="1.0252%" height="15" fill="rgb(211,68,37)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="927.50"/></g><g><title>ts_parser_parse (86 samples, 1.03%)</title><rect x="66.9925%" y="901" width="1.0252%" height="15" fill="rgb(249,138,50)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="911.50"/></g><g><title>tree_sitter_haskell_external_scanner_scan (86 samples, 1.03%)</title><rect x="66.9925%" y="885" width="1.0252%" height="15" fill="rgb(243,185,40)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="895.50"/></g><g><title>eval::eval (86 samples, 1.03%)</title><rect x="66.9925%" y="869" width="1.0252%" height="15" fill="rgb(242,92,35)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="879.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (86 samples, 1.03%)</title><rect x="66.9925%" y="853" width="1.0252%" height="15" fill="rgb(244,98,5)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="863.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (86 samples, 1.03%)</title><rect x="66.9925%" y="837" width="1.0252%" height="15" fill="rgb(228,186,29)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="847.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (86 samples, 1.03%)</title><rect x="66.9925%" y="821" width="1.0252%" height="15" fill="rgb(253,7,44)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="831.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (86 samples, 1.03%)</title><rect x="66.9925%" y="805" width="1.0252%" height="15" fill="rgb(216,11,45)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="815.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (86 samples, 1.03%)</title><rect x="66.9925%" y="789" width="1.0252%" height="15" fill="rgb(205,67,3)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="799.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (86 samples, 1.03%)</title><rect x="66.9925%" y="773" width="1.0252%" height="15" fill="rgb(250,18,3)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="783.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (86 samples, 1.03%)</title><rect x="66.9925%" y="757" width="1.0252%" height="15" fill="rgb(241,222,43)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (86 samples, 1.03%)</title><rect x="66.9925%" y="741" width="1.0252%" height="15" fill="rgb(233,115,3)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (86 samples, 1.03%)</title><rect x="66.9925%" y="725" width="1.0252%" height="15" fill="rgb(215,165,25)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (86 samples, 1.03%)</title><rect x="66.9925%" y="709" width="1.0252%" height="15" fill="rgb(234,179,6)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic), std::function&lt;Result (State&amp;)&gt; (*)(symbolic::Symbolic)&gt;::_M_invoke (86 samples, 1.03%)</title><rect x="66.9925%" y="693" width="1.0252%" height="15" fill="rgb(215,82,23)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="703.50"/></g><g><title>logic::symop (86 samples, 1.03%)</title><rect x="66.9925%" y="677" width="1.0252%" height="15" fill="rgb(211,47,18)" fg:x="5620" fg:w="86"/><text x="67.3116%" y="687.50"/></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (3 samples, 0.04%)</title><rect x="67.9819%" y="661" width="0.0358%" height="15" fill="rgb(248,17,9)" fg:x="5703" fg:w="3"/><text x="68.3010%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="67.9819%" y="645" width="0.0358%" height="15" fill="rgb(210,212,12)" fg:x="5703" fg:w="3"/><text x="68.3010%" y="655.50"/></g><g><title>parser::either (3 samples, 0.04%)</title><rect x="67.9819%" y="629" width="0.0358%" height="15" fill="rgb(230,135,45)" fg:x="5703" fg:w="3"/><text x="68.3010%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="67.9819%" y="613" width="0.0358%" height="15" fill="rgb(214,121,41)" fg:x="5703" fg:w="3"/><text x="68.3010%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="67.9819%" y="597" width="0.0358%" height="15" fill="rgb(239,165,45)" fg:x="5703" fg:w="3"/><text x="68.3010%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="67.9819%" y="581" width="0.0358%" height="15" fill="rgb(214,85,51)" fg:x="5703" fg:w="3"/><text x="68.3010%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="67.9819%" y="565" width="0.0358%" height="15" fill="rgb(223,90,27)" fg:x="5703" fg:w="3"/><text x="68.3010%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="67.9819%" y="549" width="0.0358%" height="15" fill="rgb(244,84,11)" fg:x="5703" fg:w="3"/><text x="68.3010%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="67.9819%" y="533" width="0.0358%" height="15" fill="rgb(253,41,47)" fg:x="5703" fg:w="3"/><text x="68.3010%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="67.9819%" y="517" width="0.0358%" height="15" fill="rgb(232,39,5)" fg:x="5703" fg:w="3"/><text x="68.3010%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="67.9819%" y="501" width="0.0358%" height="15" fill="rgb(211,93,4)" fg:x="5703" fg:w="3"/><text x="68.3010%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="67.9819%" y="485" width="0.0358%" height="15" fill="rgb(219,50,49)" fg:x="5703" fg:w="3"/><text x="68.3010%" y="495.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="67.9819%" y="469" width="0.0358%" height="15" fill="rgb(232,80,19)" fg:x="5703" fg:w="3"/><text x="68.3010%" y="479.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="67.9819%" y="453" width="0.0358%" height="15" fill="rgb(215,227,39)" fg:x="5703" fg:w="3"/><text x="68.3010%" y="463.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="67.9819%" y="437" width="0.0358%" height="15" fill="rgb(211,99,12)" fg:x="5703" fg:w="3"/><text x="68.3010%" y="447.50"/></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (3 samples, 0.04%)</title><rect x="68.0176%" y="917" width="0.0358%" height="15" fill="rgb(214,158,5)" fg:x="5706" fg:w="3"/><text x="68.3367%" y="927.50"/></g><g><title>once_cell::imp::initialize_inner (3 samples, 0.04%)</title><rect x="68.0176%" y="901" width="0.0358%" height="15" fill="rgb(242,19,53)" fg:x="5706" fg:w="3"/><text x="68.3367%" y="911.50"/></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (3 samples, 0.04%)</title><rect x="68.0176%" y="885" width="0.0358%" height="15" fill="rgb(208,18,20)" fg:x="5706" fg:w="3"/><text x="68.3367%" y="895.50"/></g><g><title>helix_core::syntax::LanguageConfiguration::initialize_highlight (3 samples, 0.04%)</title><rect x="68.0176%" y="869" width="0.0358%" height="15" fill="rgb(250,44,11)" fg:x="5706" fg:w="3"/><text x="68.3367%" y="879.50"/></g><g><title>helix_syntax::get_language (3 samples, 0.04%)</title><rect x="68.0176%" y="853" width="0.0358%" height="15" fill="rgb(238,159,13)" fg:x="5706" fg:w="3"/><text x="68.3367%" y="863.50"/></g><g><title>libloading::os::unix::Library::open (3 samples, 0.04%)</title><rect x="68.0176%" y="837" width="0.0358%" height="15" fill="rgb(231,74,18)" fg:x="5706" fg:w="3"/><text x="68.3367%" y="847.50"/></g><g><title>__dlopen_check (3 samples, 0.04%)</title><rect x="68.0176%" y="821" width="0.0358%" height="15" fill="rgb(229,219,45)" fg:x="5706" fg:w="3"/><text x="68.3367%" y="831.50"/></g><g><title>_dlerror_run (3 samples, 0.04%)</title><rect x="68.0176%" y="805" width="0.0358%" height="15" fill="rgb(210,221,1)" fg:x="5706" fg:w="3"/><text x="68.3367%" y="815.50"/></g><g><title>__GI__dl_catch_error (3 samples, 0.04%)</title><rect x="68.0176%" y="789" width="0.0358%" height="15" fill="rgb(209,60,51)" fg:x="5706" fg:w="3"/><text x="68.3367%" y="799.50"/></g><g><title>__GI__dl_catch_exception (3 samples, 0.04%)</title><rect x="68.0176%" y="773" width="0.0358%" height="15" fill="rgb(252,97,34)" fg:x="5706" fg:w="3"/><text x="68.3367%" y="783.50"/></g><g><title>dlopen_doit (3 samples, 0.04%)</title><rect x="68.0176%" y="757" width="0.0358%" height="15" fill="rgb(243,211,37)" fg:x="5706" fg:w="3"/><text x="68.3367%" y="767.50"/></g><g><title>_dl_open (3 samples, 0.04%)</title><rect x="68.0176%" y="741" width="0.0358%" height="15" fill="rgb(210,229,37)" fg:x="5706" fg:w="3"/><text x="68.3367%" y="751.50"/></g><g><title>__GI__dl_catch_exception (3 samples, 0.04%)</title><rect x="68.0176%" y="725" width="0.0358%" height="15" fill="rgb(220,208,43)" fg:x="5706" fg:w="3"/><text x="68.3367%" y="735.50"/></g><g><title>dl_open_worker (3 samples, 0.04%)</title><rect x="68.0176%" y="709" width="0.0358%" height="15" fill="rgb(218,118,50)" fg:x="5706" fg:w="3"/><text x="68.3367%" y="719.50"/></g><g><title>_dl_relocate_object (3 samples, 0.04%)</title><rect x="68.0176%" y="693" width="0.0358%" height="15" fill="rgb(254,169,52)" fg:x="5706" fg:w="3"/><text x="68.3367%" y="703.50"/></g><g><title>_dl_lookup_symbol_x (3 samples, 0.04%)</title><rect x="68.0176%" y="677" width="0.0358%" height="15" fill="rgb(221,214,37)" fg:x="5706" fg:w="3"/><text x="68.3367%" y="687.50"/></g><g><title>do_lookup_x (3 samples, 0.04%)</title><rect x="68.0176%" y="661" width="0.0358%" height="15" fill="rgb(254,186,32)" fg:x="5706" fg:w="3"/><text x="68.3367%" y="671.50"/></g><g><title>logic::immediate (1 samples, 0.01%)</title><rect x="68.0534%" y="757" width="0.0119%" height="15" fill="rgb(215,144,43)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="767.50"/></g><g><title>logic::layout_start (1 samples, 0.01%)</title><rect x="68.0534%" y="741" width="0.0119%" height="15" fill="rgb(252,21,46)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="751.50"/></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (1 samples, 0.01%)</title><rect x="68.0534%" y="725" width="0.0119%" height="15" fill="rgb(207,166,46)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="735.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="68.0534%" y="709" width="0.0119%" height="15" fill="rgb(253,37,49)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0534%" y="693" width="0.0119%" height="15" fill="rgb(222,97,20)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.0534%" y="677" width="0.0119%" height="15" fill="rgb(244,181,26)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0534%" y="661" width="0.0119%" height="15" fill="rgb(241,22,29)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.0534%" y="645" width="0.0119%" height="15" fill="rgb(206,200,43)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0534%" y="629" width="0.0119%" height="15" fill="rgb(226,224,43)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.0534%" y="613" width="0.0119%" height="15" fill="rgb(253,129,28)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0534%" y="597" width="0.0119%" height="15" fill="rgb(252,99,33)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.0534%" y="581" width="0.0119%" height="15" fill="rgb(208,123,45)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0534%" y="565" width="0.0119%" height="15" fill="rgb(251,106,12)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.0534%" y="549" width="0.0119%" height="15" fill="rgb(240,209,35)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0534%" y="533" width="0.0119%" height="15" fill="rgb(214,52,50)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.0534%" y="517" width="0.0119%" height="15" fill="rgb(234,119,4)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0534%" y="501" width="0.0119%" height="15" fill="rgb(228,181,36)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.0534%" y="485" width="0.0119%" height="15" fill="rgb(213,171,42)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0534%" y="469" width="0.0119%" height="15" fill="rgb(239,14,41)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.0534%" y="453" width="0.0119%" height="15" fill="rgb(239,111,46)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0534%" y="437" width="0.0119%" height="15" fill="rgb(214,72,7)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.0534%" y="421" width="0.0119%" height="15" fill="rgb(221,114,1)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0534%" y="405" width="0.0119%" height="15" fill="rgb(213,143,14)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="415.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0534%" y="389" width="0.0119%" height="15" fill="rgb(220,221,53)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="399.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="68.0534%" y="373" width="0.0119%" height="15" fill="rgb(236,189,27)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0534%" y="357" width="0.0119%" height="15" fill="rgb(252,139,49)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="367.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="68.0534%" y="341" width="0.0119%" height="15" fill="rgb(231,158,33)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0534%" y="325" width="0.0119%" height="15" fill="rgb(207,201,15)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="335.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.0534%" y="309" width="0.0119%" height="15" fill="rgb(218,43,48)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="319.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.0534%" y="293" width="0.0119%" height="15" fill="rgb(244,63,52)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="303.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="68.0534%" y="277" width="0.0119%" height="15" fill="rgb(236,60,17)" fg:x="5709" fg:w="1"/><text x="68.3725%" y="287.50"/></g><g><title>helix_term::commands::command_mode::_{{closure}} (5 samples, 0.06%)</title><rect x="68.0176%" y="997" width="0.0596%" height="15" fill="rgb(205,206,29)" fg:x="5706" fg:w="5"/><text x="68.3367%" y="1007.50"/></g><g><title>helix_term::commands::cmd::open (5 samples, 0.06%)</title><rect x="68.0176%" y="981" width="0.0596%" height="15" fill="rgb(205,209,35)" fg:x="5706" fg:w="5"/><text x="68.3367%" y="991.50"/></g><g><title>helix_view::editor::Editor::open (5 samples, 0.06%)</title><rect x="68.0176%" y="965" width="0.0596%" height="15" fill="rgb(227,112,14)" fg:x="5706" fg:w="5"/><text x="68.3367%" y="975.50"/></g><g><title>helix_view::document::Document::open (5 samples, 0.06%)</title><rect x="68.0176%" y="949" width="0.0596%" height="15" fill="rgb(248,151,9)" fg:x="5706" fg:w="5"/><text x="68.3367%" y="959.50"/></g><g><title>helix_view::document::Document::set_language (5 samples, 0.06%)</title><rect x="68.0176%" y="933" width="0.0596%" height="15" fill="rgb(247,45,40)" fg:x="5706" fg:w="5"/><text x="68.3367%" y="943.50"/></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="68.0534%" y="917" width="0.0238%" height="15" fill="rgb(232,185,16)" fg:x="5709" fg:w="2"/><text x="68.3725%" y="927.50"/></g><g><title>helix_core::syntax::LanguageLayer::parse (2 samples, 0.02%)</title><rect x="68.0534%" y="901" width="0.0238%" height="15" fill="rgb(215,45,44)" fg:x="5709" fg:w="2"/><text x="68.3725%" y="911.50"/></g><g><title>ts_parser_parse (2 samples, 0.02%)</title><rect x="68.0534%" y="885" width="0.0238%" height="15" fill="rgb(206,69,32)" fg:x="5709" fg:w="2"/><text x="68.3725%" y="895.50"/></g><g><title>tree_sitter_haskell_external_scanner_scan (2 samples, 0.02%)</title><rect x="68.0534%" y="869" width="0.0238%" height="15" fill="rgb(233,98,50)" fg:x="5709" fg:w="2"/><text x="68.3725%" y="879.50"/></g><g><title>eval::eval (2 samples, 0.02%)</title><rect x="68.0534%" y="853" width="0.0238%" height="15" fill="rgb(232,217,52)" fg:x="5709" fg:w="2"/><text x="68.3725%" y="863.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="68.0534%" y="837" width="0.0238%" height="15" fill="rgb(250,42,51)" fg:x="5709" fg:w="2"/><text x="68.3725%" y="847.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="68.0534%" y="821" width="0.0238%" height="15" fill="rgb(241,200,26)" fg:x="5709" fg:w="2"/><text x="68.3725%" y="831.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="68.0534%" y="805" width="0.0238%" height="15" fill="rgb(207,10,32)" fg:x="5709" fg:w="2"/><text x="68.3725%" y="815.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="68.0534%" y="789" width="0.0238%" height="15" fill="rgb(214,63,15)" fg:x="5709" fg:w="2"/><text x="68.3725%" y="799.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;Result (State&amp;)&gt; (*)(unsigned int)&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="68.0534%" y="773" width="0.0238%" height="15" fill="rgb(234,176,14)" fg:x="5709" fg:w="2"/><text x="68.3725%" y="783.50"/></g><g><title>logic::newline (1 samples, 0.01%)</title><rect x="68.0653%" y="757" width="0.0119%" height="15" fill="rgb(226,104,52)" fg:x="5710" fg:w="1"/><text x="68.3844%" y="767.50"/></g><g><title>logic::newline_token (1 samples, 0.01%)</title><rect x="68.0653%" y="741" width="0.0119%" height="15" fill="rgb(211,222,1)" fg:x="5710" fg:w="1"/><text x="68.3844%" y="751.50"/></g><g><title>logic::newline_where (1 samples, 0.01%)</title><rect x="68.0653%" y="725" width="0.0119%" height="15" fill="rgb(237,7,3)" fg:x="5710" fg:w="1"/><text x="68.3844%" y="735.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0653%" y="709" width="0.0119%" height="15" fill="rgb(218,143,7)" fg:x="5710" fg:w="1"/><text x="68.3844%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0653%" y="693" width="0.0119%" height="15" fill="rgb(208,25,22)" fg:x="5710" fg:w="1"/><text x="68.3844%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0653%" y="677" width="0.0119%" height="15" fill="rgb(228,127,16)" fg:x="5710" fg:w="1"/><text x="68.3844%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0653%" y="661" width="0.0119%" height="15" fill="rgb(237,86,27)" fg:x="5710" fg:w="1"/><text x="68.3844%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0653%" y="645" width="0.0119%" height="15" fill="rgb(207,125,19)" fg:x="5710" fg:w="1"/><text x="68.3844%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0653%" y="629" width="0.0119%" height="15" fill="rgb(243,195,0)" fg:x="5710" fg:w="1"/><text x="68.3844%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0653%" y="613" width="0.0119%" height="15" fill="rgb(230,95,18)" fg:x="5710" fg:w="1"/><text x="68.3844%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.0653%" y="597" width="0.0119%" height="15" fill="rgb(232,157,21)" fg:x="5710" fg:w="1"/><text x="68.3844%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="68.0653%" y="581" width="0.0119%" height="15" fill="rgb(212,120,50)" fg:x="5710" fg:w="1"/><text x="68.3844%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="68.0653%" y="565" width="0.0119%" height="15" fill="rgb(222,204,44)" fg:x="5710" fg:w="1"/><text x="68.3844%" y="575.50"/></g><g><title>helix_term::application::Application::handle_terminal_events (93 samples, 1.11%)</title><rect x="66.9806%" y="1045" width="1.1086%" height="15" fill="rgb(236,6,33)" fg:x="5619" fg:w="93"/><text x="67.2997%" y="1055.50"/></g><g><title>helix_term::compositor::Compositor::handle_event (93 samples, 1.11%)</title><rect x="66.9806%" y="1029" width="1.1086%" height="15" fill="rgb(247,11,38)" fg:x="5619" fg:w="93"/><text x="67.2997%" y="1039.50"/></g><g><title>&lt;helix_term::ui::prompt::Prompt as helix_term::compositor::Component&gt;::handle_event (6 samples, 0.07%)</title><rect x="68.0176%" y="1013" width="0.0715%" height="15" fill="rgb(215,111,0)" fg:x="5706" fg:w="6"/><text x="68.3367%" y="1023.50"/></g><g><title>helix_term::ui::prompt::Prompt::insert_char (1 samples, 0.01%)</title><rect x="68.0772%" y="997" width="0.0119%" height="15" fill="rgb(211,65,46)" fg:x="5711" fg:w="1"/><text x="68.3963%" y="1007.50"/></g><g><title>helix_term::commands::command_mode::_{{closure}} (1 samples, 0.01%)</title><rect x="68.0772%" y="981" width="0.0119%" height="15" fill="rgb(216,5,12)" fg:x="5711" fg:w="1"/><text x="68.3963%" y="991.50"/></g><g><title>helix_term::ui::completers::filename (1 samples, 0.01%)</title><rect x="68.0772%" y="965" width="0.0119%" height="15" fill="rgb(226,7,2)" fg:x="5711" fg:w="1"/><text x="68.3963%" y="975.50"/></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="68.0772%" y="949" width="0.0119%" height="15" fill="rgb(242,116,12)" fg:x="5711" fg:w="1"/><text x="68.3963%" y="959.50"/></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="68.0772%" y="933" width="0.0119%" height="15" fill="rgb(249,209,7)" fg:x="5711" fg:w="1"/><text x="68.3963%" y="943.50"/></g><g><title>ignore::walk::Walk::skip_entry (1 samples, 0.01%)</title><rect x="68.0772%" y="917" width="0.0119%" height="15" fill="rgb(232,73,17)" fg:x="5711" fg:w="1"/><text x="68.3963%" y="927.50"/></g><g><title>ignore::walk::should_skip_entry (1 samples, 0.01%)</title><rect x="68.0772%" y="901" width="0.0119%" height="15" fill="rgb(214,13,32)" fg:x="5711" fg:w="1"/><text x="68.3963%" y="911.50"/></g><g><title>ignore::dir::Ignore::matched_dir_entry (1 samples, 0.01%)</title><rect x="68.0772%" y="885" width="0.0119%" height="15" fill="rgb(221,125,10)" fg:x="5711" fg:w="1"/><text x="68.3963%" y="895.50"/></g><g><title>std::path::Path::_join (1 samples, 0.01%)</title><rect x="68.0772%" y="869" width="0.0119%" height="15" fill="rgb(246,7,44)" fg:x="5711" fg:w="1"/><text x="68.3963%" y="879.50"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="68.0772%" y="853" width="0.0119%" height="15" fill="rgb(239,18,35)" fg:x="5711" fg:w="1"/><text x="68.3963%" y="863.50"/></g><g><title>parser::layout_end (1 samples, 0.01%)</title><rect x="68.0892%" y="645" width="0.0119%" height="15" fill="rgb(250,222,16)" fg:x="5712" fg:w="1"/><text x="68.4083%" y="655.50"/></g><g><title>std::function&lt;void (State&amp;)&gt;::function&lt;std::function&lt;Result (State&amp;)&gt;, void, void&gt; (1 samples, 0.01%)</title><rect x="68.0892%" y="629" width="0.0119%" height="15" fill="rgb(219,100,8)" fg:x="5712" fg:w="1"/><text x="68.4083%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1011%" y="597" width="0.0119%" height="15" fill="rgb(240,62,13)" fg:x="5713" fg:w="1"/><text x="68.4202%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.1011%" y="581" width="0.0119%" height="15" fill="rgb(253,194,2)" fg:x="5713" fg:w="1"/><text x="68.4202%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1011%" y="565" width="0.0119%" height="15" fill="rgb(235,58,31)" fg:x="5713" fg:w="1"/><text x="68.4202%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.1011%" y="549" width="0.0119%" height="15" fill="rgb(231,37,11)" fg:x="5713" fg:w="1"/><text x="68.4202%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1011%" y="533" width="0.0119%" height="15" fill="rgb(235,133,0)" fg:x="5713" fg:w="1"/><text x="68.4202%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.1011%" y="517" width="0.0119%" height="15" fill="rgb(212,185,40)" fg:x="5713" fg:w="1"/><text x="68.4202%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.1011%" y="501" width="0.0119%" height="15" fill="rgb(216,68,42)" fg:x="5713" fg:w="1"/><text x="68.4202%" y="511.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="68.1011%" y="485" width="0.0119%" height="15" fill="rgb(239,81,4)" fg:x="5713" fg:w="1"/><text x="68.4202%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.1011%" y="629" width="0.0238%" height="15" fill="rgb(206,86,6)" fg:x="5713" fg:w="2"/><text x="68.4202%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="68.1011%" y="613" width="0.0238%" height="15" fill="rgb(249,95,27)" fg:x="5713" fg:w="2"/><text x="68.4202%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1130%" y="597" width="0.0119%" height="15" fill="rgb(205,155,45)" fg:x="5714" fg:w="1"/><text x="68.4321%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.1130%" y="581" width="0.0119%" height="15" fill="rgb(213,55,42)" fg:x="5714" fg:w="1"/><text x="68.4321%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.1130%" y="565" width="0.0119%" height="15" fill="rgb(249,197,4)" fg:x="5714" fg:w="1"/><text x="68.4321%" y="575.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="68.1130%" y="549" width="0.0119%" height="15" fill="rgb(212,128,32)" fg:x="5714" fg:w="1"/><text x="68.4321%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1249%" y="597" width="0.0119%" height="15" fill="rgb(252,47,30)" fg:x="5715" fg:w="1"/><text x="68.4440%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.1249%" y="581" width="0.0119%" height="15" fill="rgb(209,79,18)" fg:x="5715" fg:w="1"/><text x="68.4440%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1368%" y="565" width="0.0119%" height="15" fill="rgb(225,81,38)" fg:x="5716" fg:w="1"/><text x="68.4559%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1368%" y="549" width="0.0119%" height="15" fill="rgb(205,95,16)" fg:x="5716" fg:w="1"/><text x="68.4559%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.1368%" y="533" width="0.0119%" height="15" fill="rgb(214,30,4)" fg:x="5716" fg:w="1"/><text x="68.4559%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.1368%" y="517" width="0.0119%" height="15" fill="rgb(232,137,22)" fg:x="5716" fg:w="1"/><text x="68.4559%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.1488%" y="549" width="0.0119%" height="15" fill="rgb(232,156,19)" fg:x="5717" fg:w="1"/><text x="68.4679%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.1488%" y="533" width="0.0119%" height="15" fill="rgb(248,157,26)" fg:x="5717" fg:w="1"/><text x="68.4679%" y="543.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="68.1488%" y="517" width="0.0119%" height="15" fill="rgb(242,24,3)" fg:x="5717" fg:w="1"/><text x="68.4679%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1607%" y="501" width="0.0119%" height="15" fill="rgb(218,195,48)" fg:x="5718" fg:w="1"/><text x="68.4798%" y="511.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1607%" y="485" width="0.0119%" height="15" fill="rgb(214,193,36)" fg:x="5718" fg:w="1"/><text x="68.4798%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.1607%" y="469" width="0.0119%" height="15" fill="rgb(242,110,40)" fg:x="5718" fg:w="1"/><text x="68.4798%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1607%" y="453" width="0.0119%" height="15" fill="rgb(233,150,26)" fg:x="5718" fg:w="1"/><text x="68.4798%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.1607%" y="437" width="0.0119%" height="15" fill="rgb(239,200,30)" fg:x="5718" fg:w="1"/><text x="68.4798%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1607%" y="421" width="0.0119%" height="15" fill="rgb(226,28,11)" fg:x="5718" fg:w="1"/><text x="68.4798%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.1607%" y="405" width="0.0119%" height="15" fill="rgb(220,26,48)" fg:x="5718" fg:w="1"/><text x="68.4798%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.1607%" y="389" width="0.0119%" height="15" fill="rgb(232,10,11)" fg:x="5718" fg:w="1"/><text x="68.4798%" y="399.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="68.1607%" y="373" width="0.0119%" height="15" fill="rgb(252,143,50)" fg:x="5718" fg:w="1"/><text x="68.4798%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="68.1488%" y="565" width="0.0358%" height="15" fill="rgb(206,58,22)" fg:x="5717" fg:w="3"/><text x="68.4679%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="68.1607%" y="549" width="0.0238%" height="15" fill="rgb(250,9,45)" fg:x="5718" fg:w="2"/><text x="68.4798%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.1607%" y="533" width="0.0238%" height="15" fill="rgb(225,148,14)" fg:x="5718" fg:w="2"/><text x="68.4798%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="68.1607%" y="517" width="0.0238%" height="15" fill="rgb(205,178,40)" fg:x="5718" fg:w="2"/><text x="68.4798%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1726%" y="501" width="0.0119%" height="15" fill="rgb(215,201,4)" fg:x="5719" fg:w="1"/><text x="68.4917%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.1726%" y="485" width="0.0119%" height="15" fill="rgb(219,223,24)" fg:x="5719" fg:w="1"/><text x="68.4917%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1726%" y="469" width="0.0119%" height="15" fill="rgb(217,19,31)" fg:x="5719" fg:w="1"/><text x="68.4917%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.1726%" y="453" width="0.0119%" height="15" fill="rgb(235,33,3)" fg:x="5719" fg:w="1"/><text x="68.4917%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1726%" y="437" width="0.0119%" height="15" fill="rgb(221,39,18)" fg:x="5719" fg:w="1"/><text x="68.4917%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.1726%" y="421" width="0.0119%" height="15" fill="rgb(242,162,33)" fg:x="5719" fg:w="1"/><text x="68.4917%" y="431.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.1726%" y="405" width="0.0119%" height="15" fill="rgb(233,215,28)" fg:x="5719" fg:w="1"/><text x="68.4917%" y="415.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="68.1726%" y="389" width="0.0119%" height="15" fill="rgb(212,117,9)" fg:x="5719" fg:w="1"/><text x="68.4917%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1845%" y="469" width="0.0119%" height="15" fill="rgb(237,70,47)" fg:x="5720" fg:w="1"/><text x="68.5036%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.1845%" y="453" width="0.0119%" height="15" fill="rgb(206,177,13)" fg:x="5720" fg:w="1"/><text x="68.5036%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1845%" y="437" width="0.0119%" height="15" fill="rgb(209,174,33)" fg:x="5720" fg:w="1"/><text x="68.5036%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.1845%" y="421" width="0.0119%" height="15" fill="rgb(226,6,11)" fg:x="5720" fg:w="1"/><text x="68.5036%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1845%" y="405" width="0.0119%" height="15" fill="rgb(240,214,6)" fg:x="5720" fg:w="1"/><text x="68.5036%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.1845%" y="389" width="0.0119%" height="15" fill="rgb(254,214,40)" fg:x="5720" fg:w="1"/><text x="68.5036%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.1845%" y="373" width="0.0119%" height="15" fill="rgb(230,187,15)" fg:x="5720" fg:w="1"/><text x="68.5036%" y="383.50"/></g><g><title>parser::operator+ (9 samples, 0.11%)</title><rect x="68.1011%" y="645" width="0.1073%" height="15" fill="rgb(250,11,27)" fg:x="5713" fg:w="9"/><text x="68.4202%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="68.1249%" y="629" width="0.0834%" height="15" fill="rgb(243,107,19)" fg:x="5715" fg:w="7"/><text x="68.4440%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="68.1249%" y="613" width="0.0834%" height="15" fill="rgb(253,66,26)" fg:x="5715" fg:w="7"/><text x="68.4440%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="68.1368%" y="597" width="0.0715%" height="15" fill="rgb(228,43,8)" fg:x="5716" fg:w="6"/><text x="68.4559%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="68.1368%" y="581" width="0.0715%" height="15" fill="rgb(232,197,36)" fg:x="5716" fg:w="6"/><text x="68.4559%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.1845%" y="565" width="0.0238%" height="15" fill="rgb(221,182,31)" fg:x="5720" fg:w="2"/><text x="68.5036%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="68.1845%" y="549" width="0.0238%" height="15" fill="rgb(244,25,36)" fg:x="5720" fg:w="2"/><text x="68.5036%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.1845%" y="533" width="0.0238%" height="15" fill="rgb(247,101,19)" fg:x="5720" fg:w="2"/><text x="68.5036%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="68.1845%" y="517" width="0.0238%" height="15" fill="rgb(223,117,19)" fg:x="5720" fg:w="2"/><text x="68.5036%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.1845%" y="501" width="0.0238%" height="15" fill="rgb(249,63,38)" fg:x="5720" fg:w="2"/><text x="68.5036%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="68.1845%" y="485" width="0.0238%" height="15" fill="rgb(220,143,23)" fg:x="5720" fg:w="2"/><text x="68.5036%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1964%" y="469" width="0.0119%" height="15" fill="rgb(252,183,22)" fg:x="5721" fg:w="1"/><text x="68.5155%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.1964%" y="453" width="0.0119%" height="15" fill="rgb(243,176,15)" fg:x="5721" fg:w="1"/><text x="68.5155%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1964%" y="437" width="0.0119%" height="15" fill="rgb(244,204,46)" fg:x="5721" fg:w="1"/><text x="68.5155%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.1964%" y="421" width="0.0119%" height="15" fill="rgb(227,28,54)" fg:x="5721" fg:w="1"/><text x="68.5155%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1964%" y="405" width="0.0119%" height="15" fill="rgb(231,10,15)" fg:x="5721" fg:w="1"/><text x="68.5155%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.1964%" y="389" width="0.0119%" height="15" fill="rgb(210,200,17)" fg:x="5721" fg:w="1"/><text x="68.5155%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1964%" y="373" width="0.0119%" height="15" fill="rgb(251,106,46)" fg:x="5721" fg:w="1"/><text x="68.5155%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.1964%" y="357" width="0.0119%" height="15" fill="rgb(218,211,15)" fg:x="5721" fg:w="1"/><text x="68.5155%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.1964%" y="341" width="0.0119%" height="15" fill="rgb(239,62,10)" fg:x="5721" fg:w="1"/><text x="68.5155%" y="351.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.1964%" y="325" width="0.0119%" height="15" fill="rgb(225,53,53)" fg:x="5721" fg:w="1"/><text x="68.5155%" y="335.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.1964%" y="309" width="0.0119%" height="15" fill="rgb(207,16,24)" fg:x="5721" fg:w="1"/><text x="68.5155%" y="319.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="68.2084%" y="629" width="0.0119%" height="15" fill="rgb(217,52,28)" fg:x="5722" fg:w="1"/><text x="68.5275%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.2203%" y="613" width="0.0119%" height="15" fill="rgb(246,1,5)" fg:x="5723" fg:w="1"/><text x="68.5394%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.2203%" y="597" width="0.0119%" height="15" fill="rgb(221,29,26)" fg:x="5723" fg:w="1"/><text x="68.5394%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.2203%" y="581" width="0.0119%" height="15" fill="rgb(250,133,32)" fg:x="5723" fg:w="1"/><text x="68.5394%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.2203%" y="565" width="0.0119%" height="15" fill="rgb(236,63,16)" fg:x="5723" fg:w="1"/><text x="68.5394%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.2203%" y="629" width="0.0238%" height="15" fill="rgb(231,159,14)" fg:x="5723" fg:w="2"/><text x="68.5394%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.2322%" y="613" width="0.0119%" height="15" fill="rgb(207,102,36)" fg:x="5724" fg:w="1"/><text x="68.5513%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.2322%" y="597" width="0.0119%" height="15" fill="rgb(230,224,31)" fg:x="5724" fg:w="1"/><text x="68.5513%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.2322%" y="581" width="0.0119%" height="15" fill="rgb(215,182,16)" fg:x="5724" fg:w="1"/><text x="68.5513%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="68.2322%" y="565" width="0.0119%" height="15" fill="rgb(226,113,2)" fg:x="5724" fg:w="1"/><text x="68.5513%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="68.2441%" y="581" width="0.0119%" height="15" fill="rgb(241,18,35)" fg:x="5725" fg:w="1"/><text x="68.5632%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="68.2441%" y="565" width="0.0119%" height="15" fill="rgb(240,165,44)" fg:x="5725" fg:w="1"/><text x="68.5632%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.2560%" y="581" width="0.0119%" height="15" fill="rgb(229,130,47)" fg:x="5726" fg:w="1"/><text x="68.5751%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.2560%" y="565" width="0.0119%" height="15" fill="rgb(223,93,7)" fg:x="5726" fg:w="1"/><text x="68.5751%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.2560%" y="549" width="0.0119%" height="15" fill="rgb(205,180,36)" fg:x="5726" fg:w="1"/><text x="68.5751%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.2560%" y="533" width="0.0119%" height="15" fill="rgb(221,103,28)" fg:x="5726" fg:w="1"/><text x="68.5751%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.2560%" y="517" width="0.0119%" height="15" fill="rgb(212,4,3)" fg:x="5726" fg:w="1"/><text x="68.5751%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="68.2560%" y="501" width="0.0119%" height="15" fill="rgb(209,221,53)" fg:x="5726" fg:w="1"/><text x="68.5751%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="68.2560%" y="485" width="0.0119%" height="15" fill="rgb(233,229,52)" fg:x="5726" fg:w="1"/><text x="68.5751%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.2680%" y="565" width="0.0119%" height="15" fill="rgb(254,127,37)" fg:x="5727" fg:w="1"/><text x="68.5871%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.2680%" y="549" width="0.0119%" height="15" fill="rgb(207,161,26)" fg:x="5727" fg:w="1"/><text x="68.5871%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="68.2680%" y="533" width="0.0119%" height="15" fill="rgb(223,75,5)" fg:x="5727" fg:w="1"/><text x="68.5871%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.2680%" y="581" width="0.0238%" height="15" fill="rgb(235,115,52)" fg:x="5727" fg:w="2"/><text x="68.5871%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.2799%" y="565" width="0.0119%" height="15" fill="rgb(240,91,46)" fg:x="5728" fg:w="1"/><text x="68.5990%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.2799%" y="549" width="0.0119%" height="15" fill="rgb(251,144,21)" fg:x="5728" fg:w="1"/><text x="68.5990%" y="559.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.2799%" y="533" width="0.0119%" height="15" fill="rgb(247,220,47)" fg:x="5728" fg:w="1"/><text x="68.5990%" y="543.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="68.2799%" y="517" width="0.0119%" height="15" fill="rgb(253,122,1)" fg:x="5728" fg:w="1"/><text x="68.5990%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="68.2441%" y="597" width="0.0596%" height="15" fill="rgb(221,0,24)" fg:x="5725" fg:w="5"/><text x="68.5632%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.2918%" y="581" width="0.0119%" height="15" fill="rgb(220,204,54)" fg:x="5729" fg:w="1"/><text x="68.6109%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="68.2918%" y="565" width="0.0119%" height="15" fill="rgb(205,96,25)" fg:x="5729" fg:w="1"/><text x="68.6109%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="68.2918%" y="549" width="0.0119%" height="15" fill="rgb(247,77,20)" fg:x="5729" fg:w="1"/><text x="68.6109%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3037%" y="581" width="0.0119%" height="15" fill="rgb(245,151,8)" fg:x="5730" fg:w="1"/><text x="68.6228%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3037%" y="565" width="0.0119%" height="15" fill="rgb(242,158,39)" fg:x="5730" fg:w="1"/><text x="68.6228%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3037%" y="549" width="0.0119%" height="15" fill="rgb(222,214,50)" fg:x="5730" fg:w="1"/><text x="68.6228%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3037%" y="533" width="0.0119%" height="15" fill="rgb(229,60,39)" fg:x="5730" fg:w="1"/><text x="68.6228%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3037%" y="517" width="0.0119%" height="15" fill="rgb(240,148,18)" fg:x="5730" fg:w="1"/><text x="68.6228%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3037%" y="501" width="0.0119%" height="15" fill="rgb(215,96,11)" fg:x="5730" fg:w="1"/><text x="68.6228%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3157%" y="533" width="0.0119%" height="15" fill="rgb(238,162,53)" fg:x="5731" fg:w="1"/><text x="68.6348%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3157%" y="517" width="0.0119%" height="15" fill="rgb(214,83,18)" fg:x="5731" fg:w="1"/><text x="68.6348%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="68.3157%" y="501" width="0.0119%" height="15" fill="rgb(248,117,24)" fg:x="5731" fg:w="1"/><text x="68.6348%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="68.3157%" y="485" width="0.0119%" height="15" fill="rgb(238,190,6)" fg:x="5731" fg:w="1"/><text x="68.6348%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="68.2084%" y="645" width="0.1311%" height="15" fill="rgb(213,51,6)" fg:x="5722" fg:w="11"/><text x="68.5275%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="68.2441%" y="629" width="0.0954%" height="15" fill="rgb(212,136,1)" fg:x="5725" fg:w="8"/><text x="68.5632%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="68.2441%" y="613" width="0.0954%" height="15" fill="rgb(221,192,14)" fg:x="5725" fg:w="8"/><text x="68.5632%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="68.3037%" y="597" width="0.0358%" height="15" fill="rgb(244,38,54)" fg:x="5730" fg:w="3"/><text x="68.6228%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.3157%" y="581" width="0.0238%" height="15" fill="rgb(240,45,28)" fg:x="5731" fg:w="2"/><text x="68.6348%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.3157%" y="565" width="0.0238%" height="15" fill="rgb(240,123,12)" fg:x="5731" fg:w="2"/><text x="68.6348%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.3157%" y="549" width="0.0238%" height="15" fill="rgb(216,14,30)" fg:x="5731" fg:w="2"/><text x="68.6348%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3276%" y="533" width="0.0119%" height="15" fill="rgb(212,50,24)" fg:x="5732" fg:w="1"/><text x="68.6467%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3276%" y="517" width="0.0119%" height="15" fill="rgb(253,229,47)" fg:x="5732" fg:w="1"/><text x="68.6467%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3276%" y="501" width="0.0119%" height="15" fill="rgb(214,26,17)" fg:x="5732" fg:w="1"/><text x="68.6467%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3276%" y="485" width="0.0119%" height="15" fill="rgb(252,60,11)" fg:x="5732" fg:w="1"/><text x="68.6467%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3276%" y="469" width="0.0119%" height="15" fill="rgb(209,59,37)" fg:x="5732" fg:w="1"/><text x="68.6467%" y="479.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="68.3276%" y="453" width="0.0119%" height="15" fill="rgb(228,126,53)" fg:x="5732" fg:w="1"/><text x="68.6467%" y="463.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="68.3276%" y="437" width="0.0119%" height="15" fill="rgb(233,99,2)" fg:x="5732" fg:w="1"/><text x="68.6467%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3395%" y="597" width="0.0119%" height="15" fill="rgb(217,106,34)" fg:x="5733" fg:w="1"/><text x="68.6586%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.3395%" y="581" width="0.0119%" height="15" fill="rgb(222,46,19)" fg:x="5733" fg:w="1"/><text x="68.6586%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3395%" y="565" width="0.0119%" height="15" fill="rgb(251,87,31)" fg:x="5733" fg:w="1"/><text x="68.6586%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.3395%" y="549" width="0.0119%" height="15" fill="rgb(213,70,51)" fg:x="5733" fg:w="1"/><text x="68.6586%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3395%" y="533" width="0.0119%" height="15" fill="rgb(229,144,18)" fg:x="5733" fg:w="1"/><text x="68.6586%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.3395%" y="517" width="0.0119%" height="15" fill="rgb(254,60,26)" fg:x="5733" fg:w="1"/><text x="68.6586%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3395%" y="501" width="0.0119%" height="15" fill="rgb(243,127,51)" fg:x="5733" fg:w="1"/><text x="68.6586%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.3395%" y="485" width="0.0119%" height="15" fill="rgb(221,51,25)" fg:x="5733" fg:w="1"/><text x="68.6586%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3395%" y="469" width="0.0119%" height="15" fill="rgb(205,42,7)" fg:x="5733" fg:w="1"/><text x="68.6586%" y="479.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3395%" y="453" width="0.0119%" height="15" fill="rgb(236,177,48)" fg:x="5733" fg:w="1"/><text x="68.6586%" y="463.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="68.3395%" y="437" width="0.0119%" height="15" fill="rgb(226,79,31)" fg:x="5733" fg:w="1"/><text x="68.6586%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (23 samples, 0.27%)</title><rect x="68.0892%" y="773" width="0.2742%" height="15" fill="rgb(216,170,12)" fg:x="5712" fg:w="23"/><text x="68.4083%" y="783.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (23 samples, 0.27%)</title><rect x="68.0892%" y="757" width="0.2742%" height="15" fill="rgb(208,62,51)" fg:x="5712" fg:w="23"/><text x="68.4083%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (23 samples, 0.27%)</title><rect x="68.0892%" y="741" width="0.2742%" height="15" fill="rgb(254,129,9)" fg:x="5712" fg:w="23"/><text x="68.4083%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (23 samples, 0.27%)</title><rect x="68.0892%" y="725" width="0.2742%" height="15" fill="rgb(243,209,31)" fg:x="5712" fg:w="23"/><text x="68.4083%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (23 samples, 0.27%)</title><rect x="68.0892%" y="709" width="0.2742%" height="15" fill="rgb(213,159,23)" fg:x="5712" fg:w="23"/><text x="68.4083%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (23 samples, 0.27%)</title><rect x="68.0892%" y="693" width="0.2742%" height="15" fill="rgb(249,77,39)" fg:x="5712" fg:w="23"/><text x="68.4083%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic), std::function&lt;Result (State&amp;)&gt; (*)(symbolic::Symbolic)&gt;::_M_invoke (23 samples, 0.27%)</title><rect x="68.0892%" y="677" width="0.2742%" height="15" fill="rgb(230,13,33)" fg:x="5712" fg:w="23"/><text x="68.4083%" y="687.50"/></g><g><title>logic::symop (23 samples, 0.27%)</title><rect x="68.0892%" y="661" width="0.2742%" height="15" fill="rgb(215,215,7)" fg:x="5712" fg:w="23"/><text x="68.4083%" y="671.50"/></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (2 samples, 0.02%)</title><rect x="68.3395%" y="645" width="0.0238%" height="15" fill="rgb(222,92,25)" fg:x="5733" fg:w="2"/><text x="68.6586%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="68.3395%" y="629" width="0.0238%" height="15" fill="rgb(215,173,22)" fg:x="5733" fg:w="2"/><text x="68.6586%" y="639.50"/></g><g><title>parser::either (2 samples, 0.02%)</title><rect x="68.3395%" y="613" width="0.0238%" height="15" fill="rgb(247,205,52)" fg:x="5733" fg:w="2"/><text x="68.6586%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3514%" y="597" width="0.0119%" height="15" fill="rgb(240,210,37)" fg:x="5734" fg:w="1"/><text x="68.6705%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.3514%" y="581" width="0.0119%" height="15" fill="rgb(224,13,10)" fg:x="5734" fg:w="1"/><text x="68.6705%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.3514%" y="565" width="0.0119%" height="15" fill="rgb(209,48,33)" fg:x="5734" fg:w="1"/><text x="68.6705%" y="575.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="68.3514%" y="549" width="0.0119%" height="15" fill="rgb(228,219,23)" fg:x="5734" fg:w="1"/><text x="68.6705%" y="559.50"/></g><g><title>logic::initialize (1 samples, 0.01%)</title><rect x="68.3633%" y="741" width="0.0119%" height="15" fill="rgb(239,46,49)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="751.50"/></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (1 samples, 0.01%)</title><rect x="68.3633%" y="725" width="0.0119%" height="15" fill="rgb(206,172,51)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="735.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="68.3633%" y="709" width="0.0119%" height="15" fill="rgb(213,212,35)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="719.50"/></g><g><title>parser::either (1 samples, 0.01%)</title><rect x="68.3633%" y="693" width="0.0119%" height="15" fill="rgb(252,40,27)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3633%" y="677" width="0.0119%" height="15" fill="rgb(212,33,41)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.3633%" y="661" width="0.0119%" height="15" fill="rgb(232,160,27)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3633%" y="645" width="0.0119%" height="15" fill="rgb(244,160,20)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.3633%" y="629" width="0.0119%" height="15" fill="rgb(205,66,20)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3633%" y="613" width="0.0119%" height="15" fill="rgb(236,158,6)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.3633%" y="597" width="0.0119%" height="15" fill="rgb(232,25,36)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3633%" y="581" width="0.0119%" height="15" fill="rgb(220,153,35)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.3633%" y="565" width="0.0119%" height="15" fill="rgb(216,5,8)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3633%" y="549" width="0.0119%" height="15" fill="rgb(240,97,3)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.3633%" y="533" width="0.0119%" height="15" fill="rgb(220,99,26)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3633%" y="517" width="0.0119%" height="15" fill="rgb(237,96,2)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.3633%" y="501" width="0.0119%" height="15" fill="rgb(217,197,47)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3633%" y="485" width="0.0119%" height="15" fill="rgb(252,133,54)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.3633%" y="469" width="0.0119%" height="15" fill="rgb(233,37,30)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3633%" y="453" width="0.0119%" height="15" fill="rgb(239,182,12)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.3633%" y="437" width="0.0119%" height="15" fill="rgb(245,83,39)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3633%" y="421" width="0.0119%" height="15" fill="rgb(222,109,36)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.3633%" y="405" width="0.0119%" height="15" fill="rgb(237,95,44)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3633%" y="389" width="0.0119%" height="15" fill="rgb(216,36,54)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="399.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.3633%" y="373" width="0.0119%" height="15" fill="rgb(236,164,3)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3633%" y="357" width="0.0119%" height="15" fill="rgb(223,15,21)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.3633%" y="341" width="0.0119%" height="15" fill="rgb(239,191,12)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="351.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.3633%" y="325" width="0.0119%" height="15" fill="rgb(231,191,37)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="335.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="68.3633%" y="309" width="0.0119%" height="15" fill="rgb(209,155,36)" fg:x="5735" fg:w="1"/><text x="68.6824%" y="319.50"/></g><g><title>parser::finish_if_valid (1 samples, 0.01%)</title><rect x="68.3753%" y="693" width="0.0119%" height="15" fill="rgb(216,222,49)" fg:x="5736" fg:w="1"/><text x="68.6944%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="68.3753%" y="677" width="0.0119%" height="15" fill="rgb(218,181,2)" fg:x="5736" fg:w="1"/><text x="68.6944%" y="687.50"/></g><g><title>parser::either (1 samples, 0.01%)</title><rect x="68.3753%" y="661" width="0.0119%" height="15" fill="rgb(239,125,9)" fg:x="5736" fg:w="1"/><text x="68.6944%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3753%" y="645" width="0.0119%" height="15" fill="rgb(233,103,7)" fg:x="5736" fg:w="1"/><text x="68.6944%" y="655.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="68.3753%" y="629" width="0.0119%" height="15" fill="rgb(209,223,5)" fg:x="5736" fg:w="1"/><text x="68.6944%" y="639.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="68.3753%" y="613" width="0.0119%" height="15" fill="rgb(234,71,27)" fg:x="5736" fg:w="1"/><text x="68.6944%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3872%" y="677" width="0.0119%" height="15" fill="rgb(251,202,16)" fg:x="5737" fg:w="1"/><text x="68.7063%" y="687.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3872%" y="661" width="0.0119%" height="15" fill="rgb(231,180,0)" fg:x="5737" fg:w="1"/><text x="68.7063%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3872%" y="645" width="0.0119%" height="15" fill="rgb(223,58,28)" fg:x="5737" fg:w="1"/><text x="68.7063%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.3872%" y="629" width="0.0119%" height="15" fill="rgb(250,34,24)" fg:x="5737" fg:w="1"/><text x="68.7063%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="68.3872%" y="613" width="0.0119%" height="15" fill="rgb(235,24,16)" fg:x="5737" fg:w="1"/><text x="68.7063%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="68.3991%" y="677" width="0.0119%" height="15" fill="rgb(219,28,33)" fg:x="5738" fg:w="1"/><text x="68.7182%" y="687.50"/></g><g><title>parser::either (1 samples, 0.01%)</title><rect x="68.3991%" y="661" width="0.0119%" height="15" fill="rgb(228,150,43)" fg:x="5738" fg:w="1"/><text x="68.7182%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.3991%" y="645" width="0.0119%" height="15" fill="rgb(221,228,36)" fg:x="5738" fg:w="1"/><text x="68.7182%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.3991%" y="629" width="0.0119%" height="15" fill="rgb(232,116,17)" fg:x="5738" fg:w="1"/><text x="68.7182%" y="639.50"/></g><g><title>parser::end_or_semicolon (4 samples, 0.05%)</title><rect x="68.3753%" y="709" width="0.0477%" height="15" fill="rgb(220,110,51)" fg:x="5736" fg:w="4"/><text x="68.6944%" y="719.50"/></g><g><title>parser::layout_end (3 samples, 0.04%)</title><rect x="68.3872%" y="693" width="0.0358%" height="15" fill="rgb(207,26,25)" fg:x="5737" fg:w="3"/><text x="68.7063%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.4110%" y="677" width="0.0119%" height="15" fill="rgb(223,58,19)" fg:x="5739" fg:w="1"/><text x="68.7301%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.4110%" y="661" width="0.0119%" height="15" fill="rgb(234,125,39)" fg:x="5739" fg:w="1"/><text x="68.7301%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.4110%" y="645" width="0.0119%" height="15" fill="rgb(241,48,36)" fg:x="5739" fg:w="1"/><text x="68.7301%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.4110%" y="629" width="0.0119%" height="15" fill="rgb(217,148,51)" fg:x="5739" fg:w="1"/><text x="68.7301%" y="639.50"/></g><g><title>parser::operator+ (1 samples, 0.01%)</title><rect x="68.4229%" y="709" width="0.0119%" height="15" fill="rgb(247,17,25)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.4229%" y="693" width="0.0119%" height="15" fill="rgb(219,89,38)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.4229%" y="677" width="0.0119%" height="15" fill="rgb(220,145,2)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.4229%" y="661" width="0.0119%" height="15" fill="rgb(244,66,47)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.4229%" y="645" width="0.0119%" height="15" fill="rgb(226,182,5)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.4229%" y="629" width="0.0119%" height="15" fill="rgb(211,98,20)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.4229%" y="613" width="0.0119%" height="15" fill="rgb(217,103,52)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.4229%" y="597" width="0.0119%" height="15" fill="rgb(208,125,52)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.4229%" y="581" width="0.0119%" height="15" fill="rgb(244,70,13)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.4229%" y="565" width="0.0119%" height="15" fill="rgb(253,124,3)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.4229%" y="549" width="0.0119%" height="15" fill="rgb(222,145,32)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.4229%" y="533" width="0.0119%" height="15" fill="rgb(232,183,47)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.4229%" y="517" width="0.0119%" height="15" fill="rgb(246,226,4)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.4229%" y="501" width="0.0119%" height="15" fill="rgb(228,185,46)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.4229%" y="485" width="0.0119%" height="15" fill="rgb(213,196,4)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.4229%" y="469" width="0.0119%" height="15" fill="rgb(212,2,45)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.4229%" y="453" width="0.0119%" height="15" fill="rgb(217,145,50)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.4229%" y="437" width="0.0119%" height="15" fill="rgb(242,10,46)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.4229%" y="421" width="0.0119%" height="15" fill="rgb(252,91,48)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="431.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="68.4229%" y="405" width="0.0119%" height="15" fill="rgb(216,72,13)" fg:x="5740" fg:w="1"/><text x="68.7420%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.4349%" y="453" width="0.0119%" height="15" fill="rgb(219,6,37)" fg:x="5741" fg:w="1"/><text x="68.7540%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.4349%" y="437" width="0.0119%" height="15" fill="rgb(236,185,40)" fg:x="5741" fg:w="1"/><text x="68.7540%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.4349%" y="421" width="0.0119%" height="15" fill="rgb(208,81,48)" fg:x="5741" fg:w="1"/><text x="68.7540%" y="431.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="68.4349%" y="405" width="0.0119%" height="15" fill="rgb(211,42,33)" fg:x="5741" fg:w="1"/><text x="68.7540%" y="415.50"/></g><g><title>helix_term::ui::editor::EditorView::handle_keymap_event (31 samples, 0.37%)</title><rect x="68.0892%" y="981" width="0.3695%" height="15" fill="rgb(211,90,39)" fg:x="5712" fg:w="31"/><text x="68.4083%" y="991.50"/></g><g><title>helix_term::commands::open (31 samples, 0.37%)</title><rect x="68.0892%" y="965" width="0.3695%" height="15" fill="rgb(218,136,12)" fg:x="5712" fg:w="31"/><text x="68.4083%" y="975.50"/></g><g><title>helix_view::document::Document::apply (31 samples, 0.37%)</title><rect x="68.0892%" y="949" width="0.3695%" height="15" fill="rgb(234,12,32)" fg:x="5712" fg:w="31"/><text x="68.4083%" y="959.50"/></g><g><title>helix_view::document::Document::apply_impl (31 samples, 0.37%)</title><rect x="68.0892%" y="933" width="0.3695%" height="15" fill="rgb(221,164,18)" fg:x="5712" fg:w="31"/><text x="68.4083%" y="943.50"/></g><g><title>helix_core::syntax::LanguageLayer::update (31 samples, 0.37%)</title><rect x="68.0892%" y="917" width="0.3695%" height="15" fill="rgb(239,135,14)" fg:x="5712" fg:w="31"/><text x="68.4083%" y="927.50"/></g><g><title>helix_core::syntax::LanguageLayer::parse (31 samples, 0.37%)</title><rect x="68.0892%" y="901" width="0.3695%" height="15" fill="rgb(226,198,47)" fg:x="5712" fg:w="31"/><text x="68.4083%" y="911.50"/></g><g><title>ts_parser_parse (31 samples, 0.37%)</title><rect x="68.0892%" y="885" width="0.3695%" height="15" fill="rgb(244,121,47)" fg:x="5712" fg:w="31"/><text x="68.4083%" y="895.50"/></g><g><title>tree_sitter_haskell_external_scanner_scan (31 samples, 0.37%)</title><rect x="68.0892%" y="869" width="0.3695%" height="15" fill="rgb(226,21,48)" fg:x="5712" fg:w="31"/><text x="68.4083%" y="879.50"/></g><g><title>eval::eval (31 samples, 0.37%)</title><rect x="68.0892%" y="853" width="0.3695%" height="15" fill="rgb(215,178,47)" fg:x="5712" fg:w="31"/><text x="68.4083%" y="863.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (31 samples, 0.37%)</title><rect x="68.0892%" y="837" width="0.3695%" height="15" fill="rgb(206,212,19)" fg:x="5712" fg:w="31"/><text x="68.4083%" y="847.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (31 samples, 0.37%)</title><rect x="68.0892%" y="821" width="0.3695%" height="15" fill="rgb(230,104,34)" fg:x="5712" fg:w="31"/><text x="68.4083%" y="831.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (31 samples, 0.37%)</title><rect x="68.0892%" y="805" width="0.3695%" height="15" fill="rgb(210,96,51)" fg:x="5712" fg:w="31"/><text x="68.4083%" y="815.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (31 samples, 0.37%)</title><rect x="68.0892%" y="789" width="0.3695%" height="15" fill="rgb(229,111,47)" fg:x="5712" fg:w="31"/><text x="68.4083%" y="799.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;Result (State&amp;)&gt; (*)(unsigned int)&gt;::_M_invoke (8 samples, 0.10%)</title><rect x="68.3633%" y="773" width="0.0954%" height="15" fill="rgb(218,174,45)" fg:x="5735" fg:w="8"/><text x="68.6824%" y="783.50"/></g><g><title>logic::newline (8 samples, 0.10%)</title><rect x="68.3633%" y="757" width="0.0954%" height="15" fill="rgb(215,21,32)" fg:x="5735" fg:w="8"/><text x="68.6824%" y="767.50"/></g><g><title>logic::newline_token (7 samples, 0.08%)</title><rect x="68.3753%" y="741" width="0.0834%" height="15" fill="rgb(235,72,21)" fg:x="5736" fg:w="7"/><text x="68.6944%" y="751.50"/></g><g><title>logic::newline_where (7 samples, 0.08%)</title><rect x="68.3753%" y="725" width="0.0834%" height="15" fill="rgb(250,113,30)" fg:x="5736" fg:w="7"/><text x="68.6944%" y="735.50"/></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (2 samples, 0.02%)</title><rect x="68.4349%" y="709" width="0.0238%" height="15" fill="rgb(244,136,34)" fg:x="5741" fg:w="2"/><text x="68.7540%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="68.4349%" y="693" width="0.0238%" height="15" fill="rgb(213,226,47)" fg:x="5741" fg:w="2"/><text x="68.7540%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.4349%" y="677" width="0.0238%" height="15" fill="rgb(224,136,40)" fg:x="5741" fg:w="2"/><text x="68.7540%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="68.4349%" y="661" width="0.0238%" height="15" fill="rgb(253,124,12)" fg:x="5741" fg:w="2"/><text x="68.7540%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.4349%" y="645" width="0.0238%" height="15" fill="rgb(210,67,8)" fg:x="5741" fg:w="2"/><text x="68.7540%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="68.4349%" y="629" width="0.0238%" height="15" fill="rgb(210,204,0)" fg:x="5741" fg:w="2"/><text x="68.7540%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.4349%" y="613" width="0.0238%" height="15" fill="rgb(217,179,22)" fg:x="5741" fg:w="2"/><text x="68.7540%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="68.4349%" y="597" width="0.0238%" height="15" fill="rgb(237,192,33)" fg:x="5741" fg:w="2"/><text x="68.7540%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.4349%" y="581" width="0.0238%" height="15" fill="rgb(211,104,28)" fg:x="5741" fg:w="2"/><text x="68.7540%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="68.4349%" y="565" width="0.0238%" height="15" fill="rgb(214,75,30)" fg:x="5741" fg:w="2"/><text x="68.7540%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.4349%" y="549" width="0.0238%" height="15" fill="rgb(220,227,12)" fg:x="5741" fg:w="2"/><text x="68.7540%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="68.4349%" y="533" width="0.0238%" height="15" fill="rgb(233,134,28)" fg:x="5741" fg:w="2"/><text x="68.7540%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.4349%" y="517" width="0.0238%" height="15" fill="rgb(215,146,24)" fg:x="5741" fg:w="2"/><text x="68.7540%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="68.4349%" y="501" width="0.0238%" height="15" fill="rgb(248,227,20)" fg:x="5741" fg:w="2"/><text x="68.7540%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.4349%" y="485" width="0.0238%" height="15" fill="rgb(250,44,42)" fg:x="5741" fg:w="2"/><text x="68.7540%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="68.4349%" y="469" width="0.0238%" height="15" fill="rgb(219,5,35)" fg:x="5741" fg:w="2"/><text x="68.7540%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.4468%" y="453" width="0.0119%" height="15" fill="rgb(241,132,32)" fg:x="5742" fg:w="1"/><text x="68.7659%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.4468%" y="437" width="0.0119%" height="15" fill="rgb(234,212,51)" fg:x="5742" fg:w="1"/><text x="68.7659%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.4468%" y="421" width="0.0119%" height="15" fill="rgb(242,173,29)" fg:x="5742" fg:w="1"/><text x="68.7659%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.4468%" y="405" width="0.0119%" height="15" fill="rgb(212,159,2)" fg:x="5742" fg:w="1"/><text x="68.7659%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.4468%" y="389" width="0.0119%" height="15" fill="rgb(238,165,31)" fg:x="5742" fg:w="1"/><text x="68.7659%" y="399.50"/></g><g><title>cond::sym (1 samples, 0.01%)</title><rect x="68.4945%" y="613" width="0.0119%" height="15" fill="rgb(241,57,36)" fg:x="5746" fg:w="1"/><text x="68.8136%" y="623.50"/></g><g><title>parser::sym (2 samples, 0.02%)</title><rect x="68.4945%" y="629" width="0.0238%" height="15" fill="rgb(249,7,4)" fg:x="5746" fg:w="2"/><text x="68.8136%" y="639.50"/></g><g><title>parser::iff (1 samples, 0.01%)</title><rect x="68.5064%" y="613" width="0.0119%" height="15" fill="rgb(250,137,44)" fg:x="5747" fg:w="1"/><text x="68.8255%" y="623.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.5064%" y="597" width="0.0119%" height="15" fill="rgb(244,185,1)" fg:x="5747" fg:w="1"/><text x="68.8255%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.5064%" y="581" width="0.0119%" height="15" fill="rgb(216,5,53)" fg:x="5747" fg:w="1"/><text x="68.8255%" y="591.50"/></g><g><title>parser::either (1 samples, 0.01%)</title><rect x="68.5183%" y="613" width="0.0119%" height="15" fill="rgb(234,89,21)" fg:x="5748" fg:w="1"/><text x="68.8374%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.5183%" y="597" width="0.0119%" height="15" fill="rgb(250,81,43)" fg:x="5748" fg:w="1"/><text x="68.8374%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.5183%" y="581" width="0.0119%" height="15" fill="rgb(243,132,11)" fg:x="5748" fg:w="1"/><text x="68.8374%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.5183%" y="565" width="0.0119%" height="15" fill="rgb(253,159,28)" fg:x="5748" fg:w="1"/><text x="68.8374%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="68.5302%" y="597" width="0.0119%" height="15" fill="rgb(237,167,34)" fg:x="5749" fg:w="1"/><text x="68.8493%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="68.5302%" y="581" width="0.0119%" height="15" fill="rgb(237,16,50)" fg:x="5749" fg:w="1"/><text x="68.8493%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.5302%" y="613" width="0.0238%" height="15" fill="rgb(247,125,2)" fg:x="5749" fg:w="2"/><text x="68.8493%" y="623.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="68.5421%" y="597" width="0.0119%" height="15" fill="rgb(254,35,3)" fg:x="5750" fg:w="1"/><text x="68.8612%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (10 samples, 0.12%)</title><rect x="68.5183%" y="629" width="0.1192%" height="15" fill="rgb(237,209,21)" fg:x="5748" fg:w="10"/><text x="68.8374%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function&lt;std::function&lt;Result (State)&gt;, void, void&gt; (7 samples, 0.08%)</title><rect x="68.5541%" y="613" width="0.0834%" height="15" fill="rgb(224,122,20)" fg:x="5751" fg:w="7"/><text x="68.8732%" y="623.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="68.5898%" y="597" width="0.0477%" height="15" fill="rgb(224,11,46)" fg:x="5754" fg:w="4"/><text x="68.9089%" y="607.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="68.5898%" y="581" width="0.0477%" height="15" fill="rgb(248,21,33)" fg:x="5754" fg:w="4"/><text x="68.9089%" y="591.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="68.6017%" y="565" width="0.0358%" height="15" fill="rgb(222,144,7)" fg:x="5755" fg:w="3"/><text x="68.9208%" y="575.50"/></g><g><title>parser::finish_if_valid (13 samples, 0.15%)</title><rect x="68.4945%" y="645" width="0.1550%" height="15" fill="rgb(205,141,37)" fg:x="5746" fg:w="13"/><text x="68.8136%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.6375%" y="629" width="0.0119%" height="15" fill="rgb(237,130,8)" fg:x="5758" fg:w="1"/><text x="68.9566%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="68.6375%" y="613" width="0.0119%" height="15" fill="rgb(209,179,39)" fg:x="5758" fg:w="1"/><text x="68.9566%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="68.6375%" y="597" width="0.0119%" height="15" fill="rgb(207,52,17)" fg:x="5758" fg:w="1"/><text x="68.9566%" y="607.50"/></g><g><title>parser::effect (1 samples, 0.01%)</title><rect x="68.6494%" y="629" width="0.0119%" height="15" fill="rgb(253,158,17)" fg:x="5759" fg:w="1"/><text x="68.9685%" y="639.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.6494%" y="613" width="0.0119%" height="15" fill="rgb(208,19,53)" fg:x="5759" fg:w="1"/><text x="68.9685%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.6494%" y="597" width="0.0119%" height="15" fill="rgb(233,152,13)" fg:x="5759" fg:w="1"/><text x="68.9685%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.6494%" y="581" width="0.0119%" height="15" fill="rgb(231,84,1)" fg:x="5759" fg:w="1"/><text x="68.9685%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.6494%" y="565" width="0.0119%" height="15" fill="rgb(229,142,48)" fg:x="5759" fg:w="1"/><text x="68.9685%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.6494%" y="549" width="0.0119%" height="15" fill="rgb(248,70,29)" fg:x="5759" fg:w="1"/><text x="68.9685%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.6494%" y="533" width="0.0119%" height="15" fill="rgb(250,85,7)" fg:x="5759" fg:w="1"/><text x="68.9685%" y="543.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="68.6613%" y="581" width="0.0238%" height="15" fill="rgb(235,140,43)" fg:x="5760" fg:w="2"/><text x="68.9804%" y="591.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="68.6613%" y="565" width="0.0238%" height="15" fill="rgb(216,0,5)" fg:x="5760" fg:w="2"/><text x="68.9804%" y="575.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="68.6613%" y="549" width="0.0238%" height="15" fill="rgb(223,167,29)" fg:x="5760" fg:w="2"/><text x="68.9804%" y="559.50"/></g><g><title>parser::operator+ (3 samples, 0.04%)</title><rect x="68.6613%" y="629" width="0.0358%" height="15" fill="rgb(229,150,33)" fg:x="5760" fg:w="3"/><text x="68.9804%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="68.6613%" y="613" width="0.0358%" height="15" fill="rgb(227,26,52)" fg:x="5760" fg:w="3"/><text x="68.9804%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="68.6613%" y="597" width="0.0358%" height="15" fill="rgb(250,60,52)" fg:x="5760" fg:w="3"/><text x="68.9804%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.6852%" y="581" width="0.0119%" height="15" fill="rgb(228,81,46)" fg:x="5762" fg:w="1"/><text x="69.0043%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.6852%" y="565" width="0.0119%" height="15" fill="rgb(225,218,31)" fg:x="5762" fg:w="1"/><text x="69.0043%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.6852%" y="549" width="0.0119%" height="15" fill="rgb(230,35,16)" fg:x="5762" fg:w="1"/><text x="69.0043%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.6852%" y="533" width="0.0119%" height="15" fill="rgb(247,100,0)" fg:x="5762" fg:w="1"/><text x="69.0043%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.6852%" y="517" width="0.0119%" height="15" fill="rgb(223,135,11)" fg:x="5762" fg:w="1"/><text x="69.0043%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.6852%" y="501" width="0.0119%" height="15" fill="rgb(207,136,0)" fg:x="5762" fg:w="1"/><text x="69.0043%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.6971%" y="581" width="0.0119%" height="15" fill="rgb(246,131,25)" fg:x="5763" fg:w="1"/><text x="69.0162%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="68.6971%" y="565" width="0.0119%" height="15" fill="rgb(209,47,12)" fg:x="5763" fg:w="1"/><text x="69.0162%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="68.6971%" y="549" width="0.0119%" height="15" fill="rgb(221,25,16)" fg:x="5763" fg:w="1"/><text x="69.0162%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="68.7090%" y="565" width="0.0119%" height="15" fill="rgb(223,164,33)" fg:x="5764" fg:w="1"/><text x="69.0281%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="68.6971%" y="629" width="0.0358%" height="15" fill="rgb(220,26,23)" fg:x="5763" fg:w="3"/><text x="69.0162%" y="639.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="68.6971%" y="613" width="0.0358%" height="15" fill="rgb(231,224,1)" fg:x="5763" fg:w="3"/><text x="69.0162%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="68.6971%" y="597" width="0.0358%" height="15" fill="rgb(229,221,24)" fg:x="5763" fg:w="3"/><text x="69.0162%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.7090%" y="581" width="0.0238%" height="15" fill="rgb(213,34,10)" fg:x="5764" fg:w="2"/><text x="69.0281%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="68.7209%" y="565" width="0.0119%" height="15" fill="rgb(215,33,11)" fg:x="5765" fg:w="1"/><text x="69.0400%" y="575.50"/></g><g><title>parser::either (1 samples, 0.01%)</title><rect x="68.7329%" y="613" width="0.0119%" height="15" fill="rgb(216,20,41)" fg:x="5766" fg:w="1"/><text x="69.0520%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.7329%" y="597" width="0.0119%" height="15" fill="rgb(228,43,31)" fg:x="5766" fg:w="1"/><text x="69.0520%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.7329%" y="581" width="0.0119%" height="15" fill="rgb(227,83,26)" fg:x="5766" fg:w="1"/><text x="69.0520%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.7329%" y="565" width="0.0119%" height="15" fill="rgb(217,168,19)" fg:x="5766" fg:w="1"/><text x="69.0520%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="68.7448%" y="597" width="0.0119%" height="15" fill="rgb(231,34,33)" fg:x="5767" fg:w="1"/><text x="69.0639%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.7448%" y="581" width="0.0119%" height="15" fill="rgb(230,120,51)" fg:x="5767" fg:w="1"/><text x="69.0639%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.7567%" y="597" width="0.0238%" height="15" fill="rgb(215,138,27)" fg:x="5768" fg:w="2"/><text x="69.0758%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="68.7686%" y="581" width="0.0119%" height="15" fill="rgb(246,80,47)" fg:x="5769" fg:w="1"/><text x="69.0877%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="68.7686%" y="565" width="0.0119%" height="15" fill="rgb(215,57,53)" fg:x="5769" fg:w="1"/><text x="69.0877%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="68.7448%" y="613" width="0.0477%" height="15" fill="rgb(229,137,5)" fg:x="5767" fg:w="4"/><text x="69.0639%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.7805%" y="597" width="0.0119%" height="15" fill="rgb(210,86,2)" fg:x="5770" fg:w="1"/><text x="69.0996%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.7805%" y="581" width="0.0119%" height="15" fill="rgb(231,226,51)" fg:x="5770" fg:w="1"/><text x="69.0996%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.7805%" y="565" width="0.0119%" height="15" fill="rgb(216,62,29)" fg:x="5770" fg:w="1"/><text x="69.0996%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.7805%" y="549" width="0.0119%" height="15" fill="rgb(248,202,3)" fg:x="5770" fg:w="1"/><text x="69.0996%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.7805%" y="533" width="0.0119%" height="15" fill="rgb(225,181,7)" fg:x="5770" fg:w="1"/><text x="69.0996%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="68.7805%" y="517" width="0.0119%" height="15" fill="rgb(247,170,54)" fg:x="5770" fg:w="1"/><text x="69.0996%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.7805%" y="501" width="0.0119%" height="15" fill="rgb(236,204,33)" fg:x="5770" fg:w="1"/><text x="69.0996%" y="511.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (6 samples, 0.07%)</title><rect x="68.7329%" y="629" width="0.0715%" height="15" fill="rgb(216,45,30)" fg:x="5766" fg:w="6"/><text x="69.0520%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.7925%" y="613" width="0.0119%" height="15" fill="rgb(213,203,16)" fg:x="5771" fg:w="1"/><text x="69.1116%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="68.7925%" y="597" width="0.0119%" height="15" fill="rgb(215,46,16)" fg:x="5771" fg:w="1"/><text x="69.1116%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="68.7925%" y="581" width="0.0119%" height="15" fill="rgb(217,162,46)" fg:x="5771" fg:w="1"/><text x="69.1116%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="68.8044%" y="613" width="0.0119%" height="15" fill="rgb(224,189,20)" fg:x="5772" fg:w="1"/><text x="69.1235%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="68.8163%" y="597" width="0.0119%" height="15" fill="rgb(232,35,51)" fg:x="5773" fg:w="1"/><text x="69.1354%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="68.8163%" y="581" width="0.0119%" height="15" fill="rgb(243,221,46)" fg:x="5773" fg:w="1"/><text x="69.1354%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="68.8044%" y="629" width="0.0358%" height="15" fill="rgb(248,16,16)" fg:x="5772" fg:w="3"/><text x="69.1235%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="68.8163%" y="613" width="0.0238%" height="15" fill="rgb(220,168,13)" fg:x="5773" fg:w="2"/><text x="69.1354%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.8282%" y="597" width="0.0119%" height="15" fill="rgb(243,102,39)" fg:x="5774" fg:w="1"/><text x="69.1473%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="68.8282%" y="581" width="0.0119%" height="15" fill="rgb(245,82,32)" fg:x="5774" fg:w="1"/><text x="69.1473%" y="591.50"/></g><g><title>parser::layout_end (19 samples, 0.23%)</title><rect x="68.6494%" y="645" width="0.2265%" height="15" fill="rgb(230,164,19)" fg:x="5759" fg:w="19"/><text x="68.9685%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="68.8401%" y="629" width="0.0358%" height="15" fill="rgb(221,9,41)" fg:x="5775" fg:w="3"/><text x="69.1592%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="68.8401%" y="613" width="0.0358%" height="15" fill="rgb(216,93,0)" fg:x="5775" fg:w="3"/><text x="69.1592%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="68.8401%" y="597" width="0.0358%" height="15" fill="rgb(235,113,9)" fg:x="5775" fg:w="3"/><text x="69.1592%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="68.8401%" y="581" width="0.0358%" height="15" fill="rgb(209,224,10)" fg:x="5775" fg:w="3"/><text x="69.1592%" y="591.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="68.8401%" y="565" width="0.0358%" height="15" fill="rgb(226,54,34)" fg:x="5775" fg:w="3"/><text x="69.1592%" y="575.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="68.8401%" y="549" width="0.0358%" height="15" fill="rgb(222,60,8)" fg:x="5775" fg:w="3"/><text x="69.1592%" y="559.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="68.8521%" y="533" width="0.0238%" height="15" fill="rgb(248,228,41)" fg:x="5776" fg:w="2"/><text x="69.1712%" y="543.50"/></g><g><title>parser::effect (1 samples, 0.01%)</title><rect x="68.8878%" y="629" width="0.0119%" height="15" fill="rgb(226,31,32)" fg:x="5779" fg:w="1"/><text x="69.2069%" y="639.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="68.8878%" y="613" width="0.0119%" height="15" fill="rgb(242,132,49)" fg:x="5779" fg:w="1"/><text x="69.2069%" y="623.50"/></g><g><title>parser::mark (3 samples, 0.04%)</title><rect x="68.8759%" y="645" width="0.0358%" height="15" fill="rgb(224,194,19)" fg:x="5778" fg:w="3"/><text x="69.1950%" y="655.50"/></g><g><title>state::mark (1 samples, 0.01%)</title><rect x="68.8997%" y="629" width="0.0119%" height="15" fill="rgb(232,200,51)" fg:x="5780" fg:w="1"/><text x="69.2188%" y="639.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="68.8997%" y="613" width="0.0119%" height="15" fill="rgb(235,60,46)" fg:x="5780" fg:w="1"/><text x="69.2188%" y="623.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="68.8997%" y="597" width="0.0119%" height="15" fill="rgb(240,109,52)" fg:x="5780" fg:w="1"/><text x="69.2188%" y="607.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="68.9832%" y="629" width="0.0715%" height="15" fill="rgb(215,78,37)" fg:x="5787" fg:w="6"/><text x="69.3023%" y="639.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="68.9832%" y="613" width="0.0715%" height="15" fill="rgb(225,141,7)" fg:x="5787" fg:w="6"/><text x="69.3023%" y="623.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="68.9951%" y="597" width="0.0596%" height="15" fill="rgb(216,102,54)" fg:x="5788" fg:w="5"/><text x="69.3142%" y="607.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="69.0547%" y="613" width="0.0358%" height="15" fill="rgb(238,143,13)" fg:x="5793" fg:w="3"/><text x="69.3738%" y="623.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="69.0666%" y="597" width="0.0238%" height="15" fill="rgb(219,45,51)" fg:x="5794" fg:w="2"/><text x="69.3857%" y="607.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="69.0786%" y="581" width="0.0119%" height="15" fill="rgb(242,105,46)" fg:x="5795" fg:w="1"/><text x="69.3977%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="69.0905%" y="581" width="0.0119%" height="15" fill="rgb(206,154,49)" fg:x="5796" fg:w="1"/><text x="69.4096%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="69.0905%" y="565" width="0.0119%" height="15" fill="rgb(239,215,4)" fg:x="5796" fg:w="1"/><text x="69.4096%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="69.1024%" y="565" width="0.0715%" height="15" fill="rgb(238,82,17)" fg:x="5797" fg:w="6"/><text x="69.4215%" y="575.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="69.1024%" y="549" width="0.0715%" height="15" fill="rgb(242,49,30)" fg:x="5797" fg:w="6"/><text x="69.4215%" y="559.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="69.1024%" y="533" width="0.0715%" height="15" fill="rgb(248,5,16)" fg:x="5797" fg:w="6"/><text x="69.4215%" y="543.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="69.1143%" y="517" width="0.0596%" height="15" fill="rgb(237,138,32)" fg:x="5798" fg:w="5"/><text x="69.4334%" y="527.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="69.1739%" y="517" width="0.0596%" height="15" fill="rgb(235,79,45)" fg:x="5803" fg:w="5"/><text x="69.4930%" y="527.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="69.1739%" y="501" width="0.0596%" height="15" fill="rgb(213,105,25)" fg:x="5803" fg:w="5"/><text x="69.4930%" y="511.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="69.1739%" y="485" width="0.0596%" height="15" fill="rgb(251,131,7)" fg:x="5803" fg:w="5"/><text x="69.4930%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="69.2335%" y="501" width="0.0238%" height="15" fill="rgb(211,155,7)" fg:x="5808" fg:w="2"/><text x="69.5526%" y="511.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="69.2335%" y="485" width="0.0238%" height="15" fill="rgb(243,70,15)" fg:x="5808" fg:w="2"/><text x="69.5526%" y="495.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="69.2335%" y="469" width="0.0238%" height="15" fill="rgb(215,171,2)" fg:x="5808" fg:w="2"/><text x="69.5526%" y="479.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="69.2335%" y="453" width="0.0238%" height="15" fill="rgb(244,121,35)" fg:x="5808" fg:w="2"/><text x="69.5526%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="69.2574%" y="485" width="0.0119%" height="15" fill="rgb(249,147,17)" fg:x="5810" fg:w="1"/><text x="69.5765%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="69.2574%" y="469" width="0.0119%" height="15" fill="rgb(241,193,52)" fg:x="5810" fg:w="1"/><text x="69.5765%" y="479.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="69.2574%" y="453" width="0.0119%" height="15" fill="rgb(217,159,39)" fg:x="5810" fg:w="1"/><text x="69.5765%" y="463.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="69.2574%" y="437" width="0.0119%" height="15" fill="rgb(248,110,0)" fg:x="5810" fg:w="1"/><text x="69.5765%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (15 samples, 0.18%)</title><rect x="69.1024%" y="581" width="0.1788%" height="15" fill="rgb(233,227,0)" fg:x="5797" fg:w="15"/><text x="69.4215%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="69.1739%" y="565" width="0.1073%" height="15" fill="rgb(252,55,2)" fg:x="5803" fg:w="9"/><text x="69.4930%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="69.1739%" y="549" width="0.1073%" height="15" fill="rgb(224,194,24)" fg:x="5803" fg:w="9"/><text x="69.4930%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="69.1739%" y="533" width="0.1073%" height="15" fill="rgb(247,5,33)" fg:x="5803" fg:w="9"/><text x="69.4930%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="69.2335%" y="517" width="0.0477%" height="15" fill="rgb(242,66,47)" fg:x="5808" fg:w="4"/><text x="69.5526%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="69.2574%" y="501" width="0.0238%" height="15" fill="rgb(213,107,12)" fg:x="5810" fg:w="2"/><text x="69.5765%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="69.2693%" y="485" width="0.0119%" height="15" fill="rgb(206,131,1)" fg:x="5811" fg:w="1"/><text x="69.5884%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="69.0905%" y="597" width="0.2026%" height="15" fill="rgb(214,9,36)" fg:x="5796" fg:w="17"/><text x="69.4096%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="69.2812%" y="581" width="0.0119%" height="15" fill="rgb(251,215,18)" fg:x="5812" fg:w="1"/><text x="69.6003%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="69.2812%" y="565" width="0.0119%" height="15" fill="rgb(251,64,9)" fg:x="5812" fg:w="1"/><text x="69.6003%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="69.2812%" y="549" width="0.0119%" height="15" fill="rgb(235,68,21)" fg:x="5812" fg:w="1"/><text x="69.6003%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="69.2812%" y="533" width="0.0119%" height="15" fill="rgb(240,69,38)" fg:x="5812" fg:w="1"/><text x="69.6003%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="69.2931%" y="597" width="0.0119%" height="15" fill="rgb(231,18,27)" fg:x="5813" fg:w="1"/><text x="69.6122%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="69.2931%" y="581" width="0.0119%" height="15" fill="rgb(215,154,25)" fg:x="5813" fg:w="1"/><text x="69.6122%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="69.2931%" y="565" width="0.0119%" height="15" fill="rgb(224,33,46)" fg:x="5813" fg:w="1"/><text x="69.6122%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="69.3050%" y="565" width="0.0358%" height="15" fill="rgb(248,191,53)" fg:x="5814" fg:w="3"/><text x="69.6241%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="69.3170%" y="549" width="0.0238%" height="15" fill="rgb(231,3,37)" fg:x="5815" fg:w="2"/><text x="69.6361%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="69.3170%" y="533" width="0.0238%" height="15" fill="rgb(209,152,2)" fg:x="5815" fg:w="2"/><text x="69.6361%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="69.3170%" y="517" width="0.0238%" height="15" fill="rgb(212,208,43)" fg:x="5815" fg:w="2"/><text x="69.6361%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="69.3170%" y="501" width="0.0238%" height="15" fill="rgb(208,60,49)" fg:x="5815" fg:w="2"/><text x="69.6361%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="69.3170%" y="485" width="0.0238%" height="15" fill="rgb(245,135,6)" fg:x="5815" fg:w="2"/><text x="69.6361%" y="495.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="69.3170%" y="469" width="0.0238%" height="15" fill="rgb(243,86,23)" fg:x="5815" fg:w="2"/><text x="69.6361%" y="479.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="69.3170%" y="453" width="0.0238%" height="15" fill="rgb(223,7,20)" fg:x="5815" fg:w="2"/><text x="69.6361%" y="463.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="69.3289%" y="437" width="0.0119%" height="15" fill="rgb(212,182,17)" fg:x="5816" fg:w="1"/><text x="69.6480%" y="447.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="69.3408%" y="549" width="0.0715%" height="15" fill="rgb(237,94,50)" fg:x="5817" fg:w="6"/><text x="69.6599%" y="559.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="69.3408%" y="533" width="0.0715%" height="15" fill="rgb(232,185,44)" fg:x="5817" fg:w="6"/><text x="69.6599%" y="543.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="69.3646%" y="517" width="0.0477%" height="15" fill="rgb(205,50,36)" fg:x="5819" fg:w="4"/><text x="69.6837%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="69.4123%" y="533" width="0.0238%" height="15" fill="rgb(252,32,32)" fg:x="5823" fg:w="2"/><text x="69.7314%" y="543.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="69.4123%" y="517" width="0.0238%" height="15" fill="rgb(241,123,33)" fg:x="5823" fg:w="2"/><text x="69.7314%" y="527.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="69.4123%" y="501" width="0.0238%" height="15" fill="rgb(212,140,16)" fg:x="5823" fg:w="2"/><text x="69.7314%" y="511.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="69.4242%" y="485" width="0.0119%" height="15" fill="rgb(247,132,5)" fg:x="5824" fg:w="1"/><text x="69.7433%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="69.4123%" y="549" width="0.0596%" height="15" fill="rgb(209,137,38)" fg:x="5823" fg:w="5"/><text x="69.7314%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="69.4362%" y="533" width="0.0358%" height="15" fill="rgb(248,32,42)" fg:x="5825" fg:w="3"/><text x="69.7553%" y="543.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="69.4481%" y="517" width="0.0238%" height="15" fill="rgb(216,188,40)" fg:x="5826" fg:w="2"/><text x="69.7672%" y="527.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="69.4481%" y="501" width="0.0238%" height="15" fill="rgb(209,127,53)" fg:x="5826" fg:w="2"/><text x="69.7672%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="69.3408%" y="565" width="0.1430%" height="15" fill="rgb(254,162,9)" fg:x="5817" fg:w="12"/><text x="69.6599%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="69.4719%" y="549" width="0.0119%" height="15" fill="rgb(219,183,10)" fg:x="5828" fg:w="1"/><text x="69.7910%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="69.4719%" y="533" width="0.0119%" height="15" fill="rgb(217,192,21)" fg:x="5828" fg:w="1"/><text x="69.7910%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="69.4719%" y="517" width="0.0119%" height="15" fill="rgb(251,89,27)" fg:x="5828" fg:w="1"/><text x="69.7910%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="69.4719%" y="501" width="0.0119%" height="15" fill="rgb(253,55,28)" fg:x="5828" fg:w="1"/><text x="69.7910%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="69.4838%" y="565" width="0.0119%" height="15" fill="rgb(216,159,8)" fg:x="5829" fg:w="1"/><text x="69.8029%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="69.4838%" y="549" width="0.0119%" height="15" fill="rgb(231,228,44)" fg:x="5829" fg:w="1"/><text x="69.8029%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="69.4838%" y="533" width="0.0119%" height="15" fill="rgb(247,34,48)" fg:x="5829" fg:w="1"/><text x="69.8029%" y="543.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="69.4958%" y="517" width="0.0358%" height="15" fill="rgb(247,222,18)" fg:x="5830" fg:w="3"/><text x="69.8149%" y="527.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="69.4958%" y="501" width="0.0358%" height="15" fill="rgb(227,49,4)" fg:x="5830" fg:w="3"/><text x="69.8149%" y="511.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="69.4958%" y="485" width="0.0358%" height="15" fill="rgb(219,189,53)" fg:x="5830" fg:w="3"/><text x="69.8149%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="69.5315%" y="517" width="0.0119%" height="15" fill="rgb(241,160,53)" fg:x="5833" fg:w="1"/><text x="69.8506%" y="527.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="69.5315%" y="501" width="0.0119%" height="15" fill="rgb(227,115,4)" fg:x="5833" fg:w="1"/><text x="69.8506%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="69.5315%" y="485" width="0.0119%" height="15" fill="rgb(215,28,28)" fg:x="5833" fg:w="1"/><text x="69.8506%" y="495.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="69.5315%" y="469" width="0.0119%" height="15" fill="rgb(237,143,40)" fg:x="5833" fg:w="1"/><text x="69.8506%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="69.5315%" y="453" width="0.0119%" height="15" fill="rgb(205,107,24)" fg:x="5833" fg:w="1"/><text x="69.8506%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="69.5315%" y="437" width="0.0119%" height="15" fill="rgb(209,112,35)" fg:x="5833" fg:w="1"/><text x="69.8506%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="69.5315%" y="421" width="0.0119%" height="15" fill="rgb(206,135,5)" fg:x="5833" fg:w="1"/><text x="69.8506%" y="431.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="69.5315%" y="405" width="0.0119%" height="15" fill="rgb(227,217,38)" fg:x="5833" fg:w="1"/><text x="69.8506%" y="415.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="69.5434%" y="485" width="0.0119%" height="15" fill="rgb(205,0,41)" fg:x="5834" fg:w="1"/><text x="69.8625%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="69.4958%" y="533" width="0.0715%" height="15" fill="rgb(220,20,40)" fg:x="5830" fg:w="6"/><text x="69.8149%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="69.5434%" y="517" width="0.0238%" height="15" fill="rgb(216,145,3)" fg:x="5834" fg:w="2"/><text x="69.8625%" y="527.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.02%)</title><rect x="69.5434%" y="501" width="0.0238%" height="15" fill="rgb(207,130,51)" fg:x="5834" fg:w="2"/><text x="69.8625%" y="511.50"/></g><g><title>memcpy@plt (1 samples, 0.01%)</title><rect x="69.5554%" y="485" width="0.0119%" height="15" fill="rgb(252,93,13)" fg:x="5835" fg:w="1"/><text x="69.8745%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="69.5673%" y="517" width="0.0119%" height="15" fill="rgb(210,105,15)" fg:x="5836" fg:w="1"/><text x="69.8864%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="69.5673%" y="501" width="0.0119%" height="15" fill="rgb(212,126,31)" fg:x="5836" fg:w="1"/><text x="69.8864%" y="511.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="69.5792%" y="453" width="0.0119%" height="15" fill="rgb(241,167,46)" fg:x="5837" fg:w="1"/><text x="69.8983%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="69.5792%" y="437" width="0.0119%" height="15" fill="rgb(217,143,19)" fg:x="5837" fg:w="1"/><text x="69.8983%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="69.5792%" y="421" width="0.0119%" height="15" fill="rgb(235,117,33)" fg:x="5837" fg:w="1"/><text x="69.8983%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (25 samples, 0.30%)</title><rect x="69.3050%" y="597" width="0.2980%" height="15" fill="rgb(247,95,6)" fg:x="5814" fg:w="25"/><text x="69.6241%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (25 samples, 0.30%)</title><rect x="69.3050%" y="581" width="0.2980%" height="15" fill="rgb(243,206,43)" fg:x="5814" fg:w="25"/><text x="69.6241%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="69.4958%" y="565" width="0.1073%" height="15" fill="rgb(229,65,54)" fg:x="5830" fg:w="9"/><text x="69.8149%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="69.4958%" y="549" width="0.1073%" height="15" fill="rgb(247,137,34)" fg:x="5830" fg:w="9"/><text x="69.8149%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="69.5673%" y="533" width="0.0358%" height="15" fill="rgb(245,174,44)" fg:x="5836" fg:w="3"/><text x="69.8864%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="69.5792%" y="517" width="0.0238%" height="15" fill="rgb(223,64,15)" fg:x="5837" fg:w="2"/><text x="69.8983%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="69.5792%" y="501" width="0.0238%" height="15" fill="rgb(243,153,36)" fg:x="5837" fg:w="2"/><text x="69.8983%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="69.5792%" y="485" width="0.0238%" height="15" fill="rgb(252,23,4)" fg:x="5837" fg:w="2"/><text x="69.8983%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="69.5792%" y="469" width="0.0238%" height="15" fill="rgb(209,132,13)" fg:x="5837" fg:w="2"/><text x="69.8983%" y="479.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="69.5911%" y="453" width="0.0119%" height="15" fill="rgb(209,196,21)" fg:x="5838" fg:w="1"/><text x="69.9102%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="69.5911%" y="437" width="0.0119%" height="15" fill="rgb(252,197,1)" fg:x="5838" fg:w="1"/><text x="69.9102%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="69.5911%" y="421" width="0.0119%" height="15" fill="rgb(229,42,46)" fg:x="5838" fg:w="1"/><text x="69.9102%" y="431.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="69.6150%" y="581" width="0.1073%" height="15" fill="rgb(219,85,8)" fg:x="5840" fg:w="9"/><text x="69.9341%" y="591.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="69.6150%" y="565" width="0.1073%" height="15" fill="rgb(223,185,14)" fg:x="5840" fg:w="9"/><text x="69.9341%" y="575.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="69.6388%" y="549" width="0.0834%" height="15" fill="rgb(217,196,18)" fg:x="5842" fg:w="7"/><text x="69.9579%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (54 samples, 0.64%)</title><rect x="69.0905%" y="613" width="0.6437%" height="15" fill="rgb(220,122,37)" fg:x="5796" fg:w="54"/><text x="69.4096%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (11 samples, 0.13%)</title><rect x="69.6031%" y="597" width="0.1311%" height="15" fill="rgb(236,135,33)" fg:x="5839" fg:w="11"/><text x="69.9222%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="69.7223%" y="581" width="0.0119%" height="15" fill="rgb(222,86,54)" fg:x="5849" fg:w="1"/><text x="70.0414%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (2 samples, 0.02%)</title><rect x="69.7342%" y="613" width="0.0238%" height="15" fill="rgb(227,42,22)" fg:x="5850" fg:w="2"/><text x="70.0533%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (60 samples, 0.72%)</title><rect x="69.0547%" y="629" width="0.7152%" height="15" fill="rgb(243,101,27)" fg:x="5793" fg:w="60"/><text x="69.3738%" y="639.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="69.7580%" y="613" width="0.0119%" height="15" fill="rgb(229,100,8)" fg:x="5852" fg:w="1"/><text x="70.0771%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="69.7580%" y="597" width="0.0119%" height="15" fill="rgb(252,68,10)" fg:x="5852" fg:w="1"/><text x="70.0771%" y="607.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="69.7699%" y="613" width="0.0834%" height="15" fill="rgb(219,19,31)" fg:x="5853" fg:w="7"/><text x="70.0890%" y="623.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="69.7699%" y="597" width="0.0834%" height="15" fill="rgb(246,150,44)" fg:x="5853" fg:w="7"/><text x="70.0890%" y="607.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="69.8057%" y="581" width="0.0477%" height="15" fill="rgb(211,14,39)" fg:x="5856" fg:w="4"/><text x="70.1248%" y="591.50"/></g><g><title>operator new (12 samples, 0.14%)</title><rect x="69.8772%" y="581" width="0.1430%" height="15" fill="rgb(221,98,29)" fg:x="5862" fg:w="12"/><text x="70.1963%" y="591.50"/></g><g><title>__GI___libc_malloc (12 samples, 0.14%)</title><rect x="69.8772%" y="565" width="0.1430%" height="15" fill="rgb(221,70,26)" fg:x="5862" fg:w="12"/><text x="70.1963%" y="575.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="69.9487%" y="549" width="0.0715%" height="15" fill="rgb(236,146,30)" fg:x="5868" fg:w="6"/><text x="70.2678%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="70.0203%" y="549" width="0.0119%" height="15" fill="rgb(226,94,34)" fg:x="5874" fg:w="1"/><text x="70.3394%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="70.0203%" y="533" width="0.0119%" height="15" fill="rgb(248,132,21)" fg:x="5874" fg:w="1"/><text x="70.3394%" y="543.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="70.0322%" y="517" width="0.0119%" height="15" fill="rgb(245,43,50)" fg:x="5875" fg:w="1"/><text x="70.3513%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="70.0322%" y="501" width="0.0119%" height="15" fill="rgb(245,132,31)" fg:x="5875" fg:w="1"/><text x="70.3513%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="70.0322%" y="485" width="0.0119%" height="15" fill="rgb(230,171,4)" fg:x="5875" fg:w="1"/><text x="70.3513%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="70.0322%" y="533" width="0.0358%" height="15" fill="rgb(235,6,45)" fg:x="5875" fg:w="3"/><text x="70.3513%" y="543.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="70.0441%" y="517" width="0.0238%" height="15" fill="rgb(220,80,28)" fg:x="5876" fg:w="2"/><text x="70.3632%" y="527.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="70.0441%" y="501" width="0.0238%" height="15" fill="rgb(242,171,9)" fg:x="5876" fg:w="2"/><text x="70.3632%" y="511.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="70.0441%" y="485" width="0.0238%" height="15" fill="rgb(214,135,29)" fg:x="5876" fg:w="2"/><text x="70.3632%" y="495.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="70.0679%" y="453" width="0.0238%" height="15" fill="rgb(221,229,16)" fg:x="5878" fg:w="2"/><text x="70.3870%" y="463.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="70.0679%" y="437" width="0.0238%" height="15" fill="rgb(253,59,46)" fg:x="5878" fg:w="2"/><text x="70.3870%" y="447.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="70.0679%" y="421" width="0.0238%" height="15" fill="rgb(250,147,20)" fg:x="5878" fg:w="2"/><text x="70.3870%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="70.0679%" y="533" width="0.0358%" height="15" fill="rgb(236,64,48)" fg:x="5878" fg:w="3"/><text x="70.3870%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="70.0679%" y="517" width="0.0358%" height="15" fill="rgb(240,37,42)" fg:x="5878" fg:w="3"/><text x="70.3870%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="70.0679%" y="501" width="0.0358%" height="15" fill="rgb(220,41,50)" fg:x="5878" fg:w="3"/><text x="70.3870%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="70.0679%" y="485" width="0.0358%" height="15" fill="rgb(216,51,14)" fg:x="5878" fg:w="3"/><text x="70.3870%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="70.0679%" y="469" width="0.0358%" height="15" fill="rgb(215,83,10)" fg:x="5878" fg:w="3"/><text x="70.3870%" y="479.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="70.0918%" y="453" width="0.0119%" height="15" fill="rgb(206,144,17)" fg:x="5880" fg:w="1"/><text x="70.4109%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="70.0918%" y="437" width="0.0119%" height="15" fill="rgb(219,196,37)" fg:x="5880" fg:w="1"/><text x="70.4109%" y="447.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="70.0918%" y="421" width="0.0119%" height="15" fill="rgb(226,135,26)" fg:x="5880" fg:w="1"/><text x="70.4109%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="70.0322%" y="549" width="0.0834%" height="15" fill="rgb(237,195,40)" fg:x="5875" fg:w="7"/><text x="70.3513%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="70.1037%" y="533" width="0.0119%" height="15" fill="rgb(228,182,42)" fg:x="5881" fg:w="1"/><text x="70.4228%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="70.1037%" y="517" width="0.0119%" height="15" fill="rgb(224,135,50)" fg:x="5881" fg:w="1"/><text x="70.4228%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="70.1037%" y="501" width="0.0119%" height="15" fill="rgb(236,215,34)" fg:x="5881" fg:w="1"/><text x="70.4228%" y="511.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="70.1037%" y="485" width="0.0119%" height="15" fill="rgb(244,213,27)" fg:x="5881" fg:w="1"/><text x="70.4228%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="70.0203%" y="565" width="0.1073%" height="15" fill="rgb(233,37,53)" fg:x="5874" fg:w="9"/><text x="70.3394%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="70.1156%" y="549" width="0.0119%" height="15" fill="rgb(222,132,14)" fg:x="5882" fg:w="1"/><text x="70.4347%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="70.1156%" y="533" width="0.0119%" height="15" fill="rgb(219,202,29)" fg:x="5882" fg:w="1"/><text x="70.4347%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="70.1156%" y="517" width="0.0119%" height="15" fill="rgb(226,157,39)" fg:x="5882" fg:w="1"/><text x="70.4347%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="70.1275%" y="565" width="0.0238%" height="15" fill="rgb(235,213,2)" fg:x="5883" fg:w="2"/><text x="70.4466%" y="575.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="70.1514%" y="549" width="0.0715%" height="15" fill="rgb(250,121,2)" fg:x="5885" fg:w="6"/><text x="70.4705%" y="559.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="70.1514%" y="533" width="0.0715%" height="15" fill="rgb(206,192,33)" fg:x="5885" fg:w="6"/><text x="70.4705%" y="543.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="70.1991%" y="517" width="0.0238%" height="15" fill="rgb(240,161,6)" fg:x="5889" fg:w="2"/><text x="70.5182%" y="527.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="70.2229%" y="517" width="0.0238%" height="15" fill="rgb(246,53,30)" fg:x="5891" fg:w="2"/><text x="70.5420%" y="527.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="70.2229%" y="501" width="0.0238%" height="15" fill="rgb(219,123,43)" fg:x="5891" fg:w="2"/><text x="70.5420%" y="511.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="70.2468%" y="501" width="0.0238%" height="15" fill="rgb(236,53,49)" fg:x="5893" fg:w="2"/><text x="70.5659%" y="511.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="70.2468%" y="485" width="0.0238%" height="15" fill="rgb(241,156,1)" fg:x="5893" fg:w="2"/><text x="70.5659%" y="495.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="70.2468%" y="469" width="0.0238%" height="15" fill="rgb(209,73,26)" fg:x="5893" fg:w="2"/><text x="70.5659%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="70.2229%" y="533" width="0.0596%" height="15" fill="rgb(206,114,3)" fg:x="5891" fg:w="5"/><text x="70.5420%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="70.2468%" y="517" width="0.0358%" height="15" fill="rgb(230,214,9)" fg:x="5893" fg:w="3"/><text x="70.5659%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="70.2706%" y="501" width="0.0119%" height="15" fill="rgb(240,184,46)" fg:x="5895" fg:w="1"/><text x="70.5897%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="70.2706%" y="485" width="0.0119%" height="15" fill="rgb(242,169,54)" fg:x="5895" fg:w="1"/><text x="70.5897%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="70.2706%" y="469" width="0.0119%" height="15" fill="rgb(207,168,50)" fg:x="5895" fg:w="1"/><text x="70.5897%" y="479.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="70.2825%" y="517" width="0.0358%" height="15" fill="rgb(240,114,2)" fg:x="5896" fg:w="3"/><text x="70.6016%" y="527.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="70.2825%" y="501" width="0.0358%" height="15" fill="rgb(211,17,40)" fg:x="5896" fg:w="3"/><text x="70.6016%" y="511.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="70.2825%" y="485" width="0.0358%" height="15" fill="rgb(235,97,36)" fg:x="5896" fg:w="3"/><text x="70.6016%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="70.2825%" y="533" width="0.0477%" height="15" fill="rgb(208,164,11)" fg:x="5896" fg:w="4"/><text x="70.6016%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="70.3183%" y="517" width="0.0119%" height="15" fill="rgb(242,11,17)" fg:x="5899" fg:w="1"/><text x="70.6374%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="70.3183%" y="501" width="0.0119%" height="15" fill="rgb(215,86,33)" fg:x="5899" fg:w="1"/><text x="70.6374%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="70.3183%" y="485" width="0.0119%" height="15" fill="rgb(245,185,28)" fg:x="5899" fg:w="1"/><text x="70.6374%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="70.3183%" y="469" width="0.0119%" height="15" fill="rgb(231,89,42)" fg:x="5899" fg:w="1"/><text x="70.6374%" y="479.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="70.3183%" y="453" width="0.0119%" height="15" fill="rgb(210,18,47)" fg:x="5899" fg:w="1"/><text x="70.6374%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="70.3302%" y="533" width="0.0119%" height="15" fill="rgb(214,84,8)" fg:x="5900" fg:w="1"/><text x="70.6493%" y="543.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="70.3302%" y="517" width="0.0119%" height="15" fill="rgb(214,222,23)" fg:x="5900" fg:w="1"/><text x="70.6493%" y="527.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="70.3421%" y="517" width="0.0238%" height="15" fill="rgb(213,104,21)" fg:x="5901" fg:w="2"/><text x="70.6612%" y="527.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="70.3421%" y="501" width="0.0238%" height="15" fill="rgb(238,138,6)" fg:x="5901" fg:w="2"/><text x="70.6612%" y="511.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="70.3421%" y="485" width="0.0238%" height="15" fill="rgb(205,167,50)" fg:x="5901" fg:w="2"/><text x="70.6612%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="70.3779%" y="469" width="0.0119%" height="15" fill="rgb(230,105,27)" fg:x="5904" fg:w="1"/><text x="70.6970%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="70.3779%" y="453" width="0.0119%" height="15" fill="rgb(222,97,48)" fg:x="5904" fg:w="1"/><text x="70.6970%" y="463.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="70.3779%" y="485" width="0.0358%" height="15" fill="rgb(222,197,14)" fg:x="5904" fg:w="3"/><text x="70.6970%" y="495.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="70.3898%" y="469" width="0.0238%" height="15" fill="rgb(210,105,47)" fg:x="5905" fg:w="2"/><text x="70.7089%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="70.3898%" y="453" width="0.0238%" height="15" fill="rgb(238,158,19)" fg:x="5905" fg:w="2"/><text x="70.7089%" y="463.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="70.3898%" y="437" width="0.0238%" height="15" fill="rgb(226,176,23)" fg:x="5905" fg:w="2"/><text x="70.7089%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="70.3898%" y="421" width="0.0238%" height="15" fill="rgb(208,79,31)" fg:x="5905" fg:w="2"/><text x="70.7089%" y="431.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="70.3898%" y="405" width="0.0238%" height="15" fill="rgb(221,154,21)" fg:x="5905" fg:w="2"/><text x="70.7089%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="70.3898%" y="389" width="0.0238%" height="15" fill="rgb(213,61,41)" fg:x="5905" fg:w="2"/><text x="70.7089%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="70.4017%" y="373" width="0.0119%" height="15" fill="rgb(215,28,33)" fg:x="5906" fg:w="1"/><text x="70.7208%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="70.4017%" y="357" width="0.0119%" height="15" fill="rgb(231,139,26)" fg:x="5906" fg:w="1"/><text x="70.7208%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="70.3779%" y="501" width="0.0715%" height="15" fill="rgb(232,159,16)" fg:x="5904" fg:w="6"/><text x="70.6970%" y="511.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="70.4136%" y="485" width="0.0358%" height="15" fill="rgb(233,80,10)" fg:x="5907" fg:w="3"/><text x="70.7327%" y="495.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="70.4136%" y="469" width="0.0358%" height="15" fill="rgb(208,147,29)" fg:x="5907" fg:w="3"/><text x="70.7327%" y="479.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="70.4136%" y="453" width="0.0358%" height="15" fill="rgb(213,10,12)" fg:x="5907" fg:w="3"/><text x="70.7327%" y="463.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="70.4136%" y="437" width="0.0358%" height="15" fill="rgb(231,218,13)" fg:x="5907" fg:w="3"/><text x="70.7327%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="70.4613%" y="421" width="0.0119%" height="15" fill="rgb(244,199,44)" fg:x="5911" fg:w="1"/><text x="70.7804%" y="431.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="70.4613%" y="405" width="0.0119%" height="15" fill="rgb(240,144,53)" fg:x="5911" fg:w="1"/><text x="70.7804%" y="415.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="70.4732%" y="405" width="0.0119%" height="15" fill="rgb(223,57,28)" fg:x="5912" fg:w="1"/><text x="70.7923%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (29 samples, 0.35%)</title><rect x="70.1514%" y="565" width="0.3457%" height="15" fill="rgb(213,134,38)" fg:x="5885" fg:w="29"/><text x="70.4705%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (23 samples, 0.27%)</title><rect x="70.2229%" y="549" width="0.2742%" height="15" fill="rgb(251,182,42)" fg:x="5891" fg:w="23"/><text x="70.5420%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="70.3421%" y="533" width="0.1550%" height="15" fill="rgb(229,93,13)" fg:x="5901" fg:w="13"/><text x="70.6612%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="70.3660%" y="517" width="0.1311%" height="15" fill="rgb(234,171,3)" fg:x="5903" fg:w="11"/><text x="70.6851%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="70.4494%" y="501" width="0.0477%" height="15" fill="rgb(241,105,32)" fg:x="5910" fg:w="4"/><text x="70.7685%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="70.4494%" y="485" width="0.0477%" height="15" fill="rgb(221,66,3)" fg:x="5910" fg:w="4"/><text x="70.7685%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="70.4613%" y="469" width="0.0358%" height="15" fill="rgb(248,155,29)" fg:x="5911" fg:w="3"/><text x="70.7804%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="70.4613%" y="453" width="0.0358%" height="15" fill="rgb(231,31,5)" fg:x="5911" fg:w="3"/><text x="70.7804%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="70.4613%" y="437" width="0.0358%" height="15" fill="rgb(213,188,31)" fg:x="5911" fg:w="3"/><text x="70.7804%" y="447.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="70.4732%" y="421" width="0.0238%" height="15" fill="rgb(212,104,33)" fg:x="5912" fg:w="2"/><text x="70.7923%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="70.4852%" y="405" width="0.0119%" height="15" fill="rgb(254,77,51)" fg:x="5913" fg:w="1"/><text x="70.8043%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="70.4852%" y="389" width="0.0119%" height="15" fill="rgb(234,39,26)" fg:x="5913" fg:w="1"/><text x="70.8043%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="70.4852%" y="373" width="0.0119%" height="15" fill="rgb(208,88,36)" fg:x="5913" fg:w="1"/><text x="70.8043%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="70.4852%" y="357" width="0.0119%" height="15" fill="rgb(243,222,10)" fg:x="5913" fg:w="1"/><text x="70.8043%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="70.4852%" y="341" width="0.0119%" height="15" fill="rgb(218,133,52)" fg:x="5913" fg:w="1"/><text x="70.8043%" y="351.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="70.4852%" y="325" width="0.0119%" height="15" fill="rgb(222,25,26)" fg:x="5913" fg:w="1"/><text x="70.8043%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (43 samples, 0.51%)</title><rect x="70.0203%" y="581" width="0.5126%" height="15" fill="rgb(243,174,24)" fg:x="5874" fg:w="43"/><text x="70.3394%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="70.4971%" y="565" width="0.0358%" height="15" fill="rgb(233,188,52)" fg:x="5914" fg:w="3"/><text x="70.8162%" y="575.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="70.4971%" y="549" width="0.0358%" height="15" fill="rgb(208,89,14)" fg:x="5914" fg:w="3"/><text x="70.8162%" y="559.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="70.4971%" y="533" width="0.0358%" height="15" fill="rgb(205,204,21)" fg:x="5914" fg:w="3"/><text x="70.8162%" y="543.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="70.5090%" y="517" width="0.0238%" height="15" fill="rgb(246,39,28)" fg:x="5915" fg:w="2"/><text x="70.8281%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="70.5328%" y="565" width="0.0119%" height="15" fill="rgb(235,71,19)" fg:x="5917" fg:w="1"/><text x="70.8519%" y="575.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="70.5567%" y="549" width="0.0596%" height="15" fill="rgb(211,62,39)" fg:x="5919" fg:w="5"/><text x="70.8758%" y="559.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="70.5567%" y="533" width="0.0596%" height="15" fill="rgb(246,118,20)" fg:x="5919" fg:w="5"/><text x="70.8758%" y="543.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="70.5567%" y="517" width="0.0596%" height="15" fill="rgb(230,82,12)" fg:x="5919" fg:w="5"/><text x="70.8758%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (64 samples, 0.76%)</title><rect x="69.8653%" y="597" width="0.7629%" height="15" fill="rgb(205,212,34)" fg:x="5861" fg:w="64"/><text x="70.1844%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="70.5328%" y="581" width="0.0954%" height="15" fill="rgb(239,90,1)" fg:x="5917" fg:w="8"/><text x="70.8519%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (7 samples, 0.08%)</title><rect x="70.5448%" y="565" width="0.0834%" height="15" fill="rgb(225,198,50)" fg:x="5918" fg:w="7"/><text x="70.8639%" y="575.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="70.6163%" y="549" width="0.0119%" height="15" fill="rgb(227,208,48)" fg:x="5924" fg:w="1"/><text x="70.9354%" y="559.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="70.6282%" y="581" width="0.0358%" height="15" fill="rgb(238,134,41)" fg:x="5925" fg:w="3"/><text x="70.9473%" y="591.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="70.6401%" y="565" width="0.0238%" height="15" fill="rgb(241,58,39)" fg:x="5926" fg:w="2"/><text x="70.9592%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="70.6640%" y="565" width="0.0238%" height="15" fill="rgb(214,126,4)" fg:x="5928" fg:w="2"/><text x="70.9831%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="70.6640%" y="549" width="0.0238%" height="15" fill="rgb(235,149,4)" fg:x="5928" fg:w="2"/><text x="70.9831%" y="559.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="70.6640%" y="533" width="0.0238%" height="15" fill="rgb(236,59,29)" fg:x="5928" fg:w="2"/><text x="70.9831%" y="543.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="70.6640%" y="517" width="0.0238%" height="15" fill="rgb(246,11,33)" fg:x="5928" fg:w="2"/><text x="70.9831%" y="527.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="70.6640%" y="501" width="0.0238%" height="15" fill="rgb(232,180,35)" fg:x="5928" fg:w="2"/><text x="70.9831%" y="511.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="70.6878%" y="549" width="0.0596%" height="15" fill="rgb(220,35,37)" fg:x="5930" fg:w="5"/><text x="71.0069%" y="559.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="70.6878%" y="533" width="0.0596%" height="15" fill="rgb(238,107,48)" fg:x="5930" fg:w="5"/><text x="71.0069%" y="543.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="70.7236%" y="517" width="0.0238%" height="15" fill="rgb(205,65,21)" fg:x="5933" fg:w="2"/><text x="71.0427%" y="527.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="70.7474%" y="517" width="0.0119%" height="15" fill="rgb(246,138,48)" fg:x="5935" fg:w="1"/><text x="71.0665%" y="527.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="70.7593%" y="485" width="0.0358%" height="15" fill="rgb(209,220,47)" fg:x="5936" fg:w="3"/><text x="71.0784%" y="495.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="70.7593%" y="469" width="0.0358%" height="15" fill="rgb(222,162,49)" fg:x="5936" fg:w="3"/><text x="71.0784%" y="479.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="70.7712%" y="453" width="0.0238%" height="15" fill="rgb(243,123,11)" fg:x="5937" fg:w="2"/><text x="71.0903%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="70.7593%" y="501" width="0.0477%" height="15" fill="rgb(221,229,41)" fg:x="5936" fg:w="4"/><text x="71.0784%" y="511.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="70.7951%" y="485" width="0.0119%" height="15" fill="rgb(216,68,4)" fg:x="5939" fg:w="1"/><text x="71.1142%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="70.7951%" y="469" width="0.0119%" height="15" fill="rgb(207,88,35)" fg:x="5939" fg:w="1"/><text x="71.1142%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="70.7951%" y="453" width="0.0119%" height="15" fill="rgb(252,2,5)" fg:x="5939" fg:w="1"/><text x="71.1142%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="70.7951%" y="437" width="0.0119%" height="15" fill="rgb(209,173,7)" fg:x="5939" fg:w="1"/><text x="71.1142%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="70.7951%" y="421" width="0.0119%" height="15" fill="rgb(210,198,52)" fg:x="5939" fg:w="1"/><text x="71.1142%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="70.7951%" y="405" width="0.0119%" height="15" fill="rgb(228,152,32)" fg:x="5939" fg:w="1"/><text x="71.1142%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="70.7951%" y="389" width="0.0119%" height="15" fill="rgb(249,98,29)" fg:x="5939" fg:w="1"/><text x="71.1142%" y="399.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="70.7951%" y="373" width="0.0119%" height="15" fill="rgb(205,148,48)" fg:x="5939" fg:w="1"/><text x="71.1142%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="70.8070%" y="501" width="0.0238%" height="15" fill="rgb(236,69,34)" fg:x="5940" fg:w="2"/><text x="71.1261%" y="511.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="70.8070%" y="485" width="0.0238%" height="15" fill="rgb(220,151,41)" fg:x="5940" fg:w="2"/><text x="71.1261%" y="495.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="70.8070%" y="469" width="0.0238%" height="15" fill="rgb(254,106,24)" fg:x="5940" fg:w="2"/><text x="71.1261%" y="479.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="70.8070%" y="453" width="0.0238%" height="15" fill="rgb(210,37,48)" fg:x="5940" fg:w="2"/><text x="71.1261%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="70.8308%" y="485" width="0.0119%" height="15" fill="rgb(254,131,5)" fg:x="5942" fg:w="1"/><text x="71.1499%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="70.8308%" y="469" width="0.0119%" height="15" fill="rgb(216,55,41)" fg:x="5942" fg:w="1"/><text x="71.1499%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="70.7593%" y="517" width="0.1192%" height="15" fill="rgb(250,35,31)" fg:x="5936" fg:w="10"/><text x="71.0784%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="70.8308%" y="501" width="0.0477%" height="15" fill="rgb(207,124,33)" fg:x="5942" fg:w="4"/><text x="71.1499%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="70.8428%" y="485" width="0.0358%" height="15" fill="rgb(249,175,17)" fg:x="5943" fg:w="3"/><text x="71.1619%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="70.8428%" y="469" width="0.0358%" height="15" fill="rgb(224,175,39)" fg:x="5943" fg:w="3"/><text x="71.1619%" y="479.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="70.8428%" y="453" width="0.0358%" height="15" fill="rgb(208,67,49)" fg:x="5943" fg:w="3"/><text x="71.1619%" y="463.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="70.8428%" y="437" width="0.0358%" height="15" fill="rgb(222,188,41)" fg:x="5943" fg:w="3"/><text x="71.1619%" y="447.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="70.8666%" y="421" width="0.0119%" height="15" fill="rgb(243,213,30)" fg:x="5945" fg:w="1"/><text x="71.1857%" y="431.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="70.8785%" y="453" width="0.0596%" height="15" fill="rgb(253,100,45)" fg:x="5946" fg:w="5"/><text x="71.1976%" y="463.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="70.8785%" y="437" width="0.0596%" height="15" fill="rgb(226,24,44)" fg:x="5946" fg:w="5"/><text x="71.1976%" y="447.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="70.8785%" y="421" width="0.0596%" height="15" fill="rgb(215,41,24)" fg:x="5946" fg:w="5"/><text x="71.1976%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="70.7474%" y="533" width="0.2026%" height="15" fill="rgb(254,53,33)" fg:x="5935" fg:w="17"/><text x="71.0665%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="70.8785%" y="517" width="0.0715%" height="15" fill="rgb(242,103,10)" fg:x="5946" fg:w="6"/><text x="71.1976%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="70.8785%" y="501" width="0.0715%" height="15" fill="rgb(246,29,21)" fg:x="5946" fg:w="6"/><text x="71.1976%" y="511.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="70.8785%" y="485" width="0.0715%" height="15" fill="rgb(251,154,1)" fg:x="5946" fg:w="6"/><text x="71.1976%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="70.8785%" y="469" width="0.0715%" height="15" fill="rgb(254,212,26)" fg:x="5946" fg:w="6"/><text x="71.1976%" y="479.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="70.9381%" y="453" width="0.0119%" height="15" fill="rgb(251,187,46)" fg:x="5951" fg:w="1"/><text x="71.2572%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="70.9381%" y="437" width="0.0119%" height="15" fill="rgb(224,208,14)" fg:x="5951" fg:w="1"/><text x="71.2572%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="70.9381%" y="421" width="0.0119%" height="15" fill="rgb(222,176,26)" fg:x="5951" fg:w="1"/><text x="71.2572%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="70.9501%" y="533" width="0.0119%" height="15" fill="rgb(241,219,52)" fg:x="5952" fg:w="1"/><text x="71.2692%" y="543.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="70.9501%" y="517" width="0.0119%" height="15" fill="rgb(252,198,21)" fg:x="5952" fg:w="1"/><text x="71.2692%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="70.9620%" y="517" width="0.0119%" height="15" fill="rgb(244,196,23)" fg:x="5953" fg:w="1"/><text x="71.2811%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="70.9620%" y="501" width="0.0119%" height="15" fill="rgb(239,121,44)" fg:x="5953" fg:w="1"/><text x="71.2811%" y="511.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="70.9620%" y="485" width="0.0119%" height="15" fill="rgb(249,203,23)" fg:x="5953" fg:w="1"/><text x="71.2811%" y="495.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="70.9858%" y="485" width="0.0358%" height="15" fill="rgb(238,219,10)" fg:x="5955" fg:w="3"/><text x="71.3049%" y="495.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="70.9858%" y="469" width="0.0358%" height="15" fill="rgb(241,35,46)" fg:x="5955" fg:w="3"/><text x="71.3049%" y="479.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="70.9977%" y="453" width="0.0238%" height="15" fill="rgb(218,28,6)" fg:x="5956" fg:w="2"/><text x="71.3168%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="71.0216%" y="485" width="0.0119%" height="15" fill="rgb(233,151,50)" fg:x="5958" fg:w="1"/><text x="71.3407%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.0216%" y="469" width="0.0119%" height="15" fill="rgb(208,57,8)" fg:x="5958" fg:w="1"/><text x="71.3407%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="71.0216%" y="453" width="0.0119%" height="15" fill="rgb(253,99,10)" fg:x="5958" fg:w="1"/><text x="71.3407%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="70.9739%" y="501" width="0.0715%" height="15" fill="rgb(237,196,49)" fg:x="5954" fg:w="6"/><text x="71.2930%" y="511.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="71.0335%" y="485" width="0.0119%" height="15" fill="rgb(209,51,3)" fg:x="5959" fg:w="1"/><text x="71.3526%" y="495.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="71.0454%" y="453" width="0.0954%" height="15" fill="rgb(238,129,10)" fg:x="5960" fg:w="8"/><text x="71.3645%" y="463.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="71.0573%" y="437" width="0.0834%" height="15" fill="rgb(246,201,16)" fg:x="5961" fg:w="7"/><text x="71.3764%" y="447.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="71.0573%" y="421" width="0.0834%" height="15" fill="rgb(250,160,20)" fg:x="5961" fg:w="7"/><text x="71.3764%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="71.0454%" y="469" width="0.1073%" height="15" fill="rgb(251,107,25)" fg:x="5960" fg:w="9"/><text x="71.3645%" y="479.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.1408%" y="453" width="0.0119%" height="15" fill="rgb(212,103,39)" fg:x="5968" fg:w="1"/><text x="71.4599%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="71.1408%" y="437" width="0.0119%" height="15" fill="rgb(207,9,29)" fg:x="5968" fg:w="1"/><text x="71.4599%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="71.1408%" y="421" width="0.0119%" height="15" fill="rgb(227,84,3)" fg:x="5968" fg:w="1"/><text x="71.4599%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="71.1527%" y="453" width="0.0119%" height="15" fill="rgb(242,194,7)" fg:x="5969" fg:w="1"/><text x="71.4718%" y="463.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="71.1527%" y="437" width="0.0119%" height="15" fill="rgb(230,40,4)" fg:x="5969" fg:w="1"/><text x="71.4718%" y="447.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="71.1646%" y="421" width="0.0358%" height="15" fill="rgb(243,229,33)" fg:x="5970" fg:w="3"/><text x="71.4837%" y="431.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="71.1646%" y="405" width="0.0358%" height="15" fill="rgb(240,65,24)" fg:x="5970" fg:w="3"/><text x="71.4837%" y="415.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="71.1765%" y="389" width="0.0238%" height="15" fill="rgb(212,28,20)" fg:x="5971" fg:w="2"/><text x="71.4956%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="71.0454%" y="501" width="0.1669%" height="15" fill="rgb(209,72,3)" fg:x="5960" fg:w="14"/><text x="71.3645%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (14 samples, 0.17%)</title><rect x="71.0454%" y="485" width="0.1669%" height="15" fill="rgb(238,170,36)" fg:x="5960" fg:w="14"/><text x="71.3645%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="71.1527%" y="469" width="0.0596%" height="15" fill="rgb(236,19,38)" fg:x="5969" fg:w="5"/><text x="71.4718%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="71.1646%" y="453" width="0.0477%" height="15" fill="rgb(230,67,43)" fg:x="5970" fg:w="4"/><text x="71.4837%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="71.1646%" y="437" width="0.0477%" height="15" fill="rgb(227,14,36)" fg:x="5970" fg:w="4"/><text x="71.4837%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="71.2004%" y="421" width="0.0119%" height="15" fill="rgb(247,171,49)" fg:x="5973" fg:w="1"/><text x="71.5195%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.2004%" y="405" width="0.0119%" height="15" fill="rgb(235,164,51)" fg:x="5973" fg:w="1"/><text x="71.5195%" y="415.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.2004%" y="389" width="0.0119%" height="15" fill="rgb(246,107,20)" fg:x="5973" fg:w="1"/><text x="71.5195%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="71.2004%" y="373" width="0.0119%" height="15" fill="rgb(226,88,18)" fg:x="5973" fg:w="1"/><text x="71.5195%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="71.2004%" y="357" width="0.0119%" height="15" fill="rgb(235,136,9)" fg:x="5973" fg:w="1"/><text x="71.5195%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (22 samples, 0.26%)</title><rect x="70.9620%" y="533" width="0.2622%" height="15" fill="rgb(209,3,34)" fg:x="5953" fg:w="22"/><text x="71.2811%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (21 samples, 0.25%)</title><rect x="70.9739%" y="517" width="0.2503%" height="15" fill="rgb(213,38,19)" fg:x="5954" fg:w="21"/><text x="71.2930%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.2123%" y="501" width="0.0119%" height="15" fill="rgb(254,24,24)" fg:x="5974" fg:w="1"/><text x="71.5314%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="71.2123%" y="485" width="0.0119%" height="15" fill="rgb(219,122,42)" fg:x="5974" fg:w="1"/><text x="71.5314%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="71.2123%" y="469" width="0.0119%" height="15" fill="rgb(205,128,31)" fg:x="5974" fg:w="1"/><text x="71.5314%" y="479.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="71.2123%" y="453" width="0.0119%" height="15" fill="rgb(212,142,0)" fg:x="5974" fg:w="1"/><text x="71.5314%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="71.2242%" y="517" width="0.0119%" height="15" fill="rgb(211,25,35)" fg:x="5975" fg:w="1"/><text x="71.5433%" y="527.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="71.2242%" y="501" width="0.0119%" height="15" fill="rgb(220,150,53)" fg:x="5975" fg:w="1"/><text x="71.5433%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (42 samples, 0.50%)</title><rect x="70.7474%" y="549" width="0.5007%" height="15" fill="rgb(220,30,24)" fg:x="5935" fg:w="42"/><text x="71.0665%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="71.2242%" y="533" width="0.0238%" height="15" fill="rgb(218,86,23)" fg:x="5975" fg:w="2"/><text x="71.5433%" y="543.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="71.2361%" y="517" width="0.0119%" height="15" fill="rgb(206,62,27)" fg:x="5976" fg:w="1"/><text x="71.5552%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (53 samples, 0.63%)</title><rect x="70.6878%" y="565" width="0.6318%" height="15" fill="rgb(249,174,0)" fg:x="5930" fg:w="53"/><text x="71.0069%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="71.2481%" y="549" width="0.0715%" height="15" fill="rgb(246,67,27)" fg:x="5977" fg:w="6"/><text x="71.5672%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (6 samples, 0.07%)</title><rect x="71.2481%" y="533" width="0.0715%" height="15" fill="rgb(250,195,30)" fg:x="5977" fg:w="6"/><text x="71.5672%" y="543.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="71.2481%" y="517" width="0.0715%" height="15" fill="rgb(251,171,50)" fg:x="5977" fg:w="6"/><text x="71.5672%" y="527.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="71.2481%" y="501" width="0.0715%" height="15" fill="rgb(236,196,10)" fg:x="5977" fg:w="6"/><text x="71.5672%" y="511.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="71.2719%" y="485" width="0.0477%" height="15" fill="rgb(249,228,52)" fg:x="5979" fg:w="4"/><text x="71.5910%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="71.3196%" y="533" width="0.0358%" height="15" fill="rgb(219,60,51)" fg:x="5983" fg:w="3"/><text x="71.6387%" y="543.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="71.3196%" y="517" width="0.0358%" height="15" fill="rgb(240,198,24)" fg:x="5983" fg:w="3"/><text x="71.6387%" y="527.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="71.3196%" y="501" width="0.0358%" height="15" fill="rgb(240,192,40)" fg:x="5983" fg:w="3"/><text x="71.6387%" y="511.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="71.3196%" y="485" width="0.0358%" height="15" fill="rgb(219,118,5)" fg:x="5983" fg:w="3"/><text x="71.6387%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="71.3673%" y="517" width="0.0119%" height="15" fill="rgb(205,202,34)" fg:x="5987" fg:w="1"/><text x="71.6864%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="71.3673%" y="501" width="0.0119%" height="15" fill="rgb(234,153,26)" fg:x="5987" fg:w="1"/><text x="71.6864%" y="511.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="71.3673%" y="485" width="0.0119%" height="15" fill="rgb(229,26,29)" fg:x="5987" fg:w="1"/><text x="71.6864%" y="495.50"/></g><g><title>unlink_chunk.isra.2 (1 samples, 0.01%)</title><rect x="71.3673%" y="469" width="0.0119%" height="15" fill="rgb(237,115,21)" fg:x="5987" fg:w="1"/><text x="71.6864%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="71.3792%" y="485" width="0.0119%" height="15" fill="rgb(252,144,15)" fg:x="5988" fg:w="1"/><text x="71.6983%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="71.3792%" y="469" width="0.0119%" height="15" fill="rgb(232,26,13)" fg:x="5988" fg:w="1"/><text x="71.6983%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.3911%" y="469" width="0.0119%" height="15" fill="rgb(206,44,19)" fg:x="5989" fg:w="1"/><text x="71.7102%" y="479.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.3911%" y="453" width="0.0119%" height="15" fill="rgb(249,159,2)" fg:x="5989" fg:w="1"/><text x="71.7102%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="71.3911%" y="437" width="0.0119%" height="15" fill="rgb(231,5,32)" fg:x="5989" fg:w="1"/><text x="71.7102%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.3911%" y="421" width="0.0119%" height="15" fill="rgb(249,210,18)" fg:x="5989" fg:w="1"/><text x="71.7102%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="71.3911%" y="405" width="0.0119%" height="15" fill="rgb(215,223,36)" fg:x="5989" fg:w="1"/><text x="71.7102%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.3911%" y="389" width="0.0119%" height="15" fill="rgb(245,185,20)" fg:x="5989" fg:w="1"/><text x="71.7102%" y="399.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.3911%" y="373" width="0.0119%" height="15" fill="rgb(206,224,11)" fg:x="5989" fg:w="1"/><text x="71.7102%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="71.3911%" y="357" width="0.0119%" height="15" fill="rgb(248,73,42)" fg:x="5989" fg:w="1"/><text x="71.7102%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="71.3911%" y="341" width="0.0119%" height="15" fill="rgb(219,149,31)" fg:x="5989" fg:w="1"/><text x="71.7102%" y="351.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="71.4030%" y="453" width="0.0715%" height="15" fill="rgb(243,104,17)" fg:x="5990" fg:w="6"/><text x="71.7221%" y="463.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="71.4030%" y="437" width="0.0715%" height="15" fill="rgb(244,117,33)" fg:x="5990" fg:w="6"/><text x="71.7221%" y="447.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="71.4030%" y="421" width="0.0715%" height="15" fill="rgb(251,25,47)" fg:x="5990" fg:w="6"/><text x="71.7221%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="71.4746%" y="405" width="0.0477%" height="15" fill="rgb(249,70,13)" fg:x="5996" fg:w="4"/><text x="71.7937%" y="415.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="71.4746%" y="389" width="0.0477%" height="15" fill="rgb(217,133,18)" fg:x="5996" fg:w="4"/><text x="71.7937%" y="399.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="71.4746%" y="373" width="0.0477%" height="15" fill="rgb(248,97,28)" fg:x="5996" fg:w="4"/><text x="71.7937%" y="383.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="71.4984%" y="357" width="0.0238%" height="15" fill="rgb(237,193,4)" fg:x="5998" fg:w="2"/><text x="71.8175%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="71.3911%" y="485" width="0.1430%" height="15" fill="rgb(247,198,45)" fg:x="5989" fg:w="12"/><text x="71.7102%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="71.4030%" y="469" width="0.1311%" height="15" fill="rgb(245,2,20)" fg:x="5990" fg:w="11"/><text x="71.7221%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="71.4746%" y="453" width="0.0596%" height="15" fill="rgb(210,71,36)" fg:x="5996" fg:w="5"/><text x="71.7937%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="71.4746%" y="437" width="0.0596%" height="15" fill="rgb(238,114,30)" fg:x="5996" fg:w="5"/><text x="71.7937%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="71.4746%" y="421" width="0.0596%" height="15" fill="rgb(241,200,2)" fg:x="5996" fg:w="5"/><text x="71.7937%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.5222%" y="405" width="0.0119%" height="15" fill="rgb(232,106,18)" fg:x="6000" fg:w="1"/><text x="71.8413%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="71.5222%" y="389" width="0.0119%" height="15" fill="rgb(211,141,18)" fg:x="6000" fg:w="1"/><text x="71.8413%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.5222%" y="373" width="0.0119%" height="15" fill="rgb(224,9,9)" fg:x="6000" fg:w="1"/><text x="71.8413%" y="383.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="71.5222%" y="357" width="0.0119%" height="15" fill="rgb(249,137,46)" fg:x="6000" fg:w="1"/><text x="71.8413%" y="367.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="71.5222%" y="341" width="0.0119%" height="15" fill="rgb(236,44,45)" fg:x="6000" fg:w="1"/><text x="71.8413%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.5342%" y="469" width="0.0119%" height="15" fill="rgb(205,68,40)" fg:x="6001" fg:w="1"/><text x="71.8533%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="71.5461%" y="453" width="0.0119%" height="15" fill="rgb(214,198,49)" fg:x="6002" fg:w="1"/><text x="71.8652%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="71.3792%" y="501" width="0.1907%" height="15" fill="rgb(226,140,45)" fg:x="5988" fg:w="16"/><text x="71.6983%" y="511.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="71.5342%" y="485" width="0.0358%" height="15" fill="rgb(209,109,20)" fg:x="6001" fg:w="3"/><text x="71.8533%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="71.5461%" y="469" width="0.0238%" height="15" fill="rgb(217,33,46)" fg:x="6002" fg:w="2"/><text x="71.8652%" y="479.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="71.5580%" y="453" width="0.0119%" height="15" fill="rgb(232,150,33)" fg:x="6003" fg:w="1"/><text x="71.8771%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.5580%" y="437" width="0.0119%" height="15" fill="rgb(233,76,25)" fg:x="6003" fg:w="1"/><text x="71.8771%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="71.5580%" y="421" width="0.0119%" height="15" fill="rgb(254,219,23)" fg:x="6003" fg:w="1"/><text x="71.8771%" y="431.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="71.5580%" y="405" width="0.0119%" height="15" fill="rgb(233,108,4)" fg:x="6003" fg:w="1"/><text x="71.8771%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.5699%" y="469" width="0.0119%" height="15" fill="rgb(229,98,6)" fg:x="6004" fg:w="1"/><text x="71.8890%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="71.5699%" y="453" width="0.0119%" height="15" fill="rgb(217,40,27)" fg:x="6004" fg:w="1"/><text x="71.8890%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.5699%" y="437" width="0.0119%" height="15" fill="rgb(221,35,43)" fg:x="6004" fg:w="1"/><text x="71.8890%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="71.5699%" y="421" width="0.0119%" height="15" fill="rgb(212,107,11)" fg:x="6004" fg:w="1"/><text x="71.8890%" y="431.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="71.5699%" y="405" width="0.0119%" height="15" fill="rgb(245,42,44)" fg:x="6004" fg:w="1"/><text x="71.8890%" y="415.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="71.5818%" y="453" width="0.0358%" height="15" fill="rgb(209,31,12)" fg:x="6005" fg:w="3"/><text x="71.9009%" y="463.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="71.5938%" y="437" width="0.0238%" height="15" fill="rgb(210,228,54)" fg:x="6006" fg:w="2"/><text x="71.9129%" y="447.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="71.5938%" y="421" width="0.0238%" height="15" fill="rgb(241,19,33)" fg:x="6006" fg:w="2"/><text x="71.9129%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.6176%" y="405" width="0.0119%" height="15" fill="rgb(229,51,27)" fg:x="6008" fg:w="1"/><text x="71.9367%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="71.6176%" y="389" width="0.0119%" height="15" fill="rgb(214,167,49)" fg:x="6008" fg:w="1"/><text x="71.9367%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.6176%" y="373" width="0.0119%" height="15" fill="rgb(248,140,47)" fg:x="6008" fg:w="1"/><text x="71.9367%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="71.6176%" y="357" width="0.0119%" height="15" fill="rgb(228,6,51)" fg:x="6008" fg:w="1"/><text x="71.9367%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="71.6176%" y="341" width="0.0119%" height="15" fill="rgb(242,44,53)" fg:x="6008" fg:w="1"/><text x="71.9367%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="71.5818%" y="469" width="0.0596%" height="15" fill="rgb(249,90,50)" fg:x="6005" fg:w="5"/><text x="71.9009%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="71.6176%" y="453" width="0.0238%" height="15" fill="rgb(222,84,19)" fg:x="6008" fg:w="2"/><text x="71.9367%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="71.6176%" y="437" width="0.0238%" height="15" fill="rgb(214,140,12)" fg:x="6008" fg:w="2"/><text x="71.9367%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="71.6176%" y="421" width="0.0238%" height="15" fill="rgb(210,20,43)" fg:x="6008" fg:w="2"/><text x="71.9367%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.6295%" y="405" width="0.0119%" height="15" fill="rgb(243,1,40)" fg:x="6009" fg:w="1"/><text x="71.9486%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.6295%" y="389" width="0.0119%" height="15" fill="rgb(224,102,26)" fg:x="6009" fg:w="1"/><text x="71.9486%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="71.5699%" y="501" width="0.0954%" height="15" fill="rgb(221,179,1)" fg:x="6004" fg:w="8"/><text x="71.8890%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="71.5699%" y="485" width="0.0954%" height="15" fill="rgb(216,209,47)" fg:x="6004" fg:w="8"/><text x="71.8890%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="71.6414%" y="469" width="0.0238%" height="15" fill="rgb(251,135,9)" fg:x="6010" fg:w="2"/><text x="71.9605%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (29 samples, 0.35%)</title><rect x="71.3792%" y="517" width="0.3457%" height="15" fill="rgb(242,9,36)" fg:x="5988" fg:w="29"/><text x="71.6983%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (5 samples, 0.06%)</title><rect x="71.6653%" y="501" width="0.0596%" height="15" fill="rgb(249,60,37)" fg:x="6012" fg:w="5"/><text x="71.9844%" y="511.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="71.6772%" y="485" width="0.0477%" height="15" fill="rgb(230,66,45)" fg:x="6013" fg:w="4"/><text x="71.9963%" y="495.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="71.6772%" y="469" width="0.0477%" height="15" fill="rgb(216,1,47)" fg:x="6013" fg:w="4"/><text x="71.9963%" y="479.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="71.6891%" y="453" width="0.0358%" height="15" fill="rgb(235,8,23)" fg:x="6014" fg:w="3"/><text x="72.0082%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (35 samples, 0.42%)</title><rect x="71.3553%" y="533" width="0.4172%" height="15" fill="rgb(225,136,11)" fg:x="5986" fg:w="35"/><text x="71.6744%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="71.7249%" y="517" width="0.0477%" height="15" fill="rgb(228,63,44)" fg:x="6017" fg:w="4"/><text x="72.0440%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="71.7249%" y="501" width="0.0477%" height="15" fill="rgb(240,43,52)" fg:x="6017" fg:w="4"/><text x="72.0440%" y="511.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="71.7368%" y="485" width="0.0358%" height="15" fill="rgb(217,167,36)" fg:x="6018" fg:w="3"/><text x="72.0559%" y="495.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="71.7368%" y="469" width="0.0358%" height="15" fill="rgb(250,19,6)" fg:x="6018" fg:w="3"/><text x="72.0559%" y="479.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="71.7368%" y="453" width="0.0358%" height="15" fill="rgb(236,60,51)" fg:x="6018" fg:w="3"/><text x="72.0559%" y="463.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="71.7726%" y="517" width="0.0238%" height="15" fill="rgb(222,217,20)" fg:x="6021" fg:w="2"/><text x="72.0917%" y="527.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="71.7726%" y="501" width="0.0238%" height="15" fill="rgb(242,65,52)" fg:x="6021" fg:w="2"/><text x="72.0917%" y="511.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="71.7726%" y="485" width="0.0238%" height="15" fill="rgb(217,5,41)" fg:x="6021" fg:w="2"/><text x="72.0917%" y="495.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="71.7964%" y="517" width="0.0119%" height="15" fill="rgb(223,208,53)" fg:x="6023" fg:w="1"/><text x="72.1155%" y="527.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="71.8322%" y="485" width="0.0358%" height="15" fill="rgb(221,104,30)" fg:x="6026" fg:w="3"/><text x="72.1513%" y="495.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="71.8322%" y="469" width="0.0358%" height="15" fill="rgb(230,210,42)" fg:x="6026" fg:w="3"/><text x="72.1513%" y="479.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="71.8322%" y="453" width="0.0358%" height="15" fill="rgb(206,205,27)" fg:x="6026" fg:w="3"/><text x="72.1513%" y="463.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="71.8679%" y="421" width="0.0119%" height="15" fill="rgb(233,114,38)" fg:x="6029" fg:w="1"/><text x="72.1870%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="71.8679%" y="453" width="0.0238%" height="15" fill="rgb(216,174,36)" fg:x="6029" fg:w="2"/><text x="72.1870%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="71.8679%" y="437" width="0.0238%" height="15" fill="rgb(211,30,9)" fg:x="6029" fg:w="2"/><text x="72.1870%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="71.8798%" y="421" width="0.0119%" height="15" fill="rgb(216,8,21)" fg:x="6030" fg:w="1"/><text x="72.1989%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.8798%" y="405" width="0.0119%" height="15" fill="rgb(237,209,39)" fg:x="6030" fg:w="1"/><text x="72.1989%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="71.8798%" y="389" width="0.0119%" height="15" fill="rgb(235,111,47)" fg:x="6030" fg:w="1"/><text x="72.1989%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="71.8798%" y="373" width="0.0119%" height="15" fill="rgb(216,139,9)" fg:x="6030" fg:w="1"/><text x="72.1989%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="71.8679%" y="469" width="0.0358%" height="15" fill="rgb(248,185,4)" fg:x="6029" fg:w="3"/><text x="72.1870%" y="479.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="71.8918%" y="453" width="0.0119%" height="15" fill="rgb(239,185,25)" fg:x="6031" fg:w="1"/><text x="72.2109%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.8918%" y="437" width="0.0119%" height="15" fill="rgb(233,207,8)" fg:x="6031" fg:w="1"/><text x="72.2109%" y="447.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="71.8918%" y="421" width="0.0119%" height="15" fill="rgb(249,220,24)" fg:x="6031" fg:w="1"/><text x="72.2109%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.8918%" y="405" width="0.0119%" height="15" fill="rgb(221,50,14)" fg:x="6031" fg:w="1"/><text x="72.2109%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="71.8918%" y="389" width="0.0119%" height="15" fill="rgb(227,79,42)" fg:x="6031" fg:w="1"/><text x="72.2109%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="71.8918%" y="373" width="0.0119%" height="15" fill="rgb(228,218,49)" fg:x="6031" fg:w="1"/><text x="72.2109%" y="383.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="71.9037%" y="421" width="0.0238%" height="15" fill="rgb(249,18,15)" fg:x="6032" fg:w="2"/><text x="72.2228%" y="431.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="71.9037%" y="405" width="0.0238%" height="15" fill="rgb(212,84,27)" fg:x="6032" fg:w="2"/><text x="72.2228%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="71.9275%" y="421" width="0.0119%" height="15" fill="rgb(207,83,24)" fg:x="6034" fg:w="1"/><text x="72.2466%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.9275%" y="405" width="0.0119%" height="15" fill="rgb(219,61,7)" fg:x="6034" fg:w="1"/><text x="72.2466%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="71.9275%" y="389" width="0.0119%" height="15" fill="rgb(211,43,29)" fg:x="6034" fg:w="1"/><text x="72.2466%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="71.9275%" y="373" width="0.0119%" height="15" fill="rgb(243,15,23)" fg:x="6034" fg:w="1"/><text x="72.2466%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.9394%" y="405" width="0.0119%" height="15" fill="rgb(217,52,28)" fg:x="6035" fg:w="1"/><text x="72.2585%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="71.9037%" y="437" width="0.0715%" height="15" fill="rgb(210,35,6)" fg:x="6032" fg:w="6"/><text x="72.2228%" y="447.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="71.9394%" y="421" width="0.0358%" height="15" fill="rgb(237,187,28)" fg:x="6035" fg:w="3"/><text x="72.2585%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="71.9514%" y="405" width="0.0238%" height="15" fill="rgb(231,136,24)" fg:x="6036" fg:w="2"/><text x="72.2705%" y="415.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="71.9514%" y="389" width="0.0238%" height="15" fill="rgb(205,176,52)" fg:x="6036" fg:w="2"/><text x="72.2705%" y="399.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="71.9514%" y="373" width="0.0238%" height="15" fill="rgb(218,65,12)" fg:x="6036" fg:w="2"/><text x="72.2705%" y="383.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="71.9514%" y="357" width="0.0238%" height="15" fill="rgb(234,101,21)" fg:x="6036" fg:w="2"/><text x="72.2705%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.9752%" y="437" width="0.0119%" height="15" fill="rgb(206,13,20)" fg:x="6038" fg:w="1"/><text x="72.2943%" y="447.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="71.9752%" y="421" width="0.0119%" height="15" fill="rgb(236,89,44)" fg:x="6038" fg:w="1"/><text x="72.2943%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.9871%" y="405" width="0.0119%" height="15" fill="rgb(225,52,17)" fg:x="6039" fg:w="1"/><text x="72.3062%" y="415.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="71.9871%" y="389" width="0.0119%" height="15" fill="rgb(214,27,25)" fg:x="6039" fg:w="1"/><text x="72.3062%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="71.9871%" y="373" width="0.0119%" height="15" fill="rgb(240,141,35)" fg:x="6039" fg:w="1"/><text x="72.3062%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="71.9871%" y="357" width="0.0119%" height="15" fill="rgb(216,126,3)" fg:x="6039" fg:w="1"/><text x="72.3062%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="71.9990%" y="357" width="0.0119%" height="15" fill="rgb(249,196,23)" fg:x="6040" fg:w="1"/><text x="72.3181%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="71.9990%" y="341" width="0.0119%" height="15" fill="rgb(215,185,43)" fg:x="6040" fg:w="1"/><text x="72.3181%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="71.9990%" y="389" width="0.0238%" height="15" fill="rgb(208,194,36)" fg:x="6040" fg:w="2"/><text x="72.3181%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="71.9990%" y="373" width="0.0238%" height="15" fill="rgb(245,182,12)" fg:x="6040" fg:w="2"/><text x="72.3181%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="72.0110%" y="357" width="0.0119%" height="15" fill="rgb(244,222,52)" fg:x="6041" fg:w="1"/><text x="72.3301%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.0110%" y="341" width="0.0119%" height="15" fill="rgb(236,222,51)" fg:x="6041" fg:w="1"/><text x="72.3301%" y="351.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="72.0110%" y="325" width="0.0119%" height="15" fill="rgb(254,71,22)" fg:x="6041" fg:w="1"/><text x="72.3301%" y="335.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="72.0110%" y="309" width="0.0119%" height="15" fill="rgb(250,104,15)" fg:x="6041" fg:w="1"/><text x="72.3301%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="71.9871%" y="437" width="0.0477%" height="15" fill="rgb(229,223,46)" fg:x="6039" fg:w="4"/><text x="72.3062%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="71.9871%" y="421" width="0.0477%" height="15" fill="rgb(209,129,18)" fg:x="6039" fg:w="4"/><text x="72.3062%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="71.9990%" y="405" width="0.0358%" height="15" fill="rgb(224,160,1)" fg:x="6040" fg:w="3"/><text x="72.3181%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="72.0229%" y="389" width="0.0119%" height="15" fill="rgb(237,112,21)" fg:x="6042" fg:w="1"/><text x="72.3420%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="71.9037%" y="469" width="0.1430%" height="15" fill="rgb(215,198,53)" fg:x="6032" fg:w="12"/><text x="72.2228%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="71.9037%" y="453" width="0.1430%" height="15" fill="rgb(218,227,35)" fg:x="6032" fg:w="12"/><text x="72.2228%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.0348%" y="437" width="0.0119%" height="15" fill="rgb(232,121,22)" fg:x="6043" fg:w="1"/><text x="72.3539%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="72.0348%" y="421" width="0.0119%" height="15" fill="rgb(235,52,54)" fg:x="6043" fg:w="1"/><text x="72.3539%" y="431.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="72.0348%" y="405" width="0.0119%" height="15" fill="rgb(219,21,44)" fg:x="6043" fg:w="1"/><text x="72.3539%" y="415.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="72.0348%" y="389" width="0.0119%" height="15" fill="rgb(221,51,43)" fg:x="6043" fg:w="1"/><text x="72.3539%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (17 samples, 0.20%)</title><rect x="71.8679%" y="485" width="0.2026%" height="15" fill="rgb(225,77,42)" fg:x="6029" fg:w="17"/><text x="72.1870%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="72.0467%" y="469" width="0.0238%" height="15" fill="rgb(214,117,53)" fg:x="6044" fg:w="2"/><text x="72.3658%" y="479.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="72.0467%" y="453" width="0.0238%" height="15" fill="rgb(218,227,27)" fg:x="6044" fg:w="2"/><text x="72.3658%" y="463.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="72.0467%" y="437" width="0.0238%" height="15" fill="rgb(223,214,36)" fg:x="6044" fg:w="2"/><text x="72.3658%" y="447.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="72.0467%" y="421" width="0.0238%" height="15" fill="rgb(235,21,7)" fg:x="6044" fg:w="2"/><text x="72.3658%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (27 samples, 0.32%)</title><rect x="71.8202%" y="501" width="0.3219%" height="15" fill="rgb(244,216,4)" fg:x="6025" fg:w="27"/><text x="72.1393%" y="511.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="72.0706%" y="485" width="0.0715%" height="15" fill="rgb(249,197,24)" fg:x="6046" fg:w="6"/><text x="72.3897%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (6 samples, 0.07%)</title><rect x="72.0706%" y="469" width="0.0715%" height="15" fill="rgb(222,169,49)" fg:x="6046" fg:w="6"/><text x="72.3897%" y="479.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="72.0706%" y="453" width="0.0715%" height="15" fill="rgb(207,137,33)" fg:x="6046" fg:w="6"/><text x="72.3897%" y="463.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="72.0706%" y="437" width="0.0715%" height="15" fill="rgb(219,180,40)" fg:x="6046" fg:w="6"/><text x="72.3897%" y="447.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="72.0944%" y="421" width="0.0477%" height="15" fill="rgb(250,163,42)" fg:x="6048" fg:w="4"/><text x="72.4135%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.1421%" y="469" width="0.0119%" height="15" fill="rgb(239,163,0)" fg:x="6052" fg:w="1"/><text x="72.4612%" y="479.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.1421%" y="453" width="0.0119%" height="15" fill="rgb(252,38,28)" fg:x="6052" fg:w="1"/><text x="72.4612%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="72.1421%" y="437" width="0.0119%" height="15" fill="rgb(254,203,26)" fg:x="6052" fg:w="1"/><text x="72.4612%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="72.1421%" y="421" width="0.0119%" height="15" fill="rgb(209,129,32)" fg:x="6052" fg:w="1"/><text x="72.4612%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="72.1540%" y="453" width="0.0119%" height="15" fill="rgb(207,177,52)" fg:x="6053" fg:w="1"/><text x="72.4731%" y="463.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="72.1540%" y="437" width="0.0119%" height="15" fill="rgb(230,209,36)" fg:x="6053" fg:w="1"/><text x="72.4731%" y="447.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="72.1540%" y="421" width="0.0119%" height="15" fill="rgb(238,131,0)" fg:x="6053" fg:w="1"/><text x="72.4731%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.1779%" y="405" width="0.0119%" height="15" fill="rgb(218,61,31)" fg:x="6055" fg:w="1"/><text x="72.4970%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="72.1779%" y="389" width="0.0119%" height="15" fill="rgb(232,6,53)" fg:x="6055" fg:w="1"/><text x="72.4970%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="72.1779%" y="373" width="0.0119%" height="15" fill="rgb(254,100,32)" fg:x="6055" fg:w="1"/><text x="72.4970%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="72.1779%" y="421" width="0.0238%" height="15" fill="rgb(229,194,49)" fg:x="6055" fg:w="2"/><text x="72.4970%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.1898%" y="405" width="0.0119%" height="15" fill="rgb(206,208,39)" fg:x="6056" fg:w="1"/><text x="72.5089%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="72.1898%" y="389" width="0.0119%" height="15" fill="rgb(246,226,14)" fg:x="6056" fg:w="1"/><text x="72.5089%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="72.1898%" y="373" width="0.0119%" height="15" fill="rgb(226,48,32)" fg:x="6056" fg:w="1"/><text x="72.5089%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="72.1659%" y="437" width="0.0477%" height="15" fill="rgb(252,43,54)" fg:x="6054" fg:w="4"/><text x="72.4850%" y="447.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="72.2017%" y="421" width="0.0119%" height="15" fill="rgb(207,124,0)" fg:x="6057" fg:w="1"/><text x="72.5208%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.2017%" y="405" width="0.0119%" height="15" fill="rgb(248,188,30)" fg:x="6057" fg:w="1"/><text x="72.5208%" y="415.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="72.2017%" y="389" width="0.0119%" height="15" fill="rgb(232,14,43)" fg:x="6057" fg:w="1"/><text x="72.5208%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.2017%" y="373" width="0.0119%" height="15" fill="rgb(218,52,29)" fg:x="6057" fg:w="1"/><text x="72.5208%" y="383.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.2017%" y="357" width="0.0119%" height="15" fill="rgb(218,176,50)" fg:x="6057" fg:w="1"/><text x="72.5208%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="72.2017%" y="341" width="0.0119%" height="15" fill="rgb(213,112,0)" fg:x="6057" fg:w="1"/><text x="72.5208%" y="351.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="72.2017%" y="325" width="0.0119%" height="15" fill="rgb(244,216,8)" fg:x="6057" fg:w="1"/><text x="72.5208%" y="335.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="72.2136%" y="389" width="0.0119%" height="15" fill="rgb(224,148,53)" fg:x="6058" fg:w="1"/><text x="72.5327%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="72.2136%" y="373" width="0.0119%" height="15" fill="rgb(241,133,40)" fg:x="6058" fg:w="1"/><text x="72.5327%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.2255%" y="373" width="0.0119%" height="15" fill="rgb(232,17,44)" fg:x="6059" fg:w="1"/><text x="72.5446%" y="383.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="72.2255%" y="357" width="0.0119%" height="15" fill="rgb(213,32,25)" fg:x="6059" fg:w="1"/><text x="72.5446%" y="367.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="72.2255%" y="341" width="0.0119%" height="15" fill="rgb(249,115,27)" fg:x="6059" fg:w="1"/><text x="72.5446%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="72.2136%" y="405" width="0.0477%" height="15" fill="rgb(241,50,1)" fg:x="6058" fg:w="4"/><text x="72.5327%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="72.2255%" y="389" width="0.0358%" height="15" fill="rgb(244,175,40)" fg:x="6059" fg:w="3"/><text x="72.5446%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="72.2375%" y="373" width="0.0238%" height="15" fill="rgb(230,94,34)" fg:x="6060" fg:w="2"/><text x="72.5566%" y="383.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="72.2375%" y="357" width="0.0238%" height="15" fill="rgb(223,185,29)" fg:x="6060" fg:w="2"/><text x="72.5566%" y="367.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="72.2375%" y="341" width="0.0238%" height="15" fill="rgb(225,193,15)" fg:x="6060" fg:w="2"/><text x="72.5566%" y="351.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="72.2613%" y="373" width="0.0238%" height="15" fill="rgb(252,121,38)" fg:x="6062" fg:w="2"/><text x="72.5804%" y="383.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="72.2613%" y="357" width="0.0238%" height="15" fill="rgb(232,44,12)" fg:x="6062" fg:w="2"/><text x="72.5804%" y="367.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="72.2613%" y="389" width="0.0358%" height="15" fill="rgb(226,45,54)" fg:x="6062" fg:w="3"/><text x="72.5804%" y="399.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="72.2851%" y="373" width="0.0119%" height="15" fill="rgb(209,67,17)" fg:x="6064" fg:w="1"/><text x="72.6042%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="72.2971%" y="357" width="0.0119%" height="15" fill="rgb(219,108,52)" fg:x="6065" fg:w="1"/><text x="72.6162%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="72.2971%" y="341" width="0.0119%" height="15" fill="rgb(216,118,19)" fg:x="6065" fg:w="1"/><text x="72.6162%" y="351.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="72.3209%" y="325" width="0.0119%" height="15" fill="rgb(228,120,40)" fg:x="6067" fg:w="1"/><text x="72.6400%" y="335.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="72.3209%" y="309" width="0.0119%" height="15" fill="rgb(221,218,34)" fg:x="6067" fg:w="1"/><text x="72.6400%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="72.3328%" y="309" width="0.0238%" height="15" fill="rgb(235,89,14)" fg:x="6068" fg:w="2"/><text x="72.6519%" y="319.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="72.3328%" y="293" width="0.0238%" height="15" fill="rgb(248,89,7)" fg:x="6068" fg:w="2"/><text x="72.6519%" y="303.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="72.3328%" y="277" width="0.0238%" height="15" fill="rgb(212,114,34)" fg:x="6068" fg:w="2"/><text x="72.6519%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="72.2136%" y="437" width="0.1550%" height="15" fill="rgb(246,88,32)" fg:x="6058" fg:w="13"/><text x="72.5327%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="72.2136%" y="421" width="0.1550%" height="15" fill="rgb(237,135,0)" fg:x="6058" fg:w="13"/><text x="72.5327%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="72.2613%" y="405" width="0.1073%" height="15" fill="rgb(220,201,54)" fg:x="6062" fg:w="9"/><text x="72.5804%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="72.2971%" y="389" width="0.0715%" height="15" fill="rgb(210,142,36)" fg:x="6065" fg:w="6"/><text x="72.6162%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="72.2971%" y="373" width="0.0715%" height="15" fill="rgb(247,189,26)" fg:x="6065" fg:w="6"/><text x="72.6162%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="72.3090%" y="357" width="0.0596%" height="15" fill="rgb(223,89,24)" fg:x="6066" fg:w="5"/><text x="72.6281%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="72.3209%" y="341" width="0.0477%" height="15" fill="rgb(205,90,19)" fg:x="6067" fg:w="4"/><text x="72.6400%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="72.3328%" y="325" width="0.0358%" height="15" fill="rgb(234,57,40)" fg:x="6068" fg:w="3"/><text x="72.6519%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.3567%" y="309" width="0.0119%" height="15" fill="rgb(213,109,10)" fg:x="6070" fg:w="1"/><text x="72.6758%" y="319.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="72.3567%" y="293" width="0.0119%" height="15" fill="rgb(214,189,23)" fg:x="6070" fg:w="1"/><text x="72.6758%" y="303.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="72.3686%" y="405" width="0.0834%" height="15" fill="rgb(234,200,10)" fg:x="6071" fg:w="7"/><text x="72.6877%" y="415.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="72.3805%" y="389" width="0.0715%" height="15" fill="rgb(221,148,16)" fg:x="6072" fg:w="6"/><text x="72.6996%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (25 samples, 0.30%)</title><rect x="72.1659%" y="453" width="0.2980%" height="15" fill="rgb(230,115,10)" fg:x="6054" fg:w="25"/><text x="72.4850%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (8 samples, 0.10%)</title><rect x="72.3686%" y="437" width="0.0954%" height="15" fill="rgb(220,106,42)" fg:x="6071" fg:w="8"/><text x="72.6877%" y="447.50"/></g><g><title>operator new (8 samples, 0.10%)</title><rect x="72.3686%" y="421" width="0.0954%" height="15" fill="rgb(225,105,39)" fg:x="6071" fg:w="8"/><text x="72.6877%" y="431.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="72.4520%" y="405" width="0.0119%" height="15" fill="rgb(211,161,38)" fg:x="6078" fg:w="1"/><text x="72.7711%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (27 samples, 0.32%)</title><rect x="72.1540%" y="469" width="0.3219%" height="15" fill="rgb(213,23,19)" fg:x="6053" fg:w="27"/><text x="72.4731%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="72.4639%" y="453" width="0.0119%" height="15" fill="rgb(240,2,33)" fg:x="6079" fg:w="1"/><text x="72.7830%" y="463.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="72.4759%" y="453" width="0.0358%" height="15" fill="rgb(221,29,45)" fg:x="6080" fg:w="3"/><text x="72.7950%" y="463.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="72.4759%" y="437" width="0.0358%" height="15" fill="rgb(242,10,19)" fg:x="6080" fg:w="3"/><text x="72.7950%" y="447.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="72.4759%" y="421" width="0.0358%" height="15" fill="rgb(250,84,37)" fg:x="6080" fg:w="3"/><text x="72.7950%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.5116%" y="437" width="0.0119%" height="15" fill="rgb(214,136,7)" fg:x="6083" fg:w="1"/><text x="72.8307%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="72.5116%" y="421" width="0.0119%" height="15" fill="rgb(231,189,12)" fg:x="6083" fg:w="1"/><text x="72.8307%" y="431.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="72.5116%" y="405" width="0.0119%" height="15" fill="rgb(244,40,16)" fg:x="6083" fg:w="1"/><text x="72.8307%" y="415.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="72.5116%" y="389" width="0.0119%" height="15" fill="rgb(217,29,15)" fg:x="6083" fg:w="1"/><text x="72.8307%" y="399.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="72.5355%" y="421" width="0.0358%" height="15" fill="rgb(235,172,33)" fg:x="6085" fg:w="3"/><text x="72.8546%" y="431.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="72.5355%" y="405" width="0.0358%" height="15" fill="rgb(206,148,28)" fg:x="6085" fg:w="3"/><text x="72.8546%" y="415.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="72.5355%" y="389" width="0.0358%" height="15" fill="rgb(251,167,37)" fg:x="6085" fg:w="3"/><text x="72.8546%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.5712%" y="373" width="0.0119%" height="15" fill="rgb(229,94,52)" fg:x="6088" fg:w="1"/><text x="72.8903%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="72.5712%" y="357" width="0.0119%" height="15" fill="rgb(216,132,9)" fg:x="6088" fg:w="1"/><text x="72.8903%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="72.5712%" y="341" width="0.0119%" height="15" fill="rgb(208,110,29)" fg:x="6088" fg:w="1"/><text x="72.8903%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="72.5712%" y="389" width="0.0238%" height="15" fill="rgb(241,23,8)" fg:x="6088" fg:w="2"/><text x="72.8903%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.5831%" y="373" width="0.0119%" height="15" fill="rgb(208,26,35)" fg:x="6089" fg:w="1"/><text x="72.9022%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="72.5831%" y="357" width="0.0119%" height="15" fill="rgb(242,165,34)" fg:x="6089" fg:w="1"/><text x="72.9022%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="72.5831%" y="341" width="0.0119%" height="15" fill="rgb(222,222,33)" fg:x="6089" fg:w="1"/><text x="72.9022%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="72.5712%" y="405" width="0.0358%" height="15" fill="rgb(227,16,52)" fg:x="6088" fg:w="3"/><text x="72.8903%" y="415.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="72.5951%" y="389" width="0.0119%" height="15" fill="rgb(213,93,12)" fg:x="6090" fg:w="1"/><text x="72.9142%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.5951%" y="373" width="0.0119%" height="15" fill="rgb(238,41,5)" fg:x="6090" fg:w="1"/><text x="72.9142%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="72.6070%" y="357" width="0.0119%" height="15" fill="rgb(211,60,15)" fg:x="6091" fg:w="1"/><text x="72.9261%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="72.6070%" y="341" width="0.0119%" height="15" fill="rgb(209,11,34)" fg:x="6091" fg:w="1"/><text x="72.9261%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="72.6070%" y="373" width="0.0238%" height="15" fill="rgb(254,155,53)" fg:x="6091" fg:w="2"/><text x="72.9261%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="72.6189%" y="357" width="0.0119%" height="15" fill="rgb(236,174,8)" fg:x="6092" fg:w="1"/><text x="72.9380%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.6189%" y="341" width="0.0119%" height="15" fill="rgb(229,31,27)" fg:x="6092" fg:w="1"/><text x="72.9380%" y="351.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="72.6189%" y="325" width="0.0119%" height="15" fill="rgb(242,226,26)" fg:x="6092" fg:w="1"/><text x="72.9380%" y="335.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="72.6189%" y="309" width="0.0119%" height="15" fill="rgb(234,32,40)" fg:x="6092" fg:w="1"/><text x="72.9380%" y="319.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="72.6308%" y="325" width="0.0238%" height="15" fill="rgb(249,226,47)" fg:x="6093" fg:w="2"/><text x="72.9499%" y="335.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="72.6308%" y="309" width="0.0238%" height="15" fill="rgb(212,6,26)" fg:x="6093" fg:w="2"/><text x="72.9499%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="72.6666%" y="309" width="0.0477%" height="15" fill="rgb(249,202,29)" fg:x="6096" fg:w="4"/><text x="72.9857%" y="319.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="72.6666%" y="293" width="0.0477%" height="15" fill="rgb(226,106,4)" fg:x="6096" fg:w="4"/><text x="72.9857%" y="303.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="72.6666%" y="277" width="0.0477%" height="15" fill="rgb(251,2,27)" fg:x="6096" fg:w="4"/><text x="72.9857%" y="287.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="72.6547%" y="325" width="0.0715%" height="15" fill="rgb(236,208,0)" fg:x="6095" fg:w="6"/><text x="72.9738%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.7143%" y="309" width="0.0119%" height="15" fill="rgb(211,66,17)" fg:x="6100" fg:w="1"/><text x="73.0334%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="72.6070%" y="405" width="0.1311%" height="15" fill="rgb(216,129,9)" fg:x="6091" fg:w="11"/><text x="72.9261%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="72.6070%" y="389" width="0.1311%" height="15" fill="rgb(215,130,23)" fg:x="6091" fg:w="11"/><text x="72.9261%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="72.6308%" y="373" width="0.1073%" height="15" fill="rgb(253,157,11)" fg:x="6093" fg:w="9"/><text x="72.9499%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="72.6308%" y="357" width="0.1073%" height="15" fill="rgb(224,25,14)" fg:x="6093" fg:w="9"/><text x="72.9499%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="72.6308%" y="341" width="0.1073%" height="15" fill="rgb(238,16,7)" fg:x="6093" fg:w="9"/><text x="72.9499%" y="351.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="72.7262%" y="325" width="0.0119%" height="15" fill="rgb(228,74,11)" fg:x="6101" fg:w="1"/><text x="73.0453%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.7262%" y="309" width="0.0119%" height="15" fill="rgb(239,221,27)" fg:x="6101" fg:w="1"/><text x="73.0453%" y="319.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (23 samples, 0.27%)</title><rect x="72.5712%" y="421" width="0.2742%" height="15" fill="rgb(229,166,18)" fg:x="6088" fg:w="23"/><text x="72.8903%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (9 samples, 0.11%)</title><rect x="72.7381%" y="405" width="0.1073%" height="15" fill="rgb(254,94,46)" fg:x="6102" fg:w="9"/><text x="73.0572%" y="415.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="72.7381%" y="389" width="0.1073%" height="15" fill="rgb(241,79,19)" fg:x="6102" fg:w="9"/><text x="73.0572%" y="399.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="72.7381%" y="373" width="0.1073%" height="15" fill="rgb(228,99,51)" fg:x="6102" fg:w="9"/><text x="73.0572%" y="383.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="72.7620%" y="357" width="0.0834%" height="15" fill="rgb(211,15,6)" fg:x="6104" fg:w="7"/><text x="73.0811%" y="367.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="72.8454%" y="421" width="0.0596%" height="15" fill="rgb(245,107,54)" fg:x="6111" fg:w="5"/><text x="73.1645%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (5 samples, 0.06%)</title><rect x="72.8454%" y="405" width="0.0596%" height="15" fill="rgb(243,3,2)" fg:x="6111" fg:w="5"/><text x="73.1645%" y="415.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="72.8454%" y="389" width="0.0596%" height="15" fill="rgb(206,122,10)" fg:x="6111" fg:w="5"/><text x="73.1645%" y="399.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="72.8454%" y="373" width="0.0596%" height="15" fill="rgb(224,88,4)" fg:x="6111" fg:w="5"/><text x="73.1645%" y="383.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="72.8573%" y="357" width="0.0477%" height="15" fill="rgb(230,1,41)" fg:x="6112" fg:w="4"/><text x="73.1764%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (33 samples, 0.39%)</title><rect x="72.5235%" y="437" width="0.3934%" height="15" fill="rgb(230,1,31)" fg:x="6084" fg:w="33"/><text x="72.8426%" y="447.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="72.9050%" y="421" width="0.0119%" height="15" fill="rgb(232,67,19)" fg:x="6116" fg:w="1"/><text x="73.2241%" y="431.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="72.9169%" y="389" width="0.0238%" height="15" fill="rgb(222,206,20)" fg:x="6117" fg:w="2"/><text x="73.2360%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="72.9288%" y="373" width="0.0119%" height="15" fill="rgb(217,225,19)" fg:x="6118" fg:w="1"/><text x="73.2479%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="72.9646%" y="325" width="0.0119%" height="15" fill="rgb(234,13,33)" fg:x="6121" fg:w="1"/><text x="73.2837%" y="335.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="72.9646%" y="309" width="0.0119%" height="15" fill="rgb(254,5,1)" fg:x="6121" fg:w="1"/><text x="73.2837%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="72.9646%" y="373" width="0.0238%" height="15" fill="rgb(211,121,41)" fg:x="6121" fg:w="2"/><text x="73.2837%" y="383.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="72.9646%" y="357" width="0.0238%" height="15" fill="rgb(213,199,35)" fg:x="6121" fg:w="2"/><text x="73.2837%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="72.9646%" y="341" width="0.0238%" height="15" fill="rgb(240,118,22)" fg:x="6121" fg:w="2"/><text x="73.2837%" y="351.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="72.9765%" y="325" width="0.0119%" height="15" fill="rgb(238,184,25)" fg:x="6122" fg:w="1"/><text x="73.2956%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.9765%" y="309" width="0.0119%" height="15" fill="rgb(210,165,6)" fg:x="6122" fg:w="1"/><text x="73.2956%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="72.9884%" y="341" width="0.0119%" height="15" fill="rgb(235,149,5)" fg:x="6123" fg:w="1"/><text x="73.3075%" y="351.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="72.9884%" y="325" width="0.0119%" height="15" fill="rgb(221,63,5)" fg:x="6123" fg:w="1"/><text x="73.3075%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="72.9884%" y="373" width="0.0238%" height="15" fill="rgb(250,44,41)" fg:x="6123" fg:w="2"/><text x="73.3075%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="72.9884%" y="357" width="0.0238%" height="15" fill="rgb(235,112,47)" fg:x="6123" fg:w="2"/><text x="73.3075%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.0004%" y="341" width="0.0119%" height="15" fill="rgb(252,176,34)" fg:x="6124" fg:w="1"/><text x="73.3195%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="73.0004%" y="325" width="0.0119%" height="15" fill="rgb(234,50,19)" fg:x="6124" fg:w="1"/><text x="73.3195%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.0004%" y="309" width="0.0119%" height="15" fill="rgb(241,195,31)" fg:x="6124" fg:w="1"/><text x="73.3195%" y="319.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="73.0004%" y="293" width="0.0119%" height="15" fill="rgb(212,93,11)" fg:x="6124" fg:w="1"/><text x="73.3195%" y="303.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="73.0004%" y="277" width="0.0119%" height="15" fill="rgb(254,98,51)" fg:x="6124" fg:w="1"/><text x="73.3195%" y="287.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="72.9408%" y="389" width="0.1192%" height="15" fill="rgb(246,18,45)" fg:x="6119" fg:w="10"/><text x="73.2599%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="73.0123%" y="373" width="0.0477%" height="15" fill="rgb(215,148,23)" fg:x="6125" fg:w="4"/><text x="73.3314%" y="383.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="73.0123%" y="357" width="0.0477%" height="15" fill="rgb(227,22,7)" fg:x="6125" fg:w="4"/><text x="73.3314%" y="367.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="73.0123%" y="341" width="0.0477%" height="15" fill="rgb(207,210,37)" fg:x="6125" fg:w="4"/><text x="73.3314%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="72.9169%" y="405" width="0.1550%" height="15" fill="rgb(247,147,42)" fg:x="6117" fg:w="13"/><text x="73.2360%" y="415.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="73.0600%" y="389" width="0.0119%" height="15" fill="rgb(226,213,14)" fg:x="6129" fg:w="1"/><text x="73.3791%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.0600%" y="373" width="0.0119%" height="15" fill="rgb(223,18,10)" fg:x="6129" fg:w="1"/><text x="73.3791%" y="383.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="73.0719%" y="389" width="0.0358%" height="15" fill="rgb(253,34,22)" fg:x="6130" fg:w="3"/><text x="73.3910%" y="399.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="73.0719%" y="373" width="0.0358%" height="15" fill="rgb(222,90,31)" fg:x="6130" fg:w="3"/><text x="73.3910%" y="383.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="73.0719%" y="357" width="0.0358%" height="15" fill="rgb(220,182,30)" fg:x="6130" fg:w="3"/><text x="73.3910%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="73.1076%" y="357" width="0.0119%" height="15" fill="rgb(229,170,12)" fg:x="6133" fg:w="1"/><text x="73.4267%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.1076%" y="341" width="0.0119%" height="15" fill="rgb(210,101,21)" fg:x="6133" fg:w="1"/><text x="73.4267%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="73.1076%" y="325" width="0.0119%" height="15" fill="rgb(237,177,31)" fg:x="6133" fg:w="1"/><text x="73.4267%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.1076%" y="309" width="0.0119%" height="15" fill="rgb(215,91,34)" fg:x="6133" fg:w="1"/><text x="73.4267%" y="319.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="73.1076%" y="293" width="0.0119%" height="15" fill="rgb(229,206,16)" fg:x="6133" fg:w="1"/><text x="73.4267%" y="303.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="73.1076%" y="277" width="0.0119%" height="15" fill="rgb(235,207,10)" fg:x="6133" fg:w="1"/><text x="73.4267%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="73.1076%" y="373" width="0.0238%" height="15" fill="rgb(247,18,10)" fg:x="6133" fg:w="2"/><text x="73.4267%" y="383.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="73.1196%" y="357" width="0.0119%" height="15" fill="rgb(232,4,6)" fg:x="6134" fg:w="1"/><text x="73.4387%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.1196%" y="341" width="0.0119%" height="15" fill="rgb(247,93,45)" fg:x="6134" fg:w="1"/><text x="73.4387%" y="351.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="73.1196%" y="325" width="0.0119%" height="15" fill="rgb(240,181,18)" fg:x="6134" fg:w="1"/><text x="73.4387%" y="335.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="73.1196%" y="309" width="0.0119%" height="15" fill="rgb(208,224,0)" fg:x="6134" fg:w="1"/><text x="73.4387%" y="319.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="73.1315%" y="357" width="0.0358%" height="15" fill="rgb(224,207,54)" fg:x="6135" fg:w="3"/><text x="73.4506%" y="367.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="73.1315%" y="341" width="0.0358%" height="15" fill="rgb(217,152,29)" fg:x="6135" fg:w="3"/><text x="73.4506%" y="351.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="73.1792%" y="325" width="0.0119%" height="15" fill="rgb(243,78,27)" fg:x="6139" fg:w="1"/><text x="73.4983%" y="335.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="73.1792%" y="309" width="0.0119%" height="15" fill="rgb(228,111,9)" fg:x="6139" fg:w="1"/><text x="73.4983%" y="319.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="73.1911%" y="325" width="0.0119%" height="15" fill="rgb(230,213,21)" fg:x="6140" fg:w="1"/><text x="73.5102%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.1911%" y="309" width="0.0119%" height="15" fill="rgb(248,50,36)" fg:x="6140" fg:w="1"/><text x="73.5102%" y="319.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="73.1672%" y="341" width="0.0477%" height="15" fill="rgb(226,19,31)" fg:x="6138" fg:w="4"/><text x="73.4863%" y="351.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="73.2030%" y="325" width="0.0119%" height="15" fill="rgb(205,132,21)" fg:x="6141" fg:w="1"/><text x="73.5221%" y="335.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (91 samples, 1.08%)</title><rect x="72.1421%" y="485" width="1.0848%" height="15" fill="rgb(207,42,19)" fg:x="6052" fg:w="91"/><text x="72.4612%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (63 samples, 0.75%)</title><rect x="72.4759%" y="469" width="0.7510%" height="15" fill="rgb(229,69,35)" fg:x="6080" fg:w="63"/><text x="72.7950%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (60 samples, 0.72%)</title><rect x="72.5116%" y="453" width="0.7152%" height="15" fill="rgb(226,96,11)" fg:x="6083" fg:w="60"/><text x="72.8307%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="72.9169%" y="437" width="0.3099%" height="15" fill="rgb(236,133,54)" fg:x="6117" fg:w="26"/><text x="73.2360%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (26 samples, 0.31%)</title><rect x="72.9169%" y="421" width="0.3099%" height="15" fill="rgb(247,166,21)" fg:x="6117" fg:w="26"/><text x="73.2360%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="73.0719%" y="405" width="0.1550%" height="15" fill="rgb(220,132,12)" fg:x="6130" fg:w="13"/><text x="73.3910%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="73.1076%" y="389" width="0.1192%" height="15" fill="rgb(233,27,30)" fg:x="6133" fg:w="10"/><text x="73.4267%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="73.1315%" y="373" width="0.0954%" height="15" fill="rgb(246,161,27)" fg:x="6135" fg:w="8"/><text x="73.4506%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="73.1672%" y="357" width="0.0596%" height="15" fill="rgb(240,56,3)" fg:x="6138" fg:w="5"/><text x="73.4863%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.2149%" y="341" width="0.0119%" height="15" fill="rgb(242,190,9)" fg:x="6142" fg:w="1"/><text x="73.5340%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="73.2149%" y="325" width="0.0119%" height="15" fill="rgb(234,3,52)" fg:x="6142" fg:w="1"/><text x="73.5340%" y="335.50"/></g><g><title>parser::operator+ (363 samples, 4.33%)</title><rect x="68.9117%" y="645" width="4.3271%" height="15" fill="rgb(220,221,19)" fg:x="5781" fg:w="363"/><text x="69.2308%" y="655.50">..or+ </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (291 samples, 3.47%)</title><rect x="69.7699%" y="629" width="3.4688%" height="15" fill="rgb(247,178,30)" fg:x="5853" fg:w="291"/><text x="70.0890%" y="639.50">..er </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (284 samples, 3.39%)</title><rect x="69.8534%" y="613" width="3.3854%" height="15" fill="rgb(234,212,27)" fg:x="5860" fg:w="284"/><text x="70.1725%" y="623.50">..on </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (219 samples, 2.61%)</title><rect x="70.6282%" y="597" width="2.6106%" height="15" fill="rgb(226,199,38)" fg:x="5925" fg:w="219"/><text x="70.9473%" y="607.50">..r </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (216 samples, 2.57%)</title><rect x="70.6640%" y="581" width="2.5748%" height="15" fill="rgb(248,114,22)" fg:x="5928" fg:w="216"/><text x="70.9831%" y="591.50">..n </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (161 samples, 1.92%)</title><rect x="71.3196%" y="565" width="1.9192%" height="15" fill="rgb(221,180,4)" fg:x="5983" fg:w="161"/><text x="71.6387%" y="575.50">.. </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (161 samples, 1.92%)</title><rect x="71.3196%" y="549" width="1.9192%" height="15" fill="rgb(220,229,24)" fg:x="5983" fg:w="161"/><text x="71.6387%" y="559.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (123 samples, 1.47%)</title><rect x="71.7726%" y="533" width="1.4662%" height="15" fill="rgb(226,184,27)" fg:x="6021" fg:w="123"/><text x="72.0917%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (120 samples, 1.43%)</title><rect x="71.8083%" y="517" width="1.4304%" height="15" fill="rgb(232,99,15)" fg:x="6024" fg:w="120"/><text x="72.1274%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (92 samples, 1.10%)</title><rect x="72.1421%" y="501" width="1.0967%" height="15" fill="rgb(250,167,16)" fg:x="6052" fg:w="92"/><text x="72.4612%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="73.2268%" y="485" width="0.0119%" height="15" fill="rgb(243,113,6)" fg:x="6143" fg:w="1"/><text x="73.5459%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="73.2745%" y="613" width="0.0119%" height="15" fill="rgb(244,147,52)" fg:x="6147" fg:w="1"/><text x="73.5936%" y="623.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="73.2745%" y="629" width="0.0238%" height="15" fill="rgb(235,59,50)" fg:x="6147" fg:w="2"/><text x="73.5936%" y="639.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="73.2864%" y="613" width="0.0119%" height="15" fill="rgb(250,188,6)" fg:x="6148" fg:w="1"/><text x="73.6055%" y="623.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="73.3103%" y="597" width="0.0238%" height="15" fill="rgb(236,173,11)" fg:x="6150" fg:w="2"/><text x="73.6294%" y="607.50"/></g><g><title>parser::iff (4 samples, 0.05%)</title><rect x="73.2984%" y="629" width="0.0477%" height="15" fill="rgb(233,64,3)" fg:x="6149" fg:w="4"/><text x="73.6175%" y="639.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="73.3103%" y="613" width="0.0358%" height="15" fill="rgb(207,92,7)" fg:x="6150" fg:w="3"/><text x="73.6294%" y="623.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="73.3341%" y="597" width="0.0119%" height="15" fill="rgb(221,30,19)" fg:x="6152" fg:w="1"/><text x="73.6532%" y="607.50"/></g><g><title>parser::when (11 samples, 0.13%)</title><rect x="73.2388%" y="645" width="0.1311%" height="15" fill="rgb(245,22,49)" fg:x="6144" fg:w="11"/><text x="73.5579%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="73.3460%" y="629" width="0.0238%" height="15" fill="rgb(218,39,20)" fg:x="6153" fg:w="2"/><text x="73.6651%" y="639.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="73.3460%" y="613" width="0.0238%" height="15" fill="rgb(222,144,21)" fg:x="6153" fg:w="2"/><text x="73.6651%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="73.3580%" y="597" width="0.0119%" height="15" fill="rgb(222,78,51)" fg:x="6154" fg:w="1"/><text x="73.6771%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.3699%" y="645" width="0.0119%" height="15" fill="rgb(248,213,53)" fg:x="6155" fg:w="1"/><text x="73.6890%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="73.3699%" y="629" width="0.0119%" height="15" fill="rgb(245,28,34)" fg:x="6155" fg:w="1"/><text x="73.6890%" y="639.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="73.3937%" y="629" width="0.0358%" height="15" fill="rgb(229,186,26)" fg:x="6157" fg:w="3"/><text x="73.7128%" y="639.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="73.3937%" y="613" width="0.0358%" height="15" fill="rgb(224,0,41)" fg:x="6157" fg:w="3"/><text x="73.7128%" y="623.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="73.4295%" y="629" width="0.0119%" height="15" fill="rgb(223,136,51)" fg:x="6160" fg:w="1"/><text x="73.7486%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="73.4414%" y="629" width="0.0119%" height="15" fill="rgb(234,50,9)" fg:x="6161" fg:w="1"/><text x="73.7605%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="73.4533%" y="613" width="0.0119%" height="15" fill="rgb(242,164,20)" fg:x="6162" fg:w="1"/><text x="73.7724%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="73.4533%" y="597" width="0.0119%" height="15" fill="rgb(230,169,22)" fg:x="6162" fg:w="1"/><text x="73.7724%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="73.4653%" y="549" width="0.0119%" height="15" fill="rgb(228,82,26)" fg:x="6163" fg:w="1"/><text x="73.7844%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="73.4653%" y="533" width="0.0119%" height="15" fill="rgb(244,220,31)" fg:x="6163" fg:w="1"/><text x="73.7844%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="73.4653%" y="565" width="0.0238%" height="15" fill="rgb(214,35,25)" fg:x="6163" fg:w="2"/><text x="73.7844%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.4772%" y="549" width="0.0119%" height="15" fill="rgb(245,162,54)" fg:x="6164" fg:w="1"/><text x="73.7963%" y="559.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="73.4772%" y="533" width="0.0119%" height="15" fill="rgb(210,43,24)" fg:x="6164" fg:w="1"/><text x="73.7963%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="73.4653%" y="613" width="0.0358%" height="15" fill="rgb(226,145,51)" fg:x="6163" fg:w="3"/><text x="73.7844%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="73.4653%" y="597" width="0.0358%" height="15" fill="rgb(237,52,53)" fg:x="6163" fg:w="3"/><text x="73.7844%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="73.4653%" y="581" width="0.0358%" height="15" fill="rgb(216,226,7)" fg:x="6163" fg:w="3"/><text x="73.7844%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.4891%" y="565" width="0.0119%" height="15" fill="rgb(206,223,18)" fg:x="6165" fg:w="1"/><text x="73.8082%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="73.4891%" y="549" width="0.0119%" height="15" fill="rgb(221,1,10)" fg:x="6165" fg:w="1"/><text x="73.8082%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="73.4891%" y="533" width="0.0119%" height="15" fill="rgb(221,151,42)" fg:x="6165" fg:w="1"/><text x="73.8082%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.5010%" y="613" width="0.0119%" height="15" fill="rgb(205,183,46)" fg:x="6166" fg:w="1"/><text x="73.8201%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="73.5010%" y="597" width="0.0119%" height="15" fill="rgb(239,229,1)" fg:x="6166" fg:w="1"/><text x="73.8201%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="73.5010%" y="581" width="0.0119%" height="15" fill="rgb(236,192,23)" fg:x="6166" fg:w="1"/><text x="73.8201%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="73.5129%" y="565" width="0.0119%" height="15" fill="rgb(215,146,3)" fg:x="6167" fg:w="1"/><text x="73.8320%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="73.5129%" y="549" width="0.0119%" height="15" fill="rgb(235,52,27)" fg:x="6167" fg:w="1"/><text x="73.8320%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="73.5129%" y="597" width="0.0238%" height="15" fill="rgb(236,45,20)" fg:x="6167" fg:w="2"/><text x="73.8320%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="73.5129%" y="581" width="0.0238%" height="15" fill="rgb(235,86,41)" fg:x="6167" fg:w="2"/><text x="73.8320%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.5249%" y="565" width="0.0119%" height="15" fill="rgb(235,27,27)" fg:x="6168" fg:w="1"/><text x="73.8440%" y="575.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="73.5249%" y="549" width="0.0119%" height="15" fill="rgb(232,4,34)" fg:x="6168" fg:w="1"/><text x="73.8440%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="73.5129%" y="613" width="0.0358%" height="15" fill="rgb(215,22,10)" fg:x="6167" fg:w="3"/><text x="73.8320%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.5368%" y="597" width="0.0119%" height="15" fill="rgb(230,228,27)" fg:x="6169" fg:w="1"/><text x="73.8559%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="73.5368%" y="581" width="0.0119%" height="15" fill="rgb(216,26,51)" fg:x="6169" fg:w="1"/><text x="73.8559%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="73.5487%" y="581" width="0.0119%" height="15" fill="rgb(225,180,50)" fg:x="6170" fg:w="1"/><text x="73.8678%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="73.5487%" y="565" width="0.0119%" height="15" fill="rgb(236,211,2)" fg:x="6170" fg:w="1"/><text x="73.8678%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="73.4533%" y="629" width="0.1192%" height="15" fill="rgb(250,51,20)" fg:x="6162" fg:w="10"/><text x="73.7724%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="73.5487%" y="613" width="0.0238%" height="15" fill="rgb(232,70,37)" fg:x="6170" fg:w="2"/><text x="73.8678%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="73.5487%" y="597" width="0.0238%" height="15" fill="rgb(226,183,39)" fg:x="6170" fg:w="2"/><text x="73.8678%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.5606%" y="581" width="0.0119%" height="15" fill="rgb(232,228,21)" fg:x="6171" fg:w="1"/><text x="73.8797%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="73.5606%" y="565" width="0.0119%" height="15" fill="rgb(251,118,32)" fg:x="6171" fg:w="1"/><text x="73.8797%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.5725%" y="629" width="0.0119%" height="15" fill="rgb(235,172,38)" fg:x="6172" fg:w="1"/><text x="73.8916%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="73.5845%" y="613" width="0.0119%" height="15" fill="rgb(235,63,18)" fg:x="6173" fg:w="1"/><text x="73.9036%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="73.5845%" y="597" width="0.0119%" height="15" fill="rgb(225,4,7)" fg:x="6173" fg:w="1"/><text x="73.9036%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="73.5964%" y="613" width="0.0119%" height="15" fill="rgb(231,61,1)" fg:x="6174" fg:w="1"/><text x="73.9155%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="73.6083%" y="597" width="0.0119%" height="15" fill="rgb(241,155,22)" fg:x="6175" fg:w="1"/><text x="73.9274%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="73.6083%" y="581" width="0.0119%" height="15" fill="rgb(209,100,26)" fg:x="6175" fg:w="1"/><text x="73.9274%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="73.6083%" y="613" width="0.0238%" height="15" fill="rgb(248,181,15)" fg:x="6175" fg:w="2"/><text x="73.9274%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.6202%" y="597" width="0.0119%" height="15" fill="rgb(214,94,31)" fg:x="6176" fg:w="1"/><text x="73.9393%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.6202%" y="581" width="0.0119%" height="15" fill="rgb(207,16,42)" fg:x="6176" fg:w="1"/><text x="73.9393%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.6202%" y="565" width="0.0119%" height="15" fill="rgb(208,127,13)" fg:x="6176" fg:w="1"/><text x="73.9393%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="73.6202%" y="549" width="0.0119%" height="15" fill="rgb(220,211,18)" fg:x="6176" fg:w="1"/><text x="73.9393%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="73.6321%" y="597" width="0.0119%" height="15" fill="rgb(221,55,38)" fg:x="6177" fg:w="1"/><text x="73.9512%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.6441%" y="597" width="0.0119%" height="15" fill="rgb(252,219,45)" fg:x="6178" fg:w="1"/><text x="73.9632%" y="607.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="73.6441%" y="581" width="0.0119%" height="15" fill="rgb(248,53,35)" fg:x="6178" fg:w="1"/><text x="73.9632%" y="591.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="73.6560%" y="581" width="0.0238%" height="15" fill="rgb(210,87,2)" fg:x="6179" fg:w="2"/><text x="73.9751%" y="591.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="73.6560%" y="565" width="0.0238%" height="15" fill="rgb(239,133,9)" fg:x="6179" fg:w="2"/><text x="73.9751%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="73.6560%" y="597" width="0.0358%" height="15" fill="rgb(214,114,5)" fg:x="6179" fg:w="3"/><text x="73.9751%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="73.6798%" y="581" width="0.0119%" height="15" fill="rgb(206,124,24)" fg:x="6181" fg:w="1"/><text x="73.9989%" y="591.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="73.6917%" y="581" width="0.0119%" height="15" fill="rgb(212,57,33)" fg:x="6182" fg:w="1"/><text x="74.0108%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="73.6321%" y="613" width="0.0834%" height="15" fill="rgb(246,21,20)" fg:x="6177" fg:w="7"/><text x="73.9512%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="73.6917%" y="597" width="0.0238%" height="15" fill="rgb(253,210,39)" fg:x="6182" fg:w="2"/><text x="74.0108%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State), const_&lt;State, bool&gt;(bool)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.7037%" y="581" width="0.0119%" height="15" fill="rgb(209,187,24)" fg:x="6183" fg:w="1"/><text x="74.0228%" y="591.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="73.7156%" y="597" width="0.0238%" height="15" fill="rgb(246,136,17)" fg:x="6184" fg:w="2"/><text x="74.0347%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="73.7275%" y="581" width="0.0119%" height="15" fill="rgb(211,0,30)" fg:x="6185" fg:w="1"/><text x="74.0466%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="73.7156%" y="613" width="0.0358%" height="15" fill="rgb(216,199,7)" fg:x="6184" fg:w="3"/><text x="74.0347%" y="623.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="73.7394%" y="597" width="0.0119%" height="15" fill="rgb(207,210,19)" fg:x="6186" fg:w="1"/><text x="74.0585%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="73.7513%" y="597" width="0.0119%" height="15" fill="rgb(237,187,39)" fg:x="6187" fg:w="1"/><text x="74.0704%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="73.7513%" y="581" width="0.0119%" height="15" fill="rgb(243,194,42)" fg:x="6187" fg:w="1"/><text x="74.0704%" y="591.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="73.7633%" y="581" width="0.0238%" height="15" fill="rgb(225,194,19)" fg:x="6188" fg:w="2"/><text x="74.0824%" y="591.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="73.7633%" y="565" width="0.0238%" height="15" fill="rgb(224,192,14)" fg:x="6188" fg:w="2"/><text x="74.0824%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="73.7871%" y="565" width="0.0119%" height="15" fill="rgb(252,21,18)" fg:x="6190" fg:w="1"/><text x="74.1062%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="73.7871%" y="581" width="0.0238%" height="15" fill="rgb(229,69,19)" fg:x="6190" fg:w="2"/><text x="74.1062%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.7990%" y="565" width="0.0119%" height="15" fill="rgb(251,31,53)" fg:x="6191" fg:w="1"/><text x="74.1181%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.7990%" y="549" width="0.0119%" height="15" fill="rgb(218,39,50)" fg:x="6191" fg:w="1"/><text x="74.1181%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.7990%" y="533" width="0.0119%" height="15" fill="rgb(231,50,17)" fg:x="6191" fg:w="1"/><text x="74.1181%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="73.7990%" y="517" width="0.0119%" height="15" fill="rgb(223,217,31)" fg:x="6191" fg:w="1"/><text x="74.1181%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="73.7990%" y="501" width="0.0119%" height="15" fill="rgb(225,91,12)" fg:x="6191" fg:w="1"/><text x="74.1181%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="73.7633%" y="597" width="0.0596%" height="15" fill="rgb(242,58,43)" fg:x="6188" fg:w="5"/><text x="74.0824%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.8109%" y="581" width="0.0119%" height="15" fill="rgb(242,32,21)" fg:x="6192" fg:w="1"/><text x="74.1300%" y="591.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="73.8109%" y="565" width="0.0119%" height="15" fill="rgb(211,127,1)" fg:x="6192" fg:w="1"/><text x="74.1300%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="73.8229%" y="581" width="0.0119%" height="15" fill="rgb(231,93,13)" fg:x="6193" fg:w="1"/><text x="74.1420%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="73.8229%" y="565" width="0.0119%" height="15" fill="rgb(218,83,4)" fg:x="6193" fg:w="1"/><text x="74.1420%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.8348%" y="581" width="0.0119%" height="15" fill="rgb(230,218,10)" fg:x="6194" fg:w="1"/><text x="74.1539%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.8348%" y="565" width="0.0119%" height="15" fill="rgb(235,127,18)" fg:x="6194" fg:w="1"/><text x="74.1539%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="73.8348%" y="549" width="0.0119%" height="15" fill="rgb(213,137,46)" fg:x="6194" fg:w="1"/><text x="74.1539%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="73.8348%" y="533" width="0.0119%" height="15" fill="rgb(235,179,24)" fg:x="6194" fg:w="1"/><text x="74.1539%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="73.7513%" y="613" width="0.1192%" height="15" fill="rgb(247,58,49)" fg:x="6187" fg:w="10"/><text x="74.0704%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="73.8229%" y="597" width="0.0477%" height="15" fill="rgb(242,222,5)" fg:x="6193" fg:w="4"/><text x="74.1420%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="73.8467%" y="581" width="0.0238%" height="15" fill="rgb(230,16,48)" fg:x="6195" fg:w="2"/><text x="74.1658%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="73.8586%" y="565" width="0.0119%" height="15" fill="rgb(241,192,16)" fg:x="6196" fg:w="1"/><text x="74.1777%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (25 samples, 0.30%)</title><rect x="73.5845%" y="629" width="0.2980%" height="15" fill="rgb(209,25,37)" fg:x="6173" fg:w="25"/><text x="73.9036%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.8705%" y="613" width="0.0119%" height="15" fill="rgb(229,215,13)" fg:x="6197" fg:w="1"/><text x="74.1896%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="73.8705%" y="597" width="0.0119%" height="15" fill="rgb(213,199,8)" fg:x="6197" fg:w="1"/><text x="74.1896%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="73.8705%" y="581" width="0.0119%" height="15" fill="rgb(226,151,19)" fg:x="6197" fg:w="1"/><text x="74.1896%" y="591.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="73.9063%" y="613" width="0.0358%" height="15" fill="rgb(254,183,12)" fg:x="6200" fg:w="3"/><text x="74.2254%" y="623.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="73.9182%" y="597" width="0.0238%" height="15" fill="rgb(245,8,3)" fg:x="6201" fg:w="2"/><text x="74.2373%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="73.9421%" y="613" width="0.0238%" height="15" fill="rgb(229,159,35)" fg:x="6203" fg:w="2"/><text x="74.2612%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (8 samples, 0.10%)</title><rect x="73.8825%" y="629" width="0.0954%" height="15" fill="rgb(209,145,1)" fg:x="6198" fg:w="8"/><text x="74.2016%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="73.9659%" y="613" width="0.0119%" height="15" fill="rgb(228,183,16)" fg:x="6205" fg:w="1"/><text x="74.2850%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="73.9778%" y="629" width="0.0119%" height="15" fill="rgb(222,68,0)" fg:x="6206" fg:w="1"/><text x="74.2969%" y="639.50"/></g><g><title>__GI___libc_free (6 samples, 0.07%)</title><rect x="73.9897%" y="613" width="0.0715%" height="15" fill="rgb(209,130,50)" fg:x="6207" fg:w="6"/><text x="74.3088%" y="623.50"/></g><g><title>_int_free (5 samples, 0.06%)</title><rect x="74.0017%" y="597" width="0.0596%" height="15" fill="rgb(228,176,44)" fg:x="6208" fg:w="5"/><text x="74.3208%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (58 samples, 0.69%)</title><rect x="73.3818%" y="645" width="0.6914%" height="15" fill="rgb(221,164,2)" fg:x="6156" fg:w="58"/><text x="73.7009%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (7 samples, 0.08%)</title><rect x="73.9897%" y="629" width="0.0834%" height="15" fill="rgb(249,199,49)" fg:x="6207" fg:w="7"/><text x="74.3088%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="74.0613%" y="613" width="0.0119%" height="15" fill="rgb(228,205,53)" fg:x="6213" fg:w="1"/><text x="74.3804%" y="623.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="74.0732%" y="629" width="0.0358%" height="15" fill="rgb(235,77,20)" fg:x="6214" fg:w="3"/><text x="74.3923%" y="639.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="74.0732%" y="613" width="0.0358%" height="15" fill="rgb(227,147,34)" fg:x="6214" fg:w="3"/><text x="74.3923%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="74.1090%" y="629" width="0.0119%" height="15" fill="rgb(226,203,52)" fg:x="6217" fg:w="1"/><text x="74.4281%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="74.1209%" y="629" width="0.0119%" height="15" fill="rgb(226,186,23)" fg:x="6218" fg:w="1"/><text x="74.4400%" y="639.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="74.1209%" y="613" width="0.0119%" height="15" fill="rgb(236,13,30)" fg:x="6218" fg:w="1"/><text x="74.4400%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.1209%" y="597" width="0.0119%" height="15" fill="rgb(228,121,22)" fg:x="6218" fg:w="1"/><text x="74.4400%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.1209%" y="581" width="0.0119%" height="15" fill="rgb(248,222,26)" fg:x="6218" fg:w="1"/><text x="74.4400%" y="591.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="74.1328%" y="613" width="0.0119%" height="15" fill="rgb(251,72,25)" fg:x="6219" fg:w="1"/><text x="74.4519%" y="623.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="74.1447%" y="613" width="0.0119%" height="15" fill="rgb(223,114,24)" fg:x="6220" fg:w="1"/><text x="74.4638%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="74.1566%" y="613" width="0.0238%" height="15" fill="rgb(232,190,43)" fg:x="6221" fg:w="2"/><text x="74.4757%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="74.1805%" y="597" width="0.0238%" height="15" fill="rgb(208,90,0)" fg:x="6223" fg:w="2"/><text x="74.4996%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.1924%" y="581" width="0.0119%" height="15" fill="rgb(234,149,31)" fg:x="6224" fg:w="1"/><text x="74.5115%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.2043%" y="565" width="0.0119%" height="15" fill="rgb(235,188,36)" fg:x="6225" fg:w="1"/><text x="74.5234%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.2043%" y="549" width="0.0119%" height="15" fill="rgb(219,59,51)" fg:x="6225" fg:w="1"/><text x="74.5234%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="74.2162%" y="565" width="0.0119%" height="15" fill="rgb(236,101,40)" fg:x="6226" fg:w="1"/><text x="74.5353%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="74.2043%" y="597" width="0.0358%" height="15" fill="rgb(235,33,7)" fg:x="6225" fg:w="3"/><text x="74.5234%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="74.2043%" y="581" width="0.0358%" height="15" fill="rgb(213,169,26)" fg:x="6225" fg:w="3"/><text x="74.5234%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="74.2282%" y="565" width="0.0119%" height="15" fill="rgb(218,99,34)" fg:x="6227" fg:w="1"/><text x="74.5473%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="74.2282%" y="549" width="0.0119%" height="15" fill="rgb(210,57,24)" fg:x="6227" fg:w="1"/><text x="74.5473%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.2282%" y="533" width="0.0119%" height="15" fill="rgb(231,181,54)" fg:x="6227" fg:w="1"/><text x="74.5473%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="74.2401%" y="581" width="0.0119%" height="15" fill="rgb(251,188,48)" fg:x="6228" fg:w="1"/><text x="74.5592%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="74.2520%" y="565" width="0.0119%" height="15" fill="rgb(243,12,45)" fg:x="6229" fg:w="1"/><text x="74.5711%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.2520%" y="549" width="0.0119%" height="15" fill="rgb(250,197,9)" fg:x="6229" fg:w="1"/><text x="74.5711%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.2520%" y="533" width="0.0119%" height="15" fill="rgb(235,149,35)" fg:x="6229" fg:w="1"/><text x="74.5711%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.2639%" y="549" width="0.0119%" height="15" fill="rgb(219,27,19)" fg:x="6230" fg:w="1"/><text x="74.5830%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.2639%" y="533" width="0.0119%" height="15" fill="rgb(244,78,31)" fg:x="6230" fg:w="1"/><text x="74.5830%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="74.2401%" y="597" width="0.0477%" height="15" fill="rgb(241,13,4)" fg:x="6228" fg:w="4"/><text x="74.5592%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="74.2520%" y="581" width="0.0358%" height="15" fill="rgb(212,194,26)" fg:x="6229" fg:w="3"/><text x="74.5711%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="74.2639%" y="565" width="0.0238%" height="15" fill="rgb(236,80,11)" fg:x="6230" fg:w="2"/><text x="74.5830%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="74.2758%" y="549" width="0.0119%" height="15" fill="rgb(206,1,24)" fg:x="6231" fg:w="1"/><text x="74.5949%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.2758%" y="533" width="0.0119%" height="15" fill="rgb(238,215,50)" fg:x="6231" fg:w="1"/><text x="74.5949%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.2758%" y="517" width="0.0119%" height="15" fill="rgb(254,126,32)" fg:x="6231" fg:w="1"/><text x="74.5949%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="74.2878%" y="597" width="0.0358%" height="15" fill="rgb(206,111,53)" fg:x="6232" fg:w="3"/><text x="74.6069%" y="607.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="74.2878%" y="581" width="0.0358%" height="15" fill="rgb(218,72,44)" fg:x="6232" fg:w="3"/><text x="74.6069%" y="591.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="74.2997%" y="565" width="0.0238%" height="15" fill="rgb(238,25,3)" fg:x="6233" fg:w="2"/><text x="74.6188%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.3235%" y="581" width="0.0119%" height="15" fill="rgb(250,191,7)" fg:x="6235" fg:w="1"/><text x="74.6426%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.3235%" y="565" width="0.0119%" height="15" fill="rgb(238,56,30)" fg:x="6235" fg:w="1"/><text x="74.6426%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.3354%" y="565" width="0.0119%" height="15" fill="rgb(210,27,45)" fg:x="6236" fg:w="1"/><text x="74.6545%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.3354%" y="549" width="0.0119%" height="15" fill="rgb(207,10,50)" fg:x="6236" fg:w="1"/><text x="74.6545%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.3474%" y="549" width="0.0119%" height="15" fill="rgb(249,30,23)" fg:x="6237" fg:w="1"/><text x="74.6665%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.3474%" y="533" width="0.0119%" height="15" fill="rgb(250,80,12)" fg:x="6237" fg:w="1"/><text x="74.6665%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="74.1805%" y="613" width="0.1907%" height="15" fill="rgb(210,221,37)" fg:x="6223" fg:w="16"/><text x="74.4996%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="74.3235%" y="597" width="0.0477%" height="15" fill="rgb(205,96,24)" fg:x="6235" fg:w="4"/><text x="74.6426%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="74.3354%" y="581" width="0.0358%" height="15" fill="rgb(247,104,22)" fg:x="6236" fg:w="3"/><text x="74.6545%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="74.3474%" y="565" width="0.0238%" height="15" fill="rgb(222,61,53)" fg:x="6237" fg:w="2"/><text x="74.6665%" y="575.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="74.3593%" y="549" width="0.0119%" height="15" fill="rgb(241,11,53)" fg:x="6238" fg:w="1"/><text x="74.6784%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="74.3712%" y="613" width="0.0119%" height="15" fill="rgb(230,111,47)" fg:x="6239" fg:w="1"/><text x="74.6903%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.3712%" y="597" width="0.0119%" height="15" fill="rgb(218,187,29)" fg:x="6239" fg:w="1"/><text x="74.6903%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.3712%" y="581" width="0.0119%" height="15" fill="rgb(210,121,46)" fg:x="6239" fg:w="1"/><text x="74.6903%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.3831%" y="581" width="0.0119%" height="15" fill="rgb(250,43,19)" fg:x="6240" fg:w="1"/><text x="74.7022%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.3831%" y="565" width="0.0119%" height="15" fill="rgb(238,61,12)" fg:x="6240" fg:w="1"/><text x="74.7022%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="74.3831%" y="597" width="0.0358%" height="15" fill="rgb(251,198,9)" fg:x="6240" fg:w="3"/><text x="74.7022%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="74.3950%" y="581" width="0.0238%" height="15" fill="rgb(214,192,38)" fg:x="6241" fg:w="2"/><text x="74.7141%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="74.3950%" y="565" width="0.0238%" height="15" fill="rgb(214,73,19)" fg:x="6241" fg:w="2"/><text x="74.7141%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="74.3950%" y="549" width="0.0238%" height="15" fill="rgb(249,222,49)" fg:x="6241" fg:w="2"/><text x="74.7141%" y="559.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="74.3950%" y="533" width="0.0238%" height="15" fill="rgb(231,181,54)" fg:x="6241" fg:w="2"/><text x="74.7141%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.4070%" y="517" width="0.0119%" height="15" fill="rgb(240,1,13)" fg:x="6242" fg:w="1"/><text x="74.7261%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="74.4189%" y="581" width="0.0119%" height="15" fill="rgb(225,21,16)" fg:x="6243" fg:w="1"/><text x="74.7380%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="74.4308%" y="581" width="0.0238%" height="15" fill="rgb(246,176,50)" fg:x="6244" fg:w="2"/><text x="74.7499%" y="591.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="74.4308%" y="565" width="0.0238%" height="15" fill="rgb(208,96,50)" fg:x="6244" fg:w="2"/><text x="74.7499%" y="575.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="74.4308%" y="549" width="0.0238%" height="15" fill="rgb(240,219,19)" fg:x="6244" fg:w="2"/><text x="74.7499%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.4666%" y="565" width="0.0119%" height="15" fill="rgb(234,73,5)" fg:x="6247" fg:w="1"/><text x="74.7857%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.4666%" y="549" width="0.0119%" height="15" fill="rgb(225,52,53)" fg:x="6247" fg:w="1"/><text x="74.7857%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="74.4546%" y="581" width="0.0358%" height="15" fill="rgb(250,12,14)" fg:x="6246" fg:w="3"/><text x="74.7737%" y="591.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="74.4785%" y="565" width="0.0119%" height="15" fill="rgb(242,185,54)" fg:x="6248" fg:w="1"/><text x="74.7976%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="74.4189%" y="597" width="0.0834%" height="15" fill="rgb(211,206,31)" fg:x="6243" fg:w="7"/><text x="74.7380%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="74.4904%" y="581" width="0.0119%" height="15" fill="rgb(252,10,33)" fg:x="6249" fg:w="1"/><text x="74.8095%" y="591.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="74.4904%" y="565" width="0.0119%" height="15" fill="rgb(216,26,7)" fg:x="6249" fg:w="1"/><text x="74.8095%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.5023%" y="581" width="0.0119%" height="15" fill="rgb(228,112,40)" fg:x="6250" fg:w="1"/><text x="74.8214%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.5023%" y="565" width="0.0119%" height="15" fill="rgb(212,21,16)" fg:x="6250" fg:w="1"/><text x="74.8214%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="74.5023%" y="597" width="0.0238%" height="15" fill="rgb(249,3,29)" fg:x="6250" fg:w="2"/><text x="74.8214%" y="607.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="74.5142%" y="581" width="0.0119%" height="15" fill="rgb(221,42,51)" fg:x="6251" fg:w="1"/><text x="74.8333%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.5262%" y="565" width="0.0119%" height="15" fill="rgb(225,90,21)" fg:x="6252" fg:w="1"/><text x="74.8453%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.5262%" y="549" width="0.0119%" height="15" fill="rgb(242,131,5)" fg:x="6252" fg:w="1"/><text x="74.8453%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="74.5262%" y="581" width="0.0238%" height="15" fill="rgb(220,187,28)" fg:x="6252" fg:w="2"/><text x="74.8453%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="74.5381%" y="565" width="0.0119%" height="15" fill="rgb(210,75,48)" fg:x="6253" fg:w="1"/><text x="74.8572%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.5381%" y="549" width="0.0119%" height="15" fill="rgb(211,91,40)" fg:x="6253" fg:w="1"/><text x="74.8572%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.5381%" y="533" width="0.0119%" height="15" fill="rgb(205,43,18)" fg:x="6253" fg:w="1"/><text x="74.8572%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="74.5500%" y="533" width="0.0119%" height="15" fill="rgb(207,123,11)" fg:x="6254" fg:w="1"/><text x="74.8691%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.5500%" y="517" width="0.0119%" height="15" fill="rgb(235,89,39)" fg:x="6254" fg:w="1"/><text x="74.8691%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.5500%" y="501" width="0.0119%" height="15" fill="rgb(245,217,27)" fg:x="6254" fg:w="1"/><text x="74.8691%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="74.5500%" y="565" width="0.0238%" height="15" fill="rgb(216,55,17)" fg:x="6254" fg:w="2"/><text x="74.8691%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="74.5500%" y="549" width="0.0238%" height="15" fill="rgb(252,116,44)" fg:x="6254" fg:w="2"/><text x="74.8691%" y="559.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="74.5619%" y="533" width="0.0119%" height="15" fill="rgb(229,153,4)" fg:x="6255" fg:w="1"/><text x="74.8810%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="74.5619%" y="517" width="0.0119%" height="15" fill="rgb(222,24,35)" fg:x="6255" fg:w="1"/><text x="74.8810%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="74.5619%" y="501" width="0.0119%" height="15" fill="rgb(214,26,20)" fg:x="6255" fg:w="1"/><text x="74.8810%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.5619%" y="485" width="0.0119%" height="15" fill="rgb(215,14,45)" fg:x="6255" fg:w="1"/><text x="74.8810%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.5619%" y="469" width="0.0119%" height="15" fill="rgb(217,212,50)" fg:x="6255" fg:w="1"/><text x="74.8810%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="74.3831%" y="613" width="0.2026%" height="15" fill="rgb(230,172,52)" fg:x="6240" fg:w="17"/><text x="74.7022%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="74.5262%" y="597" width="0.0596%" height="15" fill="rgb(210,48,36)" fg:x="6252" fg:w="5"/><text x="74.8453%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="74.5500%" y="581" width="0.0358%" height="15" fill="rgb(216,213,32)" fg:x="6254" fg:w="3"/><text x="74.8691%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="74.5738%" y="565" width="0.0119%" height="15" fill="rgb(237,202,41)" fg:x="6256" fg:w="1"/><text x="74.8929%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.5738%" y="549" width="0.0119%" height="15" fill="rgb(209,14,29)" fg:x="6256" fg:w="1"/><text x="74.8929%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.5738%" y="533" width="0.0119%" height="15" fill="rgb(219,29,3)" fg:x="6256" fg:w="1"/><text x="74.8929%" y="543.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="74.5977%" y="597" width="0.0238%" height="15" fill="rgb(229,13,49)" fg:x="6258" fg:w="2"/><text x="74.9168%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="74.5977%" y="581" width="0.0238%" height="15" fill="rgb(210,206,2)" fg:x="6258" fg:w="2"/><text x="74.9168%" y="591.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="74.6215%" y="597" width="0.0119%" height="15" fill="rgb(216,154,46)" fg:x="6260" fg:w="1"/><text x="74.9406%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (5 samples, 0.06%)</title><rect x="74.5858%" y="613" width="0.0596%" height="15" fill="rgb(211,170,52)" fg:x="6257" fg:w="5"/><text x="74.9049%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="74.6334%" y="597" width="0.0119%" height="15" fill="rgb(233,109,47)" fg:x="6261" fg:w="1"/><text x="74.9525%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (46 samples, 0.55%)</title><rect x="74.1328%" y="629" width="0.5483%" height="15" fill="rgb(208,212,30)" fg:x="6219" fg:w="46"/><text x="74.4519%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="74.6454%" y="613" width="0.0358%" height="15" fill="rgb(215,190,19)" fg:x="6262" fg:w="3"/><text x="74.9645%" y="623.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="74.6454%" y="597" width="0.0358%" height="15" fill="rgb(207,164,53)" fg:x="6262" fg:w="3"/><text x="74.9645%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="74.6573%" y="581" width="0.0238%" height="15" fill="rgb(213,87,49)" fg:x="6263" fg:w="2"/><text x="74.9764%" y="591.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="74.6811%" y="613" width="0.0358%" height="15" fill="rgb(241,216,24)" fg:x="6265" fg:w="3"/><text x="75.0002%" y="623.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="74.6811%" y="597" width="0.0358%" height="15" fill="rgb(241,123,45)" fg:x="6265" fg:w="3"/><text x="75.0002%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="74.7288%" y="597" width="0.0238%" height="15" fill="rgb(220,36,15)" fg:x="6269" fg:w="2"/><text x="75.0479%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="74.7169%" y="613" width="0.0477%" height="15" fill="rgb(215,202,9)" fg:x="6268" fg:w="4"/><text x="75.0360%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="74.7527%" y="597" width="0.0119%" height="15" fill="rgb(252,71,26)" fg:x="6271" fg:w="1"/><text x="75.0718%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.7527%" y="581" width="0.0119%" height="15" fill="rgb(243,195,19)" fg:x="6271" fg:w="1"/><text x="75.0718%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.7527%" y="565" width="0.0119%" height="15" fill="rgb(207,167,27)" fg:x="6271" fg:w="1"/><text x="75.0718%" y="575.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="74.7765%" y="597" width="0.0238%" height="15" fill="rgb(250,146,54)" fg:x="6273" fg:w="2"/><text x="75.0956%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.7884%" y="581" width="0.0119%" height="15" fill="rgb(245,79,9)" fg:x="6274" fg:w="1"/><text x="75.1075%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="74.8003%" y="597" width="0.0119%" height="15" fill="rgb(234,197,22)" fg:x="6275" fg:w="1"/><text x="75.1194%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.8123%" y="533" width="0.0119%" height="15" fill="rgb(221,52,48)" fg:x="6276" fg:w="1"/><text x="75.1314%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.8123%" y="517" width="0.0119%" height="15" fill="rgb(235,80,0)" fg:x="6276" fg:w="1"/><text x="75.1314%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="74.8123%" y="581" width="0.0358%" height="15" fill="rgb(221,117,53)" fg:x="6276" fg:w="3"/><text x="75.1314%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="74.8123%" y="565" width="0.0358%" height="15" fill="rgb(239,48,47)" fg:x="6276" fg:w="3"/><text x="75.1314%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="74.8123%" y="549" width="0.0358%" height="15" fill="rgb(227,191,52)" fg:x="6276" fg:w="3"/><text x="75.1314%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="74.8242%" y="533" width="0.0238%" height="15" fill="rgb(241,118,1)" fg:x="6277" fg:w="2"/><text x="75.1433%" y="543.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="74.8242%" y="517" width="0.0238%" height="15" fill="rgb(240,85,3)" fg:x="6277" fg:w="2"/><text x="75.1433%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.8361%" y="501" width="0.0119%" height="15" fill="rgb(237,68,37)" fg:x="6278" fg:w="1"/><text x="75.1552%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.8480%" y="549" width="0.0119%" height="15" fill="rgb(212,9,20)" fg:x="6279" fg:w="1"/><text x="75.1671%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.8480%" y="533" width="0.0119%" height="15" fill="rgb(218,84,17)" fg:x="6279" fg:w="1"/><text x="75.1671%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="74.8123%" y="597" width="0.0596%" height="15" fill="rgb(235,147,20)" fg:x="6276" fg:w="5"/><text x="75.1314%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="74.8480%" y="581" width="0.0238%" height="15" fill="rgb(208,224,1)" fg:x="6279" fg:w="2"/><text x="75.1671%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="74.8480%" y="565" width="0.0238%" height="15" fill="rgb(232,97,50)" fg:x="6279" fg:w="2"/><text x="75.1671%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="74.8599%" y="549" width="0.0119%" height="15" fill="rgb(238,15,45)" fg:x="6280" fg:w="1"/><text x="75.1790%" y="559.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="74.8599%" y="533" width="0.0119%" height="15" fill="rgb(231,46,18)" fg:x="6280" fg:w="1"/><text x="75.1790%" y="543.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="74.8838%" y="581" width="0.0238%" height="15" fill="rgb(254,169,10)" fg:x="6282" fg:w="2"/><text x="75.2029%" y="591.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="74.8838%" y="565" width="0.0238%" height="15" fill="rgb(243,169,30)" fg:x="6282" fg:w="2"/><text x="75.2029%" y="575.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="74.9076%" y="581" width="0.0119%" height="15" fill="rgb(236,90,49)" fg:x="6284" fg:w="1"/><text x="75.2267%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="74.9195%" y="565" width="0.0119%" height="15" fill="rgb(218,80,15)" fg:x="6285" fg:w="1"/><text x="75.2386%" y="575.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="74.9195%" y="549" width="0.0119%" height="15" fill="rgb(222,115,37)" fg:x="6285" fg:w="1"/><text x="75.2386%" y="559.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="74.9315%" y="549" width="0.0238%" height="15" fill="rgb(227,0,6)" fg:x="6286" fg:w="2"/><text x="75.2506%" y="559.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="74.9315%" y="533" width="0.0238%" height="15" fill="rgb(217,189,13)" fg:x="6286" fg:w="2"/><text x="75.2506%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="74.9315%" y="565" width="0.0358%" height="15" fill="rgb(220,74,19)" fg:x="6286" fg:w="3"/><text x="75.2506%" y="575.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="74.9553%" y="549" width="0.0119%" height="15" fill="rgb(224,81,18)" fg:x="6288" fg:w="1"/><text x="75.2744%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="74.9195%" y="581" width="0.0596%" height="15" fill="rgb(245,178,48)" fg:x="6285" fg:w="5"/><text x="75.2386%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="74.9672%" y="565" width="0.0119%" height="15" fill="rgb(207,78,24)" fg:x="6289" fg:w="1"/><text x="75.2863%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.9672%" y="549" width="0.0119%" height="15" fill="rgb(223,222,30)" fg:x="6289" fg:w="1"/><text x="75.2863%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.9672%" y="533" width="0.0119%" height="15" fill="rgb(234,101,12)" fg:x="6289" fg:w="1"/><text x="75.2863%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="74.9791%" y="581" width="0.0119%" height="15" fill="rgb(209,80,46)" fg:x="6290" fg:w="1"/><text x="75.2982%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.9791%" y="565" width="0.0119%" height="15" fill="rgb(228,79,14)" fg:x="6290" fg:w="1"/><text x="75.2982%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.9791%" y="549" width="0.0119%" height="15" fill="rgb(220,219,34)" fg:x="6290" fg:w="1"/><text x="75.2982%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.9911%" y="565" width="0.0119%" height="15" fill="rgb(207,80,21)" fg:x="6291" fg:w="1"/><text x="75.3102%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.9911%" y="549" width="0.0119%" height="15" fill="rgb(210,154,44)" fg:x="6291" fg:w="1"/><text x="75.3102%" y="559.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="75.0030%" y="549" width="0.0238%" height="15" fill="rgb(246,44,39)" fg:x="6292" fg:w="2"/><text x="75.3221%" y="559.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="75.0030%" y="533" width="0.0238%" height="15" fill="rgb(252,175,13)" fg:x="6292" fg:w="2"/><text x="75.3221%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.0268%" y="533" width="0.0119%" height="15" fill="rgb(211,50,39)" fg:x="6294" fg:w="1"/><text x="75.3459%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.0268%" y="517" width="0.0119%" height="15" fill="rgb(231,204,27)" fg:x="6294" fg:w="1"/><text x="75.3459%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="75.0387%" y="517" width="0.0119%" height="15" fill="rgb(253,26,34)" fg:x="6295" fg:w="1"/><text x="75.3578%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="75.0387%" y="533" width="0.0358%" height="15" fill="rgb(207,139,38)" fg:x="6295" fg:w="3"/><text x="75.3578%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.0507%" y="517" width="0.0238%" height="15" fill="rgb(248,54,27)" fg:x="6296" fg:w="2"/><text x="75.3698%" y="527.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="75.0507%" y="501" width="0.0238%" height="15" fill="rgb(234,25,33)" fg:x="6296" fg:w="2"/><text x="75.3698%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.0626%" y="485" width="0.0119%" height="15" fill="rgb(249,107,47)" fg:x="6297" fg:w="1"/><text x="75.3817%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.0745%" y="517" width="0.0119%" height="15" fill="rgb(230,190,31)" fg:x="6298" fg:w="1"/><text x="75.3936%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.0745%" y="501" width="0.0119%" height="15" fill="rgb(238,173,45)" fg:x="6298" fg:w="1"/><text x="75.3936%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="74.9911%" y="581" width="0.1073%" height="15" fill="rgb(222,16,50)" fg:x="6291" fg:w="9"/><text x="75.3102%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="75.0030%" y="565" width="0.0954%" height="15" fill="rgb(251,204,47)" fg:x="6292" fg:w="8"/><text x="75.3221%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="75.0268%" y="549" width="0.0715%" height="15" fill="rgb(225,12,3)" fg:x="6294" fg:w="6"/><text x="75.3459%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.0745%" y="533" width="0.0238%" height="15" fill="rgb(214,208,22)" fg:x="6298" fg:w="2"/><text x="75.3936%" y="543.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="75.0864%" y="517" width="0.0119%" height="15" fill="rgb(240,57,32)" fg:x="6299" fg:w="1"/><text x="75.4055%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (20 samples, 0.24%)</title><rect x="74.8719%" y="597" width="0.2384%" height="15" fill="rgb(243,113,48)" fg:x="6281" fg:w="20"/><text x="75.1910%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="75.0983%" y="581" width="0.0119%" height="15" fill="rgb(225,135,30)" fg:x="6300" fg:w="1"/><text x="75.4174%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.0983%" y="565" width="0.0119%" height="15" fill="rgb(222,3,53)" fg:x="6300" fg:w="1"/><text x="75.4174%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.0983%" y="549" width="0.0119%" height="15" fill="rgb(243,142,2)" fg:x="6300" fg:w="1"/><text x="75.4174%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (7 samples, 0.08%)</title><rect x="75.1103%" y="597" width="0.0834%" height="15" fill="rgb(233,67,14)" fg:x="6301" fg:w="7"/><text x="75.4294%" y="607.50"/></g><g><title>__GI___libc_free (7 samples, 0.08%)</title><rect x="75.1103%" y="581" width="0.0834%" height="15" fill="rgb(245,125,36)" fg:x="6301" fg:w="7"/><text x="75.4294%" y="591.50"/></g><g><title>_int_free (7 samples, 0.08%)</title><rect x="75.1103%" y="565" width="0.0834%" height="15" fill="rgb(225,199,6)" fg:x="6301" fg:w="7"/><text x="75.4294%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (37 samples, 0.44%)</title><rect x="74.7646%" y="613" width="0.4411%" height="15" fill="rgb(244,71,6)" fg:x="6272" fg:w="37"/><text x="75.0837%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="75.1937%" y="597" width="0.0119%" height="15" fill="rgb(225,62,9)" fg:x="6308" fg:w="1"/><text x="75.5128%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.1937%" y="581" width="0.0119%" height="15" fill="rgb(246,139,53)" fg:x="6308" fg:w="1"/><text x="75.5128%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.1937%" y="565" width="0.0119%" height="15" fill="rgb(243,161,46)" fg:x="6308" fg:w="1"/><text x="75.5128%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.2175%" y="581" width="0.0119%" height="15" fill="rgb(236,153,7)" fg:x="6310" fg:w="1"/><text x="75.5366%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.2175%" y="565" width="0.0119%" height="15" fill="rgb(248,42,35)" fg:x="6310" fg:w="1"/><text x="75.5366%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="75.2056%" y="597" width="0.0358%" height="15" fill="rgb(250,17,31)" fg:x="6309" fg:w="3"/><text x="75.5247%" y="607.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="75.2295%" y="581" width="0.0119%" height="15" fill="rgb(248,138,14)" fg:x="6311" fg:w="1"/><text x="75.5486%" y="591.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="75.2414%" y="581" width="0.0238%" height="15" fill="rgb(228,161,3)" fg:x="6312" fg:w="2"/><text x="75.5605%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.2533%" y="565" width="0.0119%" height="15" fill="rgb(248,116,17)" fg:x="6313" fg:w="1"/><text x="75.5724%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="75.2652%" y="565" width="0.0119%" height="15" fill="rgb(207,78,24)" fg:x="6314" fg:w="1"/><text x="75.5843%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="75.2771%" y="565" width="0.0358%" height="15" fill="rgb(234,99,48)" fg:x="6315" fg:w="3"/><text x="75.5962%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="75.2771%" y="549" width="0.0358%" height="15" fill="rgb(242,22,26)" fg:x="6315" fg:w="3"/><text x="75.5962%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.2891%" y="533" width="0.0238%" height="15" fill="rgb(227,78,32)" fg:x="6316" fg:w="2"/><text x="75.6082%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.2891%" y="517" width="0.0238%" height="15" fill="rgb(226,189,43)" fg:x="6316" fg:w="2"/><text x="75.6082%" y="527.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.2891%" y="501" width="0.0238%" height="15" fill="rgb(227,218,35)" fg:x="6316" fg:w="2"/><text x="75.6082%" y="511.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="75.2891%" y="485" width="0.0238%" height="15" fill="rgb(206,111,40)" fg:x="6316" fg:w="2"/><text x="75.6082%" y="495.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="75.2891%" y="469" width="0.0238%" height="15" fill="rgb(208,217,22)" fg:x="6316" fg:w="2"/><text x="75.6082%" y="479.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.3129%" y="533" width="0.0119%" height="15" fill="rgb(248,20,20)" fg:x="6318" fg:w="1"/><text x="75.6320%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.3129%" y="517" width="0.0119%" height="15" fill="rgb(239,155,16)" fg:x="6318" fg:w="1"/><text x="75.6320%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.3129%" y="565" width="0.0238%" height="15" fill="rgb(238,171,46)" fg:x="6318" fg:w="2"/><text x="75.6320%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.3129%" y="549" width="0.0238%" height="15" fill="rgb(248,11,36)" fg:x="6318" fg:w="2"/><text x="75.6320%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="75.3248%" y="533" width="0.0119%" height="15" fill="rgb(220,148,37)" fg:x="6319" fg:w="1"/><text x="75.6439%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="75.3248%" y="517" width="0.0119%" height="15" fill="rgb(218,144,42)" fg:x="6319" fg:w="1"/><text x="75.6439%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.3248%" y="501" width="0.0119%" height="15" fill="rgb(245,20,20)" fg:x="6319" fg:w="1"/><text x="75.6439%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.3248%" y="485" width="0.0119%" height="15" fill="rgb(240,111,48)" fg:x="6319" fg:w="1"/><text x="75.6439%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="75.2652%" y="581" width="0.1192%" height="15" fill="rgb(237,225,32)" fg:x="6314" fg:w="10"/><text x="75.5843%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="75.3368%" y="565" width="0.0477%" height="15" fill="rgb(228,161,46)" fg:x="6320" fg:w="4"/><text x="75.6559%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="75.3368%" y="549" width="0.0477%" height="15" fill="rgb(235,196,21)" fg:x="6320" fg:w="4"/><text x="75.6559%" y="559.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="75.3368%" y="533" width="0.0477%" height="15" fill="rgb(250,133,21)" fg:x="6320" fg:w="4"/><text x="75.6559%" y="543.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="75.3487%" y="517" width="0.0358%" height="15" fill="rgb(236,94,32)" fg:x="6321" fg:w="3"/><text x="75.6678%" y="527.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="75.3487%" y="501" width="0.0358%" height="15" fill="rgb(219,176,25)" fg:x="6321" fg:w="3"/><text x="75.6678%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.3844%" y="549" width="0.0119%" height="15" fill="rgb(211,17,43)" fg:x="6324" fg:w="1"/><text x="75.7035%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.3844%" y="533" width="0.0119%" height="15" fill="rgb(220,75,23)" fg:x="6324" fg:w="1"/><text x="75.7035%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.3844%" y="565" width="0.0238%" height="15" fill="rgb(215,122,32)" fg:x="6324" fg:w="2"/><text x="75.7035%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="75.3964%" y="549" width="0.0119%" height="15" fill="rgb(218,57,38)" fg:x="6325" fg:w="1"/><text x="75.7155%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.3964%" y="533" width="0.0119%" height="15" fill="rgb(233,208,46)" fg:x="6325" fg:w="1"/><text x="75.7155%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.3964%" y="517" width="0.0119%" height="15" fill="rgb(221,35,50)" fg:x="6325" fg:w="1"/><text x="75.7155%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="75.4083%" y="549" width="0.0119%" height="15" fill="rgb(229,213,29)" fg:x="6326" fg:w="1"/><text x="75.7274%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.4202%" y="549" width="0.0238%" height="15" fill="rgb(229,110,40)" fg:x="6327" fg:w="2"/><text x="75.7393%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="75.4321%" y="533" width="0.0119%" height="15" fill="rgb(247,206,19)" fg:x="6328" fg:w="1"/><text x="75.7512%" y="543.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="75.4440%" y="533" width="0.0238%" height="15" fill="rgb(216,229,45)" fg:x="6329" fg:w="2"/><text x="75.7631%" y="543.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="75.4440%" y="517" width="0.0238%" height="15" fill="rgb(205,184,31)" fg:x="6329" fg:w="2"/><text x="75.7631%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="75.4679%" y="533" width="0.0119%" height="15" fill="rgb(213,91,10)" fg:x="6331" fg:w="1"/><text x="75.7870%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="75.4798%" y="517" width="0.0119%" height="15" fill="rgb(250,49,8)" fg:x="6332" fg:w="1"/><text x="75.7989%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.4917%" y="501" width="0.0119%" height="15" fill="rgb(207,26,8)" fg:x="6333" fg:w="1"/><text x="75.8108%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.4917%" y="485" width="0.0119%" height="15" fill="rgb(224,2,13)" fg:x="6333" fg:w="1"/><text x="75.8108%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.4917%" y="517" width="0.0238%" height="15" fill="rgb(219,108,27)" fg:x="6333" fg:w="2"/><text x="75.8108%" y="527.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="75.5036%" y="501" width="0.0119%" height="15" fill="rgb(240,89,32)" fg:x="6334" fg:w="1"/><text x="75.8227%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.5036%" y="485" width="0.0119%" height="15" fill="rgb(248,205,3)" fg:x="6334" fg:w="1"/><text x="75.8227%" y="495.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="75.5156%" y="501" width="0.0358%" height="15" fill="rgb(236,197,47)" fg:x="6335" fg:w="3"/><text x="75.8347%" y="511.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="75.5156%" y="485" width="0.0358%" height="15" fill="rgb(244,185,52)" fg:x="6335" fg:w="3"/><text x="75.8347%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="75.3844%" y="581" width="0.1788%" height="15" fill="rgb(210,206,23)" fg:x="6324" fg:w="15"/><text x="75.7035%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="75.4083%" y="565" width="0.1550%" height="15" fill="rgb(251,177,30)" fg:x="6326" fg:w="13"/><text x="75.7274%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="75.4440%" y="549" width="0.1192%" height="15" fill="rgb(243,27,45)" fg:x="6329" fg:w="10"/><text x="75.7631%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="75.4798%" y="533" width="0.0834%" height="15" fill="rgb(248,141,51)" fg:x="6332" fg:w="7"/><text x="75.7989%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="75.5156%" y="517" width="0.0477%" height="15" fill="rgb(235,102,15)" fg:x="6335" fg:w="4"/><text x="75.8347%" y="527.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="75.5513%" y="501" width="0.0119%" height="15" fill="rgb(214,164,53)" fg:x="6338" fg:w="1"/><text x="75.8704%" y="511.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="75.5632%" y="565" width="0.0238%" height="15" fill="rgb(228,18,51)" fg:x="6339" fg:w="2"/><text x="75.8823%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.5752%" y="549" width="0.0119%" height="15" fill="rgb(205,211,11)" fg:x="6340" fg:w="1"/><text x="75.8943%" y="559.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="75.5871%" y="565" width="0.0119%" height="15" fill="rgb(208,63,6)" fg:x="6341" fg:w="1"/><text x="75.9062%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="75.5632%" y="581" width="0.0477%" height="15" fill="rgb(245,76,14)" fg:x="6339" fg:w="4"/><text x="75.8823%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="75.5990%" y="565" width="0.0119%" height="15" fill="rgb(234,176,34)" fg:x="6342" fg:w="1"/><text x="75.9181%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (33 samples, 0.39%)</title><rect x="75.2414%" y="597" width="0.3934%" height="15" fill="rgb(243,156,42)" fg:x="6312" fg:w="33"/><text x="75.5605%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.6109%" y="581" width="0.0238%" height="15" fill="rgb(237,182,10)" fg:x="6343" fg:w="2"/><text x="75.9300%" y="591.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="75.6109%" y="565" width="0.0238%" height="15" fill="rgb(244,117,0)" fg:x="6343" fg:w="2"/><text x="75.9300%" y="575.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="75.6109%" y="549" width="0.0238%" height="15" fill="rgb(239,91,50)" fg:x="6343" fg:w="2"/><text x="75.9300%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.6348%" y="581" width="0.0119%" height="15" fill="rgb(206,38,9)" fg:x="6345" fg:w="1"/><text x="75.9539%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.6348%" y="565" width="0.0119%" height="15" fill="rgb(205,25,10)" fg:x="6345" fg:w="1"/><text x="75.9539%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="75.6467%" y="581" width="0.0119%" height="15" fill="rgb(206,224,7)" fg:x="6346" fg:w="1"/><text x="75.9658%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="75.6467%" y="565" width="0.0119%" height="15" fill="rgb(227,157,10)" fg:x="6346" fg:w="1"/><text x="75.9658%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.6586%" y="565" width="0.0119%" height="15" fill="rgb(214,157,37)" fg:x="6347" fg:w="1"/><text x="75.9777%" y="575.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="75.6705%" y="565" width="0.0119%" height="15" fill="rgb(209,180,35)" fg:x="6348" fg:w="1"/><text x="75.9896%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.6824%" y="501" width="0.0119%" height="15" fill="rgb(216,174,49)" fg:x="6349" fg:w="1"/><text x="76.0015%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.6824%" y="485" width="0.0119%" height="15" fill="rgb(205,96,20)" fg:x="6349" fg:w="1"/><text x="76.0015%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.6824%" y="549" width="0.0238%" height="15" fill="rgb(214,220,39)" fg:x="6349" fg:w="2"/><text x="76.0015%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.6824%" y="533" width="0.0238%" height="15" fill="rgb(245,126,30)" fg:x="6349" fg:w="2"/><text x="76.0015%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.6824%" y="517" width="0.0238%" height="15" fill="rgb(215,88,33)" fg:x="6349" fg:w="2"/><text x="76.0015%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="75.6944%" y="501" width="0.0119%" height="15" fill="rgb(210,1,49)" fg:x="6350" fg:w="1"/><text x="76.0135%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.7063%" y="533" width="0.0119%" height="15" fill="rgb(207,133,3)" fg:x="6351" fg:w="1"/><text x="76.0254%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.7063%" y="517" width="0.0119%" height="15" fill="rgb(231,47,43)" fg:x="6351" fg:w="1"/><text x="76.0254%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="75.6824%" y="565" width="0.0477%" height="15" fill="rgb(245,64,1)" fg:x="6349" fg:w="4"/><text x="76.0015%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.7063%" y="549" width="0.0238%" height="15" fill="rgb(253,145,20)" fg:x="6351" fg:w="2"/><text x="76.0254%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="75.7182%" y="533" width="0.0119%" height="15" fill="rgb(211,39,18)" fg:x="6352" fg:w="1"/><text x="76.0373%" y="543.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="75.7182%" y="517" width="0.0119%" height="15" fill="rgb(223,225,18)" fg:x="6352" fg:w="1"/><text x="76.0373%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.7182%" y="501" width="0.0119%" height="15" fill="rgb(210,202,44)" fg:x="6352" fg:w="1"/><text x="76.0373%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.7182%" y="485" width="0.0119%" height="15" fill="rgb(231,138,36)" fg:x="6352" fg:w="1"/><text x="76.0373%" y="495.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="75.7301%" y="549" width="0.0238%" height="15" fill="rgb(237,115,25)" fg:x="6353" fg:w="2"/><text x="76.0492%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.7420%" y="533" width="0.0119%" height="15" fill="rgb(215,53,48)" fg:x="6354" fg:w="1"/><text x="76.0611%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="75.7540%" y="533" width="0.0119%" height="15" fill="rgb(243,193,24)" fg:x="6355" fg:w="1"/><text x="76.0731%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.7659%" y="517" width="0.0119%" height="15" fill="rgb(210,106,28)" fg:x="6356" fg:w="1"/><text x="76.0850%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.7659%" y="501" width="0.0119%" height="15" fill="rgb(249,192,0)" fg:x="6356" fg:w="1"/><text x="76.0850%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="75.7540%" y="549" width="0.0358%" height="15" fill="rgb(224,96,21)" fg:x="6355" fg:w="3"/><text x="76.0731%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.7659%" y="533" width="0.0238%" height="15" fill="rgb(243,160,19)" fg:x="6356" fg:w="2"/><text x="76.0850%" y="543.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="75.7778%" y="517" width="0.0119%" height="15" fill="rgb(219,205,50)" fg:x="6357" fg:w="1"/><text x="76.0969%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.7897%" y="533" width="0.0119%" height="15" fill="rgb(218,175,44)" fg:x="6358" fg:w="1"/><text x="76.1088%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.7897%" y="517" width="0.0119%" height="15" fill="rgb(251,84,47)" fg:x="6358" fg:w="1"/><text x="76.1088%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.8016%" y="453" width="0.0119%" height="15" fill="rgb(241,14,16)" fg:x="6359" fg:w="1"/><text x="76.1207%" y="463.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.8016%" y="437" width="0.0119%" height="15" fill="rgb(207,142,28)" fg:x="6359" fg:w="1"/><text x="76.1207%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.8016%" y="533" width="0.0238%" height="15" fill="rgb(208,116,22)" fg:x="6359" fg:w="2"/><text x="76.1207%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.8016%" y="517" width="0.0238%" height="15" fill="rgb(210,0,43)" fg:x="6359" fg:w="2"/><text x="76.1207%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.8016%" y="501" width="0.0238%" height="15" fill="rgb(246,33,21)" fg:x="6359" fg:w="2"/><text x="76.1207%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.8016%" y="485" width="0.0238%" height="15" fill="rgb(208,158,54)" fg:x="6359" fg:w="2"/><text x="76.1207%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.8016%" y="469" width="0.0238%" height="15" fill="rgb(218,99,29)" fg:x="6359" fg:w="2"/><text x="76.1207%" y="479.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="75.8136%" y="453" width="0.0119%" height="15" fill="rgb(226,29,7)" fg:x="6360" fg:w="1"/><text x="76.1327%" y="463.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="75.8255%" y="517" width="0.0119%" height="15" fill="rgb(206,178,46)" fg:x="6361" fg:w="1"/><text x="76.1446%" y="527.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="75.8493%" y="501" width="0.0238%" height="15" fill="rgb(205,169,32)" fg:x="6363" fg:w="2"/><text x="76.1684%" y="511.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="75.8493%" y="485" width="0.0238%" height="15" fill="rgb(217,4,13)" fg:x="6363" fg:w="2"/><text x="76.1684%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="75.8374%" y="517" width="0.0477%" height="15" fill="rgb(210,140,37)" fg:x="6362" fg:w="4"/><text x="76.1565%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="75.8732%" y="501" width="0.0119%" height="15" fill="rgb(229,80,10)" fg:x="6365" fg:w="1"/><text x="76.1923%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="75.7301%" y="565" width="0.1669%" height="15" fill="rgb(212,175,34)" fg:x="6353" fg:w="14"/><text x="76.0492%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="75.7897%" y="549" width="0.1073%" height="15" fill="rgb(216,207,24)" fg:x="6358" fg:w="9"/><text x="76.1088%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="75.8255%" y="533" width="0.0715%" height="15" fill="rgb(234,163,3)" fg:x="6361" fg:w="6"/><text x="76.1446%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="75.8851%" y="517" width="0.0119%" height="15" fill="rgb(248,101,16)" fg:x="6366" fg:w="1"/><text x="76.2042%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.8851%" y="501" width="0.0119%" height="15" fill="rgb(209,152,54)" fg:x="6366" fg:w="1"/><text x="76.2042%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.8851%" y="485" width="0.0119%" height="15" fill="rgb(229,124,51)" fg:x="6366" fg:w="1"/><text x="76.2042%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="75.8970%" y="565" width="0.0119%" height="15" fill="rgb(219,83,18)" fg:x="6367" fg:w="1"/><text x="76.2161%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.8970%" y="549" width="0.0119%" height="15" fill="rgb(206,29,38)" fg:x="6367" fg:w="1"/><text x="76.2161%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.8970%" y="533" width="0.0119%" height="15" fill="rgb(245,123,23)" fg:x="6367" fg:w="1"/><text x="76.2161%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (23 samples, 0.27%)</title><rect x="75.6586%" y="581" width="0.2742%" height="15" fill="rgb(238,50,33)" fg:x="6347" fg:w="23"/><text x="75.9777%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="75.9089%" y="565" width="0.0238%" height="15" fill="rgb(234,165,23)" fg:x="6368" fg:w="2"/><text x="76.2280%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.9208%" y="549" width="0.0119%" height="15" fill="rgb(211,82,31)" fg:x="6369" fg:w="1"/><text x="76.2399%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.9208%" y="533" width="0.0119%" height="15" fill="rgb(224,166,46)" fg:x="6369" fg:w="1"/><text x="76.2399%" y="543.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="75.9328%" y="565" width="0.0358%" height="15" fill="rgb(211,13,8)" fg:x="6370" fg:w="3"/><text x="76.2519%" y="575.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="75.9328%" y="549" width="0.0358%" height="15" fill="rgb(212,7,42)" fg:x="6370" fg:w="3"/><text x="76.2519%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="75.9685%" y="565" width="0.0119%" height="15" fill="rgb(249,102,19)" fg:x="6373" fg:w="1"/><text x="76.2876%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="75.9685%" y="549" width="0.0119%" height="15" fill="rgb(225,41,13)" fg:x="6373" fg:w="1"/><text x="76.2876%" y="559.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="75.9805%" y="549" width="0.0358%" height="15" fill="rgb(220,65,27)" fg:x="6374" fg:w="3"/><text x="76.2996%" y="559.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="75.9924%" y="533" width="0.0238%" height="15" fill="rgb(206,4,41)" fg:x="6375" fg:w="2"/><text x="76.3115%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.0162%" y="533" width="0.0119%" height="15" fill="rgb(219,60,39)" fg:x="6377" fg:w="1"/><text x="76.3353%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.0162%" y="517" width="0.0119%" height="15" fill="rgb(226,4,38)" fg:x="6377" fg:w="1"/><text x="76.3353%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.0281%" y="501" width="0.0119%" height="15" fill="rgb(250,52,3)" fg:x="6378" fg:w="1"/><text x="76.3472%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.0281%" y="485" width="0.0119%" height="15" fill="rgb(234,93,0)" fg:x="6378" fg:w="1"/><text x="76.3472%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.0281%" y="469" width="0.0119%" height="15" fill="rgb(251,47,47)" fg:x="6378" fg:w="1"/><text x="76.3472%" y="479.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.0401%" y="485" width="0.0119%" height="15" fill="rgb(205,166,47)" fg:x="6379" fg:w="1"/><text x="76.3592%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="76.0281%" y="533" width="0.0358%" height="15" fill="rgb(231,148,8)" fg:x="6378" fg:w="3"/><text x="76.3472%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="76.0281%" y="517" width="0.0358%" height="15" fill="rgb(244,185,19)" fg:x="6378" fg:w="3"/><text x="76.3472%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="76.0401%" y="501" width="0.0238%" height="15" fill="rgb(224,201,45)" fg:x="6379" fg:w="2"/><text x="76.3592%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.0520%" y="485" width="0.0119%" height="15" fill="rgb(240,77,39)" fg:x="6380" fg:w="1"/><text x="76.3711%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.0520%" y="469" width="0.0119%" height="15" fill="rgb(248,211,29)" fg:x="6380" fg:w="1"/><text x="76.3711%" y="479.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.0520%" y="453" width="0.0119%" height="15" fill="rgb(232,214,46)" fg:x="6380" fg:w="1"/><text x="76.3711%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="76.0162%" y="549" width="0.0596%" height="15" fill="rgb(213,99,54)" fg:x="6377" fg:w="5"/><text x="76.3353%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.0639%" y="533" width="0.0119%" height="15" fill="rgb(240,19,46)" fg:x="6381" fg:w="1"/><text x="76.3830%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.0639%" y="517" width="0.0119%" height="15" fill="rgb(243,89,10)" fg:x="6381" fg:w="1"/><text x="76.3830%" y="527.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.0639%" y="501" width="0.0119%" height="15" fill="rgb(249,28,32)" fg:x="6381" fg:w="1"/><text x="76.3830%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.0639%" y="485" width="0.0119%" height="15" fill="rgb(253,30,9)" fg:x="6381" fg:w="1"/><text x="76.3830%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.0639%" y="469" width="0.0119%" height="15" fill="rgb(217,2,26)" fg:x="6381" fg:w="1"/><text x="76.3830%" y="479.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.0758%" y="533" width="0.0119%" height="15" fill="rgb(220,28,10)" fg:x="6382" fg:w="1"/><text x="76.3949%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.0758%" y="517" width="0.0119%" height="15" fill="rgb(228,167,49)" fg:x="6382" fg:w="1"/><text x="76.3949%" y="527.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="76.0997%" y="517" width="0.0238%" height="15" fill="rgb(238,212,3)" fg:x="6384" fg:w="2"/><text x="76.4188%" y="527.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="76.0997%" y="501" width="0.0238%" height="15" fill="rgb(229,134,44)" fg:x="6384" fg:w="2"/><text x="76.4188%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.1235%" y="501" width="0.0119%" height="15" fill="rgb(208,71,4)" fg:x="6386" fg:w="1"/><text x="76.4426%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.1235%" y="485" width="0.0119%" height="15" fill="rgb(221,205,45)" fg:x="6386" fg:w="1"/><text x="76.4426%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="76.1235%" y="517" width="0.0238%" height="15" fill="rgb(215,132,38)" fg:x="6386" fg:w="2"/><text x="76.4426%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="76.1354%" y="501" width="0.0119%" height="15" fill="rgb(227,158,6)" fg:x="6387" fg:w="1"/><text x="76.4545%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="76.0877%" y="533" width="0.0715%" height="15" fill="rgb(250,10,38)" fg:x="6383" fg:w="6"/><text x="76.4068%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.1473%" y="517" width="0.0119%" height="15" fill="rgb(225,171,40)" fg:x="6388" fg:w="1"/><text x="76.4664%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.1473%" y="501" width="0.0119%" height="15" fill="rgb(238,17,43)" fg:x="6388" fg:w="1"/><text x="76.4664%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.1473%" y="485" width="0.0119%" height="15" fill="rgb(208,145,4)" fg:x="6388" fg:w="1"/><text x="76.4664%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.1593%" y="533" width="0.0119%" height="15" fill="rgb(232,82,7)" fg:x="6389" fg:w="1"/><text x="76.4784%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.1593%" y="517" width="0.0119%" height="15" fill="rgb(205,166,38)" fg:x="6389" fg:w="1"/><text x="76.4784%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.1593%" y="501" width="0.0119%" height="15" fill="rgb(240,228,4)" fg:x="6389" fg:w="1"/><text x="76.4784%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.1712%" y="501" width="0.0119%" height="15" fill="rgb(233,121,40)" fg:x="6390" fg:w="1"/><text x="76.4903%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.1712%" y="485" width="0.0119%" height="15" fill="rgb(243,84,30)" fg:x="6390" fg:w="1"/><text x="76.4903%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="76.1712%" y="517" width="0.0238%" height="15" fill="rgb(235,81,48)" fg:x="6390" fg:w="2"/><text x="76.4903%" y="527.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.1831%" y="501" width="0.0119%" height="15" fill="rgb(218,137,0)" fg:x="6391" fg:w="1"/><text x="76.5022%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.1831%" y="485" width="0.0119%" height="15" fill="rgb(223,151,48)" fg:x="6391" fg:w="1"/><text x="76.5022%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.1831%" y="469" width="0.0119%" height="15" fill="rgb(247,30,19)" fg:x="6391" fg:w="1"/><text x="76.5022%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.1831%" y="453" width="0.0119%" height="15" fill="rgb(205,129,29)" fg:x="6391" fg:w="1"/><text x="76.5022%" y="463.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.1831%" y="437" width="0.0119%" height="15" fill="rgb(222,29,2)" fg:x="6391" fg:w="1"/><text x="76.5022%" y="447.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.1950%" y="501" width="0.0119%" height="15" fill="rgb(232,145,33)" fg:x="6392" fg:w="1"/><text x="76.5141%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.1950%" y="485" width="0.0119%" height="15" fill="rgb(217,30,31)" fg:x="6392" fg:w="1"/><text x="76.5141%" y="495.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="76.2069%" y="485" width="0.0119%" height="15" fill="rgb(243,22,52)" fg:x="6393" fg:w="1"/><text x="76.5260%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.2189%" y="469" width="0.0119%" height="15" fill="rgb(254,228,14)" fg:x="6394" fg:w="1"/><text x="76.5380%" y="479.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.2189%" y="453" width="0.0119%" height="15" fill="rgb(231,45,50)" fg:x="6394" fg:w="1"/><text x="76.5380%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="76.2189%" y="485" width="0.0358%" height="15" fill="rgb(248,125,3)" fg:x="6394" fg:w="3"/><text x="76.5380%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="76.2308%" y="469" width="0.0238%" height="15" fill="rgb(213,76,9)" fg:x="6395" fg:w="2"/><text x="76.5499%" y="479.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="76.2308%" y="453" width="0.0238%" height="15" fill="rgb(238,108,21)" fg:x="6395" fg:w="2"/><text x="76.5499%" y="463.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="76.2308%" y="437" width="0.0238%" height="15" fill="rgb(229,214,19)" fg:x="6395" fg:w="2"/><text x="76.5499%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="76.2069%" y="501" width="0.0715%" height="15" fill="rgb(252,201,5)" fg:x="6393" fg:w="6"/><text x="76.5260%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="76.2546%" y="485" width="0.0238%" height="15" fill="rgb(233,165,49)" fg:x="6397" fg:w="2"/><text x="76.5737%" y="495.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="76.2546%" y="469" width="0.0238%" height="15" fill="rgb(208,165,19)" fg:x="6397" fg:w="2"/><text x="76.5737%" y="479.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="76.2546%" y="453" width="0.0238%" height="15" fill="rgb(216,220,31)" fg:x="6397" fg:w="2"/><text x="76.5737%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="76.0758%" y="549" width="0.2265%" height="15" fill="rgb(214,8,31)" fg:x="6382" fg:w="19"/><text x="76.3949%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="76.1712%" y="533" width="0.1311%" height="15" fill="rgb(220,32,32)" fg:x="6390" fg:w="11"/><text x="76.4903%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="76.1950%" y="517" width="0.1073%" height="15" fill="rgb(237,172,34)" fg:x="6392" fg:w="9"/><text x="76.5141%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="76.2785%" y="501" width="0.0238%" height="15" fill="rgb(240,209,5)" fg:x="6399" fg:w="2"/><text x="76.5976%" y="511.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="76.2785%" y="485" width="0.0238%" height="15" fill="rgb(221,219,1)" fg:x="6399" fg:w="2"/><text x="76.5976%" y="495.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="76.3023%" y="533" width="0.0358%" height="15" fill="rgb(237,90,36)" fg:x="6401" fg:w="3"/><text x="76.6214%" y="543.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="76.3023%" y="517" width="0.0358%" height="15" fill="rgb(245,14,51)" fg:x="6401" fg:w="3"/><text x="76.6214%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (5 samples, 0.06%)</title><rect x="76.3023%" y="549" width="0.0596%" height="15" fill="rgb(211,71,49)" fg:x="6401" fg:w="5"/><text x="76.6214%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="76.3381%" y="533" width="0.0238%" height="15" fill="rgb(230,223,9)" fg:x="6404" fg:w="2"/><text x="76.6572%" y="543.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="76.3619%" y="533" width="0.0238%" height="15" fill="rgb(212,33,31)" fg:x="6406" fg:w="2"/><text x="76.6810%" y="543.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="76.3619%" y="517" width="0.0238%" height="15" fill="rgb(218,141,5)" fg:x="6406" fg:w="2"/><text x="76.6810%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (35 samples, 0.42%)</title><rect x="75.9805%" y="565" width="0.4172%" height="15" fill="rgb(239,194,8)" fg:x="6374" fg:w="35"/><text x="76.2996%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="76.3619%" y="549" width="0.0358%" height="15" fill="rgb(225,119,29)" fg:x="6406" fg:w="3"/><text x="76.6810%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="76.3857%" y="533" width="0.0119%" height="15" fill="rgb(233,32,3)" fg:x="6408" fg:w="1"/><text x="76.7048%" y="543.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="76.3977%" y="549" width="0.0358%" height="15" fill="rgb(248,126,40)" fg:x="6409" fg:w="3"/><text x="76.7168%" y="559.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="76.3977%" y="533" width="0.0358%" height="15" fill="rgb(213,102,53)" fg:x="6409" fg:w="3"/><text x="76.7168%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="76.4334%" y="549" width="0.0119%" height="15" fill="rgb(212,69,15)" fg:x="6412" fg:w="1"/><text x="76.7525%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.4453%" y="533" width="0.0119%" height="15" fill="rgb(253,39,34)" fg:x="6413" fg:w="1"/><text x="76.7644%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.4453%" y="517" width="0.0119%" height="15" fill="rgb(205,189,54)" fg:x="6413" fg:w="1"/><text x="76.7644%" y="527.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="76.4573%" y="533" width="0.0119%" height="15" fill="rgb(234,229,45)" fg:x="6414" fg:w="1"/><text x="76.7764%" y="543.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="76.4692%" y="517" width="0.0119%" height="15" fill="rgb(243,79,48)" fg:x="6415" fg:w="1"/><text x="76.7883%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.4811%" y="517" width="0.0119%" height="15" fill="rgb(206,71,50)" fg:x="6416" fg:w="1"/><text x="76.8002%" y="527.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="76.4811%" y="501" width="0.0119%" height="15" fill="rgb(209,32,17)" fg:x="6416" fg:w="1"/><text x="76.8002%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.4930%" y="485" width="0.0119%" height="15" fill="rgb(219,229,6)" fg:x="6417" fg:w="1"/><text x="76.8121%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.4930%" y="469" width="0.0119%" height="15" fill="rgb(226,25,27)" fg:x="6417" fg:w="1"/><text x="76.8121%" y="479.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.4930%" y="453" width="0.0119%" height="15" fill="rgb(218,185,23)" fg:x="6417" fg:w="1"/><text x="76.8121%" y="463.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="76.5049%" y="469" width="0.0119%" height="15" fill="rgb(242,123,5)" fg:x="6418" fg:w="1"/><text x="76.8240%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="76.4930%" y="517" width="0.0358%" height="15" fill="rgb(215,53,19)" fg:x="6417" fg:w="3"/><text x="76.8121%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="76.4930%" y="501" width="0.0358%" height="15" fill="rgb(233,20,30)" fg:x="6417" fg:w="3"/><text x="76.8121%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="76.5049%" y="485" width="0.0238%" height="15" fill="rgb(209,67,20)" fg:x="6418" fg:w="2"/><text x="76.8240%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.5169%" y="469" width="0.0119%" height="15" fill="rgb(227,181,50)" fg:x="6419" fg:w="1"/><text x="76.8360%" y="479.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.5169%" y="453" width="0.0119%" height="15" fill="rgb(252,75,38)" fg:x="6419" fg:w="1"/><text x="76.8360%" y="463.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.5169%" y="437" width="0.0119%" height="15" fill="rgb(235,9,33)" fg:x="6419" fg:w="1"/><text x="76.8360%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="76.4692%" y="533" width="0.0715%" height="15" fill="rgb(208,87,30)" fg:x="6415" fg:w="6"/><text x="76.7883%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.5288%" y="517" width="0.0119%" height="15" fill="rgb(215,199,39)" fg:x="6420" fg:w="1"/><text x="76.8479%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.5288%" y="501" width="0.0119%" height="15" fill="rgb(246,208,12)" fg:x="6420" fg:w="1"/><text x="76.8479%" y="511.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.5288%" y="485" width="0.0119%" height="15" fill="rgb(206,195,10)" fg:x="6420" fg:w="1"/><text x="76.8479%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.5288%" y="469" width="0.0119%" height="15" fill="rgb(244,1,30)" fg:x="6420" fg:w="1"/><text x="76.8479%" y="479.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.5288%" y="453" width="0.0119%" height="15" fill="rgb(230,83,5)" fg:x="6420" fg:w="1"/><text x="76.8479%" y="463.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="76.5407%" y="517" width="0.0358%" height="15" fill="rgb(239,62,17)" fg:x="6421" fg:w="3"/><text x="76.8598%" y="527.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="76.5407%" y="501" width="0.0358%" height="15" fill="rgb(252,193,41)" fg:x="6421" fg:w="3"/><text x="76.8598%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.5765%" y="501" width="0.0119%" height="15" fill="rgb(216,142,19)" fg:x="6424" fg:w="1"/><text x="76.8956%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.5765%" y="485" width="0.0119%" height="15" fill="rgb(240,81,38)" fg:x="6424" fg:w="1"/><text x="76.8956%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="76.5765%" y="517" width="0.0238%" height="15" fill="rgb(240,109,40)" fg:x="6424" fg:w="2"/><text x="76.8956%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.5884%" y="501" width="0.0119%" height="15" fill="rgb(230,123,10)" fg:x="6425" fg:w="1"/><text x="76.9075%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.5884%" y="485" width="0.0119%" height="15" fill="rgb(253,42,32)" fg:x="6425" fg:w="1"/><text x="76.9075%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.6003%" y="469" width="0.0119%" height="15" fill="rgb(218,154,8)" fg:x="6426" fg:w="1"/><text x="76.9194%" y="479.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.6003%" y="453" width="0.0119%" height="15" fill="rgb(216,197,10)" fg:x="6426" fg:w="1"/><text x="76.9194%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="76.6003%" y="517" width="0.0238%" height="15" fill="rgb(223,107,12)" fg:x="6426" fg:w="2"/><text x="76.9194%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="76.6003%" y="501" width="0.0238%" height="15" fill="rgb(241,174,42)" fg:x="6426" fg:w="2"/><text x="76.9194%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="76.6003%" y="485" width="0.0238%" height="15" fill="rgb(231,78,20)" fg:x="6426" fg:w="2"/><text x="76.9194%" y="495.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="76.6122%" y="469" width="0.0119%" height="15" fill="rgb(230,208,49)" fg:x="6427" fg:w="1"/><text x="76.9313%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="76.5407%" y="533" width="0.0954%" height="15" fill="rgb(238,11,34)" fg:x="6421" fg:w="8"/><text x="76.8598%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.6242%" y="517" width="0.0119%" height="15" fill="rgb(210,130,26)" fg:x="6428" fg:w="1"/><text x="76.9433%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.6242%" y="501" width="0.0119%" height="15" fill="rgb(242,131,11)" fg:x="6428" fg:w="1"/><text x="76.9433%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.6242%" y="485" width="0.0119%" height="15" fill="rgb(237,38,28)" fg:x="6428" fg:w="1"/><text x="76.9433%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="76.6361%" y="533" width="0.0238%" height="15" fill="rgb(244,180,43)" fg:x="6429" fg:w="2"/><text x="76.9552%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.6480%" y="517" width="0.0119%" height="15" fill="rgb(214,171,19)" fg:x="6430" fg:w="1"/><text x="76.9671%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.6480%" y="501" width="0.0119%" height="15" fill="rgb(252,101,45)" fg:x="6430" fg:w="1"/><text x="76.9671%" y="511.50"/></g><g><title>__GI___libc_free (4 samples, 0.05%)</title><rect x="76.6718%" y="517" width="0.0477%" height="15" fill="rgb(211,96,33)" fg:x="6432" fg:w="4"/><text x="76.9909%" y="527.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="76.6838%" y="501" width="0.0358%" height="15" fill="rgb(207,80,25)" fg:x="6433" fg:w="3"/><text x="77.0029%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="76.4453%" y="549" width="0.2861%" height="15" fill="rgb(225,15,35)" fg:x="6413" fg:w="24"/><text x="76.7644%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (6 samples, 0.07%)</title><rect x="76.6599%" y="533" width="0.0715%" height="15" fill="rgb(214,93,43)" fg:x="6431" fg:w="6"/><text x="76.9790%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State), const_&lt;State, bool&gt;(bool)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.7195%" y="517" width="0.0119%" height="15" fill="rgb(248,42,37)" fg:x="6436" fg:w="1"/><text x="77.0386%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.7314%" y="533" width="0.0119%" height="15" fill="rgb(217,135,32)" fg:x="6437" fg:w="1"/><text x="77.0505%" y="543.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="76.7314%" y="517" width="0.0119%" height="15" fill="rgb(216,74,28)" fg:x="6437" fg:w="1"/><text x="77.0505%" y="527.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="76.7434%" y="517" width="0.0238%" height="15" fill="rgb(247,108,16)" fg:x="6438" fg:w="2"/><text x="77.0625%" y="527.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="76.7434%" y="501" width="0.0238%" height="15" fill="rgb(205,219,30)" fg:x="6438" fg:w="2"/><text x="77.0625%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.7672%" y="485" width="0.0119%" height="15" fill="rgb(241,122,9)" fg:x="6440" fg:w="1"/><text x="77.0863%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.7672%" y="469" width="0.0119%" height="15" fill="rgb(216,148,50)" fg:x="6440" fg:w="1"/><text x="77.0863%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.7672%" y="453" width="0.0119%" height="15" fill="rgb(226,154,2)" fg:x="6440" fg:w="1"/><text x="77.0863%" y="463.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.7672%" y="437" width="0.0119%" height="15" fill="rgb(220,128,1)" fg:x="6440" fg:w="1"/><text x="77.0863%" y="447.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.7672%" y="421" width="0.0119%" height="15" fill="rgb(245,185,29)" fg:x="6440" fg:w="1"/><text x="77.0863%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="76.7672%" y="501" width="0.0238%" height="15" fill="rgb(243,161,2)" fg:x="6440" fg:w="2"/><text x="77.0863%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.7791%" y="485" width="0.0119%" height="15" fill="rgb(249,215,17)" fg:x="6441" fg:w="1"/><text x="77.0982%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.7791%" y="469" width="0.0119%" height="15" fill="rgb(237,67,11)" fg:x="6441" fg:w="1"/><text x="77.0982%" y="479.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.7791%" y="453" width="0.0119%" height="15" fill="rgb(239,17,24)" fg:x="6441" fg:w="1"/><text x="77.0982%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="76.7672%" y="517" width="0.0477%" height="15" fill="rgb(215,97,29)" fg:x="6440" fg:w="4"/><text x="77.0863%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="76.7910%" y="501" width="0.0238%" height="15" fill="rgb(253,228,42)" fg:x="6442" fg:w="2"/><text x="77.1101%" y="511.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="76.7910%" y="485" width="0.0238%" height="15" fill="rgb(240,85,2)" fg:x="6442" fg:w="2"/><text x="77.1101%" y="495.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="76.7910%" y="469" width="0.0238%" height="15" fill="rgb(214,155,4)" fg:x="6442" fg:w="2"/><text x="77.1101%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="76.8149%" y="501" width="0.0477%" height="15" fill="rgb(247,120,22)" fg:x="6444" fg:w="4"/><text x="77.1340%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="76.8149%" y="485" width="0.0477%" height="15" fill="rgb(211,208,6)" fg:x="6444" fg:w="4"/><text x="77.1340%" y="495.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="76.8268%" y="469" width="0.0358%" height="15" fill="rgb(235,99,41)" fg:x="6445" fg:w="3"/><text x="77.1459%" y="479.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="76.8387%" y="453" width="0.0238%" height="15" fill="rgb(223,28,8)" fg:x="6446" fg:w="2"/><text x="77.1578%" y="463.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="76.8626%" y="469" width="0.0238%" height="15" fill="rgb(212,71,20)" fg:x="6448" fg:w="2"/><text x="77.1817%" y="479.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="76.8626%" y="453" width="0.0238%" height="15" fill="rgb(206,85,3)" fg:x="6448" fg:w="2"/><text x="77.1817%" y="463.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.8864%" y="453" width="0.0119%" height="15" fill="rgb(244,180,11)" fg:x="6450" fg:w="1"/><text x="77.2055%" y="463.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.8864%" y="437" width="0.0119%" height="15" fill="rgb(223,16,21)" fg:x="6450" fg:w="1"/><text x="77.2055%" y="447.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.8983%" y="437" width="0.0119%" height="15" fill="rgb(238,85,42)" fg:x="6451" fg:w="1"/><text x="77.2174%" y="447.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.9102%" y="437" width="0.0119%" height="15" fill="rgb(205,85,8)" fg:x="6452" fg:w="1"/><text x="77.2293%" y="447.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="76.9102%" y="421" width="0.0119%" height="15" fill="rgb(217,190,15)" fg:x="6452" fg:w="1"/><text x="77.2293%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="76.8626%" y="501" width="0.0715%" height="15" fill="rgb(243,192,23)" fg:x="6448" fg:w="6"/><text x="77.1817%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="76.8626%" y="485" width="0.0715%" height="15" fill="rgb(223,220,37)" fg:x="6448" fg:w="6"/><text x="77.1817%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="76.8864%" y="469" width="0.0477%" height="15" fill="rgb(208,41,17)" fg:x="6450" fg:w="4"/><text x="77.2055%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="76.8983%" y="453" width="0.0358%" height="15" fill="rgb(224,188,7)" fg:x="6451" fg:w="3"/><text x="77.2174%" y="463.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.9222%" y="437" width="0.0119%" height="15" fill="rgb(236,16,50)" fg:x="6453" fg:w="1"/><text x="77.2413%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.9222%" y="421" width="0.0119%" height="15" fill="rgb(238,6,24)" fg:x="6453" fg:w="1"/><text x="77.2413%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.9222%" y="405" width="0.0119%" height="15" fill="rgb(253,67,45)" fg:x="6453" fg:w="1"/><text x="77.2413%" y="415.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="76.9222%" y="389" width="0.0119%" height="15" fill="rgb(210,89,32)" fg:x="6453" fg:w="1"/><text x="77.2413%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="76.8149%" y="517" width="0.1311%" height="15" fill="rgb(208,89,9)" fg:x="6444" fg:w="11"/><text x="77.1340%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="76.9341%" y="501" width="0.0119%" height="15" fill="rgb(222,180,44)" fg:x="6454" fg:w="1"/><text x="77.2532%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="76.9341%" y="485" width="0.0119%" height="15" fill="rgb(250,181,46)" fg:x="6454" fg:w="1"/><text x="77.2532%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="76.9341%" y="469" width="0.0119%" height="15" fill="rgb(210,190,26)" fg:x="6454" fg:w="1"/><text x="77.2532%" y="479.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="76.9460%" y="501" width="0.0238%" height="15" fill="rgb(253,49,13)" fg:x="6455" fg:w="2"/><text x="77.2651%" y="511.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="76.9460%" y="485" width="0.0238%" height="15" fill="rgb(240,184,42)" fg:x="6455" fg:w="2"/><text x="77.2651%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="76.9460%" y="517" width="0.0358%" height="15" fill="rgb(246,59,37)" fg:x="6455" fg:w="3"/><text x="77.2651%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="76.9698%" y="501" width="0.0119%" height="15" fill="rgb(207,134,54)" fg:x="6457" fg:w="1"/><text x="77.2889%" y="511.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="76.9818%" y="501" width="0.0358%" height="15" fill="rgb(250,122,24)" fg:x="6458" fg:w="3"/><text x="77.3009%" y="511.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="76.9937%" y="485" width="0.0238%" height="15" fill="rgb(239,206,3)" fg:x="6459" fg:w="2"/><text x="77.3128%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="76.7434%" y="533" width="0.2861%" height="15" fill="rgb(253,220,32)" fg:x="6438" fg:w="24"/><text x="77.0625%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="76.9818%" y="517" width="0.0477%" height="15" fill="rgb(209,217,48)" fg:x="6458" fg:w="4"/><text x="77.3009%" y="527.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="77.0175%" y="501" width="0.0119%" height="15" fill="rgb(242,91,39)" fg:x="6461" fg:w="1"/><text x="77.3366%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.0294%" y="517" width="0.0119%" height="15" fill="rgb(228,4,13)" fg:x="6462" fg:w="1"/><text x="77.3485%" y="527.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="77.0294%" y="501" width="0.0119%" height="15" fill="rgb(223,133,4)" fg:x="6462" fg:w="1"/><text x="77.3485%" y="511.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="77.0414%" y="501" width="0.0238%" height="15" fill="rgb(215,105,30)" fg:x="6463" fg:w="2"/><text x="77.3605%" y="511.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="77.0414%" y="485" width="0.0238%" height="15" fill="rgb(230,9,4)" fg:x="6463" fg:w="2"/><text x="77.3605%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.0652%" y="485" width="0.0119%" height="15" fill="rgb(248,15,2)" fg:x="6465" fg:w="1"/><text x="77.3843%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="77.0652%" y="469" width="0.0119%" height="15" fill="rgb(208,210,22)" fg:x="6465" fg:w="1"/><text x="77.3843%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="77.0771%" y="485" width="0.0358%" height="15" fill="rgb(208,112,41)" fg:x="6466" fg:w="3"/><text x="77.3962%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="77.0771%" y="469" width="0.0358%" height="15" fill="rgb(232,83,14)" fg:x="6466" fg:w="3"/><text x="77.3962%" y="479.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="77.0771%" y="453" width="0.0358%" height="15" fill="rgb(229,65,11)" fg:x="6466" fg:w="3"/><text x="77.3962%" y="463.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="77.0890%" y="437" width="0.0238%" height="15" fill="rgb(228,126,24)" fg:x="6467" fg:w="2"/><text x="77.4081%" y="447.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.1129%" y="453" width="0.0119%" height="15" fill="rgb(218,66,33)" fg:x="6469" fg:w="1"/><text x="77.4320%" y="463.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="77.1129%" y="437" width="0.0119%" height="15" fill="rgb(251,49,52)" fg:x="6469" fg:w="1"/><text x="77.4320%" y="447.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.1248%" y="421" width="0.0119%" height="15" fill="rgb(219,46,37)" fg:x="6470" fg:w="1"/><text x="77.4439%" y="431.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="77.1248%" y="405" width="0.0119%" height="15" fill="rgb(213,53,49)" fg:x="6470" fg:w="1"/><text x="77.4439%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="77.1248%" y="437" width="0.0238%" height="15" fill="rgb(214,134,1)" fg:x="6470" fg:w="2"/><text x="77.4439%" y="447.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.1367%" y="421" width="0.0119%" height="15" fill="rgb(208,139,43)" fg:x="6471" fg:w="1"/><text x="77.4558%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.1367%" y="405" width="0.0119%" height="15" fill="rgb(231,105,35)" fg:x="6471" fg:w="1"/><text x="77.4558%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.1367%" y="389" width="0.0119%" height="15" fill="rgb(247,189,9)" fg:x="6471" fg:w="1"/><text x="77.4558%" y="399.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.1367%" y="373" width="0.0119%" height="15" fill="rgb(252,48,51)" fg:x="6471" fg:w="1"/><text x="77.4558%" y="383.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="77.1367%" y="357" width="0.0119%" height="15" fill="rgb(209,121,1)" fg:x="6471" fg:w="1"/><text x="77.4558%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="77.1248%" y="453" width="0.0358%" height="15" fill="rgb(231,40,26)" fg:x="6470" fg:w="3"/><text x="77.4439%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.1486%" y="437" width="0.0119%" height="15" fill="rgb(251,8,13)" fg:x="6472" fg:w="1"/><text x="77.4677%" y="447.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.1486%" y="421" width="0.0119%" height="15" fill="rgb(231,110,2)" fg:x="6472" fg:w="1"/><text x="77.4677%" y="431.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="77.1486%" y="405" width="0.0119%" height="15" fill="rgb(216,153,22)" fg:x="6472" fg:w="1"/><text x="77.4677%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="77.0652%" y="501" width="0.1073%" height="15" fill="rgb(249,116,49)" fg:x="6465" fg:w="9"/><text x="77.3843%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="77.1129%" y="485" width="0.0596%" height="15" fill="rgb(230,89,2)" fg:x="6469" fg:w="5"/><text x="77.4320%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="77.1129%" y="469" width="0.0596%" height="15" fill="rgb(231,125,23)" fg:x="6469" fg:w="5"/><text x="77.4320%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.1606%" y="453" width="0.0119%" height="15" fill="rgb(212,217,18)" fg:x="6473" fg:w="1"/><text x="77.4797%" y="463.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.1606%" y="437" width="0.0119%" height="15" fill="rgb(210,21,33)" fg:x="6473" fg:w="1"/><text x="77.4797%" y="447.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="77.1606%" y="421" width="0.0119%" height="15" fill="rgb(241,97,9)" fg:x="6473" fg:w="1"/><text x="77.4797%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.1725%" y="501" width="0.0119%" height="15" fill="rgb(221,35,31)" fg:x="6474" fg:w="1"/><text x="77.4916%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.1725%" y="485" width="0.0119%" height="15" fill="rgb(251,23,23)" fg:x="6474" fg:w="1"/><text x="77.4916%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="77.1725%" y="469" width="0.0119%" height="15" fill="rgb(227,165,2)" fg:x="6474" fg:w="1"/><text x="77.4916%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="77.0414%" y="517" width="0.1669%" height="15" fill="rgb(242,24,2)" fg:x="6463" fg:w="14"/><text x="77.3605%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="77.1844%" y="501" width="0.0238%" height="15" fill="rgb(242,138,51)" fg:x="6475" fg:w="2"/><text x="77.5035%" y="511.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="77.1844%" y="485" width="0.0238%" height="15" fill="rgb(220,219,5)" fg:x="6475" fg:w="2"/><text x="77.5035%" y="495.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="77.1844%" y="469" width="0.0238%" height="15" fill="rgb(247,53,29)" fg:x="6475" fg:w="2"/><text x="77.5035%" y="479.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.2082%" y="501" width="0.0119%" height="15" fill="rgb(233,43,39)" fg:x="6477" fg:w="1"/><text x="77.5273%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="77.2082%" y="485" width="0.0119%" height="15" fill="rgb(230,128,54)" fg:x="6477" fg:w="1"/><text x="77.5273%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.2202%" y="485" width="0.0119%" height="15" fill="rgb(218,20,12)" fg:x="6478" fg:w="1"/><text x="77.5393%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="77.2202%" y="469" width="0.0119%" height="15" fill="rgb(206,51,14)" fg:x="6478" fg:w="1"/><text x="77.5393%" y="479.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="77.2321%" y="485" width="0.0119%" height="15" fill="rgb(223,16,35)" fg:x="6479" fg:w="1"/><text x="77.5512%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.2440%" y="469" width="0.0119%" height="15" fill="rgb(226,165,37)" fg:x="6480" fg:w="1"/><text x="77.5631%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.2559%" y="453" width="0.0119%" height="15" fill="rgb(240,26,21)" fg:x="6481" fg:w="1"/><text x="77.5750%" y="463.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.2559%" y="437" width="0.0119%" height="15" fill="rgb(240,72,46)" fg:x="6481" fg:w="1"/><text x="77.5750%" y="447.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="77.2559%" y="421" width="0.0119%" height="15" fill="rgb(211,33,41)" fg:x="6481" fg:w="1"/><text x="77.5750%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="77.2559%" y="469" width="0.0358%" height="15" fill="rgb(224,157,46)" fg:x="6481" fg:w="3"/><text x="77.5750%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="77.2679%" y="453" width="0.0238%" height="15" fill="rgb(223,59,19)" fg:x="6482" fg:w="2"/><text x="77.5870%" y="463.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="77.2679%" y="437" width="0.0238%" height="15" fill="rgb(239,187,1)" fg:x="6482" fg:w="2"/><text x="77.5870%" y="447.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="77.2679%" y="421" width="0.0238%" height="15" fill="rgb(226,95,9)" fg:x="6482" fg:w="2"/><text x="77.5870%" y="431.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.2917%" y="405" width="0.0119%" height="15" fill="rgb(234,61,54)" fg:x="6484" fg:w="1"/><text x="77.6108%" y="415.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="77.2917%" y="389" width="0.0119%" height="15" fill="rgb(205,209,47)" fg:x="6484" fg:w="1"/><text x="77.6108%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="77.2917%" y="421" width="0.0358%" height="15" fill="rgb(228,7,43)" fg:x="6484" fg:w="3"/><text x="77.6108%" y="431.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="77.3036%" y="405" width="0.0238%" height="15" fill="rgb(240,217,52)" fg:x="6485" fg:w="2"/><text x="77.6227%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="77.3036%" y="389" width="0.0238%" height="15" fill="rgb(211,178,21)" fg:x="6485" fg:w="2"/><text x="77.6227%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="77.3036%" y="373" width="0.0238%" height="15" fill="rgb(205,25,34)" fg:x="6485" fg:w="2"/><text x="77.6227%" y="383.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="77.3155%" y="357" width="0.0119%" height="15" fill="rgb(209,57,11)" fg:x="6486" fg:w="1"/><text x="77.6346%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="77.2917%" y="437" width="0.0477%" height="15" fill="rgb(221,99,2)" fg:x="6484" fg:w="4"/><text x="77.6108%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.3275%" y="421" width="0.0119%" height="15" fill="rgb(232,79,22)" fg:x="6487" fg:w="1"/><text x="77.6466%" y="431.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.3275%" y="405" width="0.0119%" height="15" fill="rgb(221,145,32)" fg:x="6487" fg:w="1"/><text x="77.6466%" y="415.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="77.3275%" y="389" width="0.0119%" height="15" fill="rgb(236,133,36)" fg:x="6487" fg:w="1"/><text x="77.6466%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="77.2440%" y="485" width="0.1311%" height="15" fill="rgb(208,224,44)" fg:x="6480" fg:w="11"/><text x="77.5631%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="77.2917%" y="469" width="0.0834%" height="15" fill="rgb(235,143,15)" fg:x="6484" fg:w="7"/><text x="77.6108%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="77.2917%" y="453" width="0.0834%" height="15" fill="rgb(249,83,27)" fg:x="6484" fg:w="7"/><text x="77.6108%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="77.3394%" y="437" width="0.0358%" height="15" fill="rgb(238,226,19)" fg:x="6488" fg:w="3"/><text x="77.6585%" y="447.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="77.3394%" y="421" width="0.0358%" height="15" fill="rgb(226,206,27)" fg:x="6488" fg:w="3"/><text x="77.6585%" y="431.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="77.3394%" y="405" width="0.0358%" height="15" fill="rgb(251,182,9)" fg:x="6488" fg:w="3"/><text x="77.6585%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="77.2202%" y="501" width="0.1669%" height="15" fill="rgb(212,140,41)" fg:x="6478" fg:w="14"/><text x="77.5393%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.3751%" y="485" width="0.0119%" height="15" fill="rgb(220,106,18)" fg:x="6491" fg:w="1"/><text x="77.6942%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.3751%" y="469" width="0.0119%" height="15" fill="rgb(252,46,41)" fg:x="6491" fg:w="1"/><text x="77.6942%" y="479.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="77.3751%" y="453" width="0.0119%" height="15" fill="rgb(209,222,15)" fg:x="6491" fg:w="1"/><text x="77.6942%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.3871%" y="485" width="0.0119%" height="15" fill="rgb(233,83,50)" fg:x="6492" fg:w="1"/><text x="77.7062%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.3871%" y="469" width="0.0119%" height="15" fill="rgb(205,212,0)" fg:x="6492" fg:w="1"/><text x="77.7062%" y="479.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="77.3871%" y="453" width="0.0119%" height="15" fill="rgb(235,117,51)" fg:x="6492" fg:w="1"/><text x="77.7062%" y="463.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.3990%" y="469" width="0.0119%" height="15" fill="rgb(233,133,48)" fg:x="6493" fg:w="1"/><text x="77.7181%" y="479.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="77.3990%" y="453" width="0.0119%" height="15" fill="rgb(219,3,2)" fg:x="6493" fg:w="1"/><text x="77.7181%" y="463.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.4109%" y="405" width="0.0119%" height="15" fill="rgb(225,80,52)" fg:x="6494" fg:w="1"/><text x="77.7300%" y="415.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="77.4109%" y="389" width="0.0119%" height="15" fill="rgb(235,195,42)" fg:x="6494" fg:w="1"/><text x="77.7300%" y="399.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.4228%" y="389" width="0.0119%" height="15" fill="rgb(240,207,46)" fg:x="6495" fg:w="1"/><text x="77.7419%" y="399.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="77.4228%" y="373" width="0.0119%" height="15" fill="rgb(236,112,50)" fg:x="6495" fg:w="1"/><text x="77.7419%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="77.4109%" y="469" width="0.0358%" height="15" fill="rgb(249,151,27)" fg:x="6494" fg:w="3"/><text x="77.7300%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="77.4109%" y="453" width="0.0358%" height="15" fill="rgb(253,223,52)" fg:x="6494" fg:w="3"/><text x="77.7300%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="77.4109%" y="437" width="0.0358%" height="15" fill="rgb(215,55,33)" fg:x="6494" fg:w="3"/><text x="77.7300%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="77.4109%" y="421" width="0.0358%" height="15" fill="rgb(207,24,17)" fg:x="6494" fg:w="3"/><text x="77.7300%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="77.4228%" y="405" width="0.0238%" height="15" fill="rgb(218,169,32)" fg:x="6495" fg:w="2"/><text x="77.7419%" y="415.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.4347%" y="389" width="0.0119%" height="15" fill="rgb(209,210,6)" fg:x="6496" fg:w="1"/><text x="77.7538%" y="399.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.4347%" y="373" width="0.0119%" height="15" fill="rgb(225,208,8)" fg:x="6496" fg:w="1"/><text x="77.7538%" y="383.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="77.4347%" y="357" width="0.0119%" height="15" fill="rgb(238,14,32)" fg:x="6496" fg:w="1"/><text x="77.7538%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="77.3990%" y="485" width="0.0834%" height="15" fill="rgb(211,137,3)" fg:x="6493" fg:w="7"/><text x="77.7181%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="77.4467%" y="469" width="0.0358%" height="15" fill="rgb(207,171,19)" fg:x="6497" fg:w="3"/><text x="77.7658%" y="479.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="77.4467%" y="453" width="0.0358%" height="15" fill="rgb(250,80,8)" fg:x="6497" fg:w="3"/><text x="77.7658%" y="463.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="77.4467%" y="437" width="0.0358%" height="15" fill="rgb(209,103,53)" fg:x="6497" fg:w="3"/><text x="77.7658%" y="447.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="77.4824%" y="469" width="0.0119%" height="15" fill="rgb(233,198,10)" fg:x="6500" fg:w="1"/><text x="77.8015%" y="479.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.4943%" y="453" width="0.0119%" height="15" fill="rgb(236,125,25)" fg:x="6501" fg:w="1"/><text x="77.8134%" y="463.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="77.5182%" y="405" width="0.0119%" height="15" fill="rgb(254,182,48)" fg:x="6503" fg:w="1"/><text x="77.8373%" y="415.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.5301%" y="373" width="0.0119%" height="15" fill="rgb(216,108,44)" fg:x="6504" fg:w="1"/><text x="77.8492%" y="383.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="77.5301%" y="357" width="0.0119%" height="15" fill="rgb(222,72,39)" fg:x="6504" fg:w="1"/><text x="77.8492%" y="367.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="77.5420%" y="341" width="0.0119%" height="15" fill="rgb(252,70,39)" fg:x="6505" fg:w="1"/><text x="77.8611%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="77.5301%" y="389" width="0.0358%" height="15" fill="rgb(243,99,34)" fg:x="6504" fg:w="3"/><text x="77.8492%" y="399.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="77.5420%" y="373" width="0.0238%" height="15" fill="rgb(252,109,12)" fg:x="6505" fg:w="2"/><text x="77.8611%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="77.5420%" y="357" width="0.0238%" height="15" fill="rgb(211,186,10)" fg:x="6505" fg:w="2"/><text x="77.8611%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.5539%" y="341" width="0.0119%" height="15" fill="rgb(246,90,8)" fg:x="6506" fg:w="1"/><text x="77.8730%" y="351.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), parser::pop::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.5539%" y="325" width="0.0119%" height="15" fill="rgb(226,91,24)" fg:x="6506" fg:w="1"/><text x="77.8730%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="77.5301%" y="405" width="0.0477%" height="15" fill="rgb(216,28,44)" fg:x="6504" fg:w="4"/><text x="77.8492%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.5659%" y="389" width="0.0119%" height="15" fill="rgb(229,36,0)" fg:x="6507" fg:w="1"/><text x="77.8850%" y="399.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.5659%" y="373" width="0.0119%" height="15" fill="rgb(245,97,18)" fg:x="6507" fg:w="1"/><text x="77.8850%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="77.5063%" y="437" width="0.0834%" height="15" fill="rgb(241,97,54)" fg:x="6502" fg:w="7"/><text x="77.8254%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="77.5063%" y="421" width="0.0834%" height="15" fill="rgb(234,125,17)" fg:x="6502" fg:w="7"/><text x="77.8254%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.5778%" y="405" width="0.0119%" height="15" fill="rgb(228,172,39)" fg:x="6508" fg:w="1"/><text x="77.8969%" y="415.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="77.5778%" y="389" width="0.0119%" height="15" fill="rgb(227,169,1)" fg:x="6508" fg:w="1"/><text x="77.8969%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (296 samples, 3.53%)</title><rect x="74.0732%" y="645" width="3.5284%" height="15" fill="rgb(206,13,35)" fg:x="6214" fg:w="296"/><text x="74.3923%" y="655.50">..er </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (245 samples, 2.92%)</title><rect x="74.6811%" y="629" width="2.9205%" height="15" fill="rgb(211,117,30)" fg:x="6265" fg:w="245"/><text x="75.0002%" y="639.50">..r </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (201 samples, 2.40%)</title><rect x="75.2056%" y="613" width="2.3960%" height="15" fill="rgb(230,198,4)" fg:x="6309" fg:w="201"/><text x="75.5247%" y="623.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (165 samples, 1.97%)</title><rect x="75.6348%" y="597" width="1.9669%" height="15" fill="rgb(213,87,54)" fg:x="6345" fg:w="165"/><text x="75.9539%" y="607.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (140 samples, 1.67%)</title><rect x="75.9328%" y="581" width="1.6689%" height="15" fill="rgb(248,43,22)" fg:x="6370" fg:w="140"/><text x="76.2519%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (101 samples, 1.20%)</title><rect x="76.3977%" y="565" width="1.2040%" height="15" fill="rgb(213,175,48)" fg:x="6409" fg:w="101"/><text x="76.7168%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (73 samples, 0.87%)</title><rect x="76.7314%" y="549" width="0.8702%" height="15" fill="rgb(252,55,9)" fg:x="6437" fg:w="73"/><text x="77.0505%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (48 samples, 0.57%)</title><rect x="77.0294%" y="533" width="0.5722%" height="15" fill="rgb(231,72,33)" fg:x="6462" fg:w="48"/><text x="77.3485%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (33 samples, 0.39%)</title><rect x="77.2082%" y="517" width="0.3934%" height="15" fill="rgb(213,2,54)" fg:x="6477" fg:w="33"/><text x="77.5273%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="77.3871%" y="501" width="0.2146%" height="15" fill="rgb(208,88,25)" fg:x="6492" fg:w="18"/><text x="77.7062%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="77.4824%" y="485" width="0.1192%" height="15" fill="rgb(215,117,13)" fg:x="6500" fg:w="10"/><text x="77.8015%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="77.4943%" y="469" width="0.1073%" height="15" fill="rgb(243,147,21)" fg:x="6501" fg:w="9"/><text x="77.8134%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="77.5063%" y="453" width="0.0954%" height="15" fill="rgb(208,215,36)" fg:x="6502" fg:w="8"/><text x="77.8254%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.5897%" y="437" width="0.0119%" height="15" fill="rgb(238,187,24)" fg:x="6509" fg:w="1"/><text x="77.9088%" y="447.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="77.5897%" y="421" width="0.0119%" height="15" fill="rgb(214,173,11)" fg:x="6509" fg:w="1"/><text x="77.9088%" y="431.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="77.5897%" y="405" width="0.0119%" height="15" fill="rgb(222,71,20)" fg:x="6509" fg:w="1"/><text x="77.9088%" y="415.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="77.6016%" y="613" width="0.0358%" height="15" fill="rgb(242,125,4)" fg:x="6510" fg:w="3"/><text x="77.9207%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="77.6255%" y="597" width="0.0119%" height="15" fill="rgb(217,101,52)" fg:x="6512" fg:w="1"/><text x="77.9446%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="77.6016%" y="645" width="0.0477%" height="15" fill="rgb(223,2,50)" fg:x="6510" fg:w="4"/><text x="77.9207%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="77.6016%" y="629" width="0.0477%" height="15" fill="rgb(225,197,9)" fg:x="6510" fg:w="4"/><text x="77.9207%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State), const_&lt;State, bool&gt;(bool)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.6374%" y="613" width="0.0119%" height="15" fill="rgb(234,76,27)" fg:x="6513" fg:w="1"/><text x="77.9565%" y="623.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (9 samples, 0.11%)</title><rect x="77.6493%" y="645" width="0.1073%" height="15" fill="rgb(213,161,26)" fg:x="6514" fg:w="9"/><text x="77.9684%" y="655.50"/></g><g><title>__strlen_avx2 (8 samples, 0.10%)</title><rect x="77.6612%" y="629" width="0.0954%" height="15" fill="rgb(210,228,2)" fg:x="6515" fg:w="8"/><text x="77.9803%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="77.7566%" y="597" width="0.0477%" height="15" fill="rgb(235,4,16)" fg:x="6523" fg:w="4"/><text x="78.0757%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="77.7566%" y="581" width="0.0477%" height="15" fill="rgb(235,83,42)" fg:x="6523" fg:w="4"/><text x="78.0757%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="77.7566%" y="565" width="0.0477%" height="15" fill="rgb(207,116,39)" fg:x="6523" fg:w="4"/><text x="78.0757%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="77.7566%" y="549" width="0.0477%" height="15" fill="rgb(253,206,9)" fg:x="6523" fg:w="4"/><text x="78.0757%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="77.7566%" y="533" width="0.0477%" height="15" fill="rgb(234,32,47)" fg:x="6523" fg:w="4"/><text x="78.0757%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="77.7685%" y="517" width="0.0358%" height="15" fill="rgb(247,40,39)" fg:x="6524" fg:w="3"/><text x="78.0876%" y="527.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="77.7804%" y="501" width="0.0238%" height="15" fill="rgb(236,199,13)" fg:x="6525" fg:w="2"/><text x="78.0995%" y="511.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="77.7804%" y="485" width="0.0238%" height="15" fill="rgb(240,127,44)" fg:x="6525" fg:w="2"/><text x="78.0995%" y="495.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="77.7804%" y="469" width="0.0238%" height="15" fill="rgb(248,220,47)" fg:x="6525" fg:w="2"/><text x="78.0995%" y="479.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="77.7923%" y="453" width="0.0119%" height="15" fill="rgb(240,78,9)" fg:x="6526" fg:w="1"/><text x="78.1114%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="77.8043%" y="549" width="0.0119%" height="15" fill="rgb(245,119,5)" fg:x="6527" fg:w="1"/><text x="78.1234%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="77.8043%" y="533" width="0.0119%" height="15" fill="rgb(238,175,31)" fg:x="6527" fg:w="1"/><text x="78.1234%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="77.8162%" y="517" width="0.0119%" height="15" fill="rgb(232,140,42)" fg:x="6528" fg:w="1"/><text x="78.1353%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.8162%" y="501" width="0.0119%" height="15" fill="rgb(218,179,7)" fg:x="6528" fg:w="1"/><text x="78.1353%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="77.8043%" y="597" width="0.0358%" height="15" fill="rgb(232,79,27)" fg:x="6527" fg:w="3"/><text x="78.1234%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="77.8043%" y="581" width="0.0358%" height="15" fill="rgb(247,11,19)" fg:x="6527" fg:w="3"/><text x="78.1234%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="77.8043%" y="565" width="0.0358%" height="15" fill="rgb(216,171,54)" fg:x="6527" fg:w="3"/><text x="78.1234%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="77.8162%" y="549" width="0.0238%" height="15" fill="rgb(233,158,36)" fg:x="6528" fg:w="2"/><text x="78.1353%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="77.8162%" y="533" width="0.0238%" height="15" fill="rgb(215,48,47)" fg:x="6528" fg:w="2"/><text x="78.1353%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="77.8281%" y="517" width="0.0119%" height="15" fill="rgb(230,223,15)" fg:x="6529" fg:w="1"/><text x="78.1472%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.8281%" y="501" width="0.0119%" height="15" fill="rgb(234,49,19)" fg:x="6529" fg:w="1"/><text x="78.1472%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="77.7566%" y="613" width="0.0954%" height="15" fill="rgb(232,89,25)" fg:x="6523" fg:w="8"/><text x="78.0757%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.8400%" y="597" width="0.0119%" height="15" fill="rgb(237,206,28)" fg:x="6530" fg:w="1"/><text x="78.1591%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="77.8519%" y="549" width="0.0119%" height="15" fill="rgb(249,68,37)" fg:x="6531" fg:w="1"/><text x="78.1710%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="77.8519%" y="533" width="0.0119%" height="15" fill="rgb(226,99,43)" fg:x="6531" fg:w="1"/><text x="78.1710%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="77.7566%" y="629" width="0.1192%" height="15" fill="rgb(216,46,28)" fg:x="6523" fg:w="10"/><text x="78.0757%" y="639.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="77.8519%" y="613" width="0.0238%" height="15" fill="rgb(216,33,9)" fg:x="6531" fg:w="2"/><text x="78.1710%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="77.8519%" y="597" width="0.0238%" height="15" fill="rgb(216,129,4)" fg:x="6531" fg:w="2"/><text x="78.1710%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="77.8519%" y="581" width="0.0238%" height="15" fill="rgb(216,106,3)" fg:x="6531" fg:w="2"/><text x="78.1710%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="77.8519%" y="565" width="0.0238%" height="15" fill="rgb(217,79,45)" fg:x="6531" fg:w="2"/><text x="78.1710%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.8639%" y="549" width="0.0119%" height="15" fill="rgb(239,98,13)" fg:x="6532" fg:w="1"/><text x="78.1830%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="77.8639%" y="533" width="0.0119%" height="15" fill="rgb(221,115,4)" fg:x="6532" fg:w="1"/><text x="78.1830%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="77.8639%" y="517" width="0.0119%" height="15" fill="rgb(215,85,0)" fg:x="6532" fg:w="1"/><text x="78.1830%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="77.8758%" y="549" width="0.0119%" height="15" fill="rgb(230,62,15)" fg:x="6533" fg:w="1"/><text x="78.1949%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="77.8758%" y="533" width="0.0119%" height="15" fill="rgb(247,162,2)" fg:x="6533" fg:w="1"/><text x="78.1949%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (13 samples, 0.15%)</title><rect x="77.7566%" y="645" width="0.1550%" height="15" fill="rgb(212,112,32)" fg:x="6523" fg:w="13"/><text x="78.0757%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="77.8758%" y="629" width="0.0358%" height="15" fill="rgb(216,137,9)" fg:x="6533" fg:w="3"/><text x="78.1949%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="77.8758%" y="613" width="0.0358%" height="15" fill="rgb(250,149,33)" fg:x="6533" fg:w="3"/><text x="78.1949%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="77.8758%" y="597" width="0.0358%" height="15" fill="rgb(246,124,31)" fg:x="6533" fg:w="3"/><text x="78.1949%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="77.8758%" y="581" width="0.0358%" height="15" fill="rgb(216,210,22)" fg:x="6533" fg:w="3"/><text x="78.1949%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="77.8758%" y="565" width="0.0358%" height="15" fill="rgb(228,128,36)" fg:x="6533" fg:w="3"/><text x="78.1949%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="77.8877%" y="549" width="0.0238%" height="15" fill="rgb(231,41,0)" fg:x="6534" fg:w="2"/><text x="78.2068%" y="559.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="77.8877%" y="533" width="0.0238%" height="15" fill="rgb(232,61,26)" fg:x="6534" fg:w="2"/><text x="78.2068%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="77.8877%" y="517" width="0.0238%" height="15" fill="rgb(217,60,9)" fg:x="6534" fg:w="2"/><text x="78.2068%" y="527.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="77.8996%" y="501" width="0.0119%" height="15" fill="rgb(233,41,35)" fg:x="6535" fg:w="1"/><text x="78.2187%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="77.8996%" y="485" width="0.0119%" height="15" fill="rgb(253,139,43)" fg:x="6535" fg:w="1"/><text x="78.2187%" y="495.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="77.9831%" y="597" width="0.0238%" height="15" fill="rgb(245,100,51)" fg:x="6542" fg:w="2"/><text x="78.3022%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="77.9950%" y="581" width="0.0119%" height="15" fill="rgb(250,208,18)" fg:x="6543" fg:w="1"/><text x="78.3141%" y="591.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="78.0069%" y="565" width="0.0596%" height="15" fill="rgb(245,33,2)" fg:x="6544" fg:w="5"/><text x="78.3260%" y="575.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="78.0069%" y="549" width="0.0596%" height="15" fill="rgb(244,171,31)" fg:x="6544" fg:w="5"/><text x="78.3260%" y="559.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="78.0069%" y="581" width="0.0715%" height="15" fill="rgb(229,1,43)" fg:x="6544" fg:w="6"/><text x="78.3260%" y="591.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="78.0665%" y="565" width="0.0119%" height="15" fill="rgb(223,153,28)" fg:x="6549" fg:w="1"/><text x="78.3856%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="78.0784%" y="549" width="0.0119%" height="15" fill="rgb(241,4,46)" fg:x="6550" fg:w="1"/><text x="78.3975%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="78.0784%" y="533" width="0.0119%" height="15" fill="rgb(230,81,11)" fg:x="6550" fg:w="1"/><text x="78.3975%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="78.0784%" y="565" width="0.0238%" height="15" fill="rgb(253,204,39)" fg:x="6550" fg:w="2"/><text x="78.3975%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.0904%" y="549" width="0.0119%" height="15" fill="rgb(250,96,8)" fg:x="6551" fg:w="1"/><text x="78.4095%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="78.0904%" y="533" width="0.0119%" height="15" fill="rgb(219,89,54)" fg:x="6551" fg:w="1"/><text x="78.4095%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.0904%" y="517" width="0.0119%" height="15" fill="rgb(235,136,39)" fg:x="6551" fg:w="1"/><text x="78.4095%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="78.0904%" y="501" width="0.0119%" height="15" fill="rgb(230,155,37)" fg:x="6551" fg:w="1"/><text x="78.4095%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.0904%" y="485" width="0.0119%" height="15" fill="rgb(235,199,50)" fg:x="6551" fg:w="1"/><text x="78.4095%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.0904%" y="469" width="0.0119%" height="15" fill="rgb(227,81,32)" fg:x="6551" fg:w="1"/><text x="78.4095%" y="479.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="78.0904%" y="453" width="0.0119%" height="15" fill="rgb(225,6,28)" fg:x="6551" fg:w="1"/><text x="78.4095%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="78.0904%" y="437" width="0.0119%" height="15" fill="rgb(207,211,17)" fg:x="6551" fg:w="1"/><text x="78.4095%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="78.0904%" y="421" width="0.0119%" height="15" fill="rgb(228,31,49)" fg:x="6551" fg:w="1"/><text x="78.4095%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="78.0784%" y="581" width="0.0358%" height="15" fill="rgb(230,185,3)" fg:x="6550" fg:w="3"/><text x="78.3975%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.1023%" y="565" width="0.0119%" height="15" fill="rgb(206,167,15)" fg:x="6552" fg:w="1"/><text x="78.4214%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="78.1023%" y="549" width="0.0119%" height="15" fill="rgb(234,2,36)" fg:x="6552" fg:w="1"/><text x="78.4214%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="78.1023%" y="533" width="0.0119%" height="15" fill="rgb(239,160,29)" fg:x="6552" fg:w="1"/><text x="78.4214%" y="543.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="78.1023%" y="517" width="0.0119%" height="15" fill="rgb(236,117,2)" fg:x="6552" fg:w="1"/><text x="78.4214%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="78.0069%" y="597" width="0.1192%" height="15" fill="rgb(215,117,37)" fg:x="6544" fg:w="10"/><text x="78.3260%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="78.1142%" y="581" width="0.0119%" height="15" fill="rgb(244,48,36)" fg:x="6553" fg:w="1"/><text x="78.4333%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.1142%" y="565" width="0.0119%" height="15" fill="rgb(223,101,37)" fg:x="6553" fg:w="1"/><text x="78.4333%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="78.1142%" y="549" width="0.0119%" height="15" fill="rgb(205,200,1)" fg:x="6553" fg:w="1"/><text x="78.4333%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.1142%" y="533" width="0.0119%" height="15" fill="rgb(209,193,20)" fg:x="6553" fg:w="1"/><text x="78.4333%" y="543.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="78.1380%" y="549" width="0.0477%" height="15" fill="rgb(214,63,13)" fg:x="6555" fg:w="4"/><text x="78.4571%" y="559.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="78.1380%" y="533" width="0.0477%" height="15" fill="rgb(253,113,46)" fg:x="6555" fg:w="4"/><text x="78.4571%" y="543.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="78.1619%" y="517" width="0.0238%" height="15" fill="rgb(237,103,34)" fg:x="6557" fg:w="2"/><text x="78.4810%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="78.1857%" y="549" width="0.0119%" height="15" fill="rgb(223,38,25)" fg:x="6559" fg:w="1"/><text x="78.5048%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.1857%" y="533" width="0.0119%" height="15" fill="rgb(251,32,32)" fg:x="6559" fg:w="1"/><text x="78.5048%" y="543.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="78.1857%" y="517" width="0.0119%" height="15" fill="rgb(228,65,22)" fg:x="6559" fg:w="1"/><text x="78.5048%" y="527.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="78.1857%" y="501" width="0.0119%" height="15" fill="rgb(205,11,46)" fg:x="6559" fg:w="1"/><text x="78.5048%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="78.1380%" y="565" width="0.0715%" height="15" fill="rgb(220,35,2)" fg:x="6555" fg:w="6"/><text x="78.4571%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="78.1976%" y="549" width="0.0119%" height="15" fill="rgb(217,151,17)" fg:x="6560" fg:w="1"/><text x="78.5167%" y="559.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="78.2096%" y="549" width="0.0238%" height="15" fill="rgb(243,227,35)" fg:x="6561" fg:w="2"/><text x="78.5287%" y="559.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="78.2096%" y="533" width="0.0238%" height="15" fill="rgb(214,0,34)" fg:x="6561" fg:w="2"/><text x="78.5287%" y="543.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="78.2096%" y="517" width="0.0238%" height="15" fill="rgb(209,42,37)" fg:x="6561" fg:w="2"/><text x="78.5287%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.2334%" y="533" width="0.0119%" height="15" fill="rgb(251,176,30)" fg:x="6563" fg:w="1"/><text x="78.5525%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.2334%" y="517" width="0.0119%" height="15" fill="rgb(223,64,40)" fg:x="6563" fg:w="1"/><text x="78.5525%" y="527.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="78.2334%" y="501" width="0.0119%" height="15" fill="rgb(227,180,23)" fg:x="6563" fg:w="1"/><text x="78.5525%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.2334%" y="485" width="0.0119%" height="15" fill="rgb(220,137,31)" fg:x="6563" fg:w="1"/><text x="78.5525%" y="495.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="78.2334%" y="469" width="0.0119%" height="15" fill="rgb(245,124,25)" fg:x="6563" fg:w="1"/><text x="78.5525%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.2334%" y="453" width="0.0119%" height="15" fill="rgb(217,157,5)" fg:x="6563" fg:w="1"/><text x="78.5525%" y="463.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="78.2334%" y="437" width="0.0119%" height="15" fill="rgb(225,59,2)" fg:x="6563" fg:w="1"/><text x="78.5525%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.2572%" y="469" width="0.0119%" height="15" fill="rgb(220,182,9)" fg:x="6565" fg:w="1"/><text x="78.5763%" y="479.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.2572%" y="453" width="0.0119%" height="15" fill="rgb(249,54,24)" fg:x="6565" fg:w="1"/><text x="78.5763%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="78.2572%" y="437" width="0.0119%" height="15" fill="rgb(216,89,17)" fg:x="6565" fg:w="1"/><text x="78.5763%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="78.2572%" y="421" width="0.0119%" height="15" fill="rgb(245,20,45)" fg:x="6565" fg:w="1"/><text x="78.5763%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="78.2572%" y="501" width="0.0238%" height="15" fill="rgb(230,83,14)" fg:x="6565" fg:w="2"/><text x="78.5763%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="78.2572%" y="485" width="0.0238%" height="15" fill="rgb(246,109,11)" fg:x="6565" fg:w="2"/><text x="78.5763%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.2692%" y="469" width="0.0119%" height="15" fill="rgb(235,85,23)" fg:x="6566" fg:w="1"/><text x="78.5883%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="78.2692%" y="453" width="0.0119%" height="15" fill="rgb(215,101,36)" fg:x="6566" fg:w="1"/><text x="78.5883%" y="463.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="78.2692%" y="437" width="0.0119%" height="15" fill="rgb(228,140,31)" fg:x="6566" fg:w="1"/><text x="78.5883%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="78.2096%" y="565" width="0.0834%" height="15" fill="rgb(234,162,37)" fg:x="6561" fg:w="7"/><text x="78.5287%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="78.2334%" y="549" width="0.0596%" height="15" fill="rgb(221,0,24)" fg:x="6563" fg:w="5"/><text x="78.5525%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="78.2453%" y="533" width="0.0477%" height="15" fill="rgb(230,161,41)" fg:x="6564" fg:w="4"/><text x="78.5644%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="78.2453%" y="517" width="0.0477%" height="15" fill="rgb(224,46,24)" fg:x="6564" fg:w="4"/><text x="78.5644%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.2811%" y="501" width="0.0119%" height="15" fill="rgb(205,59,32)" fg:x="6567" fg:w="1"/><text x="78.6002%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="78.2811%" y="485" width="0.0119%" height="15" fill="rgb(239,31,20)" fg:x="6567" fg:w="1"/><text x="78.6002%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="78.2811%" y="469" width="0.0119%" height="15" fill="rgb(233,149,44)" fg:x="6567" fg:w="1"/><text x="78.6002%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="78.1261%" y="597" width="0.1788%" height="15" fill="rgb(243,47,26)" fg:x="6554" fg:w="15"/><text x="78.4452%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (14 samples, 0.17%)</title><rect x="78.1380%" y="581" width="0.1669%" height="15" fill="rgb(233,107,5)" fg:x="6555" fg:w="14"/><text x="78.4571%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.2930%" y="565" width="0.0119%" height="15" fill="rgb(248,140,33)" fg:x="6568" fg:w="1"/><text x="78.6121%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="78.2930%" y="549" width="0.0119%" height="15" fill="rgb(228,178,19)" fg:x="6568" fg:w="1"/><text x="78.6121%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="78.2930%" y="533" width="0.0119%" height="15" fill="rgb(224,39,49)" fg:x="6568" fg:w="1"/><text x="78.6121%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (10 samples, 0.12%)</title><rect x="78.3049%" y="597" width="0.1192%" height="15" fill="rgb(246,56,47)" fg:x="6569" fg:w="10"/><text x="78.6240%" y="607.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="78.3168%" y="581" width="0.1073%" height="15" fill="rgb(220,73,27)" fg:x="6570" fg:w="9"/><text x="78.6359%" y="591.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="78.3168%" y="565" width="0.1073%" height="15" fill="rgb(239,112,21)" fg:x="6570" fg:w="9"/><text x="78.6359%" y="575.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="78.3526%" y="549" width="0.0715%" height="15" fill="rgb(253,14,51)" fg:x="6573" fg:w="6"/><text x="78.6717%" y="559.50"/></g><g><title>parser::either (39 samples, 0.46%)</title><rect x="77.9712%" y="613" width="0.4649%" height="15" fill="rgb(215,58,12)" fg:x="6541" fg:w="39"/><text x="78.2903%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.4241%" y="597" width="0.0119%" height="15" fill="rgb(207,181,19)" fg:x="6579" fg:w="1"/><text x="78.7432%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="78.4241%" y="581" width="0.0119%" height="15" fill="rgb(211,214,34)" fg:x="6579" fg:w="1"/><text x="78.7432%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="78.4241%" y="565" width="0.0119%" height="15" fill="rgb(243,124,39)" fg:x="6579" fg:w="1"/><text x="78.7432%" y="575.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="78.4241%" y="549" width="0.0119%" height="15" fill="rgb(248,135,21)" fg:x="6579" fg:w="1"/><text x="78.7432%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="78.4360%" y="597" width="0.0119%" height="15" fill="rgb(245,218,3)" fg:x="6580" fg:w="1"/><text x="78.7551%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="78.4360%" y="581" width="0.0119%" height="15" fill="rgb(225,144,22)" fg:x="6580" fg:w="1"/><text x="78.7551%" y="591.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="78.4480%" y="581" width="0.0238%" height="15" fill="rgb(250,90,15)" fg:x="6581" fg:w="2"/><text x="78.7671%" y="591.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="78.4480%" y="565" width="0.0238%" height="15" fill="rgb(224,64,29)" fg:x="6581" fg:w="2"/><text x="78.7671%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="78.4718%" y="565" width="0.0119%" height="15" fill="rgb(217,50,47)" fg:x="6583" fg:w="1"/><text x="78.7909%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="78.4718%" y="549" width="0.0119%" height="15" fill="rgb(231,159,47)" fg:x="6583" fg:w="1"/><text x="78.7909%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="78.4480%" y="597" width="0.0477%" height="15" fill="rgb(213,89,29)" fg:x="6581" fg:w="4"/><text x="78.7671%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="78.4718%" y="581" width="0.0238%" height="15" fill="rgb(243,90,23)" fg:x="6583" fg:w="2"/><text x="78.7909%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.4837%" y="565" width="0.0119%" height="15" fill="rgb(213,21,6)" fg:x="6584" fg:w="1"/><text x="78.8028%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.4837%" y="549" width="0.0119%" height="15" fill="rgb(237,139,17)" fg:x="6584" fg:w="1"/><text x="78.8028%" y="559.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose@plt (1 samples, 0.01%)</title><rect x="78.4837%" y="533" width="0.0119%" height="15" fill="rgb(250,147,17)" fg:x="6584" fg:w="1"/><text x="78.8028%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.4956%" y="597" width="0.0119%" height="15" fill="rgb(212,208,42)" fg:x="6585" fg:w="1"/><text x="78.8147%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="78.4956%" y="581" width="0.0119%" height="15" fill="rgb(215,229,40)" fg:x="6585" fg:w="1"/><text x="78.8147%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="78.4956%" y="565" width="0.0119%" height="15" fill="rgb(206,204,1)" fg:x="6585" fg:w="1"/><text x="78.8147%" y="575.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="78.5195%" y="581" width="0.0238%" height="15" fill="rgb(230,62,32)" fg:x="6587" fg:w="2"/><text x="78.8386%" y="591.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="78.5195%" y="565" width="0.0238%" height="15" fill="rgb(223,22,42)" fg:x="6587" fg:w="2"/><text x="78.8386%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="78.5433%" y="565" width="0.0119%" height="15" fill="rgb(244,6,23)" fg:x="6589" fg:w="1"/><text x="78.8624%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="78.5076%" y="597" width="0.0596%" height="15" fill="rgb(240,221,42)" fg:x="6586" fg:w="5"/><text x="78.8267%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="78.5433%" y="581" width="0.0238%" height="15" fill="rgb(222,74,7)" fg:x="6589" fg:w="2"/><text x="78.8624%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.5553%" y="565" width="0.0119%" height="15" fill="rgb(227,191,38)" fg:x="6590" fg:w="1"/><text x="78.8744%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.5553%" y="549" width="0.0119%" height="15" fill="rgb(227,89,34)" fg:x="6590" fg:w="1"/><text x="78.8744%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="78.5553%" y="533" width="0.0119%" height="15" fill="rgb(215,153,25)" fg:x="6590" fg:w="1"/><text x="78.8744%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="78.5553%" y="517" width="0.0119%" height="15" fill="rgb(215,153,46)" fg:x="6590" fg:w="1"/><text x="78.8744%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="78.5672%" y="581" width="0.0119%" height="15" fill="rgb(242,38,52)" fg:x="6591" fg:w="1"/><text x="78.8863%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="78.5672%" y="597" width="0.0358%" height="15" fill="rgb(218,112,4)" fg:x="6591" fg:w="3"/><text x="78.8863%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="78.5791%" y="581" width="0.0238%" height="15" fill="rgb(231,210,31)" fg:x="6592" fg:w="2"/><text x="78.8982%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="78.5791%" y="565" width="0.0238%" height="15" fill="rgb(245,223,36)" fg:x="6592" fg:w="2"/><text x="78.8982%" y="575.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="78.5791%" y="549" width="0.0238%" height="15" fill="rgb(246,41,2)" fg:x="6592" fg:w="2"/><text x="78.8982%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="78.5910%" y="533" width="0.0119%" height="15" fill="rgb(227,51,31)" fg:x="6593" fg:w="1"/><text x="78.9101%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="78.6029%" y="581" width="0.0477%" height="15" fill="rgb(222,95,26)" fg:x="6594" fg:w="4"/><text x="78.9220%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="78.6029%" y="565" width="0.0477%" height="15" fill="rgb(224,190,1)" fg:x="6594" fg:w="4"/><text x="78.9220%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="78.6029%" y="549" width="0.0477%" height="15" fill="rgb(209,90,42)" fg:x="6594" fg:w="4"/><text x="78.9220%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="78.6029%" y="533" width="0.0477%" height="15" fill="rgb(232,225,50)" fg:x="6594" fg:w="4"/><text x="78.9220%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="78.6029%" y="517" width="0.0477%" height="15" fill="rgb(239,89,47)" fg:x="6594" fg:w="4"/><text x="78.9220%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="78.6029%" y="501" width="0.0477%" height="15" fill="rgb(230,212,50)" fg:x="6594" fg:w="4"/><text x="78.9220%" y="511.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="78.6029%" y="485" width="0.0477%" height="15" fill="rgb(252,1,27)" fg:x="6594" fg:w="4"/><text x="78.9220%" y="495.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="78.6029%" y="469" width="0.0477%" height="15" fill="rgb(237,179,41)" fg:x="6594" fg:w="4"/><text x="78.9220%" y="479.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="78.6029%" y="453" width="0.0477%" height="15" fill="rgb(214,151,37)" fg:x="6594" fg:w="4"/><text x="78.9220%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.6506%" y="581" width="0.0119%" height="15" fill="rgb(211,74,11)" fg:x="6598" fg:w="1"/><text x="78.9697%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="78.6029%" y="597" width="0.0715%" height="15" fill="rgb(242,21,21)" fg:x="6594" fg:w="6"/><text x="78.9220%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.6625%" y="581" width="0.0119%" height="15" fill="rgb(226,106,43)" fg:x="6599" fg:w="1"/><text x="78.9816%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="78.6625%" y="565" width="0.0119%" height="15" fill="rgb(229,162,39)" fg:x="6599" fg:w="1"/><text x="78.9816%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.6625%" y="549" width="0.0119%" height="15" fill="rgb(228,159,25)" fg:x="6599" fg:w="1"/><text x="78.9816%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="78.6625%" y="533" width="0.0119%" height="15" fill="rgb(237,32,23)" fg:x="6599" fg:w="1"/><text x="78.9816%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.6625%" y="517" width="0.0119%" height="15" fill="rgb(212,35,32)" fg:x="6599" fg:w="1"/><text x="78.9816%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="78.6625%" y="501" width="0.0119%" height="15" fill="rgb(215,199,1)" fg:x="6599" fg:w="1"/><text x="78.9816%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="78.6625%" y="485" width="0.0119%" height="15" fill="rgb(215,67,13)" fg:x="6599" fg:w="1"/><text x="78.9816%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="78.6745%" y="565" width="0.0119%" height="15" fill="rgb(216,20,47)" fg:x="6600" fg:w="1"/><text x="78.9936%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="78.6745%" y="549" width="0.0119%" height="15" fill="rgb(249,183,48)" fg:x="6600" fg:w="1"/><text x="78.9936%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (24 samples, 0.29%)</title><rect x="78.4360%" y="613" width="0.2861%" height="15" fill="rgb(208,86,37)" fg:x="6580" fg:w="24"/><text x="78.7551%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="78.6745%" y="597" width="0.0477%" height="15" fill="rgb(251,192,7)" fg:x="6600" fg:w="4"/><text x="78.9936%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="78.6745%" y="581" width="0.0477%" height="15" fill="rgb(234,196,3)" fg:x="6600" fg:w="4"/><text x="78.9936%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="78.6864%" y="565" width="0.0358%" height="15" fill="rgb(229,150,39)" fg:x="6601" fg:w="3"/><text x="79.0055%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="78.6864%" y="549" width="0.0358%" height="15" fill="rgb(226,19,29)" fg:x="6601" fg:w="3"/><text x="79.0055%" y="559.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="78.6864%" y="533" width="0.0358%" height="15" fill="rgb(226,222,2)" fg:x="6601" fg:w="3"/><text x="79.0055%" y="543.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="78.6864%" y="517" width="0.0358%" height="15" fill="rgb(235,85,29)" fg:x="6601" fg:w="3"/><text x="79.0055%" y="527.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="78.6864%" y="501" width="0.0358%" height="15" fill="rgb(237,194,43)" fg:x="6601" fg:w="3"/><text x="79.0055%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="78.7460%" y="597" width="0.0119%" height="15" fill="rgb(211,4,42)" fg:x="6606" fg:w="1"/><text x="79.0651%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="78.7460%" y="581" width="0.0119%" height="15" fill="rgb(221,80,37)" fg:x="6606" fg:w="1"/><text x="79.0651%" y="591.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="78.7579%" y="597" width="0.0358%" height="15" fill="rgb(222,47,31)" fg:x="6607" fg:w="3"/><text x="79.0770%" y="607.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="78.7579%" y="581" width="0.0358%" height="15" fill="rgb(249,82,52)" fg:x="6607" fg:w="3"/><text x="79.0770%" y="591.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="78.7579%" y="565" width="0.0358%" height="15" fill="rgb(218,203,2)" fg:x="6607" fg:w="3"/><text x="79.0770%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="78.7937%" y="597" width="0.0238%" height="15" fill="rgb(210,175,14)" fg:x="6610" fg:w="2"/><text x="79.1128%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="78.8175%" y="581" width="0.0119%" height="15" fill="rgb(216,210,12)" fg:x="6612" fg:w="1"/><text x="79.1366%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="78.8175%" y="565" width="0.0119%" height="15" fill="rgb(229,120,18)" fg:x="6612" fg:w="1"/><text x="79.1366%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="78.8294%" y="581" width="0.0238%" height="15" fill="rgb(231,174,12)" fg:x="6613" fg:w="2"/><text x="79.1485%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="78.8413%" y="565" width="0.0119%" height="15" fill="rgb(214,101,53)" fg:x="6614" fg:w="1"/><text x="79.1604%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="78.8413%" y="549" width="0.0119%" height="15" fill="rgb(246,89,43)" fg:x="6614" fg:w="1"/><text x="79.1604%" y="559.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="78.8533%" y="565" width="0.0238%" height="15" fill="rgb(222,9,51)" fg:x="6615" fg:w="2"/><text x="79.1724%" y="575.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="78.8533%" y="549" width="0.0238%" height="15" fill="rgb(252,221,9)" fg:x="6615" fg:w="2"/><text x="79.1724%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="78.8175%" y="597" width="0.0715%" height="15" fill="rgb(248,28,15)" fg:x="6612" fg:w="6"/><text x="79.1366%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="78.8533%" y="581" width="0.0358%" height="15" fill="rgb(213,54,52)" fg:x="6615" fg:w="3"/><text x="79.1724%" y="591.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="78.8771%" y="565" width="0.0119%" height="15" fill="rgb(240,3,45)" fg:x="6617" fg:w="1"/><text x="79.1962%" y="575.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="78.9009%" y="581" width="0.0238%" height="15" fill="rgb(239,138,24)" fg:x="6619" fg:w="2"/><text x="79.2200%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="78.8890%" y="597" width="0.0477%" height="15" fill="rgb(233,45,54)" fg:x="6618" fg:w="4"/><text x="79.2081%" y="607.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="78.9248%" y="581" width="0.0119%" height="15" fill="rgb(220,131,2)" fg:x="6621" fg:w="1"/><text x="79.2439%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="78.9367%" y="581" width="0.0119%" height="15" fill="rgb(240,154,36)" fg:x="6622" fg:w="1"/><text x="79.2558%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="78.9367%" y="565" width="0.0119%" height="15" fill="rgb(251,221,1)" fg:x="6622" fg:w="1"/><text x="79.2558%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.9486%" y="581" width="0.0119%" height="15" fill="rgb(225,217,1)" fg:x="6623" fg:w="1"/><text x="79.2677%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.9486%" y="565" width="0.0119%" height="15" fill="rgb(241,105,49)" fg:x="6623" fg:w="1"/><text x="79.2677%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.9486%" y="549" width="0.0119%" height="15" fill="rgb(215,44,32)" fg:x="6623" fg:w="1"/><text x="79.2677%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="78.9486%" y="533" width="0.0119%" height="15" fill="rgb(213,222,14)" fg:x="6623" fg:w="1"/><text x="79.2677%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="78.9486%" y="517" width="0.0119%" height="15" fill="rgb(207,99,52)" fg:x="6623" fg:w="1"/><text x="79.2677%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="78.9605%" y="565" width="0.0119%" height="15" fill="rgb(214,208,52)" fg:x="6624" fg:w="1"/><text x="79.2796%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="78.9605%" y="549" width="0.0119%" height="15" fill="rgb(244,169,0)" fg:x="6624" fg:w="1"/><text x="79.2796%" y="559.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="78.9725%" y="549" width="0.0358%" height="15" fill="rgb(216,193,37)" fg:x="6625" fg:w="3"/><text x="79.2916%" y="559.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="78.9844%" y="533" width="0.0238%" height="15" fill="rgb(212,158,10)" fg:x="6626" fg:w="2"/><text x="79.3035%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.0082%" y="533" width="0.0119%" height="15" fill="rgb(213,110,20)" fg:x="6628" fg:w="1"/><text x="79.3273%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="79.0082%" y="517" width="0.0119%" height="15" fill="rgb(226,5,42)" fg:x="6628" fg:w="1"/><text x="79.3273%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="79.0082%" y="501" width="0.0119%" height="15" fill="rgb(211,93,8)" fg:x="6628" fg:w="1"/><text x="79.3273%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="79.0201%" y="517" width="0.0119%" height="15" fill="rgb(240,208,12)" fg:x="6629" fg:w="1"/><text x="79.3392%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="79.0201%" y="501" width="0.0119%" height="15" fill="rgb(233,127,50)" fg:x="6629" fg:w="1"/><text x="79.3392%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="78.9725%" y="565" width="0.0715%" height="15" fill="rgb(227,199,53)" fg:x="6625" fg:w="6"/><text x="79.2916%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="79.0082%" y="549" width="0.0358%" height="15" fill="rgb(235,199,10)" fg:x="6628" fg:w="3"/><text x="79.3273%" y="559.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="79.0201%" y="533" width="0.0238%" height="15" fill="rgb(228,148,35)" fg:x="6629" fg:w="2"/><text x="79.3392%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.0321%" y="517" width="0.0119%" height="15" fill="rgb(217,87,19)" fg:x="6630" fg:w="1"/><text x="79.3512%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.0321%" y="501" width="0.0119%" height="15" fill="rgb(239,9,32)" fg:x="6630" fg:w="1"/><text x="79.3512%" y="511.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="79.0321%" y="485" width="0.0119%" height="15" fill="rgb(229,101,29)" fg:x="6630" fg:w="1"/><text x="79.3512%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="78.9367%" y="597" width="0.1311%" height="15" fill="rgb(208,143,26)" fg:x="6622" fg:w="11"/><text x="79.2558%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="78.9605%" y="581" width="0.1073%" height="15" fill="rgb(214,10,2)" fg:x="6624" fg:w="9"/><text x="79.2796%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="79.0440%" y="565" width="0.0238%" height="15" fill="rgb(254,203,30)" fg:x="6631" fg:w="2"/><text x="79.3631%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="79.0559%" y="549" width="0.0119%" height="15" fill="rgb(242,45,3)" fg:x="6632" fg:w="1"/><text x="79.3750%" y="559.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="79.0559%" y="533" width="0.0119%" height="15" fill="rgb(209,146,51)" fg:x="6632" fg:w="1"/><text x="79.3750%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.0678%" y="597" width="0.0119%" height="15" fill="rgb(222,80,5)" fg:x="6633" fg:w="1"/><text x="79.3869%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="79.0678%" y="581" width="0.0119%" height="15" fill="rgb(252,80,35)" fg:x="6633" fg:w="1"/><text x="79.3869%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="79.0678%" y="565" width="0.0119%" height="15" fill="rgb(246,125,28)" fg:x="6633" fg:w="1"/><text x="79.3869%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.0797%" y="549" width="0.0119%" height="15" fill="rgb(224,143,51)" fg:x="6634" fg:w="1"/><text x="79.3988%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="79.0797%" y="533" width="0.0119%" height="15" fill="rgb(205,24,17)" fg:x="6634" fg:w="1"/><text x="79.3988%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="79.0917%" y="533" width="0.0119%" height="15" fill="rgb(253,128,30)" fg:x="6635" fg:w="1"/><text x="79.4108%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="79.0917%" y="517" width="0.0119%" height="15" fill="rgb(214,153,25)" fg:x="6635" fg:w="1"/><text x="79.4108%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="79.0797%" y="565" width="0.0358%" height="15" fill="rgb(214,4,28)" fg:x="6634" fg:w="3"/><text x="79.3988%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="79.0917%" y="549" width="0.0238%" height="15" fill="rgb(235,179,52)" fg:x="6635" fg:w="2"/><text x="79.4108%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.1036%" y="533" width="0.0119%" height="15" fill="rgb(233,27,42)" fg:x="6636" fg:w="1"/><text x="79.4227%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="79.0797%" y="581" width="0.0477%" height="15" fill="rgb(238,35,25)" fg:x="6634" fg:w="4"/><text x="79.3988%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="79.1155%" y="565" width="0.0119%" height="15" fill="rgb(227,44,31)" fg:x="6637" fg:w="1"/><text x="79.4346%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.1155%" y="549" width="0.0119%" height="15" fill="rgb(232,201,13)" fg:x="6637" fg:w="1"/><text x="79.4346%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="79.1155%" y="533" width="0.0119%" height="15" fill="rgb(224,172,52)" fg:x="6637" fg:w="1"/><text x="79.4346%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="79.1155%" y="517" width="0.0119%" height="15" fill="rgb(214,27,26)" fg:x="6637" fg:w="1"/><text x="79.4346%" y="527.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="79.1274%" y="469" width="0.0477%" height="15" fill="rgb(210,185,52)" fg:x="6638" fg:w="4"/><text x="79.4465%" y="479.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="79.1274%" y="453" width="0.0477%" height="15" fill="rgb(249,59,32)" fg:x="6638" fg:w="4"/><text x="79.4465%" y="463.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="79.1274%" y="437" width="0.0477%" height="15" fill="rgb(242,209,18)" fg:x="6638" fg:w="4"/><text x="79.4465%" y="447.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="79.1274%" y="421" width="0.0477%" height="15" fill="rgb(229,0,18)" fg:x="6638" fg:w="4"/><text x="79.4465%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="79.1274%" y="517" width="0.0596%" height="15" fill="rgb(217,138,29)" fg:x="6638" fg:w="5"/><text x="79.4465%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="79.1274%" y="501" width="0.0596%" height="15" fill="rgb(215,72,42)" fg:x="6638" fg:w="5"/><text x="79.4465%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="79.1274%" y="485" width="0.0596%" height="15" fill="rgb(254,115,11)" fg:x="6638" fg:w="5"/><text x="79.4465%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.1751%" y="469" width="0.0119%" height="15" fill="rgb(205,133,39)" fg:x="6642" fg:w="1"/><text x="79.4942%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="79.1751%" y="453" width="0.0119%" height="15" fill="rgb(211,36,27)" fg:x="6642" fg:w="1"/><text x="79.4942%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.1751%" y="437" width="0.0119%" height="15" fill="rgb(221,48,10)" fg:x="6642" fg:w="1"/><text x="79.4942%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="79.1751%" y="421" width="0.0119%" height="15" fill="rgb(230,172,50)" fg:x="6642" fg:w="1"/><text x="79.4942%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.1751%" y="405" width="0.0119%" height="15" fill="rgb(249,72,18)" fg:x="6642" fg:w="1"/><text x="79.4942%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="79.1751%" y="389" width="0.0119%" height="15" fill="rgb(237,58,48)" fg:x="6642" fg:w="1"/><text x="79.4942%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="79.1751%" y="373" width="0.0119%" height="15" fill="rgb(242,123,3)" fg:x="6642" fg:w="1"/><text x="79.4942%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (42 samples, 0.50%)</title><rect x="78.7221%" y="613" width="0.5007%" height="15" fill="rgb(232,111,32)" fg:x="6604" fg:w="42"/><text x="79.0412%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="79.0797%" y="597" width="0.1430%" height="15" fill="rgb(229,108,3)" fg:x="6634" fg:w="12"/><text x="79.3988%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="79.1274%" y="581" width="0.0954%" height="15" fill="rgb(222,158,10)" fg:x="6638" fg:w="8"/><text x="79.4465%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="79.1274%" y="565" width="0.0954%" height="15" fill="rgb(205,34,49)" fg:x="6638" fg:w="8"/><text x="79.4465%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="79.1274%" y="549" width="0.0954%" height="15" fill="rgb(232,21,14)" fg:x="6638" fg:w="8"/><text x="79.4465%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="79.1274%" y="533" width="0.0954%" height="15" fill="rgb(229,127,44)" fg:x="6638" fg:w="8"/><text x="79.4465%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="79.1870%" y="517" width="0.0358%" height="15" fill="rgb(232,171,4)" fg:x="6643" fg:w="3"/><text x="79.5061%" y="527.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="79.1870%" y="501" width="0.0358%" height="15" fill="rgb(250,92,16)" fg:x="6643" fg:w="3"/><text x="79.5061%" y="511.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="79.1870%" y="485" width="0.0358%" height="15" fill="rgb(230,103,38)" fg:x="6643" fg:w="3"/><text x="79.5061%" y="495.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="79.1870%" y="469" width="0.0358%" height="15" fill="rgb(253,167,9)" fg:x="6643" fg:w="3"/><text x="79.5061%" y="479.50"/></g><g><title>__GI___libc_free (7 samples, 0.08%)</title><rect x="79.2228%" y="597" width="0.0834%" height="15" fill="rgb(222,118,11)" fg:x="6646" fg:w="7"/><text x="79.5419%" y="607.50"/></g><g><title>_int_free (7 samples, 0.08%)</title><rect x="79.2228%" y="581" width="0.0834%" height="15" fill="rgb(240,202,0)" fg:x="6646" fg:w="7"/><text x="79.5419%" y="591.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="79.3062%" y="597" width="0.0119%" height="15" fill="rgb(236,124,4)" fg:x="6653" fg:w="1"/><text x="79.6253%" y="607.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="79.3182%" y="597" width="0.0119%" height="15" fill="rgb(244,128,18)" fg:x="6654" fg:w="1"/><text x="79.6373%" y="607.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="79.3301%" y="597" width="0.0119%" height="15" fill="rgb(231,206,5)" fg:x="6655" fg:w="1"/><text x="79.6492%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="79.3420%" y="597" width="0.0119%" height="15" fill="rgb(237,111,8)" fg:x="6656" fg:w="1"/><text x="79.6611%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="79.3420%" y="581" width="0.0119%" height="15" fill="rgb(225,127,3)" fg:x="6656" fg:w="1"/><text x="79.6611%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="79.3539%" y="597" width="0.0119%" height="15" fill="rgb(222,85,48)" fg:x="6657" fg:w="1"/><text x="79.6730%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (13 samples, 0.15%)</title><rect x="79.2228%" y="613" width="0.1550%" height="15" fill="rgb(221,108,37)" fg:x="6646" fg:w="13"/><text x="79.5419%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.3658%" y="597" width="0.0119%" height="15" fill="rgb(226,169,36)" fg:x="6658" fg:w="1"/><text x="79.6849%" y="607.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="79.3897%" y="597" width="0.0238%" height="15" fill="rgb(237,76,12)" fg:x="6660" fg:w="2"/><text x="79.7088%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="79.4016%" y="581" width="0.0119%" height="15" fill="rgb(210,227,32)" fg:x="6661" fg:w="1"/><text x="79.7207%" y="591.50"/></g><g><title>operator new (9 samples, 0.11%)</title><rect x="79.4135%" y="597" width="0.1073%" height="15" fill="rgb(214,117,20)" fg:x="6662" fg:w="9"/><text x="79.7326%" y="607.50"/></g><g><title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="79.4135%" y="581" width="0.1073%" height="15" fill="rgb(234,119,41)" fg:x="6662" fg:w="9"/><text x="79.7326%" y="591.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="79.4374%" y="565" width="0.0834%" height="15" fill="rgb(230,130,47)" fg:x="6664" fg:w="7"/><text x="79.7565%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (13 samples, 0.15%)</title><rect x="79.3778%" y="613" width="0.1550%" height="15" fill="rgb(215,21,41)" fg:x="6659" fg:w="13"/><text x="79.6969%" y="623.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="79.5208%" y="597" width="0.0119%" height="15" fill="rgb(226,26,53)" fg:x="6671" fg:w="1"/><text x="79.8399%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (932 samples, 11.11%)</title><rect x="68.4587%" y="773" width="11.1098%" height="15" fill="rgb(221,92,23)" fg:x="5743" fg:w="932"/><text x="68.7778%" y="783.50">..&gt;::_M_invoke </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (932 samples, 11.11%)</title><rect x="68.4587%" y="757" width="11.1098%" height="15" fill="rgb(213,156,21)" fg:x="5743" fg:w="932"/><text x="68.7778%" y="767.50">..&gt;::_M_invoke </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (932 samples, 11.11%)</title><rect x="68.4587%" y="741" width="11.1098%" height="15" fill="rgb(254,166,29)" fg:x="5743" fg:w="932"/><text x="68.7778%" y="751.50">..&gt;::_M_invoke </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (932 samples, 11.11%)</title><rect x="68.4587%" y="725" width="11.1098%" height="15" fill="rgb(213,71,1)" fg:x="5743" fg:w="932"/><text x="68.7778%" y="735.50">..&gt;::_M_invoke </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (932 samples, 11.11%)</title><rect x="68.4587%" y="709" width="11.1098%" height="15" fill="rgb(245,8,13)" fg:x="5743" fg:w="932"/><text x="68.7778%" y="719.50">..&gt;::_M_invoke </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (932 samples, 11.11%)</title><rect x="68.4587%" y="693" width="11.1098%" height="15" fill="rgb(213,32,32)" fg:x="5743" fg:w="932"/><text x="68.7778%" y="703.50">..&gt;::_M_invoke </text></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic), std::function&lt;Result (State&amp;)&gt; (*)(symbolic::Symbolic)&gt;::_M_invoke (932 samples, 11.11%)</title><rect x="68.4587%" y="677" width="11.1098%" height="15" fill="rgb(251,86,50)" fg:x="5743" fg:w="932"/><text x="68.7778%" y="687.50">..)&gt;::_M_invoke </text></g><g><title>logic::symop (932 samples, 11.11%)</title><rect x="68.4587%" y="661" width="11.1098%" height="15" fill="rgb(252,92,41)" fg:x="5743" fg:w="932"/><text x="68.7778%" y="671.50">logic::symop </text></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (139 samples, 1.66%)</title><rect x="77.9116%" y="645" width="1.6569%" height="15" fill="rgb(234,70,35)" fg:x="6536" fg:w="139"/><text x="78.2307%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (138 samples, 1.65%)</title><rect x="77.9235%" y="629" width="1.6450%" height="15" fill="rgb(210,157,19)" fg:x="6537" fg:w="138"/><text x="78.2426%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function&lt;std::function&lt;Result (State)&gt;, void, void&gt; (3 samples, 0.04%)</title><rect x="79.5327%" y="613" width="0.0358%" height="15" fill="rgb(206,20,45)" fg:x="6672" fg:w="3"/><text x="79.8518%" y="623.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="79.5327%" y="597" width="0.0358%" height="15" fill="rgb(207,34,7)" fg:x="6672" fg:w="3"/><text x="79.8518%" y="607.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="79.5327%" y="581" width="0.0358%" height="15" fill="rgb(253,151,14)" fg:x="6672" fg:w="3"/><text x="79.8518%" y="591.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="79.5566%" y="565" width="0.0119%" height="15" fill="rgb(252,1,18)" fg:x="6674" fg:w="1"/><text x="79.8757%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="79.5685%" y="485" width="0.0238%" height="15" fill="rgb(214,77,52)" fg:x="6675" fg:w="2"/><text x="79.8876%" y="495.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="79.5685%" y="469" width="0.0238%" height="15" fill="rgb(254,106,35)" fg:x="6675" fg:w="2"/><text x="79.8876%" y="479.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="79.5685%" y="453" width="0.0238%" height="15" fill="rgb(212,67,40)" fg:x="6675" fg:w="2"/><text x="79.8876%" y="463.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="79.5685%" y="437" width="0.0238%" height="15" fill="rgb(228,76,23)" fg:x="6675" fg:w="2"/><text x="79.8876%" y="447.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="79.5923%" y="437" width="0.0238%" height="15" fill="rgb(250,198,5)" fg:x="6677" fg:w="2"/><text x="79.9114%" y="447.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="79.5923%" y="421" width="0.0238%" height="15" fill="rgb(209,20,25)" fg:x="6677" fg:w="2"/><text x="79.9114%" y="431.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="79.5923%" y="405" width="0.0238%" height="15" fill="rgb(236,32,4)" fg:x="6677" fg:w="2"/><text x="79.9114%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.6162%" y="389" width="0.0119%" height="15" fill="rgb(215,31,6)" fg:x="6679" fg:w="1"/><text x="79.9353%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="79.6162%" y="373" width="0.0119%" height="15" fill="rgb(207,186,49)" fg:x="6679" fg:w="1"/><text x="79.9353%" y="383.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="79.6162%" y="357" width="0.0119%" height="15" fill="rgb(211,212,49)" fg:x="6679" fg:w="1"/><text x="79.9353%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="79.5685%" y="677" width="0.0834%" height="15" fill="rgb(229,51,41)" fg:x="6675" fg:w="7"/><text x="79.8876%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="79.5685%" y="661" width="0.0834%" height="15" fill="rgb(205,225,36)" fg:x="6675" fg:w="7"/><text x="79.8876%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="79.5685%" y="645" width="0.0834%" height="15" fill="rgb(209,213,45)" fg:x="6675" fg:w="7"/><text x="79.8876%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="79.5685%" y="629" width="0.0834%" height="15" fill="rgb(219,35,49)" fg:x="6675" fg:w="7"/><text x="79.8876%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="79.5685%" y="613" width="0.0834%" height="15" fill="rgb(215,205,22)" fg:x="6675" fg:w="7"/><text x="79.8876%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="79.5685%" y="597" width="0.0834%" height="15" fill="rgb(248,204,34)" fg:x="6675" fg:w="7"/><text x="79.8876%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="79.5685%" y="581" width="0.0834%" height="15" fill="rgb(219,223,31)" fg:x="6675" fg:w="7"/><text x="79.8876%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="79.5685%" y="565" width="0.0834%" height="15" fill="rgb(236,14,8)" fg:x="6675" fg:w="7"/><text x="79.8876%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="79.5685%" y="549" width="0.0834%" height="15" fill="rgb(243,129,23)" fg:x="6675" fg:w="7"/><text x="79.8876%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="79.5685%" y="533" width="0.0834%" height="15" fill="rgb(205,204,5)" fg:x="6675" fg:w="7"/><text x="79.8876%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="79.5685%" y="517" width="0.0834%" height="15" fill="rgb(244,115,32)" fg:x="6675" fg:w="7"/><text x="79.8876%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="79.5685%" y="501" width="0.0834%" height="15" fill="rgb(229,123,14)" fg:x="6675" fg:w="7"/><text x="79.8876%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="79.5923%" y="485" width="0.0596%" height="15" fill="rgb(250,85,1)" fg:x="6677" fg:w="5"/><text x="79.9114%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="79.5923%" y="469" width="0.0596%" height="15" fill="rgb(209,141,54)" fg:x="6677" fg:w="5"/><text x="79.9114%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="79.5923%" y="453" width="0.0596%" height="15" fill="rgb(244,107,39)" fg:x="6677" fg:w="5"/><text x="79.9114%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="79.6162%" y="437" width="0.0358%" height="15" fill="rgb(230,68,26)" fg:x="6679" fg:w="3"/><text x="79.9353%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="79.6162%" y="421" width="0.0358%" height="15" fill="rgb(220,178,33)" fg:x="6679" fg:w="3"/><text x="79.9353%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="79.6162%" y="405" width="0.0358%" height="15" fill="rgb(220,77,53)" fg:x="6679" fg:w="3"/><text x="79.9353%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="79.6281%" y="389" width="0.0238%" height="15" fill="rgb(224,108,19)" fg:x="6680" fg:w="2"/><text x="79.9472%" y="399.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="79.6281%" y="373" width="0.0238%" height="15" fill="rgb(223,203,27)" fg:x="6680" fg:w="2"/><text x="79.9472%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="79.6281%" y="357" width="0.0238%" height="15" fill="rgb(211,32,46)" fg:x="6680" fg:w="2"/><text x="79.9472%" y="367.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="79.6281%" y="341" width="0.0238%" height="15" fill="rgb(240,101,27)" fg:x="6680" fg:w="2"/><text x="79.9472%" y="351.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="79.6281%" y="325" width="0.0238%" height="15" fill="rgb(217,210,11)" fg:x="6680" fg:w="2"/><text x="79.9472%" y="335.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="79.6400%" y="309" width="0.0119%" height="15" fill="rgb(236,130,21)" fg:x="6681" fg:w="1"/><text x="79.9591%" y="319.50"/></g><g><title>parser::either (8 samples, 0.10%)</title><rect x="79.5685%" y="693" width="0.0954%" height="15" fill="rgb(250,136,8)" fg:x="6675" fg:w="8"/><text x="79.8876%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.6519%" y="677" width="0.0119%" height="15" fill="rgb(243,223,36)" fg:x="6682" fg:w="1"/><text x="79.9710%" y="687.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="79.6519%" y="661" width="0.0119%" height="15" fill="rgb(246,184,8)" fg:x="6682" fg:w="1"/><text x="79.9710%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.6519%" y="645" width="0.0119%" height="15" fill="rgb(222,158,36)" fg:x="6682" fg:w="1"/><text x="79.9710%" y="655.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="79.6519%" y="629" width="0.0119%" height="15" fill="rgb(210,220,19)" fg:x="6682" fg:w="1"/><text x="79.9710%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.6519%" y="613" width="0.0119%" height="15" fill="rgb(246,44,38)" fg:x="6682" fg:w="1"/><text x="79.9710%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="79.6519%" y="597" width="0.0119%" height="15" fill="rgb(246,186,14)" fg:x="6682" fg:w="1"/><text x="79.9710%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.6519%" y="581" width="0.0119%" height="15" fill="rgb(233,193,20)" fg:x="6682" fg:w="1"/><text x="79.9710%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="79.6519%" y="565" width="0.0119%" height="15" fill="rgb(215,60,5)" fg:x="6682" fg:w="1"/><text x="79.9710%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.6519%" y="549" width="0.0119%" height="15" fill="rgb(207,128,10)" fg:x="6682" fg:w="1"/><text x="79.9710%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="79.6519%" y="533" width="0.0119%" height="15" fill="rgb(238,84,54)" fg:x="6682" fg:w="1"/><text x="79.9710%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.6519%" y="517" width="0.0119%" height="15" fill="rgb(213,130,11)" fg:x="6682" fg:w="1"/><text x="79.9710%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="79.6519%" y="501" width="0.0119%" height="15" fill="rgb(235,62,9)" fg:x="6682" fg:w="1"/><text x="79.9710%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.6519%" y="485" width="0.0119%" height="15" fill="rgb(222,64,24)" fg:x="6682" fg:w="1"/><text x="79.9710%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="79.6519%" y="469" width="0.0119%" height="15" fill="rgb(238,193,42)" fg:x="6682" fg:w="1"/><text x="79.9710%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="79.6519%" y="453" width="0.0119%" height="15" fill="rgb(243,204,46)" fg:x="6682" fg:w="1"/><text x="79.9710%" y="463.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="79.6519%" y="437" width="0.0119%" height="15" fill="rgb(243,196,11)" fg:x="6682" fg:w="1"/><text x="79.9710%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="79.6638%" y="421" width="0.0119%" height="15" fill="rgb(232,77,22)" fg:x="6683" fg:w="1"/><text x="79.9829%" y="431.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="79.6638%" y="405" width="0.0119%" height="15" fill="rgb(215,80,25)" fg:x="6683" fg:w="1"/><text x="79.9829%" y="415.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="79.6638%" y="389" width="0.0119%" height="15" fill="rgb(210,173,7)" fg:x="6683" fg:w="1"/><text x="79.9829%" y="399.50"/></g><g><title>logic::initialize (11 samples, 0.13%)</title><rect x="79.5685%" y="741" width="0.1311%" height="15" fill="rgb(207,101,10)" fg:x="6675" fg:w="11"/><text x="79.8876%" y="751.50"/></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (11 samples, 0.13%)</title><rect x="79.5685%" y="725" width="0.1311%" height="15" fill="rgb(246,57,48)" fg:x="6675" fg:w="11"/><text x="79.8876%" y="735.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (11 samples, 0.13%)</title><rect x="79.5685%" y="709" width="0.1311%" height="15" fill="rgb(236,184,40)" fg:x="6675" fg:w="11"/><text x="79.8876%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="79.6638%" y="693" width="0.0358%" height="15" fill="rgb(210,205,13)" fg:x="6683" fg:w="3"/><text x="79.9829%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="79.6638%" y="677" width="0.0358%" height="15" fill="rgb(231,129,42)" fg:x="6683" fg:w="3"/><text x="79.9829%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="79.6638%" y="661" width="0.0358%" height="15" fill="rgb(220,229,54)" fg:x="6683" fg:w="3"/><text x="79.9829%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="79.6638%" y="645" width="0.0358%" height="15" fill="rgb(230,192,26)" fg:x="6683" fg:w="3"/><text x="79.9829%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="79.6638%" y="629" width="0.0358%" height="15" fill="rgb(253,18,30)" fg:x="6683" fg:w="3"/><text x="79.9829%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="79.6638%" y="613" width="0.0358%" height="15" fill="rgb(216,62,53)" fg:x="6683" fg:w="3"/><text x="79.9829%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="79.6638%" y="597" width="0.0358%" height="15" fill="rgb(230,79,29)" fg:x="6683" fg:w="3"/><text x="79.9829%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="79.6638%" y="581" width="0.0358%" height="15" fill="rgb(242,26,26)" fg:x="6683" fg:w="3"/><text x="79.9829%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="79.6638%" y="565" width="0.0358%" height="15" fill="rgb(227,125,21)" fg:x="6683" fg:w="3"/><text x="79.9829%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="79.6638%" y="549" width="0.0358%" height="15" fill="rgb(229,93,26)" fg:x="6683" fg:w="3"/><text x="79.9829%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="79.6638%" y="533" width="0.0358%" height="15" fill="rgb(227,228,8)" fg:x="6683" fg:w="3"/><text x="79.9829%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="79.6638%" y="517" width="0.0358%" height="15" fill="rgb(233,56,0)" fg:x="6683" fg:w="3"/><text x="79.9829%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="79.6638%" y="501" width="0.0358%" height="15" fill="rgb(225,185,17)" fg:x="6683" fg:w="3"/><text x="79.9829%" y="511.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="79.6638%" y="485" width="0.0358%" height="15" fill="rgb(238,202,30)" fg:x="6683" fg:w="3"/><text x="79.9829%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="79.6638%" y="469" width="0.0358%" height="15" fill="rgb(236,60,13)" fg:x="6683" fg:w="3"/><text x="79.9829%" y="479.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="79.6638%" y="453" width="0.0358%" height="15" fill="rgb(244,92,0)" fg:x="6683" fg:w="3"/><text x="79.9829%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="79.6638%" y="437" width="0.0358%" height="15" fill="rgb(225,57,15)" fg:x="6683" fg:w="3"/><text x="79.9829%" y="447.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="79.6758%" y="421" width="0.0238%" height="15" fill="rgb(228,5,28)" fg:x="6684" fg:w="2"/><text x="79.9949%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="79.6758%" y="405" width="0.0238%" height="15" fill="rgb(252,34,51)" fg:x="6684" fg:w="2"/><text x="79.9949%" y="415.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="79.6758%" y="389" width="0.0238%" height="15" fill="rgb(235,58,7)" fg:x="6684" fg:w="2"/><text x="79.9949%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="79.6758%" y="373" width="0.0238%" height="15" fill="rgb(250,132,20)" fg:x="6684" fg:w="2"/><text x="79.9949%" y="383.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="79.6758%" y="357" width="0.0238%" height="15" fill="rgb(217,164,0)" fg:x="6684" fg:w="2"/><text x="79.9949%" y="367.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="79.6758%" y="341" width="0.0238%" height="15" fill="rgb(208,220,35)" fg:x="6684" fg:w="2"/><text x="79.9949%" y="351.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="79.6758%" y="325" width="0.0238%" height="15" fill="rgb(227,42,51)" fg:x="6684" fg:w="2"/><text x="79.9949%" y="335.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="79.6758%" y="309" width="0.0238%" height="15" fill="rgb(225,146,38)" fg:x="6684" fg:w="2"/><text x="79.9949%" y="319.50"/></g><g><title>cond::keep_layout (1 samples, 0.01%)</title><rect x="79.6996%" y="693" width="0.0119%" height="15" fill="rgb(252,108,37)" fg:x="6686" fg:w="1"/><text x="80.0187%" y="703.50"/></g><g><title>cond::check_indent (1 samples, 0.01%)</title><rect x="79.6996%" y="677" width="0.0119%" height="15" fill="rgb(244,101,24)" fg:x="6686" fg:w="1"/><text x="80.0187%" y="687.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="79.6996%" y="661" width="0.0119%" height="15" fill="rgb(213,161,50)" fg:x="6686" fg:w="1"/><text x="80.0187%" y="671.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="79.6996%" y="645" width="0.0119%" height="15" fill="rgb(248,159,19)" fg:x="6686" fg:w="1"/><text x="80.0187%" y="655.50"/></g><g><title>cond::peek (1 samples, 0.01%)</title><rect x="79.7115%" y="693" width="0.0119%" height="15" fill="rgb(233,179,15)" fg:x="6687" fg:w="1"/><text x="80.0306%" y="703.50"/></g><g><title>cond::peeks (1 samples, 0.01%)</title><rect x="79.7115%" y="677" width="0.0119%" height="15" fill="rgb(248,178,3)" fg:x="6687" fg:w="1"/><text x="80.0306%" y="687.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="79.7115%" y="661" width="0.0119%" height="15" fill="rgb(245,190,41)" fg:x="6687" fg:w="1"/><text x="80.0306%" y="671.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="79.7115%" y="645" width="0.0119%" height="15" fill="rgb(218,151,19)" fg:x="6687" fg:w="1"/><text x="80.0306%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="79.7234%" y="645" width="0.0715%" height="15" fill="rgb(245,25,44)" fg:x="6688" fg:w="6"/><text x="80.0425%" y="655.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="79.7354%" y="629" width="0.0596%" height="15" fill="rgb(235,172,47)" fg:x="6689" fg:w="5"/><text x="80.0545%" y="639.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="79.7354%" y="613" width="0.0596%" height="15" fill="rgb(246,33,12)" fg:x="6689" fg:w="5"/><text x="80.0545%" y="623.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="79.7473%" y="597" width="0.0477%" height="15" fill="rgb(214,124,7)" fg:x="6690" fg:w="4"/><text x="80.0664%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="79.7234%" y="677" width="0.1073%" height="15" fill="rgb(246,186,18)" fg:x="6688" fg:w="9"/><text x="80.0425%" y="687.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="79.7234%" y="661" width="0.1073%" height="15" fill="rgb(231,94,1)" fg:x="6688" fg:w="9"/><text x="80.0425%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="79.7950%" y="645" width="0.0358%" height="15" fill="rgb(208,33,48)" fg:x="6694" fg:w="3"/><text x="80.1141%" y="655.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="79.8069%" y="629" width="0.0238%" height="15" fill="rgb(208,195,44)" fg:x="6695" fg:w="2"/><text x="80.1260%" y="639.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="79.8069%" y="613" width="0.0238%" height="15" fill="rgb(226,13,52)" fg:x="6695" fg:w="2"/><text x="80.1260%" y="623.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="79.8188%" y="597" width="0.0119%" height="15" fill="rgb(217,219,45)" fg:x="6696" fg:w="1"/><text x="80.1379%" y="607.50"/></g><g><title>operator&amp; (11 samples, 0.13%)</title><rect x="79.7234%" y="693" width="0.1311%" height="15" fill="rgb(223,45,25)" fg:x="6688" fg:w="11"/><text x="80.0425%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="79.8307%" y="677" width="0.0238%" height="15" fill="rgb(241,163,0)" fg:x="6697" fg:w="2"/><text x="80.1498%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.8427%" y="661" width="0.0119%" height="15" fill="rgb(216,68,47)" fg:x="6698" fg:w="1"/><text x="80.1618%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="79.8427%" y="645" width="0.0119%" height="15" fill="rgb(236,119,45)" fg:x="6698" fg:w="1"/><text x="80.1618%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="79.8427%" y="629" width="0.0119%" height="15" fill="rgb(209,188,24)" fg:x="6698" fg:w="1"/><text x="80.1618%" y="639.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="79.8427%" y="613" width="0.0119%" height="15" fill="rgb(221,118,7)" fg:x="6698" fg:w="1"/><text x="80.1618%" y="623.50"/></g><g><title>operator| (1 samples, 0.01%)</title><rect x="79.8546%" y="693" width="0.0119%" height="15" fill="rgb(213,148,43)" fg:x="6699" fg:w="1"/><text x="80.1737%" y="703.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="79.8546%" y="677" width="0.0119%" height="15" fill="rgb(231,21,43)" fg:x="6699" fg:w="1"/><text x="80.1737%" y="687.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="79.8546%" y="661" width="0.0119%" height="15" fill="rgb(232,213,43)" fg:x="6699" fg:w="1"/><text x="80.1737%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.8665%" y="677" width="0.0119%" height="15" fill="rgb(239,145,50)" fg:x="6700" fg:w="1"/><text x="80.1856%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="79.8665%" y="661" width="0.0119%" height="15" fill="rgb(222,131,18)" fg:x="6700" fg:w="1"/><text x="80.1856%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="79.8665%" y="645" width="0.0119%" height="15" fill="rgb(243,181,13)" fg:x="6700" fg:w="1"/><text x="80.1856%" y="655.50"/></g><g><title>cond::is_newline_where (16 samples, 0.19%)</title><rect x="79.6996%" y="709" width="0.1907%" height="15" fill="rgb(212,74,41)" fg:x="6686" fg:w="16"/><text x="80.0187%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="79.8665%" y="693" width="0.0238%" height="15" fill="rgb(237,143,34)" fg:x="6700" fg:w="2"/><text x="80.1856%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.8784%" y="677" width="0.0119%" height="15" fill="rgb(228,139,0)" fg:x="6701" fg:w="1"/><text x="80.1975%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="79.8784%" y="661" width="0.0119%" height="15" fill="rgb(227,214,11)" fg:x="6701" fg:w="1"/><text x="80.1975%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="79.8784%" y="645" width="0.0119%" height="15" fill="rgb(228,118,39)" fg:x="6701" fg:w="1"/><text x="80.1975%" y="655.50"/></g><g><title>parser::either (1 samples, 0.01%)</title><rect x="79.8903%" y="661" width="0.0119%" height="15" fill="rgb(207,117,22)" fg:x="6702" fg:w="1"/><text x="80.2094%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="79.8903%" y="645" width="0.0119%" height="15" fill="rgb(225,91,8)" fg:x="6702" fg:w="1"/><text x="80.2094%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="79.8903%" y="629" width="0.0119%" height="15" fill="rgb(230,219,48)" fg:x="6702" fg:w="1"/><text x="80.2094%" y="639.50"/></g><g><title>parser::finish_if_valid (3 samples, 0.04%)</title><rect x="79.8903%" y="693" width="0.0358%" height="15" fill="rgb(244,0,23)" fg:x="6702" fg:w="3"/><text x="80.2094%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="79.8903%" y="677" width="0.0358%" height="15" fill="rgb(206,212,23)" fg:x="6702" fg:w="3"/><text x="80.2094%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function&lt;std::function&lt;Result (State)&gt;, void, void&gt; (2 samples, 0.02%)</title><rect x="79.9023%" y="661" width="0.0238%" height="15" fill="rgb(254,62,10)" fg:x="6703" fg:w="2"/><text x="80.2214%" y="671.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="79.9023%" y="645" width="0.0238%" height="15" fill="rgb(236,58,8)" fg:x="6703" fg:w="2"/><text x="80.2214%" y="655.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="79.9023%" y="629" width="0.0238%" height="15" fill="rgb(232,212,17)" fg:x="6703" fg:w="2"/><text x="80.2214%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.9261%" y="581" width="0.0119%" height="15" fill="rgb(206,132,9)" fg:x="6705" fg:w="1"/><text x="80.2452%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="79.9261%" y="565" width="0.0119%" height="15" fill="rgb(234,97,28)" fg:x="6705" fg:w="1"/><text x="80.2452%" y="575.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="79.9261%" y="549" width="0.0119%" height="15" fill="rgb(254,144,9)" fg:x="6705" fg:w="1"/><text x="80.2452%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="79.9261%" y="661" width="0.0238%" height="15" fill="rgb(244,204,43)" fg:x="6705" fg:w="2"/><text x="80.2452%" y="671.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="79.9261%" y="645" width="0.0238%" height="15" fill="rgb(248,177,16)" fg:x="6705" fg:w="2"/><text x="80.2452%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="79.9261%" y="629" width="0.0238%" height="15" fill="rgb(219,110,15)" fg:x="6705" fg:w="2"/><text x="80.2452%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="79.9261%" y="613" width="0.0238%" height="15" fill="rgb(212,203,25)" fg:x="6705" fg:w="2"/><text x="80.2452%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="79.9261%" y="597" width="0.0238%" height="15" fill="rgb(205,50,1)" fg:x="6705" fg:w="2"/><text x="80.2452%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.9380%" y="581" width="0.0119%" height="15" fill="rgb(222,152,41)" fg:x="6706" fg:w="1"/><text x="80.2571%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="79.9380%" y="565" width="0.0119%" height="15" fill="rgb(236,83,3)" fg:x="6706" fg:w="1"/><text x="80.2571%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="79.9380%" y="549" width="0.0119%" height="15" fill="rgb(214,30,54)" fg:x="6706" fg:w="1"/><text x="80.2571%" y="559.50"/></g><g><title>parser::operator+ (3 samples, 0.04%)</title><rect x="79.9261%" y="677" width="0.0358%" height="15" fill="rgb(250,117,31)" fg:x="6705" fg:w="3"/><text x="80.2452%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.9499%" y="661" width="0.0119%" height="15" fill="rgb(228,77,14)" fg:x="6707" fg:w="1"/><text x="80.2690%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="79.9499%" y="645" width="0.0119%" height="15" fill="rgb(241,3,28)" fg:x="6707" fg:w="1"/><text x="80.2690%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="79.9499%" y="629" width="0.0119%" height="15" fill="rgb(221,175,52)" fg:x="6707" fg:w="1"/><text x="80.2690%" y="639.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="79.9499%" y="613" width="0.0119%" height="15" fill="rgb(237,91,6)" fg:x="6707" fg:w="1"/><text x="80.2690%" y="623.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="79.9619%" y="629" width="0.0119%" height="15" fill="rgb(246,46,42)" fg:x="6708" fg:w="1"/><text x="80.2810%" y="639.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="79.9619%" y="613" width="0.0119%" height="15" fill="rgb(235,199,0)" fg:x="6708" fg:w="1"/><text x="80.2810%" y="623.50"/></g><g><title>parser::either (2 samples, 0.02%)</title><rect x="79.9619%" y="661" width="0.0238%" height="15" fill="rgb(224,44,40)" fg:x="6708" fg:w="2"/><text x="80.2810%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="79.9619%" y="645" width="0.0238%" height="15" fill="rgb(209,24,35)" fg:x="6708" fg:w="2"/><text x="80.2810%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="79.9738%" y="629" width="0.0119%" height="15" fill="rgb(244,46,22)" fg:x="6709" fg:w="1"/><text x="80.2929%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.9738%" y="613" width="0.0119%" height="15" fill="rgb(235,99,8)" fg:x="6709" fg:w="1"/><text x="80.2929%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.9738%" y="597" width="0.0119%" height="15" fill="rgb(218,127,36)" fg:x="6709" fg:w="1"/><text x="80.2929%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="79.9738%" y="581" width="0.0119%" height="15" fill="rgb(238,47,46)" fg:x="6709" fg:w="1"/><text x="80.2929%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="79.9738%" y="565" width="0.0119%" height="15" fill="rgb(233,65,17)" fg:x="6709" fg:w="1"/><text x="80.2929%" y="575.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="79.9738%" y="549" width="0.0119%" height="15" fill="rgb(239,22,33)" fg:x="6709" fg:w="1"/><text x="80.2929%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="79.9857%" y="629" width="0.0119%" height="15" fill="rgb(243,66,43)" fg:x="6710" fg:w="1"/><text x="80.3048%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="79.9857%" y="613" width="0.0119%" height="15" fill="rgb(235,210,28)" fg:x="6710" fg:w="1"/><text x="80.3048%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="79.9857%" y="645" width="0.0238%" height="15" fill="rgb(205,191,50)" fg:x="6710" fg:w="2"/><text x="80.3048%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.9976%" y="629" width="0.0119%" height="15" fill="rgb(251,217,19)" fg:x="6711" fg:w="1"/><text x="80.3167%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="79.9976%" y="613" width="0.0119%" height="15" fill="rgb(205,174,37)" fg:x="6711" fg:w="1"/><text x="80.3167%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="79.9976%" y="597" width="0.0119%" height="15" fill="rgb(212,158,42)" fg:x="6711" fg:w="1"/><text x="80.3167%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="79.9976%" y="581" width="0.0119%" height="15" fill="rgb(212,208,51)" fg:x="6711" fg:w="1"/><text x="80.3167%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="79.9857%" y="661" width="0.0358%" height="15" fill="rgb(225,198,20)" fg:x="6710" fg:w="3"/><text x="80.3048%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.0095%" y="645" width="0.0119%" height="15" fill="rgb(247,41,44)" fg:x="6712" fg:w="1"/><text x="80.3286%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.0095%" y="629" width="0.0119%" height="15" fill="rgb(228,33,41)" fg:x="6712" fg:w="1"/><text x="80.3286%" y="639.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.0095%" y="613" width="0.0119%" height="15" fill="rgb(215,47,52)" fg:x="6712" fg:w="1"/><text x="80.3286%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.0095%" y="597" width="0.0119%" height="15" fill="rgb(248,106,37)" fg:x="6712" fg:w="1"/><text x="80.3286%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.0095%" y="581" width="0.0119%" height="15" fill="rgb(238,91,29)" fg:x="6712" fg:w="1"/><text x="80.3286%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.0095%" y="565" width="0.0119%" height="15" fill="rgb(226,111,40)" fg:x="6712" fg:w="1"/><text x="80.3286%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.0095%" y="549" width="0.0119%" height="15" fill="rgb(229,159,36)" fg:x="6712" fg:w="1"/><text x="80.3286%" y="559.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (6 samples, 0.07%)</title><rect x="79.9619%" y="677" width="0.0715%" height="15" fill="rgb(221,109,4)" fg:x="6708" fg:w="6"/><text x="80.2810%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.0215%" y="661" width="0.0119%" height="15" fill="rgb(236,56,25)" fg:x="6713" fg:w="1"/><text x="80.3406%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="80.0215%" y="645" width="0.0119%" height="15" fill="rgb(244,113,23)" fg:x="6713" fg:w="1"/><text x="80.3406%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="80.0215%" y="629" width="0.0119%" height="15" fill="rgb(249,132,2)" fg:x="6713" fg:w="1"/><text x="80.3406%" y="639.50"/></g><g><title>parser::layout_end (10 samples, 0.12%)</title><rect x="79.9261%" y="693" width="0.1192%" height="15" fill="rgb(205,185,21)" fg:x="6705" fg:w="10"/><text x="80.2452%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.0334%" y="677" width="0.0119%" height="15" fill="rgb(245,130,2)" fg:x="6714" fg:w="1"/><text x="80.3525%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.0334%" y="661" width="0.0119%" height="15" fill="rgb(246,71,26)" fg:x="6714" fg:w="1"/><text x="80.3525%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.0334%" y="645" width="0.0119%" height="15" fill="rgb(234,194,6)" fg:x="6714" fg:w="1"/><text x="80.3525%" y="655.50"/></g><g><title>parser::end_or_semicolon (14 samples, 0.17%)</title><rect x="79.8903%" y="709" width="0.1669%" height="15" fill="rgb(206,24,32)" fg:x="6702" fg:w="14"/><text x="80.2094%" y="719.50"/></g><g><title>parser::operator+ (1 samples, 0.01%)</title><rect x="80.0453%" y="693" width="0.0119%" height="15" fill="rgb(233,7,54)" fg:x="6715" fg:w="1"/><text x="80.3644%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.0453%" y="677" width="0.0119%" height="15" fill="rgb(252,46,1)" fg:x="6715" fg:w="1"/><text x="80.3644%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.0453%" y="661" width="0.0119%" height="15" fill="rgb(216,113,53)" fg:x="6715" fg:w="1"/><text x="80.3644%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.0453%" y="645" width="0.0119%" height="15" fill="rgb(215,40,24)" fg:x="6715" fg:w="1"/><text x="80.3644%" y="655.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.0453%" y="629" width="0.0119%" height="15" fill="rgb(233,222,8)" fg:x="6715" fg:w="1"/><text x="80.3644%" y="639.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.0453%" y="613" width="0.0119%" height="15" fill="rgb(248,73,28)" fg:x="6715" fg:w="1"/><text x="80.3644%" y="623.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="80.0453%" y="597" width="0.0119%" height="15" fill="rgb(247,126,28)" fg:x="6715" fg:w="1"/><text x="80.3644%" y="607.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="80.0572%" y="549" width="0.0238%" height="15" fill="rgb(242,173,54)" fg:x="6716" fg:w="2"/><text x="80.3763%" y="559.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="80.0572%" y="533" width="0.0238%" height="15" fill="rgb(244,186,22)" fg:x="6716" fg:w="2"/><text x="80.3763%" y="543.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="80.0572%" y="517" width="0.0238%" height="15" fill="rgb(231,187,4)" fg:x="6716" fg:w="2"/><text x="80.3763%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="80.0572%" y="677" width="0.0358%" height="15" fill="rgb(252,66,47)" fg:x="6716" fg:w="3"/><text x="80.3763%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="80.0572%" y="661" width="0.0358%" height="15" fill="rgb(240,228,28)" fg:x="6716" fg:w="3"/><text x="80.3763%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="80.0572%" y="645" width="0.0358%" height="15" fill="rgb(237,63,43)" fg:x="6716" fg:w="3"/><text x="80.3763%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="80.0572%" y="629" width="0.0358%" height="15" fill="rgb(214,1,44)" fg:x="6716" fg:w="3"/><text x="80.3763%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="80.0572%" y="613" width="0.0358%" height="15" fill="rgb(212,2,46)" fg:x="6716" fg:w="3"/><text x="80.3763%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="80.0572%" y="597" width="0.0358%" height="15" fill="rgb(213,142,5)" fg:x="6716" fg:w="3"/><text x="80.3763%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="80.0572%" y="581" width="0.0358%" height="15" fill="rgb(229,135,1)" fg:x="6716" fg:w="3"/><text x="80.3763%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="80.0572%" y="565" width="0.0358%" height="15" fill="rgb(252,98,38)" fg:x="6716" fg:w="3"/><text x="80.3763%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.0811%" y="549" width="0.0119%" height="15" fill="rgb(206,89,40)" fg:x="6718" fg:w="1"/><text x="80.4002%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.0811%" y="533" width="0.0119%" height="15" fill="rgb(219,73,36)" fg:x="6718" fg:w="1"/><text x="80.4002%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.0811%" y="517" width="0.0119%" height="15" fill="rgb(207,168,32)" fg:x="6718" fg:w="1"/><text x="80.4002%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.0811%" y="501" width="0.0119%" height="15" fill="rgb(215,113,21)" fg:x="6718" fg:w="1"/><text x="80.4002%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.0811%" y="485" width="0.0119%" height="15" fill="rgb(217,144,43)" fg:x="6718" fg:w="1"/><text x="80.4002%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.0930%" y="501" width="0.0238%" height="15" fill="rgb(249,48,50)" fg:x="6719" fg:w="2"/><text x="80.4121%" y="511.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="80.0930%" y="485" width="0.0238%" height="15" fill="rgb(242,1,26)" fg:x="6719" fg:w="2"/><text x="80.4121%" y="495.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="80.0930%" y="469" width="0.0238%" height="15" fill="rgb(231,167,42)" fg:x="6719" fg:w="2"/><text x="80.4121%" y="479.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="80.0930%" y="453" width="0.0238%" height="15" fill="rgb(242,177,45)" fg:x="6719" fg:w="2"/><text x="80.4121%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.1168%" y="485" width="0.0119%" height="15" fill="rgb(232,121,42)" fg:x="6721" fg:w="1"/><text x="80.4359%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.1168%" y="469" width="0.0119%" height="15" fill="rgb(205,8,42)" fg:x="6721" fg:w="1"/><text x="80.4359%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="80.0572%" y="693" width="0.0834%" height="15" fill="rgb(238,199,24)" fg:x="6716" fg:w="7"/><text x="80.3763%" y="703.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="80.0930%" y="677" width="0.0477%" height="15" fill="rgb(228,112,2)" fg:x="6719" fg:w="4"/><text x="80.4121%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.0930%" y="661" width="0.0477%" height="15" fill="rgb(215,115,33)" fg:x="6719" fg:w="4"/><text x="80.4121%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="80.0930%" y="645" width="0.0477%" height="15" fill="rgb(230,209,34)" fg:x="6719" fg:w="4"/><text x="80.4121%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.0930%" y="629" width="0.0477%" height="15" fill="rgb(246,76,12)" fg:x="6719" fg:w="4"/><text x="80.4121%" y="639.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="80.0930%" y="613" width="0.0477%" height="15" fill="rgb(240,110,9)" fg:x="6719" fg:w="4"/><text x="80.4121%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.0930%" y="597" width="0.0477%" height="15" fill="rgb(224,94,46)" fg:x="6719" fg:w="4"/><text x="80.4121%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="80.0930%" y="581" width="0.0477%" height="15" fill="rgb(247,150,22)" fg:x="6719" fg:w="4"/><text x="80.4121%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.0930%" y="565" width="0.0477%" height="15" fill="rgb(249,85,13)" fg:x="6719" fg:w="4"/><text x="80.4121%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="80.0930%" y="549" width="0.0477%" height="15" fill="rgb(208,77,41)" fg:x="6719" fg:w="4"/><text x="80.4121%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.0930%" y="533" width="0.0477%" height="15" fill="rgb(240,42,44)" fg:x="6719" fg:w="4"/><text x="80.4121%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="80.0930%" y="517" width="0.0477%" height="15" fill="rgb(222,10,51)" fg:x="6719" fg:w="4"/><text x="80.4121%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.1168%" y="501" width="0.0238%" height="15" fill="rgb(208,146,53)" fg:x="6721" fg:w="2"/><text x="80.4359%" y="511.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.1287%" y="485" width="0.0119%" height="15" fill="rgb(236,162,23)" fg:x="6722" fg:w="1"/><text x="80.4478%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.1287%" y="469" width="0.0119%" height="15" fill="rgb(218,66,21)" fg:x="6722" fg:w="1"/><text x="80.4478%" y="479.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.1287%" y="453" width="0.0119%" height="15" fill="rgb(233,6,47)" fg:x="6722" fg:w="1"/><text x="80.4478%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.1287%" y="437" width="0.0119%" height="15" fill="rgb(236,59,51)" fg:x="6722" fg:w="1"/><text x="80.4478%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.1287%" y="421" width="0.0119%" height="15" fill="rgb(242,12,46)" fg:x="6722" fg:w="1"/><text x="80.4478%" y="431.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="80.1407%" y="581" width="0.0238%" height="15" fill="rgb(243,142,19)" fg:x="6723" fg:w="2"/><text x="80.4598%" y="591.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="80.1407%" y="565" width="0.0238%" height="15" fill="rgb(217,28,17)" fg:x="6723" fg:w="2"/><text x="80.4598%" y="575.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="80.1407%" y="549" width="0.0238%" height="15" fill="rgb(228,2,27)" fg:x="6723" fg:w="2"/><text x="80.4598%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="80.1407%" y="645" width="0.0358%" height="15" fill="rgb(214,221,4)" fg:x="6723" fg:w="3"/><text x="80.4598%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="80.1407%" y="629" width="0.0358%" height="15" fill="rgb(224,69,26)" fg:x="6723" fg:w="3"/><text x="80.4598%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="80.1407%" y="613" width="0.0358%" height="15" fill="rgb(219,70,4)" fg:x="6723" fg:w="3"/><text x="80.4598%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="80.1407%" y="597" width="0.0358%" height="15" fill="rgb(218,157,39)" fg:x="6723" fg:w="3"/><text x="80.4598%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.1645%" y="581" width="0.0119%" height="15" fill="rgb(238,36,28)" fg:x="6725" fg:w="1"/><text x="80.4836%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.1645%" y="565" width="0.0119%" height="15" fill="rgb(232,29,0)" fg:x="6725" fg:w="1"/><text x="80.4836%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.1645%" y="549" width="0.0119%" height="15" fill="rgb(243,138,46)" fg:x="6725" fg:w="1"/><text x="80.4836%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.1645%" y="533" width="0.0119%" height="15" fill="rgb(232,186,41)" fg:x="6725" fg:w="1"/><text x="80.4836%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.1645%" y="517" width="0.0119%" height="15" fill="rgb(252,166,17)" fg:x="6725" fg:w="1"/><text x="80.4836%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.1645%" y="501" width="0.0119%" height="15" fill="rgb(228,179,12)" fg:x="6725" fg:w="1"/><text x="80.4836%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.1645%" y="485" width="0.0119%" height="15" fill="rgb(254,205,53)" fg:x="6725" fg:w="1"/><text x="80.4836%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.1645%" y="469" width="0.0119%" height="15" fill="rgb(224,163,47)" fg:x="6725" fg:w="1"/><text x="80.4836%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.1645%" y="453" width="0.0119%" height="15" fill="rgb(208,43,47)" fg:x="6725" fg:w="1"/><text x="80.4836%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.1645%" y="437" width="0.0119%" height="15" fill="rgb(224,198,38)" fg:x="6725" fg:w="1"/><text x="80.4836%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.1764%" y="501" width="0.0119%" height="15" fill="rgb(234,12,40)" fg:x="6726" fg:w="1"/><text x="80.4955%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.1764%" y="485" width="0.0119%" height="15" fill="rgb(237,212,39)" fg:x="6726" fg:w="1"/><text x="80.4955%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.1764%" y="469" width="0.0119%" height="15" fill="rgb(253,2,33)" fg:x="6726" fg:w="1"/><text x="80.4955%" y="479.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="80.1764%" y="453" width="0.0119%" height="15" fill="rgb(251,29,16)" fg:x="6726" fg:w="1"/><text x="80.4955%" y="463.50"/></g><g><title>parser::operator+ (14 samples, 0.17%)</title><rect x="80.0572%" y="709" width="0.1669%" height="15" fill="rgb(214,38,29)" fg:x="6716" fg:w="14"/><text x="80.3763%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="80.1407%" y="693" width="0.0834%" height="15" fill="rgb(226,226,29)" fg:x="6723" fg:w="7"/><text x="80.4598%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="80.1407%" y="677" width="0.0834%" height="15" fill="rgb(236,79,42)" fg:x="6723" fg:w="7"/><text x="80.4598%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="80.1407%" y="661" width="0.0834%" height="15" fill="rgb(222,12,36)" fg:x="6723" fg:w="7"/><text x="80.4598%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="80.1764%" y="645" width="0.0477%" height="15" fill="rgb(232,123,44)" fg:x="6726" fg:w="4"/><text x="80.4955%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.1764%" y="629" width="0.0477%" height="15" fill="rgb(234,93,50)" fg:x="6726" fg:w="4"/><text x="80.4955%" y="639.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="80.1764%" y="613" width="0.0477%" height="15" fill="rgb(210,86,49)" fg:x="6726" fg:w="4"/><text x="80.4955%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.1764%" y="597" width="0.0477%" height="15" fill="rgb(224,91,54)" fg:x="6726" fg:w="4"/><text x="80.4955%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="80.1764%" y="581" width="0.0477%" height="15" fill="rgb(239,169,9)" fg:x="6726" fg:w="4"/><text x="80.4955%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.1764%" y="565" width="0.0477%" height="15" fill="rgb(238,29,17)" fg:x="6726" fg:w="4"/><text x="80.4955%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="80.1764%" y="549" width="0.0477%" height="15" fill="rgb(227,160,22)" fg:x="6726" fg:w="4"/><text x="80.4955%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.1764%" y="533" width="0.0477%" height="15" fill="rgb(231,129,52)" fg:x="6726" fg:w="4"/><text x="80.4955%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="80.1764%" y="517" width="0.0477%" height="15" fill="rgb(241,184,9)" fg:x="6726" fg:w="4"/><text x="80.4955%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="80.1883%" y="501" width="0.0358%" height="15" fill="rgb(217,43,48)" fg:x="6727" fg:w="3"/><text x="80.5074%" y="511.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="80.1883%" y="485" width="0.0358%" height="15" fill="rgb(213,49,1)" fg:x="6727" fg:w="3"/><text x="80.5074%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="80.1883%" y="469" width="0.0358%" height="15" fill="rgb(223,79,39)" fg:x="6727" fg:w="3"/><text x="80.5074%" y="479.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="80.1883%" y="453" width="0.0358%" height="15" fill="rgb(228,227,46)" fg:x="6727" fg:w="3"/><text x="80.5074%" y="463.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="80.1883%" y="437" width="0.0358%" height="15" fill="rgb(245,89,41)" fg:x="6727" fg:w="3"/><text x="80.5074%" y="447.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="80.1883%" y="421" width="0.0358%" height="15" fill="rgb(253,83,21)" fg:x="6727" fg:w="3"/><text x="80.5074%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.2241%" y="661" width="0.0119%" height="15" fill="rgb(229,116,51)" fg:x="6730" fg:w="1"/><text x="80.5432%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.2241%" y="645" width="0.0119%" height="15" fill="rgb(246,67,26)" fg:x="6730" fg:w="1"/><text x="80.5432%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.2241%" y="629" width="0.0119%" height="15" fill="rgb(250,117,20)" fg:x="6730" fg:w="1"/><text x="80.5432%" y="639.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="80.2241%" y="613" width="0.0119%" height="15" fill="rgb(207,88,17)" fg:x="6730" fg:w="1"/><text x="80.5432%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.2360%" y="597" width="0.0238%" height="15" fill="rgb(212,98,36)" fg:x="6731" fg:w="2"/><text x="80.5551%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.2360%" y="581" width="0.0238%" height="15" fill="rgb(221,72,6)" fg:x="6731" fg:w="2"/><text x="80.5551%" y="591.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="80.2360%" y="565" width="0.0238%" height="15" fill="rgb(235,129,19)" fg:x="6731" fg:w="2"/><text x="80.5551%" y="575.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="80.2360%" y="549" width="0.0238%" height="15" fill="rgb(237,200,6)" fg:x="6731" fg:w="2"/><text x="80.5551%" y="559.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="80.2360%" y="533" width="0.0238%" height="15" fill="rgb(239,69,54)" fg:x="6731" fg:w="2"/><text x="80.5551%" y="543.50"/></g><g><title>cond::token (4 samples, 0.05%)</title><rect x="80.2241%" y="693" width="0.0477%" height="15" fill="rgb(214,68,45)" fg:x="6730" fg:w="4"/><text x="80.5432%" y="703.50"/></g><g><title>operator&amp; (4 samples, 0.05%)</title><rect x="80.2241%" y="677" width="0.0477%" height="15" fill="rgb(254,160,8)" fg:x="6730" fg:w="4"/><text x="80.5432%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="80.2360%" y="661" width="0.0358%" height="15" fill="rgb(215,226,31)" fg:x="6731" fg:w="3"/><text x="80.5551%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="80.2360%" y="645" width="0.0358%" height="15" fill="rgb(253,6,35)" fg:x="6731" fg:w="3"/><text x="80.5551%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="80.2360%" y="629" width="0.0358%" height="15" fill="rgb(219,96,42)" fg:x="6731" fg:w="3"/><text x="80.5551%" y="639.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="80.2360%" y="613" width="0.0358%" height="15" fill="rgb(207,170,13)" fg:x="6731" fg:w="3"/><text x="80.5551%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.2599%" y="597" width="0.0119%" height="15" fill="rgb(239,101,5)" fg:x="6733" fg:w="1"/><text x="80.5790%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.2599%" y="581" width="0.0119%" height="15" fill="rgb(228,183,34)" fg:x="6733" fg:w="1"/><text x="80.5790%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.2599%" y="565" width="0.0119%" height="15" fill="rgb(205,28,31)" fg:x="6733" fg:w="1"/><text x="80.5790%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.2599%" y="549" width="0.0119%" height="15" fill="rgb(214,118,50)" fg:x="6733" fg:w="1"/><text x="80.5790%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.2599%" y="533" width="0.0119%" height="15" fill="rgb(213,108,51)" fg:x="6733" fg:w="1"/><text x="80.5790%" y="543.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="80.2599%" y="517" width="0.0119%" height="15" fill="rgb(238,56,37)" fg:x="6733" fg:w="1"/><text x="80.5790%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.2718%" y="581" width="0.0119%" height="15" fill="rgb(214,136,28)" fg:x="6734" fg:w="1"/><text x="80.5909%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.2718%" y="565" width="0.0119%" height="15" fill="rgb(221,201,54)" fg:x="6734" fg:w="1"/><text x="80.5909%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.2718%" y="549" width="0.0119%" height="15" fill="rgb(228,216,39)" fg:x="6734" fg:w="1"/><text x="80.5909%" y="559.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="80.2718%" y="533" width="0.0119%" height="15" fill="rgb(207,229,49)" fg:x="6734" fg:w="1"/><text x="80.5909%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.2837%" y="517" width="0.0119%" height="15" fill="rgb(224,23,43)" fg:x="6735" fg:w="1"/><text x="80.6028%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.2837%" y="501" width="0.0119%" height="15" fill="rgb(247,97,18)" fg:x="6735" fg:w="1"/><text x="80.6028%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.2837%" y="485" width="0.0119%" height="15" fill="rgb(232,53,32)" fg:x="6735" fg:w="1"/><text x="80.6028%" y="495.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="80.2956%" y="501" width="0.0358%" height="15" fill="rgb(247,38,23)" fg:x="6736" fg:w="3"/><text x="80.6147%" y="511.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="80.2956%" y="485" width="0.0358%" height="15" fill="rgb(228,101,52)" fg:x="6736" fg:w="3"/><text x="80.6147%" y="495.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="80.3075%" y="469" width="0.0238%" height="15" fill="rgb(231,45,36)" fg:x="6737" fg:w="2"/><text x="80.6266%" y="479.50"/></g><g><title>parser::token (10 samples, 0.12%)</title><rect x="80.2241%" y="709" width="0.1192%" height="15" fill="rgb(221,183,50)" fg:x="6730" fg:w="10"/><text x="80.5432%" y="719.50"/></g><g><title>parser::iff (6 samples, 0.07%)</title><rect x="80.2718%" y="693" width="0.0715%" height="15" fill="rgb(251,132,12)" fg:x="6734" fg:w="6"/><text x="80.5909%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="80.2718%" y="677" width="0.0715%" height="15" fill="rgb(252,50,16)" fg:x="6734" fg:w="6"/><text x="80.5909%" y="687.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="80.2718%" y="661" width="0.0715%" height="15" fill="rgb(224,60,15)" fg:x="6734" fg:w="6"/><text x="80.5909%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="80.2718%" y="645" width="0.0715%" height="15" fill="rgb(254,2,34)" fg:x="6734" fg:w="6"/><text x="80.5909%" y="655.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="80.2718%" y="629" width="0.0715%" height="15" fill="rgb(232,154,8)" fg:x="6734" fg:w="6"/><text x="80.5909%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="80.2718%" y="613" width="0.0715%" height="15" fill="rgb(235,190,52)" fg:x="6734" fg:w="6"/><text x="80.5909%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="80.2718%" y="597" width="0.0715%" height="15" fill="rgb(213,218,38)" fg:x="6734" fg:w="6"/><text x="80.5909%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="80.2837%" y="581" width="0.0596%" height="15" fill="rgb(237,50,37)" fg:x="6735" fg:w="5"/><text x="80.6028%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="80.2837%" y="565" width="0.0596%" height="15" fill="rgb(235,51,35)" fg:x="6735" fg:w="5"/><text x="80.6028%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="80.2837%" y="549" width="0.0596%" height="15" fill="rgb(244,40,52)" fg:x="6735" fg:w="5"/><text x="80.6028%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="80.2837%" y="533" width="0.0596%" height="15" fill="rgb(217,225,45)" fg:x="6735" fg:w="5"/><text x="80.6028%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.2956%" y="517" width="0.0477%" height="15" fill="rgb(247,191,36)" fg:x="6736" fg:w="4"/><text x="80.6147%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.3314%" y="501" width="0.0119%" height="15" fill="rgb(251,144,31)" fg:x="6739" fg:w="1"/><text x="80.6505%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.3552%" y="501" width="0.0119%" height="15" fill="rgb(227,155,41)" fg:x="6741" fg:w="1"/><text x="80.6743%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.3552%" y="485" width="0.0119%" height="15" fill="rgb(236,121,36)" fg:x="6741" fg:w="1"/><text x="80.6743%" y="495.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="80.3552%" y="469" width="0.0119%" height="15" fill="rgb(221,128,28)" fg:x="6741" fg:w="1"/><text x="80.6743%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="80.3433%" y="629" width="0.0358%" height="15" fill="rgb(249,67,50)" fg:x="6740" fg:w="3"/><text x="80.6624%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="80.3552%" y="613" width="0.0238%" height="15" fill="rgb(241,126,38)" fg:x="6741" fg:w="2"/><text x="80.6743%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.3552%" y="597" width="0.0238%" height="15" fill="rgb(239,33,14)" fg:x="6741" fg:w="2"/><text x="80.6743%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="80.3552%" y="581" width="0.0238%" height="15" fill="rgb(207,221,54)" fg:x="6741" fg:w="2"/><text x="80.6743%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.3552%" y="565" width="0.0238%" height="15" fill="rgb(242,138,43)" fg:x="6741" fg:w="2"/><text x="80.6743%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.3552%" y="549" width="0.0238%" height="15" fill="rgb(231,118,19)" fg:x="6741" fg:w="2"/><text x="80.6743%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="80.3552%" y="533" width="0.0238%" height="15" fill="rgb(214,128,54)" fg:x="6741" fg:w="2"/><text x="80.6743%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.3552%" y="517" width="0.0238%" height="15" fill="rgb(236,136,6)" fg:x="6741" fg:w="2"/><text x="80.6743%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.3671%" y="501" width="0.0119%" height="15" fill="rgb(247,30,38)" fg:x="6742" fg:w="1"/><text x="80.6862%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.3671%" y="485" width="0.0119%" height="15" fill="rgb(249,189,40)" fg:x="6742" fg:w="1"/><text x="80.6862%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.3671%" y="469" width="0.0119%" height="15" fill="rgb(247,179,7)" fg:x="6742" fg:w="1"/><text x="80.6862%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.3671%" y="453" width="0.0119%" height="15" fill="rgb(239,46,52)" fg:x="6742" fg:w="1"/><text x="80.6862%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.3791%" y="597" width="0.0477%" height="15" fill="rgb(225,28,52)" fg:x="6743" fg:w="4"/><text x="80.6982%" y="607.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="80.3791%" y="581" width="0.0477%" height="15" fill="rgb(217,208,44)" fg:x="6743" fg:w="4"/><text x="80.6982%" y="591.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="80.3791%" y="565" width="0.0477%" height="15" fill="rgb(224,11,34)" fg:x="6743" fg:w="4"/><text x="80.6982%" y="575.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="80.3791%" y="549" width="0.0477%" height="15" fill="rgb(205,134,17)" fg:x="6743" fg:w="4"/><text x="80.6982%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.4267%" y="517" width="0.0119%" height="15" fill="rgb(237,125,9)" fg:x="6747" fg:w="1"/><text x="80.7458%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.4267%" y="501" width="0.0119%" height="15" fill="rgb(208,139,47)" fg:x="6747" fg:w="1"/><text x="80.7458%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.4387%" y="501" width="0.0477%" height="15" fill="rgb(242,5,5)" fg:x="6748" fg:w="4"/><text x="80.7578%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="80.4387%" y="485" width="0.0477%" height="15" fill="rgb(218,78,2)" fg:x="6748" fg:w="4"/><text x="80.7578%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.4387%" y="469" width="0.0477%" height="15" fill="rgb(217,75,16)" fg:x="6748" fg:w="4"/><text x="80.7578%" y="479.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="80.4506%" y="453" width="0.0358%" height="15" fill="rgb(212,56,17)" fg:x="6749" fg:w="3"/><text x="80.7697%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="80.4506%" y="437" width="0.0358%" height="15" fill="rgb(228,61,29)" fg:x="6749" fg:w="3"/><text x="80.7697%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="80.4506%" y="421" width="0.0358%" height="15" fill="rgb(247,202,38)" fg:x="6749" fg:w="3"/><text x="80.7697%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="80.4506%" y="405" width="0.0358%" height="15" fill="rgb(211,216,43)" fg:x="6749" fg:w="3"/><text x="80.7697%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="80.4506%" y="389" width="0.0358%" height="15" fill="rgb(220,7,49)" fg:x="6749" fg:w="3"/><text x="80.7697%" y="399.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="80.4506%" y="373" width="0.0358%" height="15" fill="rgb(219,158,7)" fg:x="6749" fg:w="3"/><text x="80.7697%" y="383.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="80.4506%" y="357" width="0.0358%" height="15" fill="rgb(206,127,9)" fg:x="6749" fg:w="3"/><text x="80.7697%" y="367.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="80.4625%" y="341" width="0.0238%" height="15" fill="rgb(206,103,43)" fg:x="6750" fg:w="2"/><text x="80.7816%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="80.4267%" y="581" width="0.0715%" height="15" fill="rgb(240,108,41)" fg:x="6747" fg:w="6"/><text x="80.7458%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="80.4267%" y="565" width="0.0715%" height="15" fill="rgb(252,212,6)" fg:x="6747" fg:w="6"/><text x="80.7458%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="80.4267%" y="549" width="0.0715%" height="15" fill="rgb(248,105,31)" fg:x="6747" fg:w="6"/><text x="80.7458%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="80.4267%" y="533" width="0.0715%" height="15" fill="rgb(241,123,4)" fg:x="6747" fg:w="6"/><text x="80.7458%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="80.4387%" y="517" width="0.0596%" height="15" fill="rgb(223,74,37)" fg:x="6748" fg:w="5"/><text x="80.7578%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.4864%" y="501" width="0.0119%" height="15" fill="rgb(251,219,28)" fg:x="6752" fg:w="1"/><text x="80.8055%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.4864%" y="485" width="0.0119%" height="15" fill="rgb(218,36,31)" fg:x="6752" fg:w="1"/><text x="80.8055%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.4864%" y="469" width="0.0119%" height="15" fill="rgb(229,40,15)" fg:x="6752" fg:w="1"/><text x="80.8055%" y="479.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="80.4983%" y="549" width="0.0238%" height="15" fill="rgb(208,138,37)" fg:x="6753" fg:w="2"/><text x="80.8174%" y="559.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="80.4983%" y="533" width="0.0238%" height="15" fill="rgb(208,40,52)" fg:x="6753" fg:w="2"/><text x="80.8174%" y="543.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="80.4983%" y="517" width="0.0238%" height="15" fill="rgb(246,181,48)" fg:x="6753" fg:w="2"/><text x="80.8174%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.5221%" y="437" width="0.0477%" height="15" fill="rgb(253,178,36)" fg:x="6755" fg:w="4"/><text x="80.8412%" y="447.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.5221%" y="421" width="0.0477%" height="15" fill="rgb(210,170,6)" fg:x="6755" fg:w="4"/><text x="80.8412%" y="431.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="80.5221%" y="405" width="0.0477%" height="15" fill="rgb(243,62,22)" fg:x="6755" fg:w="4"/><text x="80.8412%" y="415.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="80.5221%" y="389" width="0.0477%" height="15" fill="rgb(213,145,26)" fg:x="6755" fg:w="4"/><text x="80.8412%" y="399.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="80.5221%" y="373" width="0.0477%" height="15" fill="rgb(237,177,23)" fg:x="6755" fg:w="4"/><text x="80.8412%" y="383.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="80.5221%" y="517" width="0.0596%" height="15" fill="rgb(252,5,24)" fg:x="6755" fg:w="5"/><text x="80.8412%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="80.5221%" y="501" width="0.0596%" height="15" fill="rgb(230,108,54)" fg:x="6755" fg:w="5"/><text x="80.8412%" y="511.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="80.5221%" y="485" width="0.0596%" height="15" fill="rgb(252,192,41)" fg:x="6755" fg:w="5"/><text x="80.8412%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="80.5221%" y="469" width="0.0596%" height="15" fill="rgb(218,125,20)" fg:x="6755" fg:w="5"/><text x="80.8412%" y="479.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="80.5221%" y="453" width="0.0596%" height="15" fill="rgb(230,223,15)" fg:x="6755" fg:w="5"/><text x="80.8412%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.5698%" y="437" width="0.0119%" height="15" fill="rgb(239,99,47)" fg:x="6759" fg:w="1"/><text x="80.8889%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.5698%" y="421" width="0.0119%" height="15" fill="rgb(222,214,23)" fg:x="6759" fg:w="1"/><text x="80.8889%" y="431.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.5698%" y="405" width="0.0119%" height="15" fill="rgb(250,98,43)" fg:x="6759" fg:w="1"/><text x="80.8889%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="80.3433%" y="661" width="0.2503%" height="15" fill="rgb(226,140,11)" fg:x="6740" fg:w="21"/><text x="80.6624%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (21 samples, 0.25%)</title><rect x="80.3433%" y="645" width="0.2503%" height="15" fill="rgb(239,2,22)" fg:x="6740" fg:w="21"/><text x="80.6624%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="80.3791%" y="629" width="0.2146%" height="15" fill="rgb(209,106,26)" fg:x="6743" fg:w="18"/><text x="80.6982%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (18 samples, 0.21%)</title><rect x="80.3791%" y="613" width="0.2146%" height="15" fill="rgb(209,135,11)" fg:x="6743" fg:w="18"/><text x="80.6982%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="80.4267%" y="597" width="0.1669%" height="15" fill="rgb(241,58,6)" fg:x="6747" fg:w="14"/><text x="80.7458%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="80.4983%" y="581" width="0.0954%" height="15" fill="rgb(214,78,1)" fg:x="6753" fg:w="8"/><text x="80.8174%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="80.4983%" y="565" width="0.0954%" height="15" fill="rgb(229,135,33)" fg:x="6753" fg:w="8"/><text x="80.8174%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="80.5221%" y="549" width="0.0715%" height="15" fill="rgb(245,87,50)" fg:x="6755" fg:w="6"/><text x="80.8412%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="80.5221%" y="533" width="0.0715%" height="15" fill="rgb(222,222,8)" fg:x="6755" fg:w="6"/><text x="80.8412%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="80.5817%" y="517" width="0.0119%" height="15" fill="rgb(214,97,50)" fg:x="6760" fg:w="1"/><text x="80.9008%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.5936%" y="661" width="0.0119%" height="15" fill="rgb(244,161,51)" fg:x="6761" fg:w="1"/><text x="80.9127%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.5936%" y="645" width="0.0119%" height="15" fill="rgb(225,17,4)" fg:x="6761" fg:w="1"/><text x="80.9127%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.5936%" y="629" width="0.0119%" height="15" fill="rgb(238,10,13)" fg:x="6761" fg:w="1"/><text x="80.9127%" y="639.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="80.5936%" y="613" width="0.0119%" height="15" fill="rgb(239,169,14)" fg:x="6761" fg:w="1"/><text x="80.9127%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.6056%" y="629" width="0.0119%" height="15" fill="rgb(213,105,25)" fg:x="6762" fg:w="1"/><text x="80.9247%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.6056%" y="613" width="0.0119%" height="15" fill="rgb(233,4,17)" fg:x="6762" fg:w="1"/><text x="80.9247%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.6056%" y="597" width="0.0119%" height="15" fill="rgb(212,5,35)" fg:x="6762" fg:w="1"/><text x="80.9247%" y="607.50"/></g><g><title>parser::either (24 samples, 0.29%)</title><rect x="80.3433%" y="677" width="0.2861%" height="15" fill="rgb(216,3,14)" fg:x="6740" fg:w="24"/><text x="80.6624%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.6056%" y="661" width="0.0238%" height="15" fill="rgb(240,105,33)" fg:x="6762" fg:w="2"/><text x="80.9247%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="80.6056%" y="645" width="0.0238%" height="15" fill="rgb(216,73,0)" fg:x="6762" fg:w="2"/><text x="80.9247%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.6175%" y="629" width="0.0119%" height="15" fill="rgb(217,153,48)" fg:x="6763" fg:w="1"/><text x="80.9366%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.6175%" y="613" width="0.0119%" height="15" fill="rgb(218,180,8)" fg:x="6763" fg:w="1"/><text x="80.9366%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.6175%" y="597" width="0.0119%" height="15" fill="rgb(252,168,2)" fg:x="6763" fg:w="1"/><text x="80.9366%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.6294%" y="645" width="0.0119%" height="15" fill="rgb(224,116,33)" fg:x="6764" fg:w="1"/><text x="80.9485%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="80.6294%" y="629" width="0.0119%" height="15" fill="rgb(229,205,17)" fg:x="6764" fg:w="1"/><text x="80.9485%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="80.6294%" y="613" width="0.0119%" height="15" fill="rgb(234,1,41)" fg:x="6764" fg:w="1"/><text x="80.9485%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="80.6413%" y="613" width="0.0119%" height="15" fill="rgb(244,185,8)" fg:x="6765" fg:w="1"/><text x="80.9604%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="80.6413%" y="597" width="0.0119%" height="15" fill="rgb(248,51,21)" fg:x="6765" fg:w="1"/><text x="80.9604%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.6413%" y="629" width="0.0238%" height="15" fill="rgb(248,157,31)" fg:x="6765" fg:w="2"/><text x="80.9604%" y="639.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.6532%" y="613" width="0.0119%" height="15" fill="rgb(210,34,47)" fg:x="6766" fg:w="1"/><text x="80.9723%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.6532%" y="597" width="0.0119%" height="15" fill="rgb(227,139,53)" fg:x="6766" fg:w="1"/><text x="80.9723%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.6532%" y="581" width="0.0119%" height="15" fill="rgb(232,211,37)" fg:x="6766" fg:w="1"/><text x="80.9723%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="80.6532%" y="565" width="0.0119%" height="15" fill="rgb(236,133,10)" fg:x="6766" fg:w="1"/><text x="80.9723%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.6294%" y="661" width="0.0477%" height="15" fill="rgb(243,202,25)" fg:x="6764" fg:w="4"/><text x="80.9485%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="80.6413%" y="645" width="0.0358%" height="15" fill="rgb(224,59,9)" fg:x="6765" fg:w="3"/><text x="80.9604%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.6652%" y="629" width="0.0119%" height="15" fill="rgb(206,146,16)" fg:x="6767" fg:w="1"/><text x="80.9843%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="80.6652%" y="613" width="0.0119%" height="15" fill="rgb(220,47,2)" fg:x="6767" fg:w="1"/><text x="80.9843%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="80.6652%" y="597" width="0.0119%" height="15" fill="rgb(225,124,51)" fg:x="6767" fg:w="1"/><text x="80.9843%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.6771%" y="645" width="0.0119%" height="15" fill="rgb(241,220,50)" fg:x="6768" fg:w="1"/><text x="80.9962%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="80.6771%" y="629" width="0.0119%" height="15" fill="rgb(232,168,5)" fg:x="6768" fg:w="1"/><text x="80.9962%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="80.6771%" y="613" width="0.0119%" height="15" fill="rgb(243,90,22)" fg:x="6768" fg:w="1"/><text x="80.9962%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="80.6890%" y="613" width="0.0238%" height="15" fill="rgb(223,153,32)" fg:x="6769" fg:w="2"/><text x="81.0081%" y="623.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="80.6890%" y="597" width="0.0238%" height="15" fill="rgb(243,124,20)" fg:x="6769" fg:w="2"/><text x="81.0081%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="80.7128%" y="533" width="0.0119%" height="15" fill="rgb(246,168,39)" fg:x="6771" fg:w="1"/><text x="81.0319%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.7128%" y="597" width="0.0238%" height="15" fill="rgb(222,165,54)" fg:x="6771" fg:w="2"/><text x="81.0319%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.7128%" y="581" width="0.0238%" height="15" fill="rgb(251,142,27)" fg:x="6771" fg:w="2"/><text x="81.0319%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.7128%" y="565" width="0.0238%" height="15" fill="rgb(207,168,50)" fg:x="6771" fg:w="2"/><text x="81.0319%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.7128%" y="549" width="0.0238%" height="15" fill="rgb(250,139,25)" fg:x="6771" fg:w="2"/><text x="81.0319%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.7248%" y="533" width="0.0119%" height="15" fill="rgb(214,194,48)" fg:x="6772" fg:w="1"/><text x="81.0439%" y="543.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="80.7248%" y="517" width="0.0119%" height="15" fill="rgb(227,138,47)" fg:x="6772" fg:w="1"/><text x="81.0439%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="80.6890%" y="629" width="0.0715%" height="15" fill="rgb(250,162,5)" fg:x="6769" fg:w="6"/><text x="81.0081%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.7128%" y="613" width="0.0477%" height="15" fill="rgb(229,74,25)" fg:x="6771" fg:w="4"/><text x="81.0319%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.7367%" y="597" width="0.0238%" height="15" fill="rgb(221,124,34)" fg:x="6773" fg:w="2"/><text x="81.0558%" y="607.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="80.7367%" y="581" width="0.0238%" height="15" fill="rgb(225,94,25)" fg:x="6773" fg:w="2"/><text x="81.0558%" y="591.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="80.7367%" y="565" width="0.0238%" height="15" fill="rgb(210,100,12)" fg:x="6773" fg:w="2"/><text x="81.0558%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="80.7605%" y="597" width="0.0119%" height="15" fill="rgb(206,62,48)" fg:x="6775" fg:w="1"/><text x="81.0796%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="80.7605%" y="581" width="0.0119%" height="15" fill="rgb(222,181,9)" fg:x="6775" fg:w="1"/><text x="81.0796%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.7724%" y="565" width="0.0119%" height="15" fill="rgb(248,42,38)" fg:x="6776" fg:w="1"/><text x="81.0915%" y="575.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.7724%" y="549" width="0.0119%" height="15" fill="rgb(213,40,6)" fg:x="6776" fg:w="1"/><text x="81.0915%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="80.6771%" y="661" width="0.1192%" height="15" fill="rgb(211,108,15)" fg:x="6768" fg:w="10"/><text x="80.9962%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="80.6890%" y="645" width="0.1073%" height="15" fill="rgb(249,62,9)" fg:x="6769" fg:w="9"/><text x="81.0081%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="80.7605%" y="629" width="0.0358%" height="15" fill="rgb(233,26,54)" fg:x="6775" fg:w="3"/><text x="81.0796%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="80.7605%" y="613" width="0.0358%" height="15" fill="rgb(210,175,26)" fg:x="6775" fg:w="3"/><text x="81.0796%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.7724%" y="597" width="0.0238%" height="15" fill="rgb(210,43,33)" fg:x="6776" fg:w="2"/><text x="81.0915%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.7724%" y="581" width="0.0238%" height="15" fill="rgb(224,46,17)" fg:x="6776" fg:w="2"/><text x="81.0915%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.7844%" y="565" width="0.0119%" height="15" fill="rgb(254,24,38)" fg:x="6777" fg:w="1"/><text x="81.1035%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.7844%" y="549" width="0.0119%" height="15" fill="rgb(248,32,0)" fg:x="6777" fg:w="1"/><text x="81.1035%" y="559.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.7844%" y="533" width="0.0119%" height="15" fill="rgb(224,37,41)" fg:x="6777" fg:w="1"/><text x="81.1035%" y="543.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="80.7844%" y="517" width="0.0119%" height="15" fill="rgb(252,70,22)" fg:x="6777" fg:w="1"/><text x="81.1035%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.7963%" y="645" width="0.0119%" height="15" fill="rgb(241,123,50)" fg:x="6778" fg:w="1"/><text x="81.1154%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.7963%" y="629" width="0.0119%" height="15" fill="rgb(246,138,33)" fg:x="6778" fg:w="1"/><text x="81.1154%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.7963%" y="613" width="0.0119%" height="15" fill="rgb(218,39,32)" fg:x="6778" fg:w="1"/><text x="81.1154%" y="623.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.7963%" y="597" width="0.0119%" height="15" fill="rgb(241,229,10)" fg:x="6778" fg:w="1"/><text x="81.1154%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.7963%" y="581" width="0.0119%" height="15" fill="rgb(212,160,10)" fg:x="6778" fg:w="1"/><text x="81.1154%" y="591.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="80.7963%" y="565" width="0.0119%" height="15" fill="rgb(227,48,51)" fg:x="6778" fg:w="1"/><text x="81.1154%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.8082%" y="597" width="0.0119%" height="15" fill="rgb(238,159,21)" fg:x="6779" fg:w="1"/><text x="81.1273%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.8082%" y="581" width="0.0119%" height="15" fill="rgb(216,1,10)" fg:x="6779" fg:w="1"/><text x="81.1273%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.8082%" y="565" width="0.0119%" height="15" fill="rgb(209,228,25)" fg:x="6779" fg:w="1"/><text x="81.1273%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.8082%" y="549" width="0.0119%" height="15" fill="rgb(234,160,10)" fg:x="6779" fg:w="1"/><text x="81.1273%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.8082%" y="533" width="0.0119%" height="15" fill="rgb(212,66,25)" fg:x="6779" fg:w="1"/><text x="81.1273%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.8082%" y="517" width="0.0119%" height="15" fill="rgb(254,121,18)" fg:x="6779" fg:w="1"/><text x="81.1273%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.8082%" y="501" width="0.0119%" height="15" fill="rgb(219,127,1)" fg:x="6779" fg:w="1"/><text x="81.1273%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.8082%" y="485" width="0.0119%" height="15" fill="rgb(219,224,42)" fg:x="6779" fg:w="1"/><text x="81.1273%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.8082%" y="469" width="0.0119%" height="15" fill="rgb(253,130,22)" fg:x="6779" fg:w="1"/><text x="81.1273%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.8082%" y="453" width="0.0119%" height="15" fill="rgb(253,39,28)" fg:x="6779" fg:w="1"/><text x="81.1273%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.8082%" y="437" width="0.0119%" height="15" fill="rgb(231,126,37)" fg:x="6779" fg:w="1"/><text x="81.1273%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.8082%" y="421" width="0.0119%" height="15" fill="rgb(251,145,14)" fg:x="6779" fg:w="1"/><text x="81.1273%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.8082%" y="405" width="0.0119%" height="15" fill="rgb(229,164,30)" fg:x="6779" fg:w="1"/><text x="81.1273%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.8082%" y="389" width="0.0119%" height="15" fill="rgb(233,227,54)" fg:x="6779" fg:w="1"/><text x="81.1273%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.8082%" y="373" width="0.0119%" height="15" fill="rgb(240,94,22)" fg:x="6779" fg:w="1"/><text x="81.1273%" y="383.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="80.8082%" y="357" width="0.0119%" height="15" fill="rgb(217,56,16)" fg:x="6779" fg:w="1"/><text x="81.1273%" y="367.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="80.8201%" y="501" width="0.0358%" height="15" fill="rgb(229,133,38)" fg:x="6780" fg:w="3"/><text x="81.1392%" y="511.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="80.8201%" y="485" width="0.0358%" height="15" fill="rgb(225,139,35)" fg:x="6780" fg:w="3"/><text x="81.1392%" y="495.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="80.8201%" y="469" width="0.0358%" height="15" fill="rgb(223,100,16)" fg:x="6780" fg:w="3"/><text x="81.1392%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.8559%" y="437" width="0.0119%" height="15" fill="rgb(207,43,50)" fg:x="6783" fg:w="1"/><text x="81.1750%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.8559%" y="421" width="0.0119%" height="15" fill="rgb(237,221,9)" fg:x="6783" fg:w="1"/><text x="81.1750%" y="431.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="80.8559%" y="405" width="0.0119%" height="15" fill="rgb(236,134,24)" fg:x="6783" fg:w="1"/><text x="81.1750%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="80.6294%" y="677" width="0.2503%" height="15" fill="rgb(222,173,4)" fg:x="6764" fg:w="21"/><text x="80.9485%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="80.7963%" y="661" width="0.0834%" height="15" fill="rgb(234,144,52)" fg:x="6778" fg:w="7"/><text x="81.1154%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="80.8082%" y="645" width="0.0715%" height="15" fill="rgb(223,41,7)" fg:x="6779" fg:w="6"/><text x="81.1273%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="80.8082%" y="629" width="0.0715%" height="15" fill="rgb(226,143,9)" fg:x="6779" fg:w="6"/><text x="81.1273%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="80.8082%" y="613" width="0.0715%" height="15" fill="rgb(234,43,37)" fg:x="6779" fg:w="6"/><text x="81.1273%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="80.8201%" y="597" width="0.0596%" height="15" fill="rgb(224,188,11)" fg:x="6780" fg:w="5"/><text x="81.1392%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="80.8201%" y="581" width="0.0596%" height="15" fill="rgb(233,113,28)" fg:x="6780" fg:w="5"/><text x="81.1392%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="80.8201%" y="565" width="0.0596%" height="15" fill="rgb(215,16,1)" fg:x="6780" fg:w="5"/><text x="81.1392%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="80.8201%" y="549" width="0.0596%" height="15" fill="rgb(238,74,38)" fg:x="6780" fg:w="5"/><text x="81.1392%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="80.8201%" y="533" width="0.0596%" height="15" fill="rgb(221,66,35)" fg:x="6780" fg:w="5"/><text x="81.1392%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="80.8201%" y="517" width="0.0596%" height="15" fill="rgb(251,225,2)" fg:x="6780" fg:w="5"/><text x="81.1392%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="80.8559%" y="501" width="0.0238%" height="15" fill="rgb(240,169,18)" fg:x="6783" fg:w="2"/><text x="81.1750%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.8559%" y="485" width="0.0238%" height="15" fill="rgb(243,130,50)" fg:x="6783" fg:w="2"/><text x="81.1750%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="80.8559%" y="469" width="0.0238%" height="15" fill="rgb(228,75,13)" fg:x="6783" fg:w="2"/><text x="81.1750%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.8559%" y="453" width="0.0238%" height="15" fill="rgb(252,95,35)" fg:x="6783" fg:w="2"/><text x="81.1750%" y="463.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.8678%" y="437" width="0.0119%" height="15" fill="rgb(222,180,54)" fg:x="6784" fg:w="1"/><text x="81.1869%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.8678%" y="421" width="0.0119%" height="15" fill="rgb(250,110,34)" fg:x="6784" fg:w="1"/><text x="81.1869%" y="431.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.8797%" y="661" width="0.0119%" height="15" fill="rgb(208,100,21)" fg:x="6785" fg:w="1"/><text x="81.1988%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.8797%" y="645" width="0.0119%" height="15" fill="rgb(209,123,47)" fg:x="6785" fg:w="1"/><text x="81.1988%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.8797%" y="629" width="0.0119%" height="15" fill="rgb(237,147,9)" fg:x="6785" fg:w="1"/><text x="81.1988%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="80.8797%" y="613" width="0.0119%" height="15" fill="rgb(228,206,23)" fg:x="6785" fg:w="1"/><text x="81.1988%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="80.8797%" y="597" width="0.0119%" height="15" fill="rgb(217,174,46)" fg:x="6785" fg:w="1"/><text x="81.1988%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="80.8916%" y="613" width="0.0119%" height="15" fill="rgb(231,126,21)" fg:x="6786" fg:w="1"/><text x="81.2107%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="80.8916%" y="597" width="0.0119%" height="15" fill="rgb(245,26,1)" fg:x="6786" fg:w="1"/><text x="81.2107%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.8916%" y="661" width="0.0238%" height="15" fill="rgb(224,138,39)" fg:x="6786" fg:w="2"/><text x="81.2107%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.8916%" y="645" width="0.0238%" height="15" fill="rgb(208,97,3)" fg:x="6786" fg:w="2"/><text x="81.2107%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.8916%" y="629" width="0.0238%" height="15" fill="rgb(222,77,29)" fg:x="6786" fg:w="2"/><text x="81.2107%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.9036%" y="613" width="0.0119%" height="15" fill="rgb(243,188,36)" fg:x="6787" fg:w="1"/><text x="81.2227%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.9036%" y="597" width="0.0119%" height="15" fill="rgb(218,214,3)" fg:x="6787" fg:w="1"/><text x="81.2227%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.9036%" y="581" width="0.0119%" height="15" fill="rgb(211,183,45)" fg:x="6787" fg:w="1"/><text x="81.2227%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="80.9036%" y="565" width="0.0119%" height="15" fill="rgb(230,218,25)" fg:x="6787" fg:w="1"/><text x="81.2227%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="80.9036%" y="549" width="0.0119%" height="15" fill="rgb(233,86,6)" fg:x="6787" fg:w="1"/><text x="81.2227%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.9155%" y="597" width="0.0119%" height="15" fill="rgb(220,59,24)" fg:x="6788" fg:w="1"/><text x="81.2346%" y="607.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.9155%" y="581" width="0.0119%" height="15" fill="rgb(227,60,1)" fg:x="6788" fg:w="1"/><text x="81.2346%" y="591.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="80.9155%" y="565" width="0.0119%" height="15" fill="rgb(216,212,54)" fg:x="6788" fg:w="1"/><text x="81.2346%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.9155%" y="645" width="0.0238%" height="15" fill="rgb(227,81,54)" fg:x="6788" fg:w="2"/><text x="81.2346%" y="655.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="80.9155%" y="629" width="0.0238%" height="15" fill="rgb(206,204,43)" fg:x="6788" fg:w="2"/><text x="81.2346%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="80.9155%" y="613" width="0.0238%" height="15" fill="rgb(219,29,26)" fg:x="6788" fg:w="2"/><text x="81.2346%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="80.9274%" y="597" width="0.0119%" height="15" fill="rgb(252,40,36)" fg:x="6789" fg:w="1"/><text x="81.2465%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="80.9274%" y="581" width="0.0119%" height="15" fill="rgb(224,205,39)" fg:x="6789" fg:w="1"/><text x="81.2465%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="80.9274%" y="565" width="0.0119%" height="15" fill="rgb(222,13,21)" fg:x="6789" fg:w="1"/><text x="81.2465%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="80.9274%" y="549" width="0.0119%" height="15" fill="rgb(243,139,6)" fg:x="6789" fg:w="1"/><text x="81.2465%" y="559.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="80.9274%" y="533" width="0.0119%" height="15" fill="rgb(237,101,11)" fg:x="6789" fg:w="1"/><text x="81.2465%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="80.8797%" y="677" width="0.1073%" height="15" fill="rgb(254,49,28)" fg:x="6785" fg:w="9"/><text x="81.1988%" y="687.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="80.9155%" y="661" width="0.0715%" height="15" fill="rgb(223,41,21)" fg:x="6788" fg:w="6"/><text x="81.2346%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.9393%" y="645" width="0.0477%" height="15" fill="rgb(225,103,29)" fg:x="6790" fg:w="4"/><text x="81.2584%" y="655.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="80.9393%" y="629" width="0.0477%" height="15" fill="rgb(244,82,43)" fg:x="6790" fg:w="4"/><text x="81.2584%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.9393%" y="613" width="0.0477%" height="15" fill="rgb(217,39,3)" fg:x="6790" fg:w="4"/><text x="81.2584%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="80.9393%" y="597" width="0.0477%" height="15" fill="rgb(239,128,25)" fg:x="6790" fg:w="4"/><text x="81.2584%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.9393%" y="581" width="0.0477%" height="15" fill="rgb(210,192,37)" fg:x="6790" fg:w="4"/><text x="81.2584%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="80.9393%" y="565" width="0.0477%" height="15" fill="rgb(219,98,18)" fg:x="6790" fg:w="4"/><text x="81.2584%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.9393%" y="549" width="0.0477%" height="15" fill="rgb(224,228,38)" fg:x="6790" fg:w="4"/><text x="81.2584%" y="559.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="80.9393%" y="533" width="0.0477%" height="15" fill="rgb(241,129,43)" fg:x="6790" fg:w="4"/><text x="81.2584%" y="543.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="80.9393%" y="517" width="0.0477%" height="15" fill="rgb(223,8,51)" fg:x="6790" fg:w="4"/><text x="81.2584%" y="527.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="80.9393%" y="501" width="0.0477%" height="15" fill="rgb(233,76,24)" fg:x="6790" fg:w="4"/><text x="81.2584%" y="511.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="80.9512%" y="485" width="0.0358%" height="15" fill="rgb(219,115,10)" fg:x="6791" fg:w="3"/><text x="81.2703%" y="495.50"/></g><g><title>logic::newline_where (112 samples, 1.34%)</title><rect x="79.6996%" y="725" width="1.3351%" height="15" fill="rgb(222,137,12)" fg:x="6686" fg:w="112"/><text x="80.0187%" y="735.50"/></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (58 samples, 0.69%)</title><rect x="80.3433%" y="709" width="0.6914%" height="15" fill="rgb(216,192,16)" fg:x="6740" fg:w="58"/><text x="80.6624%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (58 samples, 0.69%)</title><rect x="80.3433%" y="693" width="0.6914%" height="15" fill="rgb(247,6,27)" fg:x="6740" fg:w="58"/><text x="80.6624%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function&lt;std::function&lt;Result (State)&gt;, void, void&gt; (4 samples, 0.05%)</title><rect x="80.9870%" y="677" width="0.0477%" height="15" fill="rgb(254,39,44)" fg:x="6794" fg:w="4"/><text x="81.3061%" y="687.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="80.9870%" y="661" width="0.0477%" height="15" fill="rgb(251,116,35)" fg:x="6794" fg:w="4"/><text x="81.3061%" y="671.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="80.9870%" y="645" width="0.0477%" height="15" fill="rgb(208,61,44)" fg:x="6794" fg:w="4"/><text x="81.3061%" y="655.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="80.9870%" y="629" width="0.0477%" height="15" fill="rgb(250,34,5)" fg:x="6794" fg:w="4"/><text x="81.3061%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.0347%" y="629" width="0.0119%" height="15" fill="rgb(241,40,15)" fg:x="6798" fg:w="1"/><text x="81.3538%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.0347%" y="613" width="0.0119%" height="15" fill="rgb(229,182,2)" fg:x="6798" fg:w="1"/><text x="81.3538%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.0347%" y="597" width="0.0119%" height="15" fill="rgb(244,148,52)" fg:x="6798" fg:w="1"/><text x="81.3538%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.0347%" y="581" width="0.0119%" height="15" fill="rgb(225,211,4)" fg:x="6798" fg:w="1"/><text x="81.3538%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.0347%" y="565" width="0.0119%" height="15" fill="rgb(208,222,47)" fg:x="6798" fg:w="1"/><text x="81.3538%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.0347%" y="549" width="0.0119%" height="15" fill="rgb(233,162,0)" fg:x="6798" fg:w="1"/><text x="81.3538%" y="559.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.0347%" y="533" width="0.0119%" height="15" fill="rgb(241,54,13)" fg:x="6798" fg:w="1"/><text x="81.3538%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.0347%" y="517" width="0.0119%" height="15" fill="rgb(213,89,18)" fg:x="6798" fg:w="1"/><text x="81.3538%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.0347%" y="501" width="0.0119%" height="15" fill="rgb(215,170,37)" fg:x="6798" fg:w="1"/><text x="81.3538%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.0347%" y="485" width="0.0119%" height="15" fill="rgb(216,133,15)" fg:x="6798" fg:w="1"/><text x="81.3538%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.0347%" y="469" width="0.0119%" height="15" fill="rgb(230,42,19)" fg:x="6798" fg:w="1"/><text x="81.3538%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.0347%" y="453" width="0.0119%" height="15" fill="rgb(221,103,41)" fg:x="6798" fg:w="1"/><text x="81.3538%" y="463.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.0347%" y="437" width="0.0119%" height="15" fill="rgb(220,142,31)" fg:x="6798" fg:w="1"/><text x="81.3538%" y="447.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="81.0347%" y="421" width="0.0119%" height="15" fill="rgb(239,218,4)" fg:x="6798" fg:w="1"/><text x="81.3538%" y="431.50"/></g><g><title>&lt;helix_term::ui::editor::EditorView as helix_term::compositor::Component&gt;::handle_event (1,090 samples, 12.99%)</title><rect x="68.0892%" y="997" width="12.9932%" height="15" fill="rgb(232,16,4)" fg:x="5712" fg:w="1090"/><text x="68.4083%" y="1007.50">..t&gt;::handle_event </text></g><g><title>helix_term::ui::editor::EditorView::insert_mode (1,059 samples, 12.62%)</title><rect x="68.4587%" y="981" width="12.6237%" height="15" fill="rgb(226,213,25)" fg:x="5743" fg:w="1059"/><text x="68.7778%" y="991.50">..ew::insert_mode </text></g><g><title>helix_term::commands::insert::insert_char (1,059 samples, 12.62%)</title><rect x="68.4587%" y="965" width="12.6237%" height="15" fill="rgb(235,135,19)" fg:x="5743" fg:w="1059"/><text x="68.7778%" y="975.50">..sert::insert_char </text></g><g><title>helix_view::document::Document::apply (1,059 samples, 12.62%)</title><rect x="68.4587%" y="949" width="12.6237%" height="15" fill="rgb(240,107,29)" fg:x="5743" fg:w="1059"/><text x="68.7778%" y="959.50">..Document::apply </text></g><g><title>helix_view::document::Document::apply_impl (1,059 samples, 12.62%)</title><rect x="68.4587%" y="933" width="12.6237%" height="15" fill="rgb(206,164,44)" fg:x="5743" fg:w="1059"/><text x="68.7778%" y="943.50">..ent::apply_impl </text></g><g><title>helix_core::syntax::LanguageLayer::update (1,059 samples, 12.62%)</title><rect x="68.4587%" y="917" width="12.6237%" height="15" fill="rgb(210,23,48)" fg:x="5743" fg:w="1059"/><text x="68.7778%" y="927.50">..geLayer::update </text></g><g><title>helix_core::syntax::LanguageLayer::parse (1,059 samples, 12.62%)</title><rect x="68.4587%" y="901" width="12.6237%" height="15" fill="rgb(212,138,25)" fg:x="5743" fg:w="1059"/><text x="68.7778%" y="911.50">..ageLayer::parse </text></g><g><title>ts_parser_parse (1,059 samples, 12.62%)</title><rect x="68.4587%" y="885" width="12.6237%" height="15" fill="rgb(224,152,3)" fg:x="5743" fg:w="1059"/><text x="68.7778%" y="895.50">ts_parser_parse </text></g><g><title>tree_sitter_haskell_external_scanner_scan (1,059 samples, 12.62%)</title><rect x="68.4587%" y="869" width="12.6237%" height="15" fill="rgb(214,38,23)" fg:x="5743" fg:w="1059"/><text x="68.7778%" y="879.50">..al_scanner_scan </text></g><g><title>eval::eval (1,059 samples, 12.62%)</title><rect x="68.4587%" y="853" width="12.6237%" height="15" fill="rgb(215,161,10)" fg:x="5743" fg:w="1059"/><text x="68.7778%" y="863.50">eval::eval </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1,059 samples, 12.62%)</title><rect x="68.4587%" y="837" width="12.6237%" height="15" fill="rgb(240,185,7)" fg:x="5743" fg:w="1059"/><text x="68.7778%" y="847.50">..1}&gt;::_M_invoke </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1,059 samples, 12.62%)</title><rect x="68.4587%" y="821" width="12.6237%" height="15" fill="rgb(244,104,25)" fg:x="5743" fg:w="1059"/><text x="68.7778%" y="831.50">..1}&gt;::_M_invoke </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1,059 samples, 12.62%)</title><rect x="68.4587%" y="805" width="12.6237%" height="15" fill="rgb(242,140,44)" fg:x="5743" fg:w="1059"/><text x="68.7778%" y="815.50">..1}&gt;::_M_invoke </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (1,059 samples, 12.62%)</title><rect x="68.4587%" y="789" width="12.6237%" height="15" fill="rgb(245,30,19)" fg:x="5743" fg:w="1059"/><text x="68.7778%" y="799.50">..1}&gt;::_M_invoke </text></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;Result (State&amp;)&gt; (*)(unsigned int)&gt;::_M_invoke (127 samples, 1.51%)</title><rect x="79.5685%" y="773" width="1.5139%" height="15" fill="rgb(219,208,35)" fg:x="6675" fg:w="127"/><text x="79.8876%" y="783.50"/></g><g><title>logic::newline (127 samples, 1.51%)</title><rect x="79.5685%" y="757" width="1.5139%" height="15" fill="rgb(235,200,7)" fg:x="6675" fg:w="127"/><text x="79.8876%" y="767.50"/></g><g><title>logic::newline_token (116 samples, 1.38%)</title><rect x="79.6996%" y="741" width="1.3828%" height="15" fill="rgb(220,193,10)" fg:x="6686" fg:w="116"/><text x="80.0187%" y="751.50"/></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (4 samples, 0.05%)</title><rect x="81.0347%" y="725" width="0.0477%" height="15" fill="rgb(212,216,39)" fg:x="6798" fg:w="4"/><text x="81.3538%" y="735.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (4 samples, 0.05%)</title><rect x="81.0347%" y="709" width="0.0477%" height="15" fill="rgb(212,134,19)" fg:x="6798" fg:w="4"/><text x="81.3538%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="81.0347%" y="693" width="0.0477%" height="15" fill="rgb(230,57,24)" fg:x="6798" fg:w="4"/><text x="81.3538%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="81.0347%" y="677" width="0.0477%" height="15" fill="rgb(238,209,37)" fg:x="6798" fg:w="4"/><text x="81.3538%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="81.0347%" y="661" width="0.0477%" height="15" fill="rgb(247,11,45)" fg:x="6798" fg:w="4"/><text x="81.3538%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="81.0347%" y="645" width="0.0477%" height="15" fill="rgb(222,126,6)" fg:x="6798" fg:w="4"/><text x="81.3538%" y="655.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="81.0466%" y="629" width="0.0358%" height="15" fill="rgb(245,77,24)" fg:x="6799" fg:w="3"/><text x="81.3657%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.0466%" y="613" width="0.0358%" height="15" fill="rgb(227,14,24)" fg:x="6799" fg:w="3"/><text x="81.3657%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="81.0466%" y="597" width="0.0358%" height="15" fill="rgb(211,112,42)" fg:x="6799" fg:w="3"/><text x="81.3657%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.0466%" y="581" width="0.0358%" height="15" fill="rgb(230,103,42)" fg:x="6799" fg:w="3"/><text x="81.3657%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="81.0466%" y="565" width="0.0358%" height="15" fill="rgb(228,125,42)" fg:x="6799" fg:w="3"/><text x="81.3657%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.0466%" y="549" width="0.0358%" height="15" fill="rgb(243,33,6)" fg:x="6799" fg:w="3"/><text x="81.3657%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="81.0466%" y="533" width="0.0358%" height="15" fill="rgb(231,2,40)" fg:x="6799" fg:w="3"/><text x="81.3657%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.0466%" y="517" width="0.0358%" height="15" fill="rgb(224,200,53)" fg:x="6799" fg:w="3"/><text x="81.3657%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="81.0466%" y="501" width="0.0358%" height="15" fill="rgb(215,116,36)" fg:x="6799" fg:w="3"/><text x="81.3657%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.0466%" y="485" width="0.0358%" height="15" fill="rgb(240,23,51)" fg:x="6799" fg:w="3"/><text x="81.3657%" y="495.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.0466%" y="469" width="0.0358%" height="15" fill="rgb(221,72,5)" fg:x="6799" fg:w="3"/><text x="81.3657%" y="479.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="81.0466%" y="453" width="0.0358%" height="15" fill="rgb(245,142,9)" fg:x="6799" fg:w="3"/><text x="81.3657%" y="463.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="81.0466%" y="437" width="0.0358%" height="15" fill="rgb(207,34,16)" fg:x="6799" fg:w="3"/><text x="81.3657%" y="447.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="81.0466%" y="421" width="0.0358%" height="15" fill="rgb(252,101,12)" fg:x="6799" fg:w="3"/><text x="81.3657%" y="431.50"/></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.01%)</title><rect x="81.0824%" y="901" width="0.0119%" height="15" fill="rgb(239,89,37)" fg:x="6802" fg:w="1"/><text x="81.4015%" y="911.50"/></g><g><title>once_cell::imp::initialize_inner (1 samples, 0.01%)</title><rect x="81.0824%" y="885" width="0.0119%" height="15" fill="rgb(252,227,37)" fg:x="6802" fg:w="1"/><text x="81.4015%" y="895.50"/></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.01%)</title><rect x="81.0824%" y="869" width="0.0119%" height="15" fill="rgb(212,164,17)" fg:x="6802" fg:w="1"/><text x="81.4015%" y="879.50"/></g><g><title>helix_core::syntax::LanguageConfiguration::initialize_highlight (1 samples, 0.01%)</title><rect x="81.0824%" y="853" width="0.0119%" height="15" fill="rgb(240,86,13)" fg:x="6802" fg:w="1"/><text x="81.4015%" y="863.50"/></g><g><title>helix_syntax::get_language (1 samples, 0.01%)</title><rect x="81.0824%" y="837" width="0.0119%" height="15" fill="rgb(233,183,32)" fg:x="6802" fg:w="1"/><text x="81.4015%" y="847.50"/></g><g><title>libloading::os::unix::Library::open (1 samples, 0.01%)</title><rect x="81.0824%" y="821" width="0.0119%" height="15" fill="rgb(205,201,38)" fg:x="6802" fg:w="1"/><text x="81.4015%" y="831.50"/></g><g><title>__dlopen_check (1 samples, 0.01%)</title><rect x="81.0824%" y="805" width="0.0119%" height="15" fill="rgb(210,122,38)" fg:x="6802" fg:w="1"/><text x="81.4015%" y="815.50"/></g><g><title>_dlerror_run (1 samples, 0.01%)</title><rect x="81.0824%" y="789" width="0.0119%" height="15" fill="rgb(241,174,26)" fg:x="6802" fg:w="1"/><text x="81.4015%" y="799.50"/></g><g><title>__GI__dl_catch_error (1 samples, 0.01%)</title><rect x="81.0824%" y="773" width="0.0119%" height="15" fill="rgb(219,89,7)" fg:x="6802" fg:w="1"/><text x="81.4015%" y="783.50"/></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="81.0824%" y="757" width="0.0119%" height="15" fill="rgb(246,9,24)" fg:x="6802" fg:w="1"/><text x="81.4015%" y="767.50"/></g><g><title>dlopen_doit (1 samples, 0.01%)</title><rect x="81.0824%" y="741" width="0.0119%" height="15" fill="rgb(205,132,21)" fg:x="6802" fg:w="1"/><text x="81.4015%" y="751.50"/></g><g><title>_dl_open (1 samples, 0.01%)</title><rect x="81.0824%" y="725" width="0.0119%" height="15" fill="rgb(210,11,17)" fg:x="6802" fg:w="1"/><text x="81.4015%" y="735.50"/></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="81.0824%" y="709" width="0.0119%" height="15" fill="rgb(226,138,14)" fg:x="6802" fg:w="1"/><text x="81.4015%" y="719.50"/></g><g><title>dl_open_worker (1 samples, 0.01%)</title><rect x="81.0824%" y="693" width="0.0119%" height="15" fill="rgb(224,108,44)" fg:x="6802" fg:w="1"/><text x="81.4015%" y="703.50"/></g><g><title>_dl_relocate_object (1 samples, 0.01%)</title><rect x="81.0824%" y="677" width="0.0119%" height="15" fill="rgb(247,114,36)" fg:x="6802" fg:w="1"/><text x="81.4015%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="81.0943%" y="661" width="0.0119%" height="15" fill="rgb(231,183,14)" fg:x="6803" fg:w="1"/><text x="81.4134%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.0943%" y="645" width="0.0119%" height="15" fill="rgb(218,168,4)" fg:x="6803" fg:w="1"/><text x="81.4134%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.0943%" y="629" width="0.0119%" height="15" fill="rgb(210,8,3)" fg:x="6803" fg:w="1"/><text x="81.4134%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.0943%" y="613" width="0.0119%" height="15" fill="rgb(216,165,0)" fg:x="6803" fg:w="1"/><text x="81.4134%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="81.0943%" y="597" width="0.0119%" height="15" fill="rgb(245,120,5)" fg:x="6803" fg:w="1"/><text x="81.4134%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="81.1062%" y="645" width="0.0119%" height="15" fill="rgb(249,121,32)" fg:x="6804" fg:w="1"/><text x="81.4253%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.1062%" y="629" width="0.0119%" height="15" fill="rgb(211,55,33)" fg:x="6804" fg:w="1"/><text x="81.4253%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1062%" y="613" width="0.0119%" height="15" fill="rgb(254,46,35)" fg:x="6804" fg:w="1"/><text x="81.4253%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.1062%" y="597" width="0.0119%" height="15" fill="rgb(213,213,19)" fg:x="6804" fg:w="1"/><text x="81.4253%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1062%" y="581" width="0.0119%" height="15" fill="rgb(207,152,44)" fg:x="6804" fg:w="1"/><text x="81.4253%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.1062%" y="565" width="0.0119%" height="15" fill="rgb(227,195,36)" fg:x="6804" fg:w="1"/><text x="81.4253%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1062%" y="549" width="0.0119%" height="15" fill="rgb(210,137,36)" fg:x="6804" fg:w="1"/><text x="81.4253%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.1062%" y="533" width="0.0119%" height="15" fill="rgb(253,47,47)" fg:x="6804" fg:w="1"/><text x="81.4253%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1062%" y="517" width="0.0119%" height="15" fill="rgb(230,147,18)" fg:x="6804" fg:w="1"/><text x="81.4253%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.1062%" y="501" width="0.0119%" height="15" fill="rgb(247,33,49)" fg:x="6804" fg:w="1"/><text x="81.4253%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1062%" y="485" width="0.0119%" height="15" fill="rgb(239,26,29)" fg:x="6804" fg:w="1"/><text x="81.4253%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.1062%" y="469" width="0.0119%" height="15" fill="rgb(245,145,52)" fg:x="6804" fg:w="1"/><text x="81.4253%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1062%" y="453" width="0.0119%" height="15" fill="rgb(224,139,32)" fg:x="6804" fg:w="1"/><text x="81.4253%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.1062%" y="437" width="0.0119%" height="15" fill="rgb(238,202,19)" fg:x="6804" fg:w="1"/><text x="81.4253%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1062%" y="421" width="0.0119%" height="15" fill="rgb(249,211,53)" fg:x="6804" fg:w="1"/><text x="81.4253%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.1062%" y="405" width="0.0119%" height="15" fill="rgb(237,229,33)" fg:x="6804" fg:w="1"/><text x="81.4253%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.1062%" y="389" width="0.0119%" height="15" fill="rgb(208,97,40)" fg:x="6804" fg:w="1"/><text x="81.4253%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="81.0943%" y="757" width="0.0358%" height="15" fill="rgb(254,36,16)" fg:x="6803" fg:w="3"/><text x="81.4134%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="81.0943%" y="741" width="0.0358%" height="15" fill="rgb(221,7,12)" fg:x="6803" fg:w="3"/><text x="81.4134%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="81.0943%" y="725" width="0.0358%" height="15" fill="rgb(205,11,12)" fg:x="6803" fg:w="3"/><text x="81.4134%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="81.0943%" y="709" width="0.0358%" height="15" fill="rgb(227,72,28)" fg:x="6803" fg:w="3"/><text x="81.4134%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="81.0943%" y="693" width="0.0358%" height="15" fill="rgb(228,7,34)" fg:x="6803" fg:w="3"/><text x="81.4134%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="81.0943%" y="677" width="0.0358%" height="15" fill="rgb(230,52,42)" fg:x="6803" fg:w="3"/><text x="81.4134%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="81.1062%" y="661" width="0.0238%" height="15" fill="rgb(219,177,53)" fg:x="6804" fg:w="2"/><text x="81.4253%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="81.1181%" y="645" width="0.0119%" height="15" fill="rgb(243,196,34)" fg:x="6805" fg:w="1"/><text x="81.4372%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="81.1181%" y="629" width="0.0119%" height="15" fill="rgb(213,66,49)" fg:x="6805" fg:w="1"/><text x="81.4372%" y="639.50"/></g><g><title>parser::as_char_parser (1 samples, 0.01%)</title><rect x="81.1181%" y="613" width="0.0119%" height="15" fill="rgb(233,11,50)" fg:x="6805" fg:w="1"/><text x="81.4372%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1181%" y="597" width="0.0119%" height="15" fill="rgb(235,190,6)" fg:x="6805" fg:w="1"/><text x="81.4372%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.1181%" y="581" width="0.0119%" height="15" fill="rgb(212,64,44)" fg:x="6805" fg:w="1"/><text x="81.4372%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1181%" y="565" width="0.0119%" height="15" fill="rgb(206,95,44)" fg:x="6805" fg:w="1"/><text x="81.4372%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.1181%" y="549" width="0.0119%" height="15" fill="rgb(227,136,25)" fg:x="6805" fg:w="1"/><text x="81.4372%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1181%" y="533" width="0.0119%" height="15" fill="rgb(206,178,17)" fg:x="6805" fg:w="1"/><text x="81.4372%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.1181%" y="517" width="0.0119%" height="15" fill="rgb(208,168,35)" fg:x="6805" fg:w="1"/><text x="81.4372%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1181%" y="501" width="0.0119%" height="15" fill="rgb(213,210,40)" fg:x="6805" fg:w="1"/><text x="81.4372%" y="511.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.1181%" y="485" width="0.0119%" height="15" fill="rgb(236,60,6)" fg:x="6805" fg:w="1"/><text x="81.4372%" y="495.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1181%" y="469" width="0.0119%" height="15" fill="rgb(220,186,36)" fg:x="6805" fg:w="1"/><text x="81.4372%" y="479.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.1181%" y="453" width="0.0119%" height="15" fill="rgb(225,120,49)" fg:x="6805" fg:w="1"/><text x="81.4372%" y="463.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1181%" y="437" width="0.0119%" height="15" fill="rgb(250,115,20)" fg:x="6805" fg:w="1"/><text x="81.4372%" y="447.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1181%" y="421" width="0.0119%" height="15" fill="rgb(207,214,23)" fg:x="6805" fg:w="1"/><text x="81.4372%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.1181%" y="405" width="0.0119%" height="15" fill="rgb(240,9,18)" fg:x="6805" fg:w="1"/><text x="81.4372%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.1181%" y="389" width="0.0119%" height="15" fill="rgb(232,170,48)" fg:x="6805" fg:w="1"/><text x="81.4372%" y="399.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="81.1181%" y="373" width="0.0119%" height="15" fill="rgb(236,149,23)" fg:x="6805" fg:w="1"/><text x="81.4372%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1301%" y="629" width="0.0119%" height="15" fill="rgb(210,125,42)" fg:x="6806" fg:w="1"/><text x="81.4492%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1301%" y="613" width="0.0119%" height="15" fill="rgb(207,201,52)" fg:x="6806" fg:w="1"/><text x="81.4492%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1301%" y="597" width="0.0119%" height="15" fill="rgb(250,187,37)" fg:x="6806" fg:w="1"/><text x="81.4492%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1301%" y="581" width="0.0119%" height="15" fill="rgb(214,186,2)" fg:x="6806" fg:w="1"/><text x="81.4492%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.1301%" y="709" width="0.0238%" height="15" fill="rgb(207,189,15)" fg:x="6806" fg:w="2"/><text x="81.4492%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.1301%" y="693" width="0.0238%" height="15" fill="rgb(221,99,21)" fg:x="6806" fg:w="2"/><text x="81.4492%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.1301%" y="677" width="0.0238%" height="15" fill="rgb(212,67,18)" fg:x="6806" fg:w="2"/><text x="81.4492%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.1301%" y="661" width="0.0238%" height="15" fill="rgb(226,24,24)" fg:x="6806" fg:w="2"/><text x="81.4492%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.1301%" y="645" width="0.0238%" height="15" fill="rgb(252,123,31)" fg:x="6806" fg:w="2"/><text x="81.4492%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1420%" y="629" width="0.0119%" height="15" fill="rgb(251,227,47)" fg:x="6807" fg:w="1"/><text x="81.4611%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1420%" y="613" width="0.0119%" height="15" fill="rgb(233,84,53)" fg:x="6807" fg:w="1"/><text x="81.4611%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="81.1420%" y="597" width="0.0119%" height="15" fill="rgb(228,57,19)" fg:x="6807" fg:w="1"/><text x="81.4611%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="81.1420%" y="581" width="0.0119%" height="15" fill="rgb(251,81,5)" fg:x="6807" fg:w="1"/><text x="81.4611%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1539%" y="709" width="0.0119%" height="15" fill="rgb(236,211,27)" fg:x="6808" fg:w="1"/><text x="81.4730%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1539%" y="693" width="0.0119%" height="15" fill="rgb(218,21,6)" fg:x="6808" fg:w="1"/><text x="81.4730%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1539%" y="677" width="0.0119%" height="15" fill="rgb(239,104,19)" fg:x="6808" fg:w="1"/><text x="81.4730%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1539%" y="661" width="0.0119%" height="15" fill="rgb(234,179,27)" fg:x="6808" fg:w="1"/><text x="81.4730%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1539%" y="645" width="0.0119%" height="15" fill="rgb(221,154,39)" fg:x="6808" fg:w="1"/><text x="81.4730%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1539%" y="629" width="0.0119%" height="15" fill="rgb(228,190,1)" fg:x="6808" fg:w="1"/><text x="81.4730%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1539%" y="613" width="0.0119%" height="15" fill="rgb(244,122,33)" fg:x="6808" fg:w="1"/><text x="81.4730%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1539%" y="597" width="0.0119%" height="15" fill="rgb(227,56,37)" fg:x="6808" fg:w="1"/><text x="81.4730%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="81.1539%" y="581" width="0.0119%" height="15" fill="rgb(207,158,16)" fg:x="6808" fg:w="1"/><text x="81.4730%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="81.1539%" y="565" width="0.0119%" height="15" fill="rgb(251,222,30)" fg:x="6808" fg:w="1"/><text x="81.4730%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="81.1658%" y="645" width="0.0119%" height="15" fill="rgb(240,22,49)" fg:x="6809" fg:w="1"/><text x="81.4849%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="81.1658%" y="629" width="0.0119%" height="15" fill="rgb(224,207,37)" fg:x="6809" fg:w="1"/><text x="81.4849%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1777%" y="645" width="0.0119%" height="15" fill="rgb(249,188,40)" fg:x="6810" fg:w="1"/><text x="81.4968%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1777%" y="629" width="0.0119%" height="15" fill="rgb(254,141,11)" fg:x="6810" fg:w="1"/><text x="81.4968%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1777%" y="613" width="0.0119%" height="15" fill="rgb(231,177,6)" fg:x="6810" fg:w="1"/><text x="81.4968%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1777%" y="597" width="0.0119%" height="15" fill="rgb(241,6,16)" fg:x="6810" fg:w="1"/><text x="81.4968%" y="607.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="81.1777%" y="581" width="0.0119%" height="15" fill="rgb(230,50,14)" fg:x="6810" fg:w="1"/><text x="81.4968%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="81.1301%" y="757" width="0.0715%" height="15" fill="rgb(254,36,3)" fg:x="6806" fg:w="6"/><text x="81.4492%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="81.1301%" y="741" width="0.0715%" height="15" fill="rgb(226,149,37)" fg:x="6806" fg:w="6"/><text x="81.4492%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="81.1301%" y="725" width="0.0715%" height="15" fill="rgb(253,49,27)" fg:x="6806" fg:w="6"/><text x="81.4492%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.1658%" y="709" width="0.0358%" height="15" fill="rgb(249,182,52)" fg:x="6809" fg:w="3"/><text x="81.4849%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.1658%" y="693" width="0.0358%" height="15" fill="rgb(223,42,15)" fg:x="6809" fg:w="3"/><text x="81.4849%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.1658%" y="677" width="0.0358%" height="15" fill="rgb(232,31,42)" fg:x="6809" fg:w="3"/><text x="81.4849%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.1658%" y="661" width="0.0358%" height="15" fill="rgb(233,56,46)" fg:x="6809" fg:w="3"/><text x="81.4849%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1897%" y="645" width="0.0119%" height="15" fill="rgb(241,143,21)" fg:x="6811" fg:w="1"/><text x="81.5088%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1897%" y="629" width="0.0119%" height="15" fill="rgb(251,222,15)" fg:x="6811" fg:w="1"/><text x="81.5088%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1897%" y="613" width="0.0119%" height="15" fill="rgb(242,101,40)" fg:x="6811" fg:w="1"/><text x="81.5088%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1897%" y="597" width="0.0119%" height="15" fill="rgb(247,60,44)" fg:x="6811" fg:w="1"/><text x="81.5088%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1897%" y="581" width="0.0119%" height="15" fill="rgb(254,48,47)" fg:x="6811" fg:w="1"/><text x="81.5088%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1897%" y="565" width="0.0119%" height="15" fill="rgb(253,30,33)" fg:x="6811" fg:w="1"/><text x="81.5088%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1897%" y="549" width="0.0119%" height="15" fill="rgb(253,214,47)" fg:x="6811" fg:w="1"/><text x="81.5088%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1897%" y="533" width="0.0119%" height="15" fill="rgb(241,108,29)" fg:x="6811" fg:w="1"/><text x="81.5088%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.1897%" y="517" width="0.0119%" height="15" fill="rgb(240,36,2)" fg:x="6811" fg:w="1"/><text x="81.5088%" y="527.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="81.1897%" y="501" width="0.0119%" height="15" fill="rgb(243,198,24)" fg:x="6811" fg:w="1"/><text x="81.5088%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.2016%" y="693" width="0.0119%" height="15" fill="rgb(225,98,27)" fg:x="6812" fg:w="1"/><text x="81.5207%" y="703.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.2016%" y="677" width="0.0119%" height="15" fill="rgb(208,86,30)" fg:x="6812" fg:w="1"/><text x="81.5207%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2135%" y="693" width="0.0119%" height="15" fill="rgb(242,157,11)" fg:x="6813" fg:w="1"/><text x="81.5326%" y="703.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.2135%" y="677" width="0.0119%" height="15" fill="rgb(244,84,16)" fg:x="6813" fg:w="1"/><text x="81.5326%" y="687.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.2135%" y="661" width="0.0119%" height="15" fill="rgb(247,20,46)" fg:x="6813" fg:w="1"/><text x="81.5326%" y="671.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="81.2135%" y="645" width="0.0119%" height="15" fill="rgb(240,157,20)" fg:x="6813" fg:w="1"/><text x="81.5326%" y="655.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.2254%" y="645" width="0.0119%" height="15" fill="rgb(212,151,38)" fg:x="6814" fg:w="1"/><text x="81.5445%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.2254%" y="629" width="0.0119%" height="15" fill="rgb(233,197,14)" fg:x="6814" fg:w="1"/><text x="81.5445%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.2373%" y="613" width="0.0119%" height="15" fill="rgb(226,148,28)" fg:x="6815" fg:w="1"/><text x="81.5564%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.2373%" y="597" width="0.0119%" height="15" fill="rgb(244,141,30)" fg:x="6815" fg:w="1"/><text x="81.5564%" y="607.50"/></g><g><title>parser::operator+ (5 samples, 0.06%)</title><rect x="81.2016%" y="709" width="0.0596%" height="15" fill="rgb(215,73,38)" fg:x="6812" fg:w="5"/><text x="81.5207%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.2254%" y="693" width="0.0358%" height="15" fill="rgb(230,148,29)" fg:x="6814" fg:w="3"/><text x="81.5445%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="81.2254%" y="677" width="0.0358%" height="15" fill="rgb(250,41,52)" fg:x="6814" fg:w="3"/><text x="81.5445%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.2254%" y="661" width="0.0358%" height="15" fill="rgb(215,48,1)" fg:x="6814" fg:w="3"/><text x="81.5445%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.2373%" y="645" width="0.0238%" height="15" fill="rgb(205,223,38)" fg:x="6815" fg:w="2"/><text x="81.5564%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.2373%" y="629" width="0.0238%" height="15" fill="rgb(213,51,8)" fg:x="6815" fg:w="2"/><text x="81.5564%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.2493%" y="613" width="0.0119%" height="15" fill="rgb(248,53,11)" fg:x="6816" fg:w="1"/><text x="81.5684%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2493%" y="597" width="0.0119%" height="15" fill="rgb(218,140,4)" fg:x="6816" fg:w="1"/><text x="81.5684%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.2493%" y="581" width="0.0119%" height="15" fill="rgb(248,161,31)" fg:x="6816" fg:w="1"/><text x="81.5684%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2493%" y="565" width="0.0119%" height="15" fill="rgb(239,88,32)" fg:x="6816" fg:w="1"/><text x="81.5684%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.2493%" y="549" width="0.0119%" height="15" fill="rgb(234,14,28)" fg:x="6816" fg:w="1"/><text x="81.5684%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2493%" y="533" width="0.0119%" height="15" fill="rgb(235,173,11)" fg:x="6816" fg:w="1"/><text x="81.5684%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.2493%" y="517" width="0.0119%" height="15" fill="rgb(222,70,2)" fg:x="6816" fg:w="1"/><text x="81.5684%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.2493%" y="501" width="0.0119%" height="15" fill="rgb(228,196,41)" fg:x="6816" fg:w="1"/><text x="81.5684%" y="511.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="81.2493%" y="485" width="0.0119%" height="15" fill="rgb(249,19,9)" fg:x="6816" fg:w="1"/><text x="81.5684%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="81.2612%" y="645" width="0.0119%" height="15" fill="rgb(221,16,43)" fg:x="6817" fg:w="1"/><text x="81.5803%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="81.2612%" y="629" width="0.0119%" height="15" fill="rgb(225,207,6)" fg:x="6817" fg:w="1"/><text x="81.5803%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.2612%" y="677" width="0.0238%" height="15" fill="rgb(249,32,32)" fg:x="6817" fg:w="2"/><text x="81.5803%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.2612%" y="661" width="0.0238%" height="15" fill="rgb(232,163,43)" fg:x="6817" fg:w="2"/><text x="81.5803%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2731%" y="645" width="0.0119%" height="15" fill="rgb(236,158,54)" fg:x="6818" fg:w="1"/><text x="81.5922%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2731%" y="629" width="0.0119%" height="15" fill="rgb(205,126,44)" fg:x="6818" fg:w="1"/><text x="81.5922%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2731%" y="613" width="0.0119%" height="15" fill="rgb(210,162,12)" fg:x="6818" fg:w="1"/><text x="81.5922%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2731%" y="597" width="0.0119%" height="15" fill="rgb(218,156,48)" fg:x="6818" fg:w="1"/><text x="81.5922%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2731%" y="581" width="0.0119%" height="15" fill="rgb(248,210,3)" fg:x="6818" fg:w="1"/><text x="81.5922%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2731%" y="565" width="0.0119%" height="15" fill="rgb(212,43,27)" fg:x="6818" fg:w="1"/><text x="81.5922%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="81.2731%" y="549" width="0.0119%" height="15" fill="rgb(241,52,6)" fg:x="6818" fg:w="1"/><text x="81.5922%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.2612%" y="693" width="0.0358%" height="15" fill="rgb(222,178,35)" fg:x="6817" fg:w="3"/><text x="81.5803%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2850%" y="677" width="0.0119%" height="15" fill="rgb(205,121,46)" fg:x="6819" fg:w="1"/><text x="81.6041%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2850%" y="661" width="0.0119%" height="15" fill="rgb(249,67,1)" fg:x="6819" fg:w="1"/><text x="81.6041%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2850%" y="645" width="0.0119%" height="15" fill="rgb(238,168,42)" fg:x="6819" fg:w="1"/><text x="81.6041%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2850%" y="629" width="0.0119%" height="15" fill="rgb(205,36,48)" fg:x="6819" fg:w="1"/><text x="81.6041%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2850%" y="613" width="0.0119%" height="15" fill="rgb(240,85,12)" fg:x="6819" fg:w="1"/><text x="81.6041%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="81.2850%" y="597" width="0.0119%" height="15" fill="rgb(245,27,39)" fg:x="6819" fg:w="1"/><text x="81.6041%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="81.2612%" y="709" width="0.0477%" height="15" fill="rgb(218,129,34)" fg:x="6817" fg:w="4"/><text x="81.5803%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2969%" y="693" width="0.0119%" height="15" fill="rgb(221,157,12)" fg:x="6820" fg:w="1"/><text x="81.6160%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2969%" y="677" width="0.0119%" height="15" fill="rgb(213,206,20)" fg:x="6820" fg:w="1"/><text x="81.6160%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2969%" y="661" width="0.0119%" height="15" fill="rgb(227,115,30)" fg:x="6820" fg:w="1"/><text x="81.6160%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2969%" y="645" width="0.0119%" height="15" fill="rgb(221,40,47)" fg:x="6820" fg:w="1"/><text x="81.6160%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2969%" y="629" width="0.0119%" height="15" fill="rgb(239,96,49)" fg:x="6820" fg:w="1"/><text x="81.6160%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.2969%" y="613" width="0.0119%" height="15" fill="rgb(223,24,38)" fg:x="6820" fg:w="1"/><text x="81.6160%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="81.2969%" y="597" width="0.0119%" height="15" fill="rgb(242,35,45)" fg:x="6820" fg:w="1"/><text x="81.6160%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="81.2969%" y="581" width="0.0119%" height="15" fill="rgb(236,20,9)" fg:x="6820" fg:w="1"/><text x="81.6160%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.3089%" y="709" width="0.0119%" height="15" fill="rgb(239,124,8)" fg:x="6821" fg:w="1"/><text x="81.6280%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3089%" y="693" width="0.0119%" height="15" fill="rgb(228,92,29)" fg:x="6821" fg:w="1"/><text x="81.6280%" y="703.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.3089%" y="677" width="0.0119%" height="15" fill="rgb(251,53,39)" fg:x="6821" fg:w="1"/><text x="81.6280%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3089%" y="661" width="0.0119%" height="15" fill="rgb(224,44,10)" fg:x="6821" fg:w="1"/><text x="81.6280%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.3089%" y="645" width="0.0119%" height="15" fill="rgb(254,10,15)" fg:x="6821" fg:w="1"/><text x="81.6280%" y="655.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="81.3089%" y="629" width="0.0119%" height="15" fill="rgb(245,173,6)" fg:x="6821" fg:w="1"/><text x="81.6280%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3208%" y="533" width="0.0119%" height="15" fill="rgb(228,74,0)" fg:x="6822" fg:w="1"/><text x="81.6399%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.3208%" y="517" width="0.0119%" height="15" fill="rgb(206,138,29)" fg:x="6822" fg:w="1"/><text x="81.6399%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3208%" y="501" width="0.0119%" height="15" fill="rgb(253,27,43)" fg:x="6822" fg:w="1"/><text x="81.6399%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.3208%" y="485" width="0.0119%" height="15" fill="rgb(231,73,0)" fg:x="6822" fg:w="1"/><text x="81.6399%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3208%" y="469" width="0.0119%" height="15" fill="rgb(218,9,23)" fg:x="6822" fg:w="1"/><text x="81.6399%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.3208%" y="453" width="0.0119%" height="15" fill="rgb(251,55,29)" fg:x="6822" fg:w="1"/><text x="81.6399%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3208%" y="437" width="0.0119%" height="15" fill="rgb(223,180,22)" fg:x="6822" fg:w="1"/><text x="81.6399%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.3208%" y="421" width="0.0119%" height="15" fill="rgb(223,29,21)" fg:x="6822" fg:w="1"/><text x="81.6399%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3208%" y="405" width="0.0119%" height="15" fill="rgb(251,103,37)" fg:x="6822" fg:w="1"/><text x="81.6399%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.3208%" y="389" width="0.0119%" height="15" fill="rgb(214,11,21)" fg:x="6822" fg:w="1"/><text x="81.6399%" y="399.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.3208%" y="373" width="0.0119%" height="15" fill="rgb(205,137,13)" fg:x="6822" fg:w="1"/><text x="81.6399%" y="383.50"/></g><g><title>parser::either (2 samples, 0.02%)</title><rect x="81.3208%" y="677" width="0.0238%" height="15" fill="rgb(225,58,47)" fg:x="6822" fg:w="2"/><text x="81.6399%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.3208%" y="661" width="0.0238%" height="15" fill="rgb(222,197,14)" fg:x="6822" fg:w="2"/><text x="81.6399%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.3208%" y="645" width="0.0238%" height="15" fill="rgb(215,210,33)" fg:x="6822" fg:w="2"/><text x="81.6399%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.3208%" y="629" width="0.0238%" height="15" fill="rgb(242,13,9)" fg:x="6822" fg:w="2"/><text x="81.6399%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.3208%" y="613" width="0.0238%" height="15" fill="rgb(218,31,39)" fg:x="6822" fg:w="2"/><text x="81.6399%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.3208%" y="597" width="0.0238%" height="15" fill="rgb(211,214,23)" fg:x="6822" fg:w="2"/><text x="81.6399%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.3208%" y="581" width="0.0238%" height="15" fill="rgb(237,92,14)" fg:x="6822" fg:w="2"/><text x="81.6399%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.3208%" y="565" width="0.0238%" height="15" fill="rgb(220,78,5)" fg:x="6822" fg:w="2"/><text x="81.6399%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.3208%" y="549" width="0.0238%" height="15" fill="rgb(237,23,21)" fg:x="6822" fg:w="2"/><text x="81.6399%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3327%" y="533" width="0.0119%" height="15" fill="rgb(251,207,51)" fg:x="6823" fg:w="1"/><text x="81.6518%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.3327%" y="517" width="0.0119%" height="15" fill="rgb(249,206,18)" fg:x="6823" fg:w="1"/><text x="81.6518%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3327%" y="501" width="0.0119%" height="15" fill="rgb(236,20,19)" fg:x="6823" fg:w="1"/><text x="81.6518%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.3327%" y="485" width="0.0119%" height="15" fill="rgb(214,227,29)" fg:x="6823" fg:w="1"/><text x="81.6518%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3327%" y="469" width="0.0119%" height="15" fill="rgb(209,183,4)" fg:x="6823" fg:w="1"/><text x="81.6518%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.3327%" y="453" width="0.0119%" height="15" fill="rgb(233,111,23)" fg:x="6823" fg:w="1"/><text x="81.6518%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3327%" y="437" width="0.0119%" height="15" fill="rgb(238,121,27)" fg:x="6823" fg:w="1"/><text x="81.6518%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.3327%" y="421" width="0.0119%" height="15" fill="rgb(236,120,41)" fg:x="6823" fg:w="1"/><text x="81.6518%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3327%" y="405" width="0.0119%" height="15" fill="rgb(241,143,10)" fg:x="6823" fg:w="1"/><text x="81.6518%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.3327%" y="389" width="0.0119%" height="15" fill="rgb(224,86,31)" fg:x="6823" fg:w="1"/><text x="81.6518%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3327%" y="373" width="0.0119%" height="15" fill="rgb(236,212,27)" fg:x="6823" fg:w="1"/><text x="81.6518%" y="383.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3327%" y="357" width="0.0119%" height="15" fill="rgb(219,43,51)" fg:x="6823" fg:w="1"/><text x="81.6518%" y="367.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="81.3327%" y="341" width="0.0119%" height="15" fill="rgb(232,216,8)" fg:x="6823" fg:w="1"/><text x="81.6518%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3327%" y="325" width="0.0119%" height="15" fill="rgb(206,222,39)" fg:x="6823" fg:w="1"/><text x="81.6518%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3446%" y="597" width="0.0119%" height="15" fill="rgb(209,149,48)" fg:x="6824" fg:w="1"/><text x="81.6637%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3446%" y="581" width="0.0119%" height="15" fill="rgb(229,155,21)" fg:x="6824" fg:w="1"/><text x="81.6637%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3446%" y="565" width="0.0119%" height="15" fill="rgb(246,152,26)" fg:x="6824" fg:w="1"/><text x="81.6637%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3446%" y="549" width="0.0119%" height="15" fill="rgb(206,70,42)" fg:x="6824" fg:w="1"/><text x="81.6637%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="81.3446%" y="533" width="0.0119%" height="15" fill="rgb(236,9,11)" fg:x="6824" fg:w="1"/><text x="81.6637%" y="543.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="81.3446%" y="517" width="0.0119%" height="15" fill="rgb(238,145,47)" fg:x="6824" fg:w="1"/><text x="81.6637%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3565%" y="597" width="0.0119%" height="15" fill="rgb(252,189,7)" fg:x="6825" fg:w="1"/><text x="81.6756%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="81.3565%" y="581" width="0.0119%" height="15" fill="rgb(254,168,51)" fg:x="6825" fg:w="1"/><text x="81.6756%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="81.3565%" y="565" width="0.0119%" height="15" fill="rgb(227,105,46)" fg:x="6825" fg:w="1"/><text x="81.6756%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.3446%" y="661" width="0.0358%" height="15" fill="rgb(227,74,30)" fg:x="6824" fg:w="3"/><text x="81.6637%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.3446%" y="645" width="0.0358%" height="15" fill="rgb(206,212,44)" fg:x="6824" fg:w="3"/><text x="81.6637%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.3446%" y="629" width="0.0358%" height="15" fill="rgb(252,69,11)" fg:x="6824" fg:w="3"/><text x="81.6637%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.3446%" y="613" width="0.0358%" height="15" fill="rgb(239,116,0)" fg:x="6824" fg:w="3"/><text x="81.6637%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3685%" y="597" width="0.0119%" height="15" fill="rgb(246,189,23)" fg:x="6826" fg:w="1"/><text x="81.6876%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="81.3685%" y="581" width="0.0119%" height="15" fill="rgb(229,50,41)" fg:x="6826" fg:w="1"/><text x="81.6876%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="81.3685%" y="565" width="0.0119%" height="15" fill="rgb(214,66,37)" fg:x="6826" fg:w="1"/><text x="81.6876%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.3804%" y="469" width="0.0119%" height="15" fill="rgb(226,28,6)" fg:x="6827" fg:w="1"/><text x="81.6995%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.3804%" y="453" width="0.0119%" height="15" fill="rgb(239,154,0)" fg:x="6827" fg:w="1"/><text x="81.6995%" y="463.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="81.3804%" y="437" width="0.0119%" height="15" fill="rgb(233,97,11)" fg:x="6827" fg:w="1"/><text x="81.6995%" y="447.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (7 samples, 0.08%)</title><rect x="81.3208%" y="693" width="0.0834%" height="15" fill="rgb(236,215,16)" fg:x="6822" fg:w="7"/><text x="81.6399%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="81.3446%" y="677" width="0.0596%" height="15" fill="rgb(246,188,29)" fg:x="6824" fg:w="5"/><text x="81.6637%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.3804%" y="661" width="0.0238%" height="15" fill="rgb(207,7,29)" fg:x="6827" fg:w="2"/><text x="81.6995%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.3804%" y="645" width="0.0238%" height="15" fill="rgb(238,112,43)" fg:x="6827" fg:w="2"/><text x="81.6995%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.3804%" y="629" width="0.0238%" height="15" fill="rgb(230,110,32)" fg:x="6827" fg:w="2"/><text x="81.6995%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.3804%" y="613" width="0.0238%" height="15" fill="rgb(218,197,32)" fg:x="6827" fg:w="2"/><text x="81.6995%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.3804%" y="597" width="0.0238%" height="15" fill="rgb(252,61,9)" fg:x="6827" fg:w="2"/><text x="81.6995%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.3804%" y="581" width="0.0238%" height="15" fill="rgb(244,140,14)" fg:x="6827" fg:w="2"/><text x="81.6995%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.3804%" y="565" width="0.0238%" height="15" fill="rgb(216,14,47)" fg:x="6827" fg:w="2"/><text x="81.6995%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.3804%" y="549" width="0.0238%" height="15" fill="rgb(224,130,52)" fg:x="6827" fg:w="2"/><text x="81.6995%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.3804%" y="533" width="0.0238%" height="15" fill="rgb(210,229,51)" fg:x="6827" fg:w="2"/><text x="81.6995%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.3804%" y="517" width="0.0238%" height="15" fill="rgb(242,13,9)" fg:x="6827" fg:w="2"/><text x="81.6995%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.3804%" y="501" width="0.0238%" height="15" fill="rgb(252,71,50)" fg:x="6827" fg:w="2"/><text x="81.6995%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.3804%" y="485" width="0.0238%" height="15" fill="rgb(218,225,6)" fg:x="6827" fg:w="2"/><text x="81.6995%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.3923%" y="469" width="0.0119%" height="15" fill="rgb(219,27,35)" fg:x="6828" fg:w="1"/><text x="81.7114%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3923%" y="453" width="0.0119%" height="15" fill="rgb(226,30,1)" fg:x="6828" fg:w="1"/><text x="81.7114%" y="463.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.3923%" y="437" width="0.0119%" height="15" fill="rgb(227,164,34)" fg:x="6828" fg:w="1"/><text x="81.7114%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.3923%" y="421" width="0.0119%" height="15" fill="rgb(206,103,4)" fg:x="6828" fg:w="1"/><text x="81.7114%" y="431.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.3923%" y="405" width="0.0119%" height="15" fill="rgb(214,166,19)" fg:x="6828" fg:w="1"/><text x="81.7114%" y="415.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="81.3923%" y="389" width="0.0119%" height="15" fill="rgb(240,56,20)" fg:x="6828" fg:w="1"/><text x="81.7114%" y="399.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="81.4042%" y="629" width="0.0119%" height="15" fill="rgb(224,25,3)" fg:x="6829" fg:w="1"/><text x="81.7233%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="81.4042%" y="613" width="0.0119%" height="15" fill="rgb(216,206,54)" fg:x="6829" fg:w="1"/><text x="81.7233%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.4042%" y="677" width="0.0238%" height="15" fill="rgb(225,142,10)" fg:x="6829" fg:w="2"/><text x="81.7233%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.4042%" y="661" width="0.0238%" height="15" fill="rgb(246,9,18)" fg:x="6829" fg:w="2"/><text x="81.7233%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.4042%" y="645" width="0.0238%" height="15" fill="rgb(247,140,18)" fg:x="6829" fg:w="2"/><text x="81.7233%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.4161%" y="629" width="0.0119%" height="15" fill="rgb(239,184,22)" fg:x="6830" fg:w="1"/><text x="81.7352%" y="639.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.4161%" y="613" width="0.0119%" height="15" fill="rgb(227,94,44)" fg:x="6830" fg:w="1"/><text x="81.7352%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="81.4161%" y="597" width="0.0119%" height="15" fill="rgb(219,43,3)" fg:x="6830" fg:w="1"/><text x="81.7352%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="81.4161%" y="581" width="0.0119%" height="15" fill="rgb(210,76,31)" fg:x="6830" fg:w="1"/><text x="81.7352%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.4281%" y="661" width="0.0119%" height="15" fill="rgb(225,85,12)" fg:x="6831" fg:w="1"/><text x="81.7472%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.4281%" y="645" width="0.0119%" height="15" fill="rgb(214,191,28)" fg:x="6831" fg:w="1"/><text x="81.7472%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.4281%" y="629" width="0.0119%" height="15" fill="rgb(214,43,14)" fg:x="6831" fg:w="1"/><text x="81.7472%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.4281%" y="613" width="0.0119%" height="15" fill="rgb(253,117,5)" fg:x="6831" fg:w="1"/><text x="81.7472%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.4281%" y="597" width="0.0119%" height="15" fill="rgb(208,124,26)" fg:x="6831" fg:w="1"/><text x="81.7472%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.4281%" y="581" width="0.0119%" height="15" fill="rgb(228,208,39)" fg:x="6831" fg:w="1"/><text x="81.7472%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.4281%" y="565" width="0.0119%" height="15" fill="rgb(206,180,39)" fg:x="6831" fg:w="1"/><text x="81.7472%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.4281%" y="549" width="0.0119%" height="15" fill="rgb(205,111,37)" fg:x="6831" fg:w="1"/><text x="81.7472%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.4281%" y="533" width="0.0119%" height="15" fill="rgb(208,121,24)" fg:x="6831" fg:w="1"/><text x="81.7472%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.4281%" y="517" width="0.0119%" height="15" fill="rgb(218,215,32)" fg:x="6831" fg:w="1"/><text x="81.7472%" y="527.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="81.4281%" y="501" width="0.0119%" height="15" fill="rgb(244,168,53)" fg:x="6831" fg:w="1"/><text x="81.7472%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.4281%" y="485" width="0.0119%" height="15" fill="rgb(214,9,36)" fg:x="6831" fg:w="1"/><text x="81.7472%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.4281%" y="469" width="0.0119%" height="15" fill="rgb(231,4,34)" fg:x="6831" fg:w="1"/><text x="81.7472%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.4281%" y="453" width="0.0119%" height="15" fill="rgb(210,83,51)" fg:x="6831" fg:w="1"/><text x="81.7472%" y="463.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="81.4281%" y="437" width="0.0119%" height="15" fill="rgb(224,112,1)" fg:x="6831" fg:w="1"/><text x="81.7472%" y="447.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.4400%" y="581" width="0.0119%" height="15" fill="rgb(216,33,41)" fg:x="6832" fg:w="1"/><text x="81.7591%" y="591.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="81.4400%" y="565" width="0.0119%" height="15" fill="rgb(215,179,42)" fg:x="6832" fg:w="1"/><text x="81.7591%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.4400%" y="549" width="0.0119%" height="15" fill="rgb(205,81,48)" fg:x="6832" fg:w="1"/><text x="81.7591%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.4519%" y="517" width="0.0119%" height="15" fill="rgb(246,17,30)" fg:x="6833" fg:w="1"/><text x="81.7710%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.4519%" y="501" width="0.0119%" height="15" fill="rgb(226,19,16)" fg:x="6833" fg:w="1"/><text x="81.7710%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.4638%" y="485" width="0.0119%" height="15" fill="rgb(207,3,14)" fg:x="6834" fg:w="1"/><text x="81.7829%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.4638%" y="469" width="0.0119%" height="15" fill="rgb(226,77,12)" fg:x="6834" fg:w="1"/><text x="81.7829%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.4519%" y="533" width="0.0358%" height="15" fill="rgb(226,76,25)" fg:x="6833" fg:w="3"/><text x="81.7710%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.4638%" y="517" width="0.0238%" height="15" fill="rgb(217,216,25)" fg:x="6834" fg:w="2"/><text x="81.7829%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.4638%" y="501" width="0.0238%" height="15" fill="rgb(247,127,42)" fg:x="6834" fg:w="2"/><text x="81.7829%" y="511.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.4757%" y="485" width="0.0119%" height="15" fill="rgb(226,10,34)" fg:x="6835" fg:w="1"/><text x="81.7948%" y="495.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="81.4757%" y="469" width="0.0119%" height="15" fill="rgb(249,78,0)" fg:x="6835" fg:w="1"/><text x="81.7948%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.4757%" y="453" width="0.0119%" height="15" fill="rgb(226,218,38)" fg:x="6835" fg:w="1"/><text x="81.7948%" y="463.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="81.4757%" y="437" width="0.0119%" height="15" fill="rgb(240,92,1)" fg:x="6835" fg:w="1"/><text x="81.7948%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.4757%" y="421" width="0.0119%" height="15" fill="rgb(237,224,33)" fg:x="6835" fg:w="1"/><text x="81.7948%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.4757%" y="405" width="0.0119%" height="15" fill="rgb(211,46,1)" fg:x="6835" fg:w="1"/><text x="81.7948%" y="415.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.4757%" y="389" width="0.0119%" height="15" fill="rgb(239,190,4)" fg:x="6835" fg:w="1"/><text x="81.7948%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="81.4400%" y="613" width="0.0596%" height="15" fill="rgb(221,50,22)" fg:x="6832" fg:w="5"/><text x="81.7591%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="81.4400%" y="597" width="0.0596%" height="15" fill="rgb(207,176,8)" fg:x="6832" fg:w="5"/><text x="81.7591%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="81.4519%" y="581" width="0.0477%" height="15" fill="rgb(244,114,50)" fg:x="6833" fg:w="4"/><text x="81.7710%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="81.4519%" y="565" width="0.0477%" height="15" fill="rgb(226,206,19)" fg:x="6833" fg:w="4"/><text x="81.7710%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="81.4519%" y="549" width="0.0477%" height="15" fill="rgb(208,199,16)" fg:x="6833" fg:w="4"/><text x="81.7710%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.4877%" y="533" width="0.0119%" height="15" fill="rgb(208,38,14)" fg:x="6836" fg:w="1"/><text x="81.8068%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.4877%" y="517" width="0.0119%" height="15" fill="rgb(221,211,49)" fg:x="6836" fg:w="1"/><text x="81.8068%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.4877%" y="501" width="0.0119%" height="15" fill="rgb(227,214,34)" fg:x="6836" fg:w="1"/><text x="81.8068%" y="511.50"/></g><g><title>logic::layout_start (26 samples, 0.31%)</title><rect x="81.2016%" y="725" width="0.3099%" height="15" fill="rgb(234,5,54)" fg:x="6812" fg:w="26"/><text x="81.5207%" y="735.50"/></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (16 samples, 0.19%)</title><rect x="81.3208%" y="709" width="0.1907%" height="15" fill="rgb(236,215,22)" fg:x="6822" fg:w="16"/><text x="81.6399%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (9 samples, 0.11%)</title><rect x="81.4042%" y="693" width="0.1073%" height="15" fill="rgb(244,0,11)" fg:x="6829" fg:w="9"/><text x="81.7233%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="81.4281%" y="677" width="0.0834%" height="15" fill="rgb(212,140,16)" fg:x="6831" fg:w="7"/><text x="81.7472%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="81.4400%" y="661" width="0.0715%" height="15" fill="rgb(238,101,37)" fg:x="6832" fg:w="6"/><text x="81.7591%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="81.4400%" y="645" width="0.0715%" height="15" fill="rgb(247,46,3)" fg:x="6832" fg:w="6"/><text x="81.7591%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="81.4400%" y="629" width="0.0715%" height="15" fill="rgb(208,106,19)" fg:x="6832" fg:w="6"/><text x="81.7591%" y="639.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.4996%" y="613" width="0.0119%" height="15" fill="rgb(240,227,15)" fg:x="6837" fg:w="1"/><text x="81.8187%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.4996%" y="597" width="0.0119%" height="15" fill="rgb(226,173,6)" fg:x="6837" fg:w="1"/><text x="81.8187%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.4996%" y="581" width="0.0119%" height="15" fill="rgb(213,191,1)" fg:x="6837" fg:w="1"/><text x="81.8187%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.4996%" y="565" width="0.0119%" height="15" fill="rgb(246,51,36)" fg:x="6837" fg:w="1"/><text x="81.8187%" y="575.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="81.4996%" y="549" width="0.0119%" height="15" fill="rgb(238,40,32)" fg:x="6837" fg:w="1"/><text x="81.8187%" y="559.50"/></g><g><title>logic::post_end_semicolon (1 samples, 0.01%)</title><rect x="81.5115%" y="725" width="0.0119%" height="15" fill="rgb(208,126,27)" fg:x="6838" fg:w="1"/><text x="81.8306%" y="735.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="81.5115%" y="709" width="0.0119%" height="15" fill="rgb(227,117,38)" fg:x="6838" fg:w="1"/><text x="81.8306%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.5115%" y="693" width="0.0119%" height="15" fill="rgb(232,16,1)" fg:x="6838" fg:w="1"/><text x="81.8306%" y="703.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.5115%" y="677" width="0.0119%" height="15" fill="rgb(212,111,31)" fg:x="6838" fg:w="1"/><text x="81.8306%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.5115%" y="661" width="0.0119%" height="15" fill="rgb(253,227,2)" fg:x="6838" fg:w="1"/><text x="81.8306%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.5115%" y="645" width="0.0119%" height="15" fill="rgb(216,122,17)" fg:x="6838" fg:w="1"/><text x="81.8306%" y="655.50"/></g><g><title>parser::operator+ (1 samples, 0.01%)</title><rect x="81.5234%" y="693" width="0.0119%" height="15" fill="rgb(227,37,2)" fg:x="6839" fg:w="1"/><text x="81.8425%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.5234%" y="677" width="0.0119%" height="15" fill="rgb(244,113,40)" fg:x="6839" fg:w="1"/><text x="81.8425%" y="687.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.5234%" y="661" width="0.0119%" height="15" fill="rgb(217,193,34)" fg:x="6839" fg:w="1"/><text x="81.8425%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.5234%" y="645" width="0.0119%" height="15" fill="rgb(212,223,15)" fg:x="6839" fg:w="1"/><text x="81.8425%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.5234%" y="629" width="0.0119%" height="15" fill="rgb(238,143,18)" fg:x="6839" fg:w="1"/><text x="81.8425%" y="639.50"/></g><g><title>parser::layout_end (2 samples, 0.02%)</title><rect x="81.5234%" y="709" width="0.0238%" height="15" fill="rgb(231,18,49)" fg:x="6839" fg:w="2"/><text x="81.8425%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="81.5353%" y="693" width="0.0119%" height="15" fill="rgb(249,122,4)" fg:x="6840" fg:w="1"/><text x="81.8544%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.5353%" y="677" width="0.0119%" height="15" fill="rgb(245,138,54)" fg:x="6840" fg:w="1"/><text x="81.8544%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="81.5353%" y="661" width="0.0119%" height="15" fill="rgb(218,130,18)" fg:x="6840" fg:w="1"/><text x="81.8544%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="81.5353%" y="645" width="0.0119%" height="15" fill="rgb(235,94,13)" fg:x="6840" fg:w="1"/><text x="81.8544%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.5473%" y="661" width="0.0119%" height="15" fill="rgb(247,143,5)" fg:x="6841" fg:w="1"/><text x="81.8664%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.5473%" y="677" width="0.0238%" height="15" fill="rgb(212,59,54)" fg:x="6841" fg:w="2"/><text x="81.8664%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.5592%" y="661" width="0.0119%" height="15" fill="rgb(206,121,24)" fg:x="6842" fg:w="1"/><text x="81.8783%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="81.5592%" y="645" width="0.0119%" height="15" fill="rgb(235,38,8)" fg:x="6842" fg:w="1"/><text x="81.8783%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.5711%" y="677" width="0.0119%" height="15" fill="rgb(227,102,26)" fg:x="6843" fg:w="1"/><text x="81.8902%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.5711%" y="661" width="0.0119%" height="15" fill="rgb(240,183,46)" fg:x="6843" fg:w="1"/><text x="81.8902%" y="671.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.5711%" y="645" width="0.0119%" height="15" fill="rgb(208,177,23)" fg:x="6843" fg:w="1"/><text x="81.8902%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.5711%" y="629" width="0.0119%" height="15" fill="rgb(216,152,5)" fg:x="6843" fg:w="1"/><text x="81.8902%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.5711%" y="613" width="0.0119%" height="15" fill="rgb(238,199,2)" fg:x="6843" fg:w="1"/><text x="81.8902%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="81.5711%" y="597" width="0.0119%" height="15" fill="rgb(235,142,28)" fg:x="6843" fg:w="1"/><text x="81.8902%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="81.5711%" y="581" width="0.0119%" height="15" fill="rgb(225,97,25)" fg:x="6843" fg:w="1"/><text x="81.8902%" y="591.50"/></g><g><title>logic::repeat_end (7 samples, 0.08%)</title><rect x="81.5234%" y="725" width="0.0834%" height="15" fill="rgb(208,75,46)" fg:x="6839" fg:w="7"/><text x="81.8425%" y="735.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (5 samples, 0.06%)</title><rect x="81.5473%" y="709" width="0.0596%" height="15" fill="rgb(240,136,15)" fg:x="6841" fg:w="5"/><text x="81.8664%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="81.5473%" y="693" width="0.0596%" height="15" fill="rgb(235,36,27)" fg:x="6841" fg:w="5"/><text x="81.8664%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.5830%" y="677" width="0.0238%" height="15" fill="rgb(231,132,23)" fg:x="6844" fg:w="2"/><text x="81.9021%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.5830%" y="661" width="0.0238%" height="15" fill="rgb(205,208,20)" fg:x="6844" fg:w="2"/><text x="81.9021%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.5830%" y="645" width="0.0238%" height="15" fill="rgb(215,26,40)" fg:x="6844" fg:w="2"/><text x="81.9021%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.5830%" y="629" width="0.0238%" height="15" fill="rgb(238,183,34)" fg:x="6844" fg:w="2"/><text x="81.9021%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.5830%" y="613" width="0.0238%" height="15" fill="rgb(207,96,10)" fg:x="6844" fg:w="2"/><text x="81.9021%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.5830%" y="597" width="0.0238%" height="15" fill="rgb(218,88,6)" fg:x="6844" fg:w="2"/><text x="81.9021%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.5830%" y="581" width="0.0238%" height="15" fill="rgb(217,22,49)" fg:x="6844" fg:w="2"/><text x="81.9021%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.5830%" y="565" width="0.0238%" height="15" fill="rgb(240,195,14)" fg:x="6844" fg:w="2"/><text x="81.9021%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.5830%" y="549" width="0.0238%" height="15" fill="rgb(229,48,27)" fg:x="6844" fg:w="2"/><text x="81.9021%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.5830%" y="533" width="0.0238%" height="15" fill="rgb(220,194,45)" fg:x="6844" fg:w="2"/><text x="81.9021%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.5830%" y="517" width="0.0238%" height="15" fill="rgb(252,60,20)" fg:x="6844" fg:w="2"/><text x="81.9021%" y="527.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="81.5830%" y="501" width="0.0238%" height="15" fill="rgb(244,169,33)" fg:x="6844" fg:w="2"/><text x="81.9021%" y="511.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="81.5830%" y="485" width="0.0238%" height="15" fill="rgb(234,141,34)" fg:x="6844" fg:w="2"/><text x="81.9021%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="81.6069%" y="709" width="0.0477%" height="15" fill="rgb(241,141,9)" fg:x="6846" fg:w="4"/><text x="81.9260%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="81.6069%" y="693" width="0.0477%" height="15" fill="rgb(246,27,36)" fg:x="6846" fg:w="4"/><text x="81.9260%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="81.6069%" y="677" width="0.0477%" height="15" fill="rgb(216,188,42)" fg:x="6846" fg:w="4"/><text x="81.9260%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="81.6069%" y="661" width="0.0477%" height="15" fill="rgb(234,205,22)" fg:x="6846" fg:w="4"/><text x="81.9260%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="81.6069%" y="645" width="0.0477%" height="15" fill="rgb(210,202,32)" fg:x="6846" fg:w="4"/><text x="81.9260%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="81.6069%" y="629" width="0.0477%" height="15" fill="rgb(217,0,48)" fg:x="6846" fg:w="4"/><text x="81.9260%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="81.6069%" y="613" width="0.0477%" height="15" fill="rgb(207,115,37)" fg:x="6846" fg:w="4"/><text x="81.9260%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="81.6069%" y="597" width="0.0477%" height="15" fill="rgb(237,221,44)" fg:x="6846" fg:w="4"/><text x="81.9260%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="81.6069%" y="581" width="0.0477%" height="15" fill="rgb(249,78,2)" fg:x="6846" fg:w="4"/><text x="81.9260%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="81.6069%" y="565" width="0.0477%" height="15" fill="rgb(211,169,23)" fg:x="6846" fg:w="4"/><text x="81.9260%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="81.6069%" y="549" width="0.0477%" height="15" fill="rgb(207,116,29)" fg:x="6846" fg:w="4"/><text x="81.9260%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="81.6069%" y="533" width="0.0477%" height="15" fill="rgb(240,84,33)" fg:x="6846" fg:w="4"/><text x="81.9260%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="81.6069%" y="517" width="0.0477%" height="15" fill="rgb(229,224,31)" fg:x="6846" fg:w="4"/><text x="81.9260%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="81.6069%" y="501" width="0.0477%" height="15" fill="rgb(227,90,31)" fg:x="6846" fg:w="4"/><text x="81.9260%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="81.6069%" y="485" width="0.0477%" height="15" fill="rgb(249,22,41)" fg:x="6846" fg:w="4"/><text x="81.9260%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="81.6069%" y="469" width="0.0477%" height="15" fill="rgb(239,65,11)" fg:x="6846" fg:w="4"/><text x="81.9260%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="81.6069%" y="453" width="0.0477%" height="15" fill="rgb(205,5,23)" fg:x="6846" fg:w="4"/><text x="81.9260%" y="463.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="81.6069%" y="437" width="0.0477%" height="15" fill="rgb(254,78,52)" fg:x="6846" fg:w="4"/><text x="81.9260%" y="447.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="81.6069%" y="421" width="0.0477%" height="15" fill="rgb(214,156,33)" fg:x="6846" fg:w="4"/><text x="81.9260%" y="431.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="81.6188%" y="405" width="0.0358%" height="15" fill="rgb(208,20,30)" fg:x="6847" fg:w="3"/><text x="81.9379%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.6545%" y="645" width="0.0119%" height="15" fill="rgb(223,133,18)" fg:x="6850" fg:w="1"/><text x="81.9736%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.6545%" y="629" width="0.0119%" height="15" fill="rgb(222,91,41)" fg:x="6850" fg:w="1"/><text x="81.9736%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.6545%" y="613" width="0.0119%" height="15" fill="rgb(247,137,48)" fg:x="6850" fg:w="1"/><text x="81.9736%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.6545%" y="597" width="0.0119%" height="15" fill="rgb(239,156,11)" fg:x="6850" fg:w="1"/><text x="81.9736%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.6545%" y="581" width="0.0119%" height="15" fill="rgb(244,56,26)" fg:x="6850" fg:w="1"/><text x="81.9736%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.6545%" y="565" width="0.0119%" height="15" fill="rgb(205,131,49)" fg:x="6850" fg:w="1"/><text x="81.9736%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.6545%" y="549" width="0.0119%" height="15" fill="rgb(224,0,2)" fg:x="6850" fg:w="1"/><text x="81.9736%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.6665%" y="501" width="0.0119%" height="15" fill="rgb(247,59,36)" fg:x="6851" fg:w="1"/><text x="81.9856%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.6665%" y="485" width="0.0119%" height="15" fill="rgb(215,4,47)" fg:x="6851" fg:w="1"/><text x="81.9856%" y="495.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="81.6665%" y="469" width="0.0119%" height="15" fill="rgb(242,72,42)" fg:x="6851" fg:w="1"/><text x="81.9856%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.6784%" y="421" width="0.0238%" height="15" fill="rgb(232,145,44)" fg:x="6852" fg:w="2"/><text x="81.9975%" y="431.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.6784%" y="405" width="0.0238%" height="15" fill="rgb(205,108,43)" fg:x="6852" fg:w="2"/><text x="81.9975%" y="415.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="81.6784%" y="389" width="0.0238%" height="15" fill="rgb(215,190,17)" fg:x="6852" fg:w="2"/><text x="81.9975%" y="399.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="81.6784%" y="373" width="0.0238%" height="15" fill="rgb(223,90,34)" fg:x="6852" fg:w="2"/><text x="81.9975%" y="383.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="81.6784%" y="357" width="0.0238%" height="15" fill="rgb(216,25,0)" fg:x="6852" fg:w="2"/><text x="81.9975%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="81.6665%" y="517" width="0.0477%" height="15" fill="rgb(223,51,28)" fg:x="6851" fg:w="4"/><text x="81.9856%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="81.6784%" y="501" width="0.0358%" height="15" fill="rgb(227,131,7)" fg:x="6852" fg:w="3"/><text x="81.9975%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.6784%" y="485" width="0.0358%" height="15" fill="rgb(216,72,36)" fg:x="6852" fg:w="3"/><text x="81.9975%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="81.6784%" y="469" width="0.0358%" height="15" fill="rgb(243,158,40)" fg:x="6852" fg:w="3"/><text x="81.9975%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.6784%" y="453" width="0.0358%" height="15" fill="rgb(218,60,54)" fg:x="6852" fg:w="3"/><text x="81.9975%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="81.6784%" y="437" width="0.0358%" height="15" fill="rgb(230,15,46)" fg:x="6852" fg:w="3"/><text x="81.9975%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.7022%" y="421" width="0.0119%" height="15" fill="rgb(250,22,26)" fg:x="6854" fg:w="1"/><text x="82.0213%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.7022%" y="405" width="0.0119%" height="15" fill="rgb(239,194,40)" fg:x="6854" fg:w="1"/><text x="82.0213%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.7022%" y="389" width="0.0119%" height="15" fill="rgb(219,62,9)" fg:x="6854" fg:w="1"/><text x="82.0213%" y="399.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.7022%" y="373" width="0.0119%" height="15" fill="rgb(228,45,21)" fg:x="6854" fg:w="1"/><text x="82.0213%" y="383.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="81.7022%" y="357" width="0.0119%" height="15" fill="rgb(242,56,44)" fg:x="6854" fg:w="1"/><text x="82.0213%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.7022%" y="341" width="0.0119%" height="15" fill="rgb(239,170,14)" fg:x="6854" fg:w="1"/><text x="82.0213%" y="351.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="81.7022%" y="325" width="0.0119%" height="15" fill="rgb(236,150,13)" fg:x="6854" fg:w="1"/><text x="82.0213%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.7022%" y="309" width="0.0119%" height="15" fill="rgb(228,15,30)" fg:x="6854" fg:w="1"/><text x="82.0213%" y="319.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="81.7022%" y="293" width="0.0119%" height="15" fill="rgb(217,43,28)" fg:x="6854" fg:w="1"/><text x="82.0213%" y="303.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.7022%" y="277" width="0.0119%" height="15" fill="rgb(246,223,1)" fg:x="6854" fg:w="1"/><text x="82.0213%" y="287.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.7022%" y="261" width="0.0119%" height="15" fill="rgb(247,103,7)" fg:x="6854" fg:w="1"/><text x="82.0213%" y="271.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.7022%" y="245" width="0.0119%" height="15" fill="rgb(205,105,39)" fg:x="6854" fg:w="1"/><text x="82.0213%" y="255.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="81.6545%" y="677" width="0.0715%" height="15" fill="rgb(216,134,18)" fg:x="6850" fg:w="6"/><text x="81.9736%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="81.6545%" y="661" width="0.0715%" height="15" fill="rgb(226,139,50)" fg:x="6850" fg:w="6"/><text x="81.9736%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="81.6665%" y="645" width="0.0596%" height="15" fill="rgb(251,152,38)" fg:x="6851" fg:w="5"/><text x="81.9856%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="81.6665%" y="629" width="0.0596%" height="15" fill="rgb(222,63,15)" fg:x="6851" fg:w="5"/><text x="81.9856%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="81.6665%" y="613" width="0.0596%" height="15" fill="rgb(212,198,28)" fg:x="6851" fg:w="5"/><text x="81.9856%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="81.6665%" y="597" width="0.0596%" height="15" fill="rgb(216,93,38)" fg:x="6851" fg:w="5"/><text x="81.9856%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="81.6665%" y="581" width="0.0596%" height="15" fill="rgb(247,202,44)" fg:x="6851" fg:w="5"/><text x="81.9856%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="81.6665%" y="565" width="0.0596%" height="15" fill="rgb(237,204,46)" fg:x="6851" fg:w="5"/><text x="81.9856%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="81.6665%" y="549" width="0.0596%" height="15" fill="rgb(224,98,48)" fg:x="6851" fg:w="5"/><text x="81.9856%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="81.6665%" y="533" width="0.0596%" height="15" fill="rgb(247,105,21)" fg:x="6851" fg:w="5"/><text x="81.9856%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.7141%" y="517" width="0.0119%" height="15" fill="rgb(212,137,52)" fg:x="6855" fg:w="1"/><text x="82.0332%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.7141%" y="501" width="0.0119%" height="15" fill="rgb(223,76,33)" fg:x="6855" fg:w="1"/><text x="82.0332%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.7141%" y="485" width="0.0119%" height="15" fill="rgb(209,156,27)" fg:x="6855" fg:w="1"/><text x="82.0332%" y="495.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="81.7261%" y="661" width="0.0238%" height="15" fill="rgb(249,81,54)" fg:x="6856" fg:w="2"/><text x="82.0452%" y="671.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="81.7261%" y="645" width="0.0238%" height="15" fill="rgb(241,46,29)" fg:x="6856" fg:w="2"/><text x="82.0452%" y="655.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="81.7261%" y="629" width="0.0238%" height="15" fill="rgb(213,193,39)" fg:x="6856" fg:w="2"/><text x="82.0452%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.7499%" y="565" width="0.0119%" height="15" fill="rgb(214,85,16)" fg:x="6858" fg:w="1"/><text x="82.0690%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.7499%" y="549" width="0.0119%" height="15" fill="rgb(216,184,17)" fg:x="6858" fg:w="1"/><text x="82.0690%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.7618%" y="485" width="0.0119%" height="15" fill="rgb(254,219,29)" fg:x="6859" fg:w="1"/><text x="82.0809%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.7618%" y="469" width="0.0119%" height="15" fill="rgb(209,148,34)" fg:x="6859" fg:w="1"/><text x="82.0809%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.7618%" y="453" width="0.0119%" height="15" fill="rgb(253,215,11)" fg:x="6859" fg:w="1"/><text x="82.0809%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.7618%" y="437" width="0.0119%" height="15" fill="rgb(232,126,20)" fg:x="6859" fg:w="1"/><text x="82.0809%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.7618%" y="421" width="0.0119%" height="15" fill="rgb(248,118,51)" fg:x="6859" fg:w="1"/><text x="82.0809%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.7618%" y="405" width="0.0119%" height="15" fill="rgb(226,121,21)" fg:x="6859" fg:w="1"/><text x="82.0809%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.7618%" y="389" width="0.0119%" height="15" fill="rgb(216,128,16)" fg:x="6859" fg:w="1"/><text x="82.0809%" y="399.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.7618%" y="373" width="0.0119%" height="15" fill="rgb(205,17,9)" fg:x="6859" fg:w="1"/><text x="82.0809%" y="383.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.7618%" y="357" width="0.0119%" height="15" fill="rgb(206,197,21)" fg:x="6859" fg:w="1"/><text x="82.0809%" y="367.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="81.7618%" y="341" width="0.0119%" height="15" fill="rgb(212,202,9)" fg:x="6859" fg:w="1"/><text x="82.0809%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.7499%" y="645" width="0.0358%" height="15" fill="rgb(241,131,50)" fg:x="6858" fg:w="3"/><text x="82.0690%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="81.7499%" y="629" width="0.0358%" height="15" fill="rgb(228,115,51)" fg:x="6858" fg:w="3"/><text x="82.0690%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.7499%" y="613" width="0.0358%" height="15" fill="rgb(237,209,8)" fg:x="6858" fg:w="3"/><text x="82.0690%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="81.7499%" y="597" width="0.0358%" height="15" fill="rgb(241,121,28)" fg:x="6858" fg:w="3"/><text x="82.0690%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.7499%" y="581" width="0.0358%" height="15" fill="rgb(238,194,51)" fg:x="6858" fg:w="3"/><text x="82.0690%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.7618%" y="565" width="0.0238%" height="15" fill="rgb(208,41,39)" fg:x="6859" fg:w="2"/><text x="82.0809%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.7618%" y="549" width="0.0238%" height="15" fill="rgb(223,95,44)" fg:x="6859" fg:w="2"/><text x="82.0809%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.7618%" y="533" width="0.0238%" height="15" fill="rgb(253,98,40)" fg:x="6859" fg:w="2"/><text x="82.0809%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.7618%" y="517" width="0.0238%" height="15" fill="rgb(210,5,12)" fg:x="6859" fg:w="2"/><text x="82.0809%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.7618%" y="501" width="0.0238%" height="15" fill="rgb(233,201,23)" fg:x="6859" fg:w="2"/><text x="82.0809%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.7738%" y="485" width="0.0119%" height="15" fill="rgb(251,68,15)" fg:x="6860" fg:w="1"/><text x="82.0929%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.7738%" y="469" width="0.0119%" height="15" fill="rgb(243,10,46)" fg:x="6860" fg:w="1"/><text x="82.0929%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.7738%" y="453" width="0.0119%" height="15" fill="rgb(253,130,44)" fg:x="6860" fg:w="1"/><text x="82.0929%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.7738%" y="437" width="0.0119%" height="15" fill="rgb(244,5,26)" fg:x="6860" fg:w="1"/><text x="82.0929%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.7738%" y="421" width="0.0119%" height="15" fill="rgb(220,126,20)" fg:x="6860" fg:w="1"/><text x="82.0929%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.7738%" y="405" width="0.0119%" height="15" fill="rgb(212,188,29)" fg:x="6860" fg:w="1"/><text x="82.0929%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.7738%" y="389" width="0.0119%" height="15" fill="rgb(227,194,48)" fg:x="6860" fg:w="1"/><text x="82.0929%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.7738%" y="373" width="0.0119%" height="15" fill="rgb(245,64,28)" fg:x="6860" fg:w="1"/><text x="82.0929%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.7738%" y="357" width="0.0119%" height="15" fill="rgb(205,44,7)" fg:x="6860" fg:w="1"/><text x="82.0929%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.7738%" y="341" width="0.0119%" height="15" fill="rgb(213,193,11)" fg:x="6860" fg:w="1"/><text x="82.0929%" y="351.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="81.7738%" y="325" width="0.0119%" height="15" fill="rgb(238,157,6)" fg:x="6860" fg:w="1"/><text x="82.0929%" y="335.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="81.7857%" y="597" width="0.0238%" height="15" fill="rgb(222,73,7)" fg:x="6861" fg:w="2"/><text x="82.1048%" y="607.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="81.7857%" y="581" width="0.0238%" height="15" fill="rgb(224,78,15)" fg:x="6861" fg:w="2"/><text x="82.1048%" y="591.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="81.7857%" y="565" width="0.0238%" height="15" fill="rgb(218,149,46)" fg:x="6861" fg:w="2"/><text x="82.1048%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.7857%" y="645" width="0.0358%" height="15" fill="rgb(218,175,44)" fg:x="6861" fg:w="3"/><text x="82.1048%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="81.7857%" y="629" width="0.0358%" height="15" fill="rgb(215,183,45)" fg:x="6861" fg:w="3"/><text x="82.1048%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.7857%" y="613" width="0.0358%" height="15" fill="rgb(226,116,37)" fg:x="6861" fg:w="3"/><text x="82.1048%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.8095%" y="597" width="0.0119%" height="15" fill="rgb(252,224,12)" fg:x="6863" fg:w="1"/><text x="82.1286%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.8095%" y="581" width="0.0119%" height="15" fill="rgb(232,212,21)" fg:x="6863" fg:w="1"/><text x="82.1286%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.8095%" y="565" width="0.0119%" height="15" fill="rgb(226,191,16)" fg:x="6863" fg:w="1"/><text x="82.1286%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.8095%" y="549" width="0.0119%" height="15" fill="rgb(231,156,11)" fg:x="6863" fg:w="1"/><text x="82.1286%" y="559.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.8095%" y="533" width="0.0119%" height="15" fill="rgb(225,134,49)" fg:x="6863" fg:w="1"/><text x="82.1286%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.8095%" y="517" width="0.0119%" height="15" fill="rgb(254,55,32)" fg:x="6863" fg:w="1"/><text x="82.1286%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.8095%" y="501" width="0.0119%" height="15" fill="rgb(242,195,29)" fg:x="6863" fg:w="1"/><text x="82.1286%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.8095%" y="485" width="0.0119%" height="15" fill="rgb(210,155,20)" fg:x="6863" fg:w="1"/><text x="82.1286%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.8095%" y="469" width="0.0119%" height="15" fill="rgb(243,170,23)" fg:x="6863" fg:w="1"/><text x="82.1286%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.8095%" y="453" width="0.0119%" height="15" fill="rgb(242,197,51)" fg:x="6863" fg:w="1"/><text x="82.1286%" y="463.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.8095%" y="437" width="0.0119%" height="15" fill="rgb(248,48,13)" fg:x="6863" fg:w="1"/><text x="82.1286%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.8214%" y="645" width="0.0119%" height="15" fill="rgb(221,185,15)" fg:x="6864" fg:w="1"/><text x="82.1405%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.8214%" y="629" width="0.0119%" height="15" fill="rgb(244,49,7)" fg:x="6864" fg:w="1"/><text x="82.1405%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.8214%" y="613" width="0.0119%" height="15" fill="rgb(213,182,52)" fg:x="6864" fg:w="1"/><text x="82.1405%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.8214%" y="597" width="0.0119%" height="15" fill="rgb(209,15,45)" fg:x="6864" fg:w="1"/><text x="82.1405%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.8214%" y="581" width="0.0119%" height="15" fill="rgb(233,23,44)" fg:x="6864" fg:w="1"/><text x="82.1405%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.8214%" y="565" width="0.0119%" height="15" fill="rgb(220,182,30)" fg:x="6864" fg:w="1"/><text x="82.1405%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.8214%" y="549" width="0.0119%" height="15" fill="rgb(219,116,33)" fg:x="6864" fg:w="1"/><text x="82.1405%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.8214%" y="533" width="0.0119%" height="15" fill="rgb(231,15,21)" fg:x="6864" fg:w="1"/><text x="82.1405%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.8214%" y="517" width="0.0119%" height="15" fill="rgb(238,119,25)" fg:x="6864" fg:w="1"/><text x="82.1405%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.8214%" y="501" width="0.0119%" height="15" fill="rgb(232,30,39)" fg:x="6864" fg:w="1"/><text x="82.1405%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.8214%" y="485" width="0.0119%" height="15" fill="rgb(241,26,30)" fg:x="6864" fg:w="1"/><text x="82.1405%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.8214%" y="469" width="0.0119%" height="15" fill="rgb(234,154,4)" fg:x="6864" fg:w="1"/><text x="82.1405%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.8214%" y="453" width="0.0119%" height="15" fill="rgb(229,199,39)" fg:x="6864" fg:w="1"/><text x="82.1405%" y="463.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.8214%" y="437" width="0.0119%" height="15" fill="rgb(236,213,10)" fg:x="6864" fg:w="1"/><text x="82.1405%" y="447.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="81.8214%" y="421" width="0.0119%" height="15" fill="rgb(247,28,19)" fg:x="6864" fg:w="1"/><text x="82.1405%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.8334%" y="613" width="0.0238%" height="15" fill="rgb(239,199,24)" fg:x="6865" fg:w="2"/><text x="82.1525%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.8334%" y="597" width="0.0238%" height="15" fill="rgb(246,122,13)" fg:x="6865" fg:w="2"/><text x="82.1525%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.8334%" y="581" width="0.0238%" height="15" fill="rgb(210,203,29)" fg:x="6865" fg:w="2"/><text x="82.1525%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.8334%" y="565" width="0.0238%" height="15" fill="rgb(218,4,50)" fg:x="6865" fg:w="2"/><text x="82.1525%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.8334%" y="549" width="0.0238%" height="15" fill="rgb(236,142,48)" fg:x="6865" fg:w="2"/><text x="82.1525%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.8334%" y="533" width="0.0238%" height="15" fill="rgb(245,173,2)" fg:x="6865" fg:w="2"/><text x="82.1525%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.8334%" y="517" width="0.0238%" height="15" fill="rgb(244,196,18)" fg:x="6865" fg:w="2"/><text x="82.1525%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.8334%" y="501" width="0.0238%" height="15" fill="rgb(221,27,33)" fg:x="6865" fg:w="2"/><text x="82.1525%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.8334%" y="485" width="0.0238%" height="15" fill="rgb(210,206,16)" fg:x="6865" fg:w="2"/><text x="82.1525%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.8334%" y="469" width="0.0238%" height="15" fill="rgb(238,161,34)" fg:x="6865" fg:w="2"/><text x="82.1525%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.8334%" y="453" width="0.0238%" height="15" fill="rgb(243,118,39)" fg:x="6865" fg:w="2"/><text x="82.1525%" y="463.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="81.8334%" y="437" width="0.0238%" height="15" fill="rgb(234,126,9)" fg:x="6865" fg:w="2"/><text x="82.1525%" y="447.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="81.8334%" y="421" width="0.0238%" height="15" fill="rgb(234,167,42)" fg:x="6865" fg:w="2"/><text x="82.1525%" y="431.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="81.8334%" y="405" width="0.0238%" height="15" fill="rgb(238,54,48)" fg:x="6865" fg:w="2"/><text x="82.1525%" y="415.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.8572%" y="501" width="0.0119%" height="15" fill="rgb(226,105,2)" fg:x="6867" fg:w="1"/><text x="82.1763%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.8572%" y="485" width="0.0119%" height="15" fill="rgb(223,95,23)" fg:x="6867" fg:w="1"/><text x="82.1763%" y="495.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="81.8572%" y="469" width="0.0119%" height="15" fill="rgb(249,212,19)" fg:x="6867" fg:w="1"/><text x="82.1763%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.8572%" y="581" width="0.0238%" height="15" fill="rgb(234,158,54)" fg:x="6867" fg:w="2"/><text x="82.1763%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.8572%" y="565" width="0.0238%" height="15" fill="rgb(247,114,32)" fg:x="6867" fg:w="2"/><text x="82.1763%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.8572%" y="549" width="0.0238%" height="15" fill="rgb(250,68,44)" fg:x="6867" fg:w="2"/><text x="82.1763%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.8572%" y="533" width="0.0238%" height="15" fill="rgb(242,3,15)" fg:x="6867" fg:w="2"/><text x="82.1763%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.8572%" y="517" width="0.0238%" height="15" fill="rgb(223,110,32)" fg:x="6867" fg:w="2"/><text x="82.1763%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.8691%" y="501" width="0.0119%" height="15" fill="rgb(216,26,54)" fg:x="6868" fg:w="1"/><text x="82.1882%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.8691%" y="485" width="0.0119%" height="15" fill="rgb(209,145,42)" fg:x="6868" fg:w="1"/><text x="82.1882%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.8691%" y="469" width="0.0119%" height="15" fill="rgb(240,111,53)" fg:x="6868" fg:w="1"/><text x="82.1882%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.8691%" y="453" width="0.0119%" height="15" fill="rgb(209,101,4)" fg:x="6868" fg:w="1"/><text x="82.1882%" y="463.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.8691%" y="437" width="0.0119%" height="15" fill="rgb(231,74,29)" fg:x="6868" fg:w="1"/><text x="82.1882%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.8691%" y="421" width="0.0119%" height="15" fill="rgb(223,12,12)" fg:x="6868" fg:w="1"/><text x="82.1882%" y="431.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.8691%" y="405" width="0.0119%" height="15" fill="rgb(207,162,2)" fg:x="6868" fg:w="1"/><text x="82.1882%" y="415.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="81.8810%" y="373" width="0.0238%" height="15" fill="rgb(230,152,0)" fg:x="6869" fg:w="2"/><text x="82.2001%" y="383.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="81.8810%" y="357" width="0.0238%" height="15" fill="rgb(254,156,19)" fg:x="6869" fg:w="2"/><text x="82.2001%" y="367.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="81.8810%" y="341" width="0.0238%" height="15" fill="rgb(250,28,0)" fg:x="6869" fg:w="2"/><text x="82.2001%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="81.8810%" y="437" width="0.0358%" height="15" fill="rgb(253,27,5)" fg:x="6869" fg:w="3"/><text x="82.2001%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.8810%" y="421" width="0.0358%" height="15" fill="rgb(244,154,7)" fg:x="6869" fg:w="3"/><text x="82.2001%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="81.8810%" y="405" width="0.0358%" height="15" fill="rgb(242,108,21)" fg:x="6869" fg:w="3"/><text x="82.2001%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.8810%" y="389" width="0.0358%" height="15" fill="rgb(254,200,38)" fg:x="6869" fg:w="3"/><text x="82.2001%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.9049%" y="373" width="0.0119%" height="15" fill="rgb(250,145,41)" fg:x="6871" fg:w="1"/><text x="82.2240%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9049%" y="357" width="0.0119%" height="15" fill="rgb(235,136,31)" fg:x="6871" fg:w="1"/><text x="82.2240%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.9049%" y="341" width="0.0119%" height="15" fill="rgb(215,13,18)" fg:x="6871" fg:w="1"/><text x="82.2240%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9049%" y="325" width="0.0119%" height="15" fill="rgb(238,199,12)" fg:x="6871" fg:w="1"/><text x="82.2240%" y="335.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9049%" y="309" width="0.0119%" height="15" fill="rgb(242,179,49)" fg:x="6871" fg:w="1"/><text x="82.2240%" y="319.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.9049%" y="293" width="0.0119%" height="15" fill="rgb(214,10,44)" fg:x="6871" fg:w="1"/><text x="82.2240%" y="303.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9049%" y="277" width="0.0119%" height="15" fill="rgb(229,181,11)" fg:x="6871" fg:w="1"/><text x="82.2240%" y="287.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.9049%" y="261" width="0.0119%" height="15" fill="rgb(244,155,10)" fg:x="6871" fg:w="1"/><text x="82.2240%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9049%" y="245" width="0.0119%" height="15" fill="rgb(254,13,48)" fg:x="6871" fg:w="1"/><text x="82.2240%" y="255.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="81.8810%" y="517" width="0.0477%" height="15" fill="rgb(210,164,6)" fg:x="6869" fg:w="4"/><text x="82.2001%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="81.8810%" y="501" width="0.0477%" height="15" fill="rgb(216,187,40)" fg:x="6869" fg:w="4"/><text x="82.2001%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="81.8810%" y="485" width="0.0477%" height="15" fill="rgb(208,143,21)" fg:x="6869" fg:w="4"/><text x="82.2001%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="81.8810%" y="469" width="0.0477%" height="15" fill="rgb(211,73,41)" fg:x="6869" fg:w="4"/><text x="82.2001%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="81.8810%" y="453" width="0.0477%" height="15" fill="rgb(244,69,21)" fg:x="6869" fg:w="4"/><text x="82.2001%" y="463.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.9168%" y="437" width="0.0119%" height="15" fill="rgb(230,152,32)" fg:x="6872" fg:w="1"/><text x="82.2359%" y="447.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9168%" y="421" width="0.0119%" height="15" fill="rgb(208,110,18)" fg:x="6872" fg:w="1"/><text x="82.2359%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.9168%" y="405" width="0.0119%" height="15" fill="rgb(214,201,49)" fg:x="6872" fg:w="1"/><text x="82.2359%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9168%" y="389" width="0.0119%" height="15" fill="rgb(253,153,27)" fg:x="6872" fg:w="1"/><text x="82.2359%" y="399.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.9168%" y="373" width="0.0119%" height="15" fill="rgb(238,61,11)" fg:x="6872" fg:w="1"/><text x="82.2359%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9168%" y="357" width="0.0119%" height="15" fill="rgb(227,84,2)" fg:x="6872" fg:w="1"/><text x="82.2359%" y="367.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.9168%" y="341" width="0.0119%" height="15" fill="rgb(233,52,8)" fg:x="6872" fg:w="1"/><text x="82.2359%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9168%" y="325" width="0.0119%" height="15" fill="rgb(209,136,13)" fg:x="6872" fg:w="1"/><text x="82.2359%" y="335.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.9168%" y="309" width="0.0119%" height="15" fill="rgb(229,86,25)" fg:x="6872" fg:w="1"/><text x="82.2359%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9168%" y="293" width="0.0119%" height="15" fill="rgb(235,47,16)" fg:x="6872" fg:w="1"/><text x="82.2359%" y="303.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.9168%" y="277" width="0.0119%" height="15" fill="rgb(231,186,4)" fg:x="6872" fg:w="1"/><text x="82.2359%" y="287.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.9168%" y="261" width="0.0119%" height="15" fill="rgb(209,213,23)" fg:x="6872" fg:w="1"/><text x="82.2359%" y="271.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="81.9168%" y="245" width="0.0119%" height="15" fill="rgb(212,142,47)" fg:x="6872" fg:w="1"/><text x="82.2359%" y="255.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.9287%" y="405" width="0.0119%" height="15" fill="rgb(251,86,24)" fg:x="6873" fg:w="1"/><text x="82.2478%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9287%" y="389" width="0.0119%" height="15" fill="rgb(206,217,17)" fg:x="6873" fg:w="1"/><text x="82.2478%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.9287%" y="373" width="0.0119%" height="15" fill="rgb(248,92,38)" fg:x="6873" fg:w="1"/><text x="82.2478%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9287%" y="357" width="0.0119%" height="15" fill="rgb(214,25,29)" fg:x="6873" fg:w="1"/><text x="82.2478%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.9287%" y="341" width="0.0119%" height="15" fill="rgb(245,117,13)" fg:x="6873" fg:w="1"/><text x="82.2478%" y="351.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.9287%" y="325" width="0.0119%" height="15" fill="rgb(205,169,9)" fg:x="6873" fg:w="1"/><text x="82.2478%" y="335.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="81.9287%" y="309" width="0.0119%" height="15" fill="rgb(223,134,38)" fg:x="6873" fg:w="1"/><text x="82.2478%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9406%" y="357" width="0.0119%" height="15" fill="rgb(249,129,49)" fg:x="6874" fg:w="1"/><text x="82.2597%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.9406%" y="341" width="0.0119%" height="15" fill="rgb(229,157,45)" fg:x="6874" fg:w="1"/><text x="82.2597%" y="351.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.9406%" y="325" width="0.0119%" height="15" fill="rgb(232,159,11)" fg:x="6874" fg:w="1"/><text x="82.2597%" y="335.50"/></g><g><title>parser::operator+ (30 samples, 0.36%)</title><rect x="81.6069%" y="725" width="0.3576%" height="15" fill="rgb(230,134,26)" fg:x="6846" fg:w="30"/><text x="81.9260%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="81.6545%" y="709" width="0.3099%" height="15" fill="rgb(234,149,40)" fg:x="6850" fg:w="26"/><text x="81.9736%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (26 samples, 0.31%)</title><rect x="81.6545%" y="693" width="0.3099%" height="15" fill="rgb(221,122,15)" fg:x="6850" fg:w="26"/><text x="81.9736%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (20 samples, 0.24%)</title><rect x="81.7261%" y="677" width="0.2384%" height="15" fill="rgb(228,127,0)" fg:x="6856" fg:w="20"/><text x="82.0452%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (18 samples, 0.21%)</title><rect x="81.7499%" y="661" width="0.2146%" height="15" fill="rgb(248,37,7)" fg:x="6858" fg:w="18"/><text x="82.0690%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="81.8334%" y="645" width="0.1311%" height="15" fill="rgb(215,140,49)" fg:x="6865" fg:w="11"/><text x="82.1525%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="81.8334%" y="629" width="0.1311%" height="15" fill="rgb(236,65,39)" fg:x="6865" fg:w="11"/><text x="82.1525%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="81.8572%" y="613" width="0.1073%" height="15" fill="rgb(253,102,38)" fg:x="6867" fg:w="9"/><text x="82.1763%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="81.8572%" y="597" width="0.1073%" height="15" fill="rgb(244,100,34)" fg:x="6867" fg:w="9"/><text x="82.1763%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="81.8810%" y="581" width="0.0834%" height="15" fill="rgb(210,179,47)" fg:x="6869" fg:w="7"/><text x="82.2001%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="81.8810%" y="565" width="0.0834%" height="15" fill="rgb(231,41,37)" fg:x="6869" fg:w="7"/><text x="82.2001%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="81.8810%" y="549" width="0.0834%" height="15" fill="rgb(226,209,17)" fg:x="6869" fg:w="7"/><text x="82.2001%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="81.8810%" y="533" width="0.0834%" height="15" fill="rgb(231,154,20)" fg:x="6869" fg:w="7"/><text x="82.2001%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.9287%" y="517" width="0.0358%" height="15" fill="rgb(216,134,24)" fg:x="6873" fg:w="3"/><text x="82.2478%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="81.9287%" y="501" width="0.0358%" height="15" fill="rgb(224,71,42)" fg:x="6873" fg:w="3"/><text x="82.2478%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.9287%" y="485" width="0.0358%" height="15" fill="rgb(250,65,23)" fg:x="6873" fg:w="3"/><text x="82.2478%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="81.9287%" y="469" width="0.0358%" height="15" fill="rgb(209,160,35)" fg:x="6873" fg:w="3"/><text x="82.2478%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.9287%" y="453" width="0.0358%" height="15" fill="rgb(215,8,11)" fg:x="6873" fg:w="3"/><text x="82.2478%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="81.9287%" y="437" width="0.0358%" height="15" fill="rgb(227,27,12)" fg:x="6873" fg:w="3"/><text x="82.2478%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="81.9287%" y="421" width="0.0358%" height="15" fill="rgb(226,111,41)" fg:x="6873" fg:w="3"/><text x="82.2478%" y="431.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.9406%" y="405" width="0.0238%" height="15" fill="rgb(212,195,15)" fg:x="6874" fg:w="2"/><text x="82.2597%" y="415.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.9406%" y="389" width="0.0238%" height="15" fill="rgb(216,191,17)" fg:x="6874" fg:w="2"/><text x="82.2597%" y="399.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="81.9406%" y="373" width="0.0238%" height="15" fill="rgb(215,57,44)" fg:x="6874" fg:w="2"/><text x="82.2597%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9526%" y="357" width="0.0119%" height="15" fill="rgb(209,38,4)" fg:x="6875" fg:w="1"/><text x="82.2717%" y="367.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.9526%" y="341" width="0.0119%" height="15" fill="rgb(238,49,31)" fg:x="6875" fg:w="1"/><text x="82.2717%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9526%" y="325" width="0.0119%" height="15" fill="rgb(219,48,39)" fg:x="6875" fg:w="1"/><text x="82.2717%" y="335.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.9526%" y="309" width="0.0119%" height="15" fill="rgb(252,223,43)" fg:x="6875" fg:w="1"/><text x="82.2717%" y="319.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9526%" y="293" width="0.0119%" height="15" fill="rgb(247,205,46)" fg:x="6875" fg:w="1"/><text x="82.2717%" y="303.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.9526%" y="277" width="0.0119%" height="15" fill="rgb(231,16,40)" fg:x="6875" fg:w="1"/><text x="82.2717%" y="287.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9526%" y="261" width="0.0119%" height="15" fill="rgb(231,115,5)" fg:x="6875" fg:w="1"/><text x="82.2717%" y="271.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="81.9526%" y="245" width="0.0119%" height="15" fill="rgb(206,127,43)" fg:x="6875" fg:w="1"/><text x="82.2717%" y="255.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9526%" y="229" width="0.0119%" height="15" fill="rgb(218,101,9)" fg:x="6875" fg:w="1"/><text x="82.2717%" y="239.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9526%" y="213" width="0.0119%" height="15" fill="rgb(235,138,50)" fg:x="6875" fg:w="1"/><text x="82.2717%" y="223.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="81.9526%" y="197" width="0.0119%" height="15" fill="rgb(214,197,52)" fg:x="6875" fg:w="1"/><text x="82.2717%" y="207.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="81.9526%" y="181" width="0.0119%" height="15" fill="rgb(230,80,19)" fg:x="6875" fg:w="1"/><text x="82.2717%" y="191.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9645%" y="725" width="0.0119%" height="15" fill="rgb(224,77,16)" fg:x="6876" fg:w="1"/><text x="82.2836%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9645%" y="709" width="0.0119%" height="15" fill="rgb(246,4,13)" fg:x="6876" fg:w="1"/><text x="82.2836%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9645%" y="693" width="0.0119%" height="15" fill="rgb(220,177,26)" fg:x="6876" fg:w="1"/><text x="82.2836%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9645%" y="677" width="0.0119%" height="15" fill="rgb(215,114,45)" fg:x="6876" fg:w="1"/><text x="82.2836%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9645%" y="661" width="0.0119%" height="15" fill="rgb(215,71,54)" fg:x="6876" fg:w="1"/><text x="82.2836%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9645%" y="645" width="0.0119%" height="15" fill="rgb(211,155,22)" fg:x="6876" fg:w="1"/><text x="82.2836%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9645%" y="629" width="0.0119%" height="15" fill="rgb(245,206,18)" fg:x="6876" fg:w="1"/><text x="82.2836%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9645%" y="613" width="0.0119%" height="15" fill="rgb(248,216,48)" fg:x="6876" fg:w="1"/><text x="82.2836%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9645%" y="597" width="0.0119%" height="15" fill="rgb(244,84,45)" fg:x="6876" fg:w="1"/><text x="82.2836%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="81.9645%" y="581" width="0.0119%" height="15" fill="rgb(245,13,45)" fg:x="6876" fg:w="1"/><text x="82.2836%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="81.9645%" y="565" width="0.0119%" height="15" fill="rgb(247,163,2)" fg:x="6876" fg:w="1"/><text x="82.2836%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9764%" y="501" width="0.0119%" height="15" fill="rgb(211,175,10)" fg:x="6877" fg:w="1"/><text x="82.2955%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="81.9764%" y="485" width="0.0119%" height="15" fill="rgb(215,186,31)" fg:x="6877" fg:w="1"/><text x="82.2955%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="81.9764%" y="469" width="0.0119%" height="15" fill="rgb(207,42,11)" fg:x="6877" fg:w="1"/><text x="82.2955%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.9764%" y="709" width="0.0238%" height="15" fill="rgb(224,197,20)" fg:x="6877" fg:w="2"/><text x="82.2955%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.9764%" y="693" width="0.0238%" height="15" fill="rgb(244,119,36)" fg:x="6877" fg:w="2"/><text x="82.2955%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.9764%" y="677" width="0.0238%" height="15" fill="rgb(250,60,27)" fg:x="6877" fg:w="2"/><text x="82.2955%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.9764%" y="661" width="0.0238%" height="15" fill="rgb(252,202,1)" fg:x="6877" fg:w="2"/><text x="82.2955%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.9764%" y="645" width="0.0238%" height="15" fill="rgb(206,53,25)" fg:x="6877" fg:w="2"/><text x="82.2955%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.9764%" y="629" width="0.0238%" height="15" fill="rgb(210,88,4)" fg:x="6877" fg:w="2"/><text x="82.2955%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.9764%" y="613" width="0.0238%" height="15" fill="rgb(211,144,28)" fg:x="6877" fg:w="2"/><text x="82.2955%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.9764%" y="597" width="0.0238%" height="15" fill="rgb(247,81,32)" fg:x="6877" fg:w="2"/><text x="82.2955%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.9764%" y="581" width="0.0238%" height="15" fill="rgb(225,192,11)" fg:x="6877" fg:w="2"/><text x="82.2955%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.9764%" y="565" width="0.0238%" height="15" fill="rgb(232,212,27)" fg:x="6877" fg:w="2"/><text x="82.2955%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.9764%" y="549" width="0.0238%" height="15" fill="rgb(239,3,29)" fg:x="6877" fg:w="2"/><text x="82.2955%" y="559.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.9764%" y="533" width="0.0238%" height="15" fill="rgb(252,225,29)" fg:x="6877" fg:w="2"/><text x="82.2955%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="81.9764%" y="517" width="0.0238%" height="15" fill="rgb(205,151,9)" fg:x="6877" fg:w="2"/><text x="82.2955%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="81.9883%" y="501" width="0.0119%" height="15" fill="rgb(216,171,47)" fg:x="6878" fg:w="1"/><text x="82.3074%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="81.9883%" y="485" width="0.0119%" height="15" fill="rgb(206,181,1)" fg:x="6878" fg:w="1"/><text x="82.3074%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="81.9883%" y="469" width="0.0119%" height="15" fill="rgb(232,218,10)" fg:x="6878" fg:w="1"/><text x="82.3074%" y="479.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="82.0002%" y="629" width="0.0119%" height="15" fill="rgb(244,222,51)" fg:x="6879" fg:w="1"/><text x="82.3193%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="82.0002%" y="613" width="0.0119%" height="15" fill="rgb(252,215,16)" fg:x="6879" fg:w="1"/><text x="82.3193%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.0002%" y="693" width="0.0238%" height="15" fill="rgb(212,130,13)" fg:x="6879" fg:w="2"/><text x="82.3193%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.0002%" y="677" width="0.0238%" height="15" fill="rgb(227,103,37)" fg:x="6879" fg:w="2"/><text x="82.3193%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.0002%" y="661" width="0.0238%" height="15" fill="rgb(249,48,15)" fg:x="6879" fg:w="2"/><text x="82.3193%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.0002%" y="645" width="0.0238%" height="15" fill="rgb(225,96,9)" fg:x="6879" fg:w="2"/><text x="82.3193%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.0122%" y="629" width="0.0119%" height="15" fill="rgb(213,81,41)" fg:x="6880" fg:w="1"/><text x="82.3313%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.0122%" y="613" width="0.0119%" height="15" fill="rgb(230,15,12)" fg:x="6880" fg:w="1"/><text x="82.3313%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.0122%" y="597" width="0.0119%" height="15" fill="rgb(218,106,37)" fg:x="6880" fg:w="1"/><text x="82.3313%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.0241%" y="693" width="0.0119%" height="15" fill="rgb(223,172,47)" fg:x="6881" fg:w="1"/><text x="82.3432%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.0241%" y="677" width="0.0119%" height="15" fill="rgb(246,180,49)" fg:x="6881" fg:w="1"/><text x="82.3432%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.0241%" y="661" width="0.0119%" height="15" fill="rgb(231,63,37)" fg:x="6881" fg:w="1"/><text x="82.3432%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.0241%" y="645" width="0.0119%" height="15" fill="rgb(235,70,40)" fg:x="6881" fg:w="1"/><text x="82.3432%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="82.0241%" y="629" width="0.0119%" height="15" fill="rgb(250,54,26)" fg:x="6881" fg:w="1"/><text x="82.3432%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="82.0241%" y="613" width="0.0119%" height="15" fill="rgb(214,190,1)" fg:x="6881" fg:w="1"/><text x="82.3432%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.0360%" y="693" width="0.0119%" height="15" fill="rgb(212,40,35)" fg:x="6882" fg:w="1"/><text x="82.3551%" y="703.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="82.0360%" y="677" width="0.0119%" height="15" fill="rgb(239,183,47)" fg:x="6882" fg:w="1"/><text x="82.3551%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="82.0479%" y="661" width="0.0119%" height="15" fill="rgb(211,171,49)" fg:x="6883" fg:w="1"/><text x="82.3670%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="82.0479%" y="645" width="0.0119%" height="15" fill="rgb(249,186,27)" fg:x="6883" fg:w="1"/><text x="82.3670%" y="655.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="82.0598%" y="645" width="0.0238%" height="15" fill="rgb(223,23,48)" fg:x="6884" fg:w="2"/><text x="82.3789%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="82.0718%" y="629" width="0.0119%" height="15" fill="rgb(209,203,21)" fg:x="6885" fg:w="1"/><text x="82.3909%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.0956%" y="629" width="0.0119%" height="15" fill="rgb(229,33,27)" fg:x="6887" fg:w="1"/><text x="82.4147%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.0956%" y="613" width="0.0119%" height="15" fill="rgb(207,8,53)" fg:x="6887" fg:w="1"/><text x="82.4147%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.0956%" y="597" width="0.0119%" height="15" fill="rgb(221,42,0)" fg:x="6887" fg:w="1"/><text x="82.4147%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.0956%" y="581" width="0.0119%" height="15" fill="rgb(223,115,3)" fg:x="6887" fg:w="1"/><text x="82.4147%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.0956%" y="565" width="0.0119%" height="15" fill="rgb(239,35,26)" fg:x="6887" fg:w="1"/><text x="82.4147%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.0956%" y="549" width="0.0119%" height="15" fill="rgb(233,22,9)" fg:x="6887" fg:w="1"/><text x="82.4147%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator&amp;(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.0956%" y="533" width="0.0119%" height="15" fill="rgb(236,221,48)" fg:x="6887" fg:w="1"/><text x="82.4147%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="82.0956%" y="517" width="0.0119%" height="15" fill="rgb(235,52,30)" fg:x="6887" fg:w="1"/><text x="82.4147%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="82.0956%" y="501" width="0.0119%" height="15" fill="rgb(238,133,51)" fg:x="6887" fg:w="1"/><text x="82.4147%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="82.0479%" y="677" width="0.0715%" height="15" fill="rgb(213,122,23)" fg:x="6883" fg:w="6"/><text x="82.3670%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="82.0598%" y="661" width="0.0596%" height="15" fill="rgb(225,8,15)" fg:x="6884" fg:w="5"/><text x="82.3789%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="82.0837%" y="645" width="0.0358%" height="15" fill="rgb(219,126,35)" fg:x="6886" fg:w="3"/><text x="82.4028%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1075%" y="629" width="0.0119%" height="15" fill="rgb(246,113,21)" fg:x="6888" fg:w="1"/><text x="82.4266%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1194%" y="645" width="0.0119%" height="15" fill="rgb(241,193,32)" fg:x="6889" fg:w="1"/><text x="82.4385%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1194%" y="629" width="0.0119%" height="15" fill="rgb(218,99,18)" fg:x="6889" fg:w="1"/><text x="82.4385%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1194%" y="613" width="0.0119%" height="15" fill="rgb(225,114,4)" fg:x="6889" fg:w="1"/><text x="82.4385%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1194%" y="597" width="0.0119%" height="15" fill="rgb(235,0,15)" fg:x="6889" fg:w="1"/><text x="82.4385%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1194%" y="581" width="0.0119%" height="15" fill="rgb(247,45,27)" fg:x="6889" fg:w="1"/><text x="82.4385%" y="591.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1194%" y="565" width="0.0119%" height="15" fill="rgb(249,88,53)" fg:x="6889" fg:w="1"/><text x="82.4385%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1194%" y="549" width="0.0119%" height="15" fill="rgb(207,58,45)" fg:x="6889" fg:w="1"/><text x="82.4385%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1194%" y="533" width="0.0119%" height="15" fill="rgb(216,7,11)" fg:x="6889" fg:w="1"/><text x="82.4385%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="82.1194%" y="517" width="0.0119%" height="15" fill="rgb(230,40,33)" fg:x="6889" fg:w="1"/><text x="82.4385%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="82.1194%" y="501" width="0.0119%" height="15" fill="rgb(232,24,46)" fg:x="6889" fg:w="1"/><text x="82.4385%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1314%" y="581" width="0.0119%" height="15" fill="rgb(219,222,45)" fg:x="6890" fg:w="1"/><text x="82.4505%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1314%" y="565" width="0.0119%" height="15" fill="rgb(229,85,44)" fg:x="6890" fg:w="1"/><text x="82.4505%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1314%" y="549" width="0.0119%" height="15" fill="rgb(243,71,36)" fg:x="6890" fg:w="1"/><text x="82.4505%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1314%" y="533" width="0.0119%" height="15" fill="rgb(230,203,45)" fg:x="6890" fg:w="1"/><text x="82.4505%" y="543.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="82.1314%" y="517" width="0.0119%" height="15" fill="rgb(224,77,49)" fg:x="6890" fg:w="1"/><text x="82.4505%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.1314%" y="629" width="0.0238%" height="15" fill="rgb(210,186,47)" fg:x="6890" fg:w="2"/><text x="82.4505%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.1314%" y="613" width="0.0238%" height="15" fill="rgb(232,146,10)" fg:x="6890" fg:w="2"/><text x="82.4505%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.1314%" y="597" width="0.0238%" height="15" fill="rgb(236,185,51)" fg:x="6890" fg:w="2"/><text x="82.4505%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1433%" y="581" width="0.0119%" height="15" fill="rgb(223,206,43)" fg:x="6891" fg:w="1"/><text x="82.4624%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1433%" y="565" width="0.0119%" height="15" fill="rgb(227,212,9)" fg:x="6891" fg:w="1"/><text x="82.4624%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1433%" y="549" width="0.0119%" height="15" fill="rgb(205,82,3)" fg:x="6891" fg:w="1"/><text x="82.4624%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1433%" y="533" width="0.0119%" height="15" fill="rgb(214,2,27)" fg:x="6891" fg:w="1"/><text x="82.4624%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1433%" y="517" width="0.0119%" height="15" fill="rgb(241,37,22)" fg:x="6891" fg:w="1"/><text x="82.4624%" y="527.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="82.1433%" y="501" width="0.0119%" height="15" fill="rgb(219,182,1)" fg:x="6891" fg:w="1"/><text x="82.4624%" y="511.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="82.1433%" y="485" width="0.0119%" height="15" fill="rgb(208,224,23)" fg:x="6891" fg:w="1"/><text x="82.4624%" y="495.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="82.1552%" y="581" width="0.0119%" height="15" fill="rgb(219,121,32)" fg:x="6892" fg:w="1"/><text x="82.4743%" y="591.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="82.1552%" y="565" width="0.0119%" height="15" fill="rgb(253,13,40)" fg:x="6892" fg:w="1"/><text x="82.4743%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1671%" y="565" width="0.0119%" height="15" fill="rgb(233,6,28)" fg:x="6893" fg:w="1"/><text x="82.4862%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1671%" y="549" width="0.0119%" height="15" fill="rgb(233,73,8)" fg:x="6893" fg:w="1"/><text x="82.4862%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1671%" y="533" width="0.0119%" height="15" fill="rgb(223,48,27)" fg:x="6893" fg:w="1"/><text x="82.4862%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1671%" y="517" width="0.0119%" height="15" fill="rgb(231,98,37)" fg:x="6893" fg:w="1"/><text x="82.4862%" y="527.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1671%" y="501" width="0.0119%" height="15" fill="rgb(249,43,32)" fg:x="6893" fg:w="1"/><text x="82.4862%" y="511.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="82.1671%" y="485" width="0.0119%" height="15" fill="rgb(246,184,20)" fg:x="6893" fg:w="1"/><text x="82.4862%" y="495.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="82.1671%" y="469" width="0.0119%" height="15" fill="rgb(251,216,0)" fg:x="6893" fg:w="1"/><text x="82.4862%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="82.0002%" y="709" width="0.1907%" height="15" fill="rgb(238,41,42)" fg:x="6879" fg:w="16"/><text x="82.3193%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="82.0479%" y="693" width="0.1430%" height="15" fill="rgb(227,224,50)" fg:x="6883" fg:w="12"/><text x="82.3670%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="82.1194%" y="677" width="0.0715%" height="15" fill="rgb(237,189,18)" fg:x="6889" fg:w="6"/><text x="82.4385%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="82.1194%" y="661" width="0.0715%" height="15" fill="rgb(238,108,6)" fg:x="6889" fg:w="6"/><text x="82.4385%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="82.1314%" y="645" width="0.0596%" height="15" fill="rgb(214,197,53)" fg:x="6890" fg:w="5"/><text x="82.4505%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="82.1552%" y="629" width="0.0358%" height="15" fill="rgb(206,183,15)" fg:x="6892" fg:w="3"/><text x="82.4743%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="82.1552%" y="613" width="0.0358%" height="15" fill="rgb(208,130,32)" fg:x="6892" fg:w="3"/><text x="82.4743%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="82.1552%" y="597" width="0.0358%" height="15" fill="rgb(226,128,52)" fg:x="6892" fg:w="3"/><text x="82.4743%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.1671%" y="581" width="0.0238%" height="15" fill="rgb(231,183,21)" fg:x="6893" fg:w="2"/><text x="82.4862%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1790%" y="565" width="0.0119%" height="15" fill="rgb(216,8,35)" fg:x="6894" fg:w="1"/><text x="82.4981%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1790%" y="549" width="0.0119%" height="15" fill="rgb(224,221,8)" fg:x="6894" fg:w="1"/><text x="82.4981%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1790%" y="533" width="0.0119%" height="15" fill="rgb(210,111,33)" fg:x="6894" fg:w="1"/><text x="82.4981%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1790%" y="517" width="0.0119%" height="15" fill="rgb(232,211,38)" fg:x="6894" fg:w="1"/><text x="82.4981%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1790%" y="501" width="0.0119%" height="15" fill="rgb(216,190,27)" fg:x="6894" fg:w="1"/><text x="82.4981%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1910%" y="661" width="0.0119%" height="15" fill="rgb(237,215,27)" fg:x="6895" fg:w="1"/><text x="82.5101%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1910%" y="645" width="0.0119%" height="15" fill="rgb(251,121,39)" fg:x="6895" fg:w="1"/><text x="82.5101%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.1910%" y="629" width="0.0119%" height="15" fill="rgb(244,21,14)" fg:x="6895" fg:w="1"/><text x="82.5101%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1910%" y="613" width="0.0119%" height="15" fill="rgb(221,192,22)" fg:x="6895" fg:w="1"/><text x="82.5101%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.1910%" y="597" width="0.0119%" height="15" fill="rgb(251,190,28)" fg:x="6895" fg:w="1"/><text x="82.5101%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1910%" y="581" width="0.0119%" height="15" fill="rgb(217,4,51)" fg:x="6895" fg:w="1"/><text x="82.5101%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.1910%" y="565" width="0.0119%" height="15" fill="rgb(215,183,49)" fg:x="6895" fg:w="1"/><text x="82.5101%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.1910%" y="549" width="0.0119%" height="15" fill="rgb(249,28,49)" fg:x="6895" fg:w="1"/><text x="82.5101%" y="559.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.1910%" y="533" width="0.0119%" height="15" fill="rgb(214,42,20)" fg:x="6895" fg:w="1"/><text x="82.5101%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.1910%" y="517" width="0.0119%" height="15" fill="rgb(222,77,27)" fg:x="6895" fg:w="1"/><text x="82.5101%" y="527.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="82.1910%" y="501" width="0.0119%" height="15" fill="rgb(252,198,32)" fg:x="6895" fg:w="1"/><text x="82.5101%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2029%" y="533" width="0.0119%" height="15" fill="rgb(207,140,50)" fg:x="6896" fg:w="1"/><text x="82.5220%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.2029%" y="517" width="0.0119%" height="15" fill="rgb(251,170,16)" fg:x="6896" fg:w="1"/><text x="82.5220%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2029%" y="501" width="0.0119%" height="15" fill="rgb(249,111,45)" fg:x="6896" fg:w="1"/><text x="82.5220%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.2029%" y="485" width="0.0119%" height="15" fill="rgb(241,99,35)" fg:x="6896" fg:w="1"/><text x="82.5220%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2029%" y="469" width="0.0119%" height="15" fill="rgb(216,188,17)" fg:x="6896" fg:w="1"/><text x="82.5220%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.2029%" y="453" width="0.0119%" height="15" fill="rgb(254,209,53)" fg:x="6896" fg:w="1"/><text x="82.5220%" y="463.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.2029%" y="437" width="0.0119%" height="15" fill="rgb(231,105,41)" fg:x="6896" fg:w="1"/><text x="82.5220%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.2029%" y="629" width="0.0238%" height="15" fill="rgb(242,93,23)" fg:x="6896" fg:w="2"/><text x="82.5220%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="82.2029%" y="613" width="0.0238%" height="15" fill="rgb(218,159,11)" fg:x="6896" fg:w="2"/><text x="82.5220%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.2029%" y="597" width="0.0238%" height="15" fill="rgb(209,90,32)" fg:x="6896" fg:w="2"/><text x="82.5220%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="82.2029%" y="581" width="0.0238%" height="15" fill="rgb(253,118,46)" fg:x="6896" fg:w="2"/><text x="82.5220%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.2029%" y="565" width="0.0238%" height="15" fill="rgb(219,121,2)" fg:x="6896" fg:w="2"/><text x="82.5220%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="82.2029%" y="549" width="0.0238%" height="15" fill="rgb(207,57,47)" fg:x="6896" fg:w="2"/><text x="82.5220%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2148%" y="533" width="0.0119%" height="15" fill="rgb(235,113,43)" fg:x="6897" fg:w="1"/><text x="82.5339%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.2148%" y="517" width="0.0119%" height="15" fill="rgb(238,30,50)" fg:x="6897" fg:w="1"/><text x="82.5339%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2148%" y="501" width="0.0119%" height="15" fill="rgb(237,47,29)" fg:x="6897" fg:w="1"/><text x="82.5339%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.2148%" y="485" width="0.0119%" height="15" fill="rgb(245,102,24)" fg:x="6897" fg:w="1"/><text x="82.5339%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2148%" y="469" width="0.0119%" height="15" fill="rgb(245,152,9)" fg:x="6897" fg:w="1"/><text x="82.5339%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.2148%" y="453" width="0.0119%" height="15" fill="rgb(223,213,17)" fg:x="6897" fg:w="1"/><text x="82.5339%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2148%" y="437" width="0.0119%" height="15" fill="rgb(241,164,4)" fg:x="6897" fg:w="1"/><text x="82.5339%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.2148%" y="421" width="0.0119%" height="15" fill="rgb(205,209,31)" fg:x="6897" fg:w="1"/><text x="82.5339%" y="431.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.2148%" y="405" width="0.0119%" height="15" fill="rgb(248,173,2)" fg:x="6897" fg:w="1"/><text x="82.5339%" y="415.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="82.2148%" y="389" width="0.0119%" height="15" fill="rgb(207,67,32)" fg:x="6897" fg:w="1"/><text x="82.5339%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2267%" y="565" width="0.0119%" height="15" fill="rgb(239,109,13)" fg:x="6898" fg:w="1"/><text x="82.5458%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.2267%" y="549" width="0.0119%" height="15" fill="rgb(233,123,24)" fg:x="6898" fg:w="1"/><text x="82.5458%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2267%" y="533" width="0.0119%" height="15" fill="rgb(232,120,19)" fg:x="6898" fg:w="1"/><text x="82.5458%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.2267%" y="517" width="0.0119%" height="15" fill="rgb(225,17,50)" fg:x="6898" fg:w="1"/><text x="82.5458%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2267%" y="501" width="0.0119%" height="15" fill="rgb(239,216,13)" fg:x="6898" fg:w="1"/><text x="82.5458%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.2267%" y="485" width="0.0119%" height="15" fill="rgb(232,213,26)" fg:x="6898" fg:w="1"/><text x="82.5458%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2267%" y="469" width="0.0119%" height="15" fill="rgb(244,59,39)" fg:x="6898" fg:w="1"/><text x="82.5458%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.2267%" y="453" width="0.0119%" height="15" fill="rgb(234,61,35)" fg:x="6898" fg:w="1"/><text x="82.5458%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2267%" y="437" width="0.0119%" height="15" fill="rgb(245,94,24)" fg:x="6898" fg:w="1"/><text x="82.5458%" y="447.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2267%" y="421" width="0.0119%" height="15" fill="rgb(238,190,44)" fg:x="6898" fg:w="1"/><text x="82.5458%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.2267%" y="405" width="0.0119%" height="15" fill="rgb(205,145,25)" fg:x="6898" fg:w="1"/><text x="82.5458%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2267%" y="389" width="0.0119%" height="15" fill="rgb(229,158,41)" fg:x="6898" fg:w="1"/><text x="82.5458%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.2267%" y="373" width="0.0119%" height="15" fill="rgb(224,121,5)" fg:x="6898" fg:w="1"/><text x="82.5458%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2267%" y="357" width="0.0119%" height="15" fill="rgb(238,168,35)" fg:x="6898" fg:w="1"/><text x="82.5458%" y="367.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.2267%" y="341" width="0.0119%" height="15" fill="rgb(231,11,42)" fg:x="6898" fg:w="1"/><text x="82.5458%" y="351.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.2267%" y="325" width="0.0119%" height="15" fill="rgb(241,105,19)" fg:x="6898" fg:w="1"/><text x="82.5458%" y="335.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="82.2267%" y="309" width="0.0119%" height="15" fill="rgb(253,210,20)" fg:x="6898" fg:w="1"/><text x="82.5458%" y="319.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.2386%" y="453" width="0.0119%" height="15" fill="rgb(215,72,52)" fg:x="6899" fg:w="1"/><text x="82.5577%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2386%" y="437" width="0.0119%" height="15" fill="rgb(223,225,30)" fg:x="6899" fg:w="1"/><text x="82.5577%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.2386%" y="421" width="0.0119%" height="15" fill="rgb(220,138,44)" fg:x="6899" fg:w="1"/><text x="82.5577%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2386%" y="405" width="0.0119%" height="15" fill="rgb(206,128,12)" fg:x="6899" fg:w="1"/><text x="82.5577%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.2386%" y="389" width="0.0119%" height="15" fill="rgb(245,194,0)" fg:x="6899" fg:w="1"/><text x="82.5577%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2386%" y="373" width="0.0119%" height="15" fill="rgb(235,175,41)" fg:x="6899" fg:w="1"/><text x="82.5577%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.2386%" y="357" width="0.0119%" height="15" fill="rgb(216,15,48)" fg:x="6899" fg:w="1"/><text x="82.5577%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.2386%" y="341" width="0.0119%" height="15" fill="rgb(223,179,5)" fg:x="6899" fg:w="1"/><text x="82.5577%" y="351.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="82.2386%" y="325" width="0.0119%" height="15" fill="rgb(220,80,15)" fg:x="6899" fg:w="1"/><text x="82.5577%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.2386%" y="533" width="0.0238%" height="15" fill="rgb(228,20,30)" fg:x="6899" fg:w="2"/><text x="82.5577%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="82.2386%" y="517" width="0.0238%" height="15" fill="rgb(229,194,27)" fg:x="6899" fg:w="2"/><text x="82.5577%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.2386%" y="501" width="0.0238%" height="15" fill="rgb(238,202,32)" fg:x="6899" fg:w="2"/><text x="82.5577%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="82.2386%" y="485" width="0.0238%" height="15" fill="rgb(207,82,27)" fg:x="6899" fg:w="2"/><text x="82.5577%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.2386%" y="469" width="0.0238%" height="15" fill="rgb(246,122,46)" fg:x="6899" fg:w="2"/><text x="82.5577%" y="479.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.2506%" y="453" width="0.0119%" height="15" fill="rgb(220,101,26)" fg:x="6900" fg:w="1"/><text x="82.5697%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.2625%" y="389" width="0.0119%" height="15" fill="rgb(251,63,9)" fg:x="6901" fg:w="1"/><text x="82.5816%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2625%" y="373" width="0.0119%" height="15" fill="rgb(235,186,5)" fg:x="6901" fg:w="1"/><text x="82.5816%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.2625%" y="357" width="0.0119%" height="15" fill="rgb(241,139,37)" fg:x="6901" fg:w="1"/><text x="82.5816%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2625%" y="341" width="0.0119%" height="15" fill="rgb(252,177,51)" fg:x="6901" fg:w="1"/><text x="82.5816%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.2625%" y="325" width="0.0119%" height="15" fill="rgb(214,131,22)" fg:x="6901" fg:w="1"/><text x="82.5816%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2625%" y="309" width="0.0119%" height="15" fill="rgb(246,53,19)" fg:x="6901" fg:w="1"/><text x="82.5816%" y="319.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2625%" y="293" width="0.0119%" height="15" fill="rgb(231,158,27)" fg:x="6901" fg:w="1"/><text x="82.5816%" y="303.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.2625%" y="277" width="0.0119%" height="15" fill="rgb(226,166,46)" fg:x="6901" fg:w="1"/><text x="82.5816%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2625%" y="261" width="0.0119%" height="15" fill="rgb(218,178,26)" fg:x="6901" fg:w="1"/><text x="82.5816%" y="271.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.2625%" y="245" width="0.0119%" height="15" fill="rgb(206,25,39)" fg:x="6901" fg:w="1"/><text x="82.5816%" y="255.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.2625%" y="229" width="0.0119%" height="15" fill="rgb(232,218,41)" fg:x="6901" fg:w="1"/><text x="82.5816%" y="239.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="82.2744%" y="261" width="0.0238%" height="15" fill="rgb(212,151,15)" fg:x="6902" fg:w="2"/><text x="82.5935%" y="271.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="82.2744%" y="245" width="0.0238%" height="15" fill="rgb(213,49,22)" fg:x="6902" fg:w="2"/><text x="82.5935%" y="255.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="82.2744%" y="229" width="0.0238%" height="15" fill="rgb(247,116,21)" fg:x="6902" fg:w="2"/><text x="82.5935%" y="239.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2982%" y="245" width="0.0119%" height="15" fill="rgb(248,98,14)" fg:x="6904" fg:w="1"/><text x="82.6173%" y="255.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.2982%" y="229" width="0.0119%" height="15" fill="rgb(247,72,6)" fg:x="6904" fg:w="1"/><text x="82.6173%" y="239.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.2982%" y="213" width="0.0119%" height="15" fill="rgb(213,9,22)" fg:x="6904" fg:w="1"/><text x="82.6173%" y="223.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.2982%" y="197" width="0.0119%" height="15" fill="rgb(213,122,30)" fg:x="6904" fg:w="1"/><text x="82.6173%" y="207.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="82.2982%" y="181" width="0.0119%" height="15" fill="rgb(244,11,30)" fg:x="6904" fg:w="1"/><text x="82.6173%" y="191.50"/></g><g><title>logic::immediate (94 samples, 1.12%)</title><rect x="81.2016%" y="741" width="1.1205%" height="15" fill="rgb(236,102,26)" fg:x="6812" fg:w="94"/><text x="81.5207%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (29 samples, 0.35%)</title><rect x="81.9764%" y="725" width="0.3457%" height="15" fill="rgb(231,166,37)" fg:x="6877" fg:w="29"/><text x="82.2955%" y="735.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="82.1910%" y="709" width="0.1311%" height="15" fill="rgb(220,224,29)" fg:x="6895" fg:w="11"/><text x="82.5101%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="82.1910%" y="693" width="0.1311%" height="15" fill="rgb(227,30,40)" fg:x="6895" fg:w="11"/><text x="82.5101%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="82.1910%" y="677" width="0.1311%" height="15" fill="rgb(235,8,36)" fg:x="6895" fg:w="11"/><text x="82.5101%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="82.2029%" y="661" width="0.1192%" height="15" fill="rgb(232,175,19)" fg:x="6896" fg:w="10"/><text x="82.5220%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="82.2029%" y="645" width="0.1192%" height="15" fill="rgb(217,114,10)" fg:x="6896" fg:w="10"/><text x="82.5220%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="82.2267%" y="629" width="0.0954%" height="15" fill="rgb(214,112,41)" fg:x="6898" fg:w="8"/><text x="82.5458%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="82.2267%" y="613" width="0.0954%" height="15" fill="rgb(226,69,34)" fg:x="6898" fg:w="8"/><text x="82.5458%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="82.2267%" y="597" width="0.0954%" height="15" fill="rgb(219,23,46)" fg:x="6898" fg:w="8"/><text x="82.5458%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="82.2267%" y="581" width="0.0954%" height="15" fill="rgb(233,3,8)" fg:x="6898" fg:w="8"/><text x="82.5458%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="82.2386%" y="565" width="0.0834%" height="15" fill="rgb(251,34,42)" fg:x="6899" fg:w="7"/><text x="82.5577%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="82.2386%" y="549" width="0.0834%" height="15" fill="rgb(215,84,9)" fg:x="6899" fg:w="7"/><text x="82.5577%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="82.2625%" y="533" width="0.0596%" height="15" fill="rgb(231,75,52)" fg:x="6901" fg:w="5"/><text x="82.5816%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="82.2625%" y="517" width="0.0596%" height="15" fill="rgb(247,201,31)" fg:x="6901" fg:w="5"/><text x="82.5816%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="82.2625%" y="501" width="0.0596%" height="15" fill="rgb(215,171,37)" fg:x="6901" fg:w="5"/><text x="82.5816%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="82.2625%" y="485" width="0.0596%" height="15" fill="rgb(208,208,44)" fg:x="6901" fg:w="5"/><text x="82.5816%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="82.2625%" y="469" width="0.0596%" height="15" fill="rgb(247,146,54)" fg:x="6901" fg:w="5"/><text x="82.5816%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="82.2625%" y="453" width="0.0596%" height="15" fill="rgb(209,0,40)" fg:x="6901" fg:w="5"/><text x="82.5816%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="82.2625%" y="437" width="0.0596%" height="15" fill="rgb(221,59,4)" fg:x="6901" fg:w="5"/><text x="82.5816%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="82.2625%" y="421" width="0.0596%" height="15" fill="rgb(227,153,47)" fg:x="6901" fg:w="5"/><text x="82.5816%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="82.2625%" y="405" width="0.0596%" height="15" fill="rgb(253,225,10)" fg:x="6901" fg:w="5"/><text x="82.5816%" y="415.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="82.2744%" y="389" width="0.0477%" height="15" fill="rgb(237,201,24)" fg:x="6902" fg:w="4"/><text x="82.5935%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="82.2744%" y="373" width="0.0477%" height="15" fill="rgb(238,23,27)" fg:x="6902" fg:w="4"/><text x="82.5935%" y="383.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="82.2744%" y="357" width="0.0477%" height="15" fill="rgb(236,54,50)" fg:x="6902" fg:w="4"/><text x="82.5935%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="82.2744%" y="341" width="0.0477%" height="15" fill="rgb(216,106,0)" fg:x="6902" fg:w="4"/><text x="82.5935%" y="351.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="82.2744%" y="325" width="0.0477%" height="15" fill="rgb(234,179,35)" fg:x="6902" fg:w="4"/><text x="82.5935%" y="335.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="82.2744%" y="309" width="0.0477%" height="15" fill="rgb(210,35,8)" fg:x="6902" fg:w="4"/><text x="82.5935%" y="319.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="82.2744%" y="293" width="0.0477%" height="15" fill="rgb(238,144,16)" fg:x="6902" fg:w="4"/><text x="82.5935%" y="303.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="82.2744%" y="277" width="0.0477%" height="15" fill="rgb(244,54,7)" fg:x="6902" fg:w="4"/><text x="82.5935%" y="287.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="82.2982%" y="261" width="0.0238%" height="15" fill="rgb(233,225,40)" fg:x="6904" fg:w="2"/><text x="82.6173%" y="271.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3102%" y="245" width="0.0119%" height="15" fill="rgb(249,227,23)" fg:x="6905" fg:w="1"/><text x="82.6293%" y="255.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.3102%" y="229" width="0.0119%" height="15" fill="rgb(215,42,44)" fg:x="6905" fg:w="1"/><text x="82.6293%" y="239.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3102%" y="213" width="0.0119%" height="15" fill="rgb(220,145,40)" fg:x="6905" fg:w="1"/><text x="82.6293%" y="223.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.3102%" y="197" width="0.0119%" height="15" fill="rgb(228,218,40)" fg:x="6905" fg:w="1"/><text x="82.6293%" y="207.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3102%" y="181" width="0.0119%" height="15" fill="rgb(217,52,54)" fg:x="6905" fg:w="1"/><text x="82.6293%" y="191.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.3102%" y="165" width="0.0119%" height="15" fill="rgb(223,90,22)" fg:x="6905" fg:w="1"/><text x="82.6293%" y="175.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.3102%" y="149" width="0.0119%" height="15" fill="rgb(232,114,35)" fg:x="6905" fg:w="1"/><text x="82.6293%" y="159.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3221%" y="677" width="0.0119%" height="15" fill="rgb(227,223,50)" fg:x="6906" fg:w="1"/><text x="82.6412%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.3221%" y="661" width="0.0119%" height="15" fill="rgb(249,175,7)" fg:x="6906" fg:w="1"/><text x="82.6412%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3221%" y="645" width="0.0119%" height="15" fill="rgb(249,173,15)" fg:x="6906" fg:w="1"/><text x="82.6412%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.3221%" y="629" width="0.0119%" height="15" fill="rgb(240,131,6)" fg:x="6906" fg:w="1"/><text x="82.6412%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3221%" y="613" width="0.0119%" height="15" fill="rgb(246,117,16)" fg:x="6906" fg:w="1"/><text x="82.6412%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.3221%" y="597" width="0.0119%" height="15" fill="rgb(209,32,16)" fg:x="6906" fg:w="1"/><text x="82.6412%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3221%" y="581" width="0.0119%" height="15" fill="rgb(207,45,44)" fg:x="6906" fg:w="1"/><text x="82.6412%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.3221%" y="565" width="0.0119%" height="15" fill="rgb(210,66,3)" fg:x="6906" fg:w="1"/><text x="82.6412%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3221%" y="549" width="0.0119%" height="15" fill="rgb(246,133,30)" fg:x="6906" fg:w="1"/><text x="82.6412%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.3221%" y="533" width="0.0119%" height="15" fill="rgb(224,37,17)" fg:x="6906" fg:w="1"/><text x="82.6412%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3221%" y="517" width="0.0119%" height="15" fill="rgb(237,218,18)" fg:x="6906" fg:w="1"/><text x="82.6412%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.3221%" y="501" width="0.0119%" height="15" fill="rgb(240,57,8)" fg:x="6906" fg:w="1"/><text x="82.6412%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3221%" y="485" width="0.0119%" height="15" fill="rgb(231,51,38)" fg:x="6906" fg:w="1"/><text x="82.6412%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.3221%" y="469" width="0.0119%" height="15" fill="rgb(230,89,50)" fg:x="6906" fg:w="1"/><text x="82.6412%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.3221%" y="453" width="0.0119%" height="15" fill="rgb(234,103,34)" fg:x="6906" fg:w="1"/><text x="82.6412%" y="463.50"/></g><g><title>logic::initialize (2 samples, 0.02%)</title><rect x="82.3221%" y="725" width="0.0238%" height="15" fill="rgb(220,45,48)" fg:x="6906" fg:w="2"/><text x="82.6412%" y="735.50"/></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (2 samples, 0.02%)</title><rect x="82.3221%" y="709" width="0.0238%" height="15" fill="rgb(250,210,3)" fg:x="6906" fg:w="2"/><text x="82.6412%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="82.3221%" y="693" width="0.0238%" height="15" fill="rgb(210,118,12)" fg:x="6906" fg:w="2"/><text x="82.6412%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3340%" y="677" width="0.0119%" height="15" fill="rgb(238,154,21)" fg:x="6907" fg:w="1"/><text x="82.6531%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3340%" y="661" width="0.0119%" height="15" fill="rgb(227,220,4)" fg:x="6907" fg:w="1"/><text x="82.6531%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3340%" y="645" width="0.0119%" height="15" fill="rgb(207,179,27)" fg:x="6907" fg:w="1"/><text x="82.6531%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3340%" y="629" width="0.0119%" height="15" fill="rgb(240,111,30)" fg:x="6907" fg:w="1"/><text x="82.6531%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="82.3340%" y="613" width="0.0119%" height="15" fill="rgb(251,29,1)" fg:x="6907" fg:w="1"/><text x="82.6531%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="82.3340%" y="597" width="0.0119%" height="15" fill="rgb(224,141,39)" fg:x="6907" fg:w="1"/><text x="82.6531%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="82.3459%" y="629" width="0.0119%" height="15" fill="rgb(207,98,26)" fg:x="6908" fg:w="1"/><text x="82.6650%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="82.3459%" y="613" width="0.0119%" height="15" fill="rgb(221,37,6)" fg:x="6908" fg:w="1"/><text x="82.6650%" y="623.50"/></g><g><title>logic::dedent (2 samples, 0.02%)</title><rect x="82.3459%" y="709" width="0.0238%" height="15" fill="rgb(217,32,44)" fg:x="6908" fg:w="2"/><text x="82.6650%" y="719.50"/></g><g><title>parser::layout_end (2 samples, 0.02%)</title><rect x="82.3459%" y="693" width="0.0238%" height="15" fill="rgb(253,149,2)" fg:x="6908" fg:w="2"/><text x="82.6650%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="82.3459%" y="677" width="0.0238%" height="15" fill="rgb(220,165,39)" fg:x="6908" fg:w="2"/><text x="82.6650%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.3459%" y="661" width="0.0238%" height="15" fill="rgb(235,33,48)" fg:x="6908" fg:w="2"/><text x="82.6650%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.3459%" y="645" width="0.0238%" height="15" fill="rgb(221,89,6)" fg:x="6908" fg:w="2"/><text x="82.6650%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3578%" y="629" width="0.0119%" height="15" fill="rgb(215,214,6)" fg:x="6909" fg:w="1"/><text x="82.6769%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="82.3578%" y="613" width="0.0119%" height="15" fill="rgb(241,1,30)" fg:x="6909" fg:w="1"/><text x="82.6769%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="82.3578%" y="597" width="0.0119%" height="15" fill="rgb(211,140,32)" fg:x="6909" fg:w="1"/><text x="82.6769%" y="607.50"/></g><g><title>logic::newline_semicolon (1 samples, 0.01%)</title><rect x="82.3698%" y="709" width="0.0119%" height="15" fill="rgb(232,48,21)" fg:x="6910" fg:w="1"/><text x="82.6889%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="82.3698%" y="693" width="0.0119%" height="15" fill="rgb(252,217,9)" fg:x="6910" fg:w="1"/><text x="82.6889%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3698%" y="677" width="0.0119%" height="15" fill="rgb(206,123,34)" fg:x="6910" fg:w="1"/><text x="82.6889%" y="687.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="82.3698%" y="661" width="0.0119%" height="15" fill="rgb(245,161,38)" fg:x="6910" fg:w="1"/><text x="82.6889%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3817%" y="693" width="0.0119%" height="15" fill="rgb(233,205,7)" fg:x="6911" fg:w="1"/><text x="82.7008%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.3817%" y="677" width="0.0119%" height="15" fill="rgb(217,119,18)" fg:x="6911" fg:w="1"/><text x="82.7008%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3817%" y="661" width="0.0119%" height="15" fill="rgb(252,126,3)" fg:x="6911" fg:w="1"/><text x="82.7008%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.3817%" y="645" width="0.0119%" height="15" fill="rgb(252,188,15)" fg:x="6911" fg:w="1"/><text x="82.7008%" y="655.50"/></g><g><title>parser::operator+ (2 samples, 0.02%)</title><rect x="82.3817%" y="709" width="0.0238%" height="15" fill="rgb(228,1,48)" fg:x="6911" fg:w="2"/><text x="82.7008%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3936%" y="693" width="0.0119%" height="15" fill="rgb(205,187,8)" fg:x="6912" fg:w="1"/><text x="82.7127%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.3936%" y="677" width="0.0119%" height="15" fill="rgb(205,105,50)" fg:x="6912" fg:w="1"/><text x="82.7127%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3936%" y="661" width="0.0119%" height="15" fill="rgb(211,31,46)" fg:x="6912" fg:w="1"/><text x="82.7127%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.3936%" y="645" width="0.0119%" height="15" fill="rgb(213,126,5)" fg:x="6912" fg:w="1"/><text x="82.7127%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3936%" y="629" width="0.0119%" height="15" fill="rgb(231,87,9)" fg:x="6912" fg:w="1"/><text x="82.7127%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.3936%" y="613" width="0.0119%" height="15" fill="rgb(219,224,20)" fg:x="6912" fg:w="1"/><text x="82.7127%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3936%" y="597" width="0.0119%" height="15" fill="rgb(230,84,21)" fg:x="6912" fg:w="1"/><text x="82.7127%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.3936%" y="581" width="0.0119%" height="15" fill="rgb(224,169,42)" fg:x="6912" fg:w="1"/><text x="82.7127%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3936%" y="565" width="0.0119%" height="15" fill="rgb(227,182,13)" fg:x="6912" fg:w="1"/><text x="82.7127%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.3936%" y="549" width="0.0119%" height="15" fill="rgb(249,57,41)" fg:x="6912" fg:w="1"/><text x="82.7127%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3936%" y="533" width="0.0119%" height="15" fill="rgb(214,93,52)" fg:x="6912" fg:w="1"/><text x="82.7127%" y="543.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3936%" y="517" width="0.0119%" height="15" fill="rgb(229,161,34)" fg:x="6912" fg:w="1"/><text x="82.7127%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.3936%" y="501" width="0.0119%" height="15" fill="rgb(227,193,17)" fg:x="6912" fg:w="1"/><text x="82.7127%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3936%" y="485" width="0.0119%" height="15" fill="rgb(242,164,46)" fg:x="6912" fg:w="1"/><text x="82.7127%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.3936%" y="469" width="0.0119%" height="15" fill="rgb(242,142,47)" fg:x="6912" fg:w="1"/><text x="82.7127%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.3936%" y="453" width="0.0119%" height="15" fill="rgb(208,23,18)" fg:x="6912" fg:w="1"/><text x="82.7127%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.3936%" y="437" width="0.0119%" height="15" fill="rgb(219,54,38)" fg:x="6912" fg:w="1"/><text x="82.7127%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.3936%" y="421" width="0.0119%" height="15" fill="rgb(206,97,35)" fg:x="6912" fg:w="1"/><text x="82.7127%" y="431.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="82.3936%" y="405" width="0.0119%" height="15" fill="rgb(208,76,8)" fg:x="6912" fg:w="1"/><text x="82.7127%" y="415.50"/></g><g><title>logic::newline_indent (6 samples, 0.07%)</title><rect x="82.3459%" y="725" width="0.0715%" height="15" fill="rgb(220,92,28)" fg:x="6908" fg:w="6"/><text x="82.6650%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4055%" y="709" width="0.0119%" height="15" fill="rgb(209,158,39)" fg:x="6913" fg:w="1"/><text x="82.7246%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4055%" y="693" width="0.0119%" height="15" fill="rgb(238,175,9)" fg:x="6913" fg:w="1"/><text x="82.7246%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4055%" y="677" width="0.0119%" height="15" fill="rgb(240,116,17)" fg:x="6913" fg:w="1"/><text x="82.7246%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4055%" y="661" width="0.0119%" height="15" fill="rgb(208,7,2)" fg:x="6913" fg:w="1"/><text x="82.7246%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4055%" y="645" width="0.0119%" height="15" fill="rgb(252,52,4)" fg:x="6913" fg:w="1"/><text x="82.7246%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4055%" y="629" width="0.0119%" height="15" fill="rgb(222,68,34)" fg:x="6913" fg:w="1"/><text x="82.7246%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4055%" y="613" width="0.0119%" height="15" fill="rgb(242,154,35)" fg:x="6913" fg:w="1"/><text x="82.7246%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="82.4055%" y="597" width="0.0119%" height="15" fill="rgb(210,125,54)" fg:x="6913" fg:w="1"/><text x="82.7246%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="82.4055%" y="581" width="0.0119%" height="15" fill="rgb(247,121,18)" fg:x="6913" fg:w="1"/><text x="82.7246%" y="591.50"/></g><g><title>logic::newline_where (1 samples, 0.01%)</title><rect x="82.4175%" y="709" width="0.0119%" height="15" fill="rgb(223,48,51)" fg:x="6914" fg:w="1"/><text x="82.7366%" y="719.50"/></g><g><title>parser::token (1 samples, 0.01%)</title><rect x="82.4175%" y="693" width="0.0119%" height="15" fill="rgb(211,156,48)" fg:x="6914" fg:w="1"/><text x="82.7366%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4175%" y="677" width="0.0119%" height="15" fill="rgb(236,56,31)" fg:x="6914" fg:w="1"/><text x="82.7366%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4175%" y="661" width="0.0119%" height="15" fill="rgb(247,157,52)" fg:x="6914" fg:w="1"/><text x="82.7366%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4175%" y="645" width="0.0119%" height="15" fill="rgb(244,121,39)" fg:x="6914" fg:w="1"/><text x="82.7366%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4175%" y="629" width="0.0119%" height="15" fill="rgb(239,4,40)" fg:x="6914" fg:w="1"/><text x="82.7366%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4175%" y="613" width="0.0119%" height="15" fill="rgb(213,204,45)" fg:x="6914" fg:w="1"/><text x="82.7366%" y="623.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="82.4175%" y="597" width="0.0119%" height="15" fill="rgb(242,107,0)" fg:x="6914" fg:w="1"/><text x="82.7366%" y="607.50"/></g><g><title>parser::operator+ (1 samples, 0.01%)</title><rect x="82.4294%" y="709" width="0.0119%" height="15" fill="rgb(215,152,25)" fg:x="6915" fg:w="1"/><text x="82.7485%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4294%" y="693" width="0.0119%" height="15" fill="rgb(233,151,6)" fg:x="6915" fg:w="1"/><text x="82.7485%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4294%" y="677" width="0.0119%" height="15" fill="rgb(206,126,44)" fg:x="6915" fg:w="1"/><text x="82.7485%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4294%" y="661" width="0.0119%" height="15" fill="rgb(209,145,15)" fg:x="6915" fg:w="1"/><text x="82.7485%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4294%" y="645" width="0.0119%" height="15" fill="rgb(235,214,8)" fg:x="6915" fg:w="1"/><text x="82.7485%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4294%" y="629" width="0.0119%" height="15" fill="rgb(216,140,51)" fg:x="6915" fg:w="1"/><text x="82.7485%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4294%" y="613" width="0.0119%" height="15" fill="rgb(213,83,34)" fg:x="6915" fg:w="1"/><text x="82.7485%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4294%" y="597" width="0.0119%" height="15" fill="rgb(218,186,44)" fg:x="6915" fg:w="1"/><text x="82.7485%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4294%" y="581" width="0.0119%" height="15" fill="rgb(225,147,10)" fg:x="6915" fg:w="1"/><text x="82.7485%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4294%" y="565" width="0.0119%" height="15" fill="rgb(209,214,20)" fg:x="6915" fg:w="1"/><text x="82.7485%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4294%" y="549" width="0.0119%" height="15" fill="rgb(252,61,32)" fg:x="6915" fg:w="1"/><text x="82.7485%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4294%" y="533" width="0.0119%" height="15" fill="rgb(237,204,10)" fg:x="6915" fg:w="1"/><text x="82.7485%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4294%" y="517" width="0.0119%" height="15" fill="rgb(246,118,16)" fg:x="6915" fg:w="1"/><text x="82.7485%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4294%" y="501" width="0.0119%" height="15" fill="rgb(214,50,9)" fg:x="6915" fg:w="1"/><text x="82.7485%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.4294%" y="485" width="0.0119%" height="15" fill="rgb(212,41,1)" fg:x="6915" fg:w="1"/><text x="82.7485%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.4294%" y="469" width="0.0119%" height="15" fill="rgb(228,172,32)" fg:x="6915" fg:w="1"/><text x="82.7485%" y="479.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="82.4294%" y="453" width="0.0119%" height="15" fill="rgb(231,85,38)" fg:x="6915" fg:w="1"/><text x="82.7485%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4413%" y="613" width="0.0119%" height="15" fill="rgb(223,120,31)" fg:x="6916" fg:w="1"/><text x="82.7604%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4413%" y="597" width="0.0119%" height="15" fill="rgb(254,174,9)" fg:x="6916" fg:w="1"/><text x="82.7604%" y="607.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.4413%" y="581" width="0.0119%" height="15" fill="rgb(243,197,0)" fg:x="6916" fg:w="1"/><text x="82.7604%" y="591.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.4413%" y="565" width="0.0119%" height="15" fill="rgb(226,186,17)" fg:x="6916" fg:w="1"/><text x="82.7604%" y="575.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="82.4413%" y="549" width="0.0119%" height="15" fill="rgb(229,38,38)" fg:x="6916" fg:w="1"/><text x="82.7604%" y="559.50"/></g><g><title>logic::newline_token (4 samples, 0.05%)</title><rect x="82.4175%" y="725" width="0.0477%" height="15" fill="rgb(238,82,14)" fg:x="6914" fg:w="4"/><text x="82.7366%" y="735.50"/></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (2 samples, 0.02%)</title><rect x="82.4413%" y="709" width="0.0238%" height="15" fill="rgb(230,154,54)" fg:x="6916" fg:w="2"/><text x="82.7604%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="82.4413%" y="693" width="0.0238%" height="15" fill="rgb(243,84,17)" fg:x="6916" fg:w="2"/><text x="82.7604%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="82.4413%" y="677" width="0.0238%" height="15" fill="rgb(226,41,37)" fg:x="6916" fg:w="2"/><text x="82.7604%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.4413%" y="661" width="0.0238%" height="15" fill="rgb(219,20,18)" fg:x="6916" fg:w="2"/><text x="82.7604%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="82.4413%" y="645" width="0.0238%" height="15" fill="rgb(243,173,39)" fg:x="6916" fg:w="2"/><text x="82.7604%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.4413%" y="629" width="0.0238%" height="15" fill="rgb(245,79,20)" fg:x="6916" fg:w="2"/><text x="82.7604%" y="639.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4532%" y="613" width="0.0119%" height="15" fill="rgb(229,101,45)" fg:x="6917" fg:w="1"/><text x="82.7723%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4532%" y="597" width="0.0119%" height="15" fill="rgb(215,123,52)" fg:x="6917" fg:w="1"/><text x="82.7723%" y="607.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4532%" y="581" width="0.0119%" height="15" fill="rgb(215,11,33)" fg:x="6917" fg:w="1"/><text x="82.7723%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4532%" y="565" width="0.0119%" height="15" fill="rgb(245,105,20)" fg:x="6917" fg:w="1"/><text x="82.7723%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4532%" y="549" width="0.0119%" height="15" fill="rgb(231,132,30)" fg:x="6917" fg:w="1"/><text x="82.7723%" y="559.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4532%" y="533" width="0.0119%" height="15" fill="rgb(224,62,21)" fg:x="6917" fg:w="1"/><text x="82.7723%" y="543.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4532%" y="517" width="0.0119%" height="15" fill="rgb(209,221,38)" fg:x="6917" fg:w="1"/><text x="82.7723%" y="527.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4532%" y="501" width="0.0119%" height="15" fill="rgb(229,200,30)" fg:x="6917" fg:w="1"/><text x="82.7723%" y="511.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.4532%" y="485" width="0.0119%" height="15" fill="rgb(237,142,41)" fg:x="6917" fg:w="1"/><text x="82.7723%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.4532%" y="469" width="0.0119%" height="15" fill="rgb(238,37,22)" fg:x="6917" fg:w="1"/><text x="82.7723%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4651%" y="709" width="0.0119%" height="15" fill="rgb(234,182,17)" fg:x="6918" fg:w="1"/><text x="82.7842%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4651%" y="693" width="0.0119%" height="15" fill="rgb(237,58,48)" fg:x="6918" fg:w="1"/><text x="82.7842%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4651%" y="677" width="0.0119%" height="15" fill="rgb(226,112,37)" fg:x="6918" fg:w="1"/><text x="82.7842%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4651%" y="661" width="0.0119%" height="15" fill="rgb(230,201,20)" fg:x="6918" fg:w="1"/><text x="82.7842%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4651%" y="645" width="0.0119%" height="15" fill="rgb(252,95,39)" fg:x="6918" fg:w="1"/><text x="82.7842%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4651%" y="629" width="0.0119%" height="15" fill="rgb(240,150,33)" fg:x="6918" fg:w="1"/><text x="82.7842%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4651%" y="613" width="0.0119%" height="15" fill="rgb(208,202,37)" fg:x="6918" fg:w="1"/><text x="82.7842%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4651%" y="597" width="0.0119%" height="15" fill="rgb(251,37,12)" fg:x="6918" fg:w="1"/><text x="82.7842%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4651%" y="581" width="0.0119%" height="15" fill="rgb(247,150,26)" fg:x="6918" fg:w="1"/><text x="82.7842%" y="591.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4651%" y="565" width="0.0119%" height="15" fill="rgb(232,28,8)" fg:x="6918" fg:w="1"/><text x="82.7842%" y="575.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4651%" y="549" width="0.0119%" height="15" fill="rgb(226,121,34)" fg:x="6918" fg:w="1"/><text x="82.7842%" y="559.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4651%" y="533" width="0.0119%" height="15" fill="rgb(237,23,13)" fg:x="6918" fg:w="1"/><text x="82.7842%" y="543.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4651%" y="517" width="0.0119%" height="15" fill="rgb(214,42,29)" fg:x="6918" fg:w="1"/><text x="82.7842%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4651%" y="501" width="0.0119%" height="15" fill="rgb(246,204,29)" fg:x="6918" fg:w="1"/><text x="82.7842%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4651%" y="485" width="0.0119%" height="15" fill="rgb(242,28,40)" fg:x="6918" fg:w="1"/><text x="82.7842%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.4651%" y="469" width="0.0119%" height="15" fill="rgb(243,64,49)" fg:x="6918" fg:w="1"/><text x="82.7842%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.4651%" y="453" width="0.0119%" height="15" fill="rgb(226,93,13)" fg:x="6918" fg:w="1"/><text x="82.7842%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4771%" y="645" width="0.0119%" height="15" fill="rgb(241,113,26)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4771%" y="629" width="0.0119%" height="15" fill="rgb(209,209,0)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4771%" y="613" width="0.0119%" height="15" fill="rgb(251,183,50)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4771%" y="597" width="0.0119%" height="15" fill="rgb(248,24,43)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4771%" y="581" width="0.0119%" height="15" fill="rgb(218,102,9)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4771%" y="565" width="0.0119%" height="15" fill="rgb(249,209,39)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4771%" y="549" width="0.0119%" height="15" fill="rgb(210,37,6)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4771%" y="533" width="0.0119%" height="15" fill="rgb(212,99,4)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4771%" y="517" width="0.0119%" height="15" fill="rgb(253,59,46)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4771%" y="501" width="0.0119%" height="15" fill="rgb(229,96,9)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4771%" y="485" width="0.0119%" height="15" fill="rgb(207,103,49)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4771%" y="469" width="0.0119%" height="15" fill="rgb(250,226,20)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4771%" y="453" width="0.0119%" height="15" fill="rgb(238,220,11)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4771%" y="437" width="0.0119%" height="15" fill="rgb(236,74,15)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4771%" y="421" width="0.0119%" height="15" fill="rgb(218,43,40)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="431.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4771%" y="405" width="0.0119%" height="15" fill="rgb(245,206,37)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4771%" y="389" width="0.0119%" height="15" fill="rgb(206,30,3)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4771%" y="373" width="0.0119%" height="15" fill="rgb(211,29,35)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="383.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.4771%" y="357" width="0.0119%" height="15" fill="rgb(218,49,50)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="367.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.4771%" y="341" width="0.0119%" height="15" fill="rgb(211,114,30)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="351.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="82.4771%" y="325" width="0.0119%" height="15" fill="rgb(238,70,33)" fg:x="6919" fg:w="1"/><text x="82.7962%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4890%" y="549" width="0.0119%" height="15" fill="rgb(238,141,50)" fg:x="6920" fg:w="1"/><text x="82.8081%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4890%" y="533" width="0.0119%" height="15" fill="rgb(205,69,6)" fg:x="6920" fg:w="1"/><text x="82.8081%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4890%" y="517" width="0.0119%" height="15" fill="rgb(229,65,0)" fg:x="6920" fg:w="1"/><text x="82.8081%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4890%" y="501" width="0.0119%" height="15" fill="rgb(211,3,37)" fg:x="6920" fg:w="1"/><text x="82.8081%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4890%" y="485" width="0.0119%" height="15" fill="rgb(223,196,42)" fg:x="6920" fg:w="1"/><text x="82.8081%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.4890%" y="469" width="0.0119%" height="15" fill="rgb(227,191,15)" fg:x="6920" fg:w="1"/><text x="82.8081%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4890%" y="453" width="0.0119%" height="15" fill="rgb(229,210,53)" fg:x="6920" fg:w="1"/><text x="82.8081%" y="463.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.4890%" y="437" width="0.0119%" height="15" fill="rgb(250,203,10)" fg:x="6920" fg:w="1"/><text x="82.8081%" y="447.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.4890%" y="421" width="0.0119%" height="15" fill="rgb(247,8,37)" fg:x="6920" fg:w="1"/><text x="82.8081%" y="431.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.4890%" y="405" width="0.0119%" height="15" fill="rgb(240,52,9)" fg:x="6920" fg:w="1"/><text x="82.8081%" y="415.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="82.4890%" y="389" width="0.0119%" height="15" fill="rgb(243,100,52)" fg:x="6920" fg:w="1"/><text x="82.8081%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.4890%" y="645" width="0.0238%" height="15" fill="rgb(224,149,30)" fg:x="6920" fg:w="2"/><text x="82.8081%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="82.4890%" y="629" width="0.0238%" height="15" fill="rgb(232,27,45)" fg:x="6920" fg:w="2"/><text x="82.8081%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.4890%" y="613" width="0.0238%" height="15" fill="rgb(242,161,36)" fg:x="6920" fg:w="2"/><text x="82.8081%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="82.4890%" y="597" width="0.0238%" height="15" fill="rgb(235,223,32)" fg:x="6920" fg:w="2"/><text x="82.8081%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.4890%" y="581" width="0.0238%" height="15" fill="rgb(242,78,19)" fg:x="6920" fg:w="2"/><text x="82.8081%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="82.4890%" y="565" width="0.0238%" height="15" fill="rgb(233,157,47)" fg:x="6920" fg:w="2"/><text x="82.8081%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5009%" y="549" width="0.0119%" height="15" fill="rgb(251,213,5)" fg:x="6921" fg:w="1"/><text x="82.8200%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.5009%" y="533" width="0.0119%" height="15" fill="rgb(215,223,5)" fg:x="6921" fg:w="1"/><text x="82.8200%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5009%" y="517" width="0.0119%" height="15" fill="rgb(230,14,7)" fg:x="6921" fg:w="1"/><text x="82.8200%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.5009%" y="501" width="0.0119%" height="15" fill="rgb(249,179,20)" fg:x="6921" fg:w="1"/><text x="82.8200%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5009%" y="485" width="0.0119%" height="15" fill="rgb(230,204,44)" fg:x="6921" fg:w="1"/><text x="82.8200%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5009%" y="469" width="0.0119%" height="15" fill="rgb(233,229,46)" fg:x="6921" fg:w="1"/><text x="82.8200%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.5009%" y="453" width="0.0119%" height="15" fill="rgb(210,154,35)" fg:x="6921" fg:w="1"/><text x="82.8200%" y="463.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.5009%" y="437" width="0.0119%" height="15" fill="rgb(220,178,16)" fg:x="6921" fg:w="1"/><text x="82.8200%" y="447.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="82.5009%" y="421" width="0.0119%" height="15" fill="rgb(243,0,53)" fg:x="6921" fg:w="1"/><text x="82.8200%" y="431.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.5128%" y="629" width="0.0119%" height="15" fill="rgb(223,221,47)" fg:x="6922" fg:w="1"/><text x="82.8319%" y="639.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.5128%" y="613" width="0.0119%" height="15" fill="rgb(233,82,15)" fg:x="6922" fg:w="1"/><text x="82.8319%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5247%" y="613" width="0.0119%" height="15" fill="rgb(222,8,38)" fg:x="6923" fg:w="1"/><text x="82.8438%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.5247%" y="597" width="0.0119%" height="15" fill="rgb(241,28,48)" fg:x="6923" fg:w="1"/><text x="82.8438%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5247%" y="581" width="0.0119%" height="15" fill="rgb(209,227,15)" fg:x="6923" fg:w="1"/><text x="82.8438%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.5247%" y="565" width="0.0119%" height="15" fill="rgb(234,189,48)" fg:x="6923" fg:w="1"/><text x="82.8438%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5247%" y="549" width="0.0119%" height="15" fill="rgb(212,27,44)" fg:x="6923" fg:w="1"/><text x="82.8438%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.5247%" y="533" width="0.0119%" height="15" fill="rgb(249,55,42)" fg:x="6923" fg:w="1"/><text x="82.8438%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5247%" y="517" width="0.0119%" height="15" fill="rgb(215,211,28)" fg:x="6923" fg:w="1"/><text x="82.8438%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.5247%" y="501" width="0.0119%" height="15" fill="rgb(221,155,16)" fg:x="6923" fg:w="1"/><text x="82.8438%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5247%" y="485" width="0.0119%" height="15" fill="rgb(247,106,30)" fg:x="6923" fg:w="1"/><text x="82.8438%" y="495.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.5247%" y="469" width="0.0119%" height="15" fill="rgb(230,76,31)" fg:x="6923" fg:w="1"/><text x="82.8438%" y="479.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5247%" y="453" width="0.0119%" height="15" fill="rgb(222,6,48)" fg:x="6923" fg:w="1"/><text x="82.8438%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.5247%" y="437" width="0.0119%" height="15" fill="rgb(228,82,3)" fg:x="6923" fg:w="1"/><text x="82.8438%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.5247%" y="421" width="0.0119%" height="15" fill="rgb(245,208,52)" fg:x="6923" fg:w="1"/><text x="82.8438%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5367%" y="581" width="0.0119%" height="15" fill="rgb(218,65,17)" fg:x="6924" fg:w="1"/><text x="82.8558%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.5367%" y="565" width="0.0119%" height="15" fill="rgb(242,63,26)" fg:x="6924" fg:w="1"/><text x="82.8558%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.5367%" y="549" width="0.0119%" height="15" fill="rgb(224,119,39)" fg:x="6924" fg:w="1"/><text x="82.8558%" y="559.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="82.5367%" y="533" width="0.0119%" height="15" fill="rgb(229,106,3)" fg:x="6924" fg:w="1"/><text x="82.8558%" y="543.50"/></g><g><title>parser::operator+ (8 samples, 0.10%)</title><rect x="82.4651%" y="725" width="0.0954%" height="15" fill="rgb(248,6,33)" fg:x="6918" fg:w="8"/><text x="82.7842%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="82.4771%" y="709" width="0.0834%" height="15" fill="rgb(226,3,49)" fg:x="6919" fg:w="7"/><text x="82.7962%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="82.4771%" y="693" width="0.0834%" height="15" fill="rgb(228,142,14)" fg:x="6919" fg:w="7"/><text x="82.7962%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="82.4771%" y="677" width="0.0834%" height="15" fill="rgb(241,141,54)" fg:x="6919" fg:w="7"/><text x="82.7962%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="82.4771%" y="661" width="0.0834%" height="15" fill="rgb(252,17,50)" fg:x="6919" fg:w="7"/><text x="82.7962%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="82.5128%" y="645" width="0.0477%" height="15" fill="rgb(221,120,48)" fg:x="6922" fg:w="4"/><text x="82.8319%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="82.5247%" y="629" width="0.0358%" height="15" fill="rgb(229,171,33)" fg:x="6923" fg:w="3"/><text x="82.8438%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.5367%" y="613" width="0.0238%" height="15" fill="rgb(236,207,21)" fg:x="6924" fg:w="2"/><text x="82.8558%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="82.5367%" y="597" width="0.0238%" height="15" fill="rgb(218,93,35)" fg:x="6924" fg:w="2"/><text x="82.8558%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5486%" y="581" width="0.0119%" height="15" fill="rgb(207,101,8)" fg:x="6925" fg:w="1"/><text x="82.8677%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.5486%" y="565" width="0.0119%" height="15" fill="rgb(237,67,44)" fg:x="6925" fg:w="1"/><text x="82.8677%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.5486%" y="549" width="0.0119%" height="15" fill="rgb(236,218,7)" fg:x="6925" fg:w="1"/><text x="82.8677%" y="559.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="82.5486%" y="533" width="0.0119%" height="15" fill="rgb(252,207,10)" fg:x="6925" fg:w="1"/><text x="82.8677%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5605%" y="725" width="0.0119%" height="15" fill="rgb(221,175,6)" fg:x="6926" fg:w="1"/><text x="82.8796%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5605%" y="709" width="0.0119%" height="15" fill="rgb(230,105,53)" fg:x="6926" fg:w="1"/><text x="82.8796%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5605%" y="693" width="0.0119%" height="15" fill="rgb(253,83,6)" fg:x="6926" fg:w="1"/><text x="82.8796%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5605%" y="677" width="0.0119%" height="15" fill="rgb(206,198,44)" fg:x="6926" fg:w="1"/><text x="82.8796%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5605%" y="661" width="0.0119%" height="15" fill="rgb(206,164,29)" fg:x="6926" fg:w="1"/><text x="82.8796%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5605%" y="645" width="0.0119%" height="15" fill="rgb(215,2,50)" fg:x="6926" fg:w="1"/><text x="82.8796%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="82.5605%" y="629" width="0.0119%" height="15" fill="rgb(246,127,18)" fg:x="6926" fg:w="1"/><text x="82.8796%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="82.5605%" y="613" width="0.0119%" height="15" fill="rgb(232,6,21)" fg:x="6926" fg:w="1"/><text x="82.8796%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5724%" y="709" width="0.0119%" height="15" fill="rgb(224,154,1)" fg:x="6927" fg:w="1"/><text x="82.8915%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5724%" y="693" width="0.0119%" height="15" fill="rgb(248,135,32)" fg:x="6927" fg:w="1"/><text x="82.8915%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5724%" y="677" width="0.0119%" height="15" fill="rgb(253,129,38)" fg:x="6927" fg:w="1"/><text x="82.8915%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5724%" y="661" width="0.0119%" height="15" fill="rgb(214,110,11)" fg:x="6927" fg:w="1"/><text x="82.8915%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5724%" y="645" width="0.0119%" height="15" fill="rgb(246,150,22)" fg:x="6927" fg:w="1"/><text x="82.8915%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5724%" y="629" width="0.0119%" height="15" fill="rgb(219,170,39)" fg:x="6927" fg:w="1"/><text x="82.8915%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5724%" y="613" width="0.0119%" height="15" fill="rgb(221,143,52)" fg:x="6927" fg:w="1"/><text x="82.8915%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="82.5724%" y="597" width="0.0119%" height="15" fill="rgb(237,122,11)" fg:x="6927" fg:w="1"/><text x="82.8915%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="82.5724%" y="581" width="0.0119%" height="15" fill="rgb(217,114,13)" fg:x="6927" fg:w="1"/><text x="82.8915%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5843%" y="677" width="0.0119%" height="15" fill="rgb(218,184,28)" fg:x="6928" fg:w="1"/><text x="82.9034%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5843%" y="661" width="0.0119%" height="15" fill="rgb(237,33,22)" fg:x="6928" fg:w="1"/><text x="82.9034%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5843%" y="645" width="0.0119%" height="15" fill="rgb(224,56,42)" fg:x="6928" fg:w="1"/><text x="82.9034%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5843%" y="629" width="0.0119%" height="15" fill="rgb(216,138,53)" fg:x="6928" fg:w="1"/><text x="82.9034%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5843%" y="613" width="0.0119%" height="15" fill="rgb(233,229,40)" fg:x="6928" fg:w="1"/><text x="82.9034%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5843%" y="597" width="0.0119%" height="15" fill="rgb(252,105,0)" fg:x="6928" fg:w="1"/><text x="82.9034%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5843%" y="581" width="0.0119%" height="15" fill="rgb(212,75,24)" fg:x="6928" fg:w="1"/><text x="82.9034%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5843%" y="565" width="0.0119%" height="15" fill="rgb(235,168,50)" fg:x="6928" fg:w="1"/><text x="82.9034%" y="575.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5843%" y="549" width="0.0119%" height="15" fill="rgb(247,204,12)" fg:x="6928" fg:w="1"/><text x="82.9034%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5843%" y="533" width="0.0119%" height="15" fill="rgb(250,203,27)" fg:x="6928" fg:w="1"/><text x="82.9034%" y="543.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="82.5843%" y="517" width="0.0119%" height="15" fill="rgb(221,215,2)" fg:x="6928" fg:w="1"/><text x="82.9034%" y="527.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="82.5843%" y="501" width="0.0119%" height="15" fill="rgb(242,163,47)" fg:x="6928" fg:w="1"/><text x="82.9034%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (127 samples, 1.51%)</title><rect x="81.0943%" y="773" width="1.5139%" height="15" fill="rgb(237,136,50)" fg:x="6803" fg:w="127"/><text x="81.4134%" y="783.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;Result (State&amp;)&gt; (*)(unsigned int)&gt;::_M_invoke (118 samples, 1.41%)</title><rect x="81.2016%" y="757" width="1.4066%" height="15" fill="rgb(217,201,47)" fg:x="6812" fg:w="118"/><text x="81.5207%" y="767.50"/></g><g><title>logic::newline (24 samples, 0.29%)</title><rect x="82.3221%" y="741" width="0.2861%" height="15" fill="rgb(212,38,47)" fg:x="6906" fg:w="24"/><text x="82.6412%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="82.5724%" y="725" width="0.0358%" height="15" fill="rgb(254,113,41)" fg:x="6927" fg:w="3"/><text x="82.8915%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.5843%" y="709" width="0.0238%" height="15" fill="rgb(236,7,22)" fg:x="6928" fg:w="2"/><text x="82.9034%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.5843%" y="693" width="0.0238%" height="15" fill="rgb(235,81,25)" fg:x="6928" fg:w="2"/><text x="82.9034%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5963%" y="677" width="0.0119%" height="15" fill="rgb(216,41,31)" fg:x="6929" fg:w="1"/><text x="82.9154%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5963%" y="661" width="0.0119%" height="15" fill="rgb(249,219,15)" fg:x="6929" fg:w="1"/><text x="82.9154%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5963%" y="645" width="0.0119%" height="15" fill="rgb(248,201,3)" fg:x="6929" fg:w="1"/><text x="82.9154%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5963%" y="629" width="0.0119%" height="15" fill="rgb(249,141,18)" fg:x="6929" fg:w="1"/><text x="82.9154%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.5963%" y="613" width="0.0119%" height="15" fill="rgb(222,32,39)" fg:x="6929" fg:w="1"/><text x="82.9154%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="82.5963%" y="597" width="0.0119%" height="15" fill="rgb(237,139,51)" fg:x="6929" fg:w="1"/><text x="82.9154%" y="607.50"/></g><g><title>helix_term::commands::command_mode::_{{closure}} (129 samples, 1.54%)</title><rect x="81.0824%" y="981" width="1.5377%" height="15" fill="rgb(218,210,4)" fg:x="6802" fg:w="129"/><text x="81.4015%" y="991.50"/></g><g><title>helix_term::commands::cmd::open (129 samples, 1.54%)</title><rect x="81.0824%" y="965" width="1.5377%" height="15" fill="rgb(217,199,13)" fg:x="6802" fg:w="129"/><text x="81.4015%" y="975.50"/></g><g><title>helix_view::editor::Editor::open (129 samples, 1.54%)</title><rect x="81.0824%" y="949" width="1.5377%" height="15" fill="rgb(222,118,25)" fg:x="6802" fg:w="129"/><text x="81.4015%" y="959.50"/></g><g><title>helix_view::document::Document::open (129 samples, 1.54%)</title><rect x="81.0824%" y="933" width="1.5377%" height="15" fill="rgb(241,70,28)" fg:x="6802" fg:w="129"/><text x="81.4015%" y="943.50"/></g><g><title>helix_view::document::Document::set_language (129 samples, 1.54%)</title><rect x="81.0824%" y="917" width="1.5377%" height="15" fill="rgb(205,51,41)" fg:x="6802" fg:w="129"/><text x="81.4015%" y="927.50"/></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (128 samples, 1.53%)</title><rect x="81.0943%" y="901" width="1.5258%" height="15" fill="rgb(237,165,49)" fg:x="6803" fg:w="128"/><text x="81.4134%" y="911.50"/></g><g><title>helix_core::syntax::LanguageLayer::parse (128 samples, 1.53%)</title><rect x="81.0943%" y="885" width="1.5258%" height="15" fill="rgb(213,10,51)" fg:x="6803" fg:w="128"/><text x="81.4134%" y="895.50"/></g><g><title>ts_parser_parse (128 samples, 1.53%)</title><rect x="81.0943%" y="869" width="1.5258%" height="15" fill="rgb(245,89,32)" fg:x="6803" fg:w="128"/><text x="81.4134%" y="879.50"/></g><g><title>tree_sitter_haskell_external_scanner_scan (128 samples, 1.53%)</title><rect x="81.0943%" y="853" width="1.5258%" height="15" fill="rgb(249,81,54)" fg:x="6803" fg:w="128"/><text x="81.4134%" y="863.50"/></g><g><title>eval::eval (128 samples, 1.53%)</title><rect x="81.0943%" y="837" width="1.5258%" height="15" fill="rgb(223,134,14)" fg:x="6803" fg:w="128"/><text x="81.4134%" y="847.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (128 samples, 1.53%)</title><rect x="81.0943%" y="821" width="1.5258%" height="15" fill="rgb(233,62,37)" fg:x="6803" fg:w="128"/><text x="81.4134%" y="831.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (128 samples, 1.53%)</title><rect x="81.0943%" y="805" width="1.5258%" height="15" fill="rgb(219,117,42)" fg:x="6803" fg:w="128"/><text x="81.4134%" y="815.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (128 samples, 1.53%)</title><rect x="81.0943%" y="789" width="1.5258%" height="15" fill="rgb(248,40,28)" fg:x="6803" fg:w="128"/><text x="81.4134%" y="799.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="82.6082%" y="773" width="0.0119%" height="15" fill="rgb(246,66,35)" fg:x="6930" fg:w="1"/><text x="82.9273%" y="783.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="82.6082%" y="757" width="0.0119%" height="15" fill="rgb(250,229,22)" fg:x="6930" fg:w="1"/><text x="82.9273%" y="767.50"/></g><g><title>cond::peeks (1 samples, 0.01%)</title><rect x="82.6082%" y="741" width="0.0119%" height="15" fill="rgb(213,89,18)" fg:x="6930" fg:w="1"/><text x="82.9273%" y="751.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.6082%" y="725" width="0.0119%" height="15" fill="rgb(213,122,9)" fg:x="6930" fg:w="1"/><text x="82.9273%" y="735.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="82.6082%" y="709" width="0.0119%" height="15" fill="rgb(220,213,48)" fg:x="6930" fg:w="1"/><text x="82.9273%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.6082%" y="693" width="0.0119%" height="15" fill="rgb(244,109,54)" fg:x="6930" fg:w="1"/><text x="82.9273%" y="703.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.6082%" y="677" width="0.0119%" height="15" fill="rgb(254,104,49)" fg:x="6930" fg:w="1"/><text x="82.9273%" y="687.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.6082%" y="661" width="0.0119%" height="15" fill="rgb(219,28,32)" fg:x="6930" fg:w="1"/><text x="82.9273%" y="671.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="82.6082%" y="645" width="0.0119%" height="15" fill="rgb(249,153,33)" fg:x="6930" fg:w="1"/><text x="82.9273%" y="655.50"/></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="82.6201%" y="869" width="0.0119%" height="15" fill="rgb(230,116,21)" fg:x="6931" fg:w="1"/><text x="82.9392%" y="879.50"/></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex::pool::Pool&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="82.6201%" y="853" width="0.0119%" height="15" fill="rgb(247,110,3)" fg:x="6931" fg:w="1"/><text x="82.9392%" y="863.50"/></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="82.6201%" y="837" width="0.0119%" height="15" fill="rgb(227,128,3)" fg:x="6931" fg:w="1"/><text x="82.9392%" y="847.50"/></g><g><title>core::ptr::drop_in_place&lt;regex::prog::Program&gt; (1 samples, 0.01%)</title><rect x="82.6201%" y="821" width="0.0119%" height="15" fill="rgb(208,21,1)" fg:x="6931" fg:w="1"/><text x="82.9392%" y="831.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="82.6201%" y="805" width="0.0119%" height="15" fill="rgb(225,24,20)" fg:x="6931" fg:w="1"/><text x="82.9392%" y="815.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="82.6201%" y="789" width="0.0119%" height="15" fill="rgb(250,159,24)" fg:x="6931" fg:w="1"/><text x="82.9392%" y="799.50"/></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.02%)</title><rect x="82.6201%" y="901" width="0.0238%" height="15" fill="rgb(214,30,53)" fg:x="6931" fg:w="2"/><text x="82.9392%" y="911.50"/></g><g><title>core::ptr::drop_in_place&lt;ignore::gitignore::Gitignore&gt; (2 samples, 0.02%)</title><rect x="82.6201%" y="885" width="0.0238%" height="15" fill="rgb(243,198,11)" fg:x="6931" fg:w="2"/><text x="82.9392%" y="895.50"/></g><g><title>core::ptr::drop_in_place&lt;globset::GlobSetMatchStrategy&gt; (1 samples, 0.01%)</title><rect x="82.6320%" y="869" width="0.0119%" height="15" fill="rgb(232,33,1)" fg:x="6932" fg:w="1"/><text x="82.9511%" y="879.50"/></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="82.6201%" y="933" width="0.0358%" height="15" fill="rgb(242,60,11)" fg:x="6931" fg:w="3"/><text x="82.9392%" y="943.50"/></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="82.6201%" y="917" width="0.0358%" height="15" fill="rgb(241,229,34)" fg:x="6931" fg:w="3"/><text x="82.9392%" y="927.50"/></g><g><title>std::path::Path::_strip_prefix (1 samples, 0.01%)</title><rect x="82.6439%" y="901" width="0.0119%" height="15" fill="rgb(230,92,51)" fg:x="6933" fg:w="1"/><text x="82.9630%" y="911.50"/></g><g><title>std::path::Components::as_path (1 samples, 0.01%)</title><rect x="82.6439%" y="885" width="0.0119%" height="15" fill="rgb(212,209,8)" fg:x="6933" fg:w="1"/><text x="82.9630%" y="895.50"/></g><g><title>ignore::gitignore::GitignoreBuilder::build (1 samples, 0.01%)</title><rect x="82.6559%" y="885" width="0.0119%" height="15" fill="rgb(241,55,35)" fg:x="6934" fg:w="1"/><text x="82.9750%" y="895.50"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.6559%" y="869" width="0.0119%" height="15" fill="rgb(208,187,52)" fg:x="6934" fg:w="1"/><text x="82.9750%" y="879.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="82.6559%" y="853" width="0.0119%" height="15" fill="rgb(251,110,17)" fg:x="6934" fg:w="1"/><text x="82.9750%" y="863.50"/></g><g><title>helix_term::application::Application::run::{{closure}} (1,224 samples, 14.59%)</title><rect x="68.0892%" y="1045" width="14.5905%" height="15" fill="rgb(246,225,54)" fg:x="5712" fg:w="1224"/><text x="68.4083%" y="1055.50">..n::run::{{closure}} </text></g><g><title>helix_term::application::Application::handle_terminal_events (1,224 samples, 14.59%)</title><rect x="68.0892%" y="1029" width="14.5905%" height="15" fill="rgb(220,109,6)" fg:x="5712" fg:w="1224"/><text x="68.4083%" y="1039.50">..le_terminal_events </text></g><g><title>helix_term::compositor::Compositor::handle_event (1,224 samples, 14.59%)</title><rect x="68.0892%" y="1013" width="14.5905%" height="15" fill="rgb(228,56,50)" fg:x="5712" fg:w="1224"/><text x="68.4083%" y="1023.50">..sitor::handle_event </text></g><g><title>&lt;helix_term::ui::prompt::Prompt as helix_term::compositor::Component&gt;::handle_event (134 samples, 1.60%)</title><rect x="81.0824%" y="997" width="1.5973%" height="15" fill="rgb(230,34,30)" fg:x="6802" fg:w="134"/><text x="81.4015%" y="1007.50"/></g><g><title>helix_term::ui::prompt::Prompt::insert_char (5 samples, 0.06%)</title><rect x="82.6201%" y="981" width="0.0596%" height="15" fill="rgb(205,28,42)" fg:x="6931" fg:w="5"/><text x="82.9392%" y="991.50"/></g><g><title>helix_term::commands::command_mode::_{{closure}} (5 samples, 0.06%)</title><rect x="82.6201%" y="965" width="0.0596%" height="15" fill="rgb(215,68,0)" fg:x="6931" fg:w="5"/><text x="82.9392%" y="975.50"/></g><g><title>helix_term::ui::completers::filename (5 samples, 0.06%)</title><rect x="82.6201%" y="949" width="0.0596%" height="15" fill="rgb(206,91,47)" fg:x="6931" fg:w="5"/><text x="82.9392%" y="959.50"/></g><g><title>ignore::walk::WalkBuilder::build (2 samples, 0.02%)</title><rect x="82.6559%" y="933" width="0.0238%" height="15" fill="rgb(241,159,43)" fg:x="6934" fg:w="2"/><text x="82.9750%" y="943.50"/></g><g><title>ignore::dir::IgnoreBuilder::build (2 samples, 0.02%)</title><rect x="82.6559%" y="917" width="0.0238%" height="15" fill="rgb(232,191,38)" fg:x="6934" fg:w="2"/><text x="82.9750%" y="927.50"/></g><g><title>ignore::gitignore::GitignoreBuilder::build_global (2 samples, 0.02%)</title><rect x="82.6559%" y="901" width="0.0238%" height="15" fill="rgb(212,180,41)" fg:x="6934" fg:w="2"/><text x="82.9750%" y="911.50"/></g><g><title>ignore::gitignore::parse_excludes_file (1 samples, 0.01%)</title><rect x="82.6678%" y="885" width="0.0119%" height="15" fill="rgb(236,134,49)" fg:x="6935" fg:w="1"/><text x="82.9869%" y="895.50"/></g><g><title>regex::re_bytes::Regex::captures_read_at (1 samples, 0.01%)</title><rect x="82.6678%" y="869" width="0.0119%" height="15" fill="rgb(221,83,26)" fg:x="6935" fg:w="1"/><text x="82.9869%" y="879.50"/></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (1 samples, 0.01%)</title><rect x="82.6678%" y="853" width="0.0119%" height="15" fill="rgb(215,87,39)" fg:x="6935" fg:w="1"/><text x="82.9869%" y="863.50"/></g><g><title>helix_term::commands::command_mode::_{{closure}} (1 samples, 0.01%)</title><rect x="82.6797%" y="1045" width="0.0119%" height="15" fill="rgb(242,28,29)" fg:x="6936" fg:w="1"/><text x="82.9988%" y="1055.50"/></g><g><title>helix_term::ui::completers::filename (1 samples, 0.01%)</title><rect x="82.6797%" y="1029" width="0.0119%" height="15" fill="rgb(212,219,47)" fg:x="6936" fg:w="1"/><text x="82.9988%" y="1039.50"/></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="82.6797%" y="1013" width="0.0119%" height="15" fill="rgb(221,35,20)" fg:x="6936" fg:w="1"/><text x="82.9988%" y="1023.50"/></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.6797%" y="997" width="0.0119%" height="15" fill="rgb(234,144,13)" fg:x="6936" fg:w="1"/><text x="82.9988%" y="1007.50"/></g><g><title>&lt;walkdir::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.6797%" y="981" width="0.0119%" height="15" fill="rgb(237,41,27)" fg:x="6936" fg:w="1"/><text x="82.9988%" y="991.50"/></g><g><title>walkdir::IntoIter::handle_entry (1 samples, 0.01%)</title><rect x="82.6797%" y="965" width="0.0119%" height="15" fill="rgb(253,175,5)" fg:x="6936" fg:w="1"/><text x="82.9988%" y="975.50"/></g><g><title>walkdir::IntoIter::push (1 samples, 0.01%)</title><rect x="82.6797%" y="949" width="0.0119%" height="15" fill="rgb(235,210,51)" fg:x="6936" fg:w="1"/><text x="82.9988%" y="959.50"/></g><g><title>std::sys::unix::fs::readdir (1 samples, 0.01%)</title><rect x="82.6797%" y="933" width="0.0119%" height="15" fill="rgb(241,180,35)" fg:x="6936" fg:w="1"/><text x="82.9988%" y="943.50"/></g><g><title>std::ffi::c_str::CString::_new (1 samples, 0.01%)</title><rect x="82.6797%" y="917" width="0.0119%" height="15" fill="rgb(219,45,16)" fg:x="6936" fg:w="1"/><text x="82.9988%" y="927.50"/></g><g><title>parser::layout_end (3 samples, 0.04%)</title><rect x="82.6916%" y="677" width="0.0358%" height="15" fill="rgb(247,212,4)" fg:x="6937" fg:w="3"/><text x="83.0107%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="82.6916%" y="661" width="0.0358%" height="15" fill="rgb(224,211,1)" fg:x="6937" fg:w="3"/><text x="83.0107%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="82.6916%" y="645" width="0.0358%" height="15" fill="rgb(210,193,36)" fg:x="6937" fg:w="3"/><text x="83.0107%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="82.6916%" y="629" width="0.0358%" height="15" fill="rgb(215,121,20)" fg:x="6937" fg:w="3"/><text x="83.0107%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="82.6916%" y="613" width="0.0358%" height="15" fill="rgb(238,146,2)" fg:x="6937" fg:w="3"/><text x="83.0107%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="82.6916%" y="597" width="0.0358%" height="15" fill="rgb(254,123,45)" fg:x="6937" fg:w="3"/><text x="83.0107%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="82.6916%" y="581" width="0.0358%" height="15" fill="rgb(225,126,11)" fg:x="6937" fg:w="3"/><text x="83.0107%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="82.6916%" y="565" width="0.0358%" height="15" fill="rgb(239,12,5)" fg:x="6937" fg:w="3"/><text x="83.0107%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="82.6916%" y="549" width="0.0358%" height="15" fill="rgb(241,207,14)" fg:x="6937" fg:w="3"/><text x="83.0107%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="82.6916%" y="533" width="0.0358%" height="15" fill="rgb(227,134,33)" fg:x="6937" fg:w="3"/><text x="83.0107%" y="543.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="82.6916%" y="517" width="0.0358%" height="15" fill="rgb(221,40,52)" fg:x="6937" fg:w="3"/><text x="83.0107%" y="527.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="82.6916%" y="501" width="0.0358%" height="15" fill="rgb(206,93,8)" fg:x="6937" fg:w="3"/><text x="83.0107%" y="511.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="82.6916%" y="485" width="0.0358%" height="15" fill="rgb(242,160,22)" fg:x="6937" fg:w="3"/><text x="83.0107%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.7274%" y="405" width="0.0238%" height="15" fill="rgb(232,204,40)" fg:x="6940" fg:w="2"/><text x="83.0465%" y="415.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.7274%" y="389" width="0.0238%" height="15" fill="rgb(247,210,47)" fg:x="6940" fg:w="2"/><text x="83.0465%" y="399.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="82.7274%" y="373" width="0.0238%" height="15" fill="rgb(211,91,7)" fg:x="6940" fg:w="2"/><text x="83.0465%" y="383.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.7274%" y="357" width="0.0238%" height="15" fill="rgb(252,160,34)" fg:x="6940" fg:w="2"/><text x="83.0465%" y="367.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="82.7274%" y="341" width="0.0238%" height="15" fill="rgb(220,34,39)" fg:x="6940" fg:w="2"/><text x="83.0465%" y="351.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.7274%" y="325" width="0.0238%" height="15" fill="rgb(247,49,38)" fg:x="6940" fg:w="2"/><text x="83.0465%" y="335.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="82.7274%" y="309" width="0.0238%" height="15" fill="rgb(228,175,44)" fg:x="6940" fg:w="2"/><text x="83.0465%" y="319.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="82.7274%" y="293" width="0.0238%" height="15" fill="rgb(218,214,32)" fg:x="6940" fg:w="2"/><text x="83.0465%" y="303.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="82.7274%" y="277" width="0.0238%" height="15" fill="rgb(213,50,12)" fg:x="6940" fg:w="2"/><text x="83.0465%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.7512%" y="341" width="0.0238%" height="15" fill="rgb(219,35,41)" fg:x="6942" fg:w="2"/><text x="83.0703%" y="351.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="82.7512%" y="325" width="0.0238%" height="15" fill="rgb(219,18,38)" fg:x="6942" fg:w="2"/><text x="83.0703%" y="335.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="82.7512%" y="309" width="0.0238%" height="15" fill="rgb(223,217,6)" fg:x="6942" fg:w="2"/><text x="83.0703%" y="319.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="82.7512%" y="293" width="0.0238%" height="15" fill="rgb(208,193,35)" fg:x="6942" fg:w="2"/><text x="83.0703%" y="303.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="82.7274%" y="501" width="0.0715%" height="15" fill="rgb(254,212,54)" fg:x="6940" fg:w="6"/><text x="83.0465%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="82.7274%" y="485" width="0.0715%" height="15" fill="rgb(205,10,2)" fg:x="6940" fg:w="6"/><text x="83.0465%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="82.7274%" y="469" width="0.0715%" height="15" fill="rgb(230,133,29)" fg:x="6940" fg:w="6"/><text x="83.0465%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="82.7274%" y="453" width="0.0715%" height="15" fill="rgb(226,14,15)" fg:x="6940" fg:w="6"/><text x="83.0465%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="82.7274%" y="437" width="0.0715%" height="15" fill="rgb(226,140,54)" fg:x="6940" fg:w="6"/><text x="83.0465%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="82.7274%" y="421" width="0.0715%" height="15" fill="rgb(250,47,41)" fg:x="6940" fg:w="6"/><text x="83.0465%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="82.7512%" y="405" width="0.0477%" height="15" fill="rgb(227,218,41)" fg:x="6942" fg:w="4"/><text x="83.0703%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="82.7512%" y="389" width="0.0477%" height="15" fill="rgb(254,183,7)" fg:x="6942" fg:w="4"/><text x="83.0703%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="82.7512%" y="373" width="0.0477%" height="15" fill="rgb(206,84,53)" fg:x="6942" fg:w="4"/><text x="83.0703%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="82.7512%" y="357" width="0.0477%" height="15" fill="rgb(213,177,2)" fg:x="6942" fg:w="4"/><text x="83.0703%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="82.7751%" y="341" width="0.0238%" height="15" fill="rgb(234,28,29)" fg:x="6944" fg:w="2"/><text x="83.0942%" y="351.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="82.7751%" y="325" width="0.0238%" height="15" fill="rgb(248,211,38)" fg:x="6944" fg:w="2"/><text x="83.0942%" y="335.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="82.7751%" y="309" width="0.0238%" height="15" fill="rgb(246,30,0)" fg:x="6944" fg:w="2"/><text x="83.0942%" y="319.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="82.7751%" y="293" width="0.0238%" height="15" fill="rgb(244,115,24)" fg:x="6944" fg:w="2"/><text x="83.0942%" y="303.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="82.7989%" y="437" width="0.0358%" height="15" fill="rgb(226,193,14)" fg:x="6946" fg:w="3"/><text x="83.1180%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="82.7989%" y="421" width="0.0358%" height="15" fill="rgb(211,196,48)" fg:x="6946" fg:w="3"/><text x="83.1180%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="82.7989%" y="405" width="0.0358%" height="15" fill="rgb(235,32,20)" fg:x="6946" fg:w="3"/><text x="83.1180%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="82.7989%" y="389" width="0.0358%" height="15" fill="rgb(251,151,49)" fg:x="6946" fg:w="3"/><text x="83.1180%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="82.7989%" y="373" width="0.0358%" height="15" fill="rgb(254,141,38)" fg:x="6946" fg:w="3"/><text x="83.1180%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="82.7989%" y="357" width="0.0358%" height="15" fill="rgb(209,118,44)" fg:x="6946" fg:w="3"/><text x="83.1180%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="82.7989%" y="341" width="0.0358%" height="15" fill="rgb(205,81,4)" fg:x="6946" fg:w="3"/><text x="83.1180%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="82.7989%" y="325" width="0.0358%" height="15" fill="rgb(241,25,6)" fg:x="6946" fg:w="3"/><text x="83.1180%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="82.7989%" y="309" width="0.0358%" height="15" fill="rgb(212,179,29)" fg:x="6946" fg:w="3"/><text x="83.1180%" y="319.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="82.7989%" y="293" width="0.0358%" height="15" fill="rgb(241,40,32)" fg:x="6946" fg:w="3"/><text x="83.1180%" y="303.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="82.7989%" y="277" width="0.0358%" height="15" fill="rgb(223,35,2)" fg:x="6946" fg:w="3"/><text x="83.1180%" y="287.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="82.7989%" y="261" width="0.0358%" height="15" fill="rgb(221,125,54)" fg:x="6946" fg:w="3"/><text x="83.1180%" y="271.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="82.8347%" y="325" width="0.0477%" height="15" fill="rgb(230,5,49)" fg:x="6949" fg:w="4"/><text x="83.1538%" y="335.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="82.8347%" y="309" width="0.0477%" height="15" fill="rgb(221,157,7)" fg:x="6949" fg:w="4"/><text x="83.1538%" y="319.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="82.8347%" y="293" width="0.0477%" height="15" fill="rgb(242,163,10)" fg:x="6949" fg:w="4"/><text x="83.1538%" y="303.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="82.7989%" y="469" width="0.1192%" height="15" fill="rgb(232,30,2)" fg:x="6946" fg:w="10"/><text x="83.1180%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="82.7989%" y="453" width="0.1192%" height="15" fill="rgb(245,102,40)" fg:x="6946" fg:w="10"/><text x="83.1180%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="82.8347%" y="437" width="0.0834%" height="15" fill="rgb(242,10,41)" fg:x="6949" fg:w="7"/><text x="83.1538%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="82.8347%" y="421" width="0.0834%" height="15" fill="rgb(236,184,36)" fg:x="6949" fg:w="7"/><text x="83.1538%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="82.8347%" y="405" width="0.0834%" height="15" fill="rgb(247,147,48)" fg:x="6949" fg:w="7"/><text x="83.1538%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="82.8347%" y="389" width="0.0834%" height="15" fill="rgb(226,166,2)" fg:x="6949" fg:w="7"/><text x="83.1538%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="82.8347%" y="373" width="0.0834%" height="15" fill="rgb(251,196,7)" fg:x="6949" fg:w="7"/><text x="83.1538%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="82.8347%" y="357" width="0.0834%" height="15" fill="rgb(241,40,13)" fg:x="6949" fg:w="7"/><text x="83.1538%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="82.8347%" y="341" width="0.0834%" height="15" fill="rgb(254,4,12)" fg:x="6949" fg:w="7"/><text x="83.1538%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="82.8823%" y="325" width="0.0358%" height="15" fill="rgb(244,139,49)" fg:x="6953" fg:w="3"/><text x="83.2014%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="82.8823%" y="309" width="0.0358%" height="15" fill="rgb(227,28,42)" fg:x="6953" fg:w="3"/><text x="83.2014%" y="319.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="82.8823%" y="293" width="0.0358%" height="15" fill="rgb(231,135,32)" fg:x="6953" fg:w="3"/><text x="83.2014%" y="303.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="82.8823%" y="277" width="0.0358%" height="15" fill="rgb(244,182,3)" fg:x="6953" fg:w="3"/><text x="83.2014%" y="287.50"/></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="82.8823%" y="261" width="0.0358%" height="15" fill="rgb(247,46,19)" fg:x="6953" fg:w="3"/><text x="83.2014%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.9181%" y="405" width="0.0119%" height="15" fill="rgb(251,179,10)" fg:x="6956" fg:w="1"/><text x="83.2372%" y="415.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.9181%" y="389" width="0.0119%" height="15" fill="rgb(229,222,18)" fg:x="6956" fg:w="1"/><text x="83.2372%" y="399.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.9181%" y="373" width="0.0119%" height="15" fill="rgb(251,107,20)" fg:x="6956" fg:w="1"/><text x="83.2372%" y="383.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="82.9181%" y="357" width="0.0119%" height="15" fill="rgb(233,193,19)" fg:x="6956" fg:w="1"/><text x="83.2372%" y="367.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="82.9181%" y="341" width="0.0119%" height="15" fill="rgb(229,146,53)" fg:x="6956" fg:w="1"/><text x="83.2372%" y="351.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="82.9181%" y="325" width="0.0119%" height="15" fill="rgb(244,52,11)" fg:x="6956" fg:w="1"/><text x="83.2372%" y="335.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="82.9181%" y="309" width="0.0119%" height="15" fill="rgb(245,211,46)" fg:x="6956" fg:w="1"/><text x="83.2372%" y="319.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="82.9181%" y="293" width="0.0119%" height="15" fill="rgb(213,8,31)" fg:x="6956" fg:w="1"/><text x="83.2372%" y="303.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="82.9181%" y="437" width="0.0715%" height="15" fill="rgb(205,101,39)" fg:x="6956" fg:w="6"/><text x="83.2372%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="82.9181%" y="421" width="0.0715%" height="15" fill="rgb(212,157,1)" fg:x="6956" fg:w="6"/><text x="83.2372%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="82.9300%" y="405" width="0.0596%" height="15" fill="rgb(232,30,46)" fg:x="6957" fg:w="5"/><text x="83.2491%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="82.9300%" y="389" width="0.0596%" height="15" fill="rgb(216,201,6)" fg:x="6957" fg:w="5"/><text x="83.2491%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="82.9300%" y="373" width="0.0596%" height="15" fill="rgb(209,18,6)" fg:x="6957" fg:w="5"/><text x="83.2491%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="82.9300%" y="357" width="0.0596%" height="15" fill="rgb(219,138,3)" fg:x="6957" fg:w="5"/><text x="83.2491%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (5 samples, 0.06%)</title><rect x="82.9300%" y="341" width="0.0596%" height="15" fill="rgb(210,91,46)" fg:x="6957" fg:w="5"/><text x="83.2491%" y="351.50"/></g><g><title>operator new (5 samples, 0.06%)</title><rect x="82.9300%" y="325" width="0.0596%" height="15" fill="rgb(241,80,44)" fg:x="6957" fg:w="5"/><text x="83.2491%" y="335.50"/></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="82.9300%" y="309" width="0.0596%" height="15" fill="rgb(236,205,36)" fg:x="6957" fg:w="5"/><text x="83.2491%" y="319.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="82.9300%" y="293" width="0.0596%" height="15" fill="rgb(205,59,37)" fg:x="6957" fg:w="5"/><text x="83.2491%" y="303.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="82.9896%" y="341" width="0.0715%" height="15" fill="rgb(239,166,39)" fg:x="6962" fg:w="6"/><text x="83.3087%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="82.9896%" y="325" width="0.0715%" height="15" fill="rgb(239,146,40)" fg:x="6962" fg:w="6"/><text x="83.3087%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (6 samples, 0.07%)</title><rect x="82.9896%" y="309" width="0.0715%" height="15" fill="rgb(231,11,52)" fg:x="6962" fg:w="6"/><text x="83.3087%" y="319.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="82.9896%" y="293" width="0.0715%" height="15" fill="rgb(253,21,37)" fg:x="6962" fg:w="6"/><text x="83.3087%" y="303.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="82.9896%" y="277" width="0.0715%" height="15" fill="rgb(224,87,39)" fg:x="6962" fg:w="6"/><text x="83.3087%" y="287.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="82.9896%" y="261" width="0.0715%" height="15" fill="rgb(249,15,46)" fg:x="6962" fg:w="6"/><text x="83.3087%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="83.0612%" y="245" width="0.0358%" height="15" fill="rgb(250,37,51)" fg:x="6968" fg:w="3"/><text x="83.3803%" y="255.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="83.0612%" y="229" width="0.0358%" height="15" fill="rgb(205,185,43)" fg:x="6968" fg:w="3"/><text x="83.3803%" y="239.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="83.0850%" y="213" width="0.0119%" height="15" fill="rgb(206,65,41)" fg:x="6970" fg:w="1"/><text x="83.4041%" y="223.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="83.0850%" y="197" width="0.0119%" height="15" fill="rgb(236,159,32)" fg:x="6970" fg:w="1"/><text x="83.4041%" y="207.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="82.9896%" y="405" width="0.1192%" height="15" fill="rgb(228,199,27)" fg:x="6962" fg:w="10"/><text x="83.3087%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="82.9896%" y="389" width="0.1192%" height="15" fill="rgb(212,0,37)" fg:x="6962" fg:w="10"/><text x="83.3087%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="82.9896%" y="373" width="0.1192%" height="15" fill="rgb(248,50,11)" fg:x="6962" fg:w="10"/><text x="83.3087%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="82.9896%" y="357" width="0.1192%" height="15" fill="rgb(231,164,25)" fg:x="6962" fg:w="10"/><text x="83.3087%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="83.0612%" y="341" width="0.0477%" height="15" fill="rgb(238,38,39)" fg:x="6968" fg:w="4"/><text x="83.3803%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="83.0612%" y="325" width="0.0477%" height="15" fill="rgb(210,15,50)" fg:x="6968" fg:w="4"/><text x="83.3803%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="83.0612%" y="309" width="0.0477%" height="15" fill="rgb(251,126,36)" fg:x="6968" fg:w="4"/><text x="83.3803%" y="319.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="83.0612%" y="293" width="0.0477%" height="15" fill="rgb(243,59,26)" fg:x="6968" fg:w="4"/><text x="83.3803%" y="303.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="83.0612%" y="277" width="0.0477%" height="15" fill="rgb(215,24,30)" fg:x="6968" fg:w="4"/><text x="83.3803%" y="287.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="83.0612%" y="261" width="0.0477%" height="15" fill="rgb(253,50,51)" fg:x="6968" fg:w="4"/><text x="83.3803%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="83.0969%" y="245" width="0.0119%" height="15" fill="rgb(252,2,16)" fg:x="6971" fg:w="1"/><text x="83.4160%" y="255.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="83.0969%" y="229" width="0.0119%" height="15" fill="rgb(209,123,36)" fg:x="6971" fg:w="1"/><text x="83.4160%" y="239.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="83.0969%" y="213" width="0.0119%" height="15" fill="rgb(245,60,15)" fg:x="6971" fg:w="1"/><text x="83.4160%" y="223.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="83.1088%" y="309" width="0.0477%" height="15" fill="rgb(246,4,13)" fg:x="6972" fg:w="4"/><text x="83.4279%" y="319.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="83.1088%" y="293" width="0.0477%" height="15" fill="rgb(210,223,46)" fg:x="6972" fg:w="4"/><text x="83.4279%" y="303.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="83.1088%" y="277" width="0.0477%" height="15" fill="rgb(248,1,9)" fg:x="6972" fg:w="4"/><text x="83.4279%" y="287.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="83.1088%" y="261" width="0.0477%" height="15" fill="rgb(254,2,34)" fg:x="6972" fg:w="4"/><text x="83.4279%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="83.1088%" y="373" width="0.0715%" height="15" fill="rgb(239,176,1)" fg:x="6972" fg:w="6"/><text x="83.4279%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="83.1088%" y="357" width="0.0715%" height="15" fill="rgb(250,25,32)" fg:x="6972" fg:w="6"/><text x="83.4279%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="83.1088%" y="341" width="0.0715%" height="15" fill="rgb(225,28,39)" fg:x="6972" fg:w="6"/><text x="83.4279%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="83.1088%" y="325" width="0.0715%" height="15" fill="rgb(230,166,37)" fg:x="6972" fg:w="6"/><text x="83.4279%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="83.1565%" y="309" width="0.0238%" height="15" fill="rgb(246,220,4)" fg:x="6976" fg:w="2"/><text x="83.4756%" y="319.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="83.1565%" y="293" width="0.0238%" height="15" fill="rgb(219,119,33)" fg:x="6976" fg:w="2"/><text x="83.4756%" y="303.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="83.1565%" y="277" width="0.0238%" height="15" fill="rgb(221,207,38)" fg:x="6976" fg:w="2"/><text x="83.4756%" y="287.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="83.1565%" y="261" width="0.0238%" height="15" fill="rgb(214,153,5)" fg:x="6976" fg:w="2"/><text x="83.4756%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="83.1565%" y="245" width="0.0238%" height="15" fill="rgb(223,50,16)" fg:x="6976" fg:w="2"/><text x="83.4756%" y="255.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="83.1565%" y="229" width="0.0238%" height="15" fill="rgb(209,207,12)" fg:x="6976" fg:w="2"/><text x="83.4756%" y="239.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="83.1565%" y="213" width="0.0238%" height="15" fill="rgb(207,3,46)" fg:x="6976" fg:w="2"/><text x="83.4756%" y="223.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="83.1804%" y="341" width="0.0238%" height="15" fill="rgb(232,45,53)" fg:x="6978" fg:w="2"/><text x="83.4995%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="83.1804%" y="325" width="0.0238%" height="15" fill="rgb(206,140,15)" fg:x="6978" fg:w="2"/><text x="83.4995%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="83.1804%" y="309" width="0.0238%" height="15" fill="rgb(245,66,17)" fg:x="6978" fg:w="2"/><text x="83.4995%" y="319.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="83.1804%" y="293" width="0.0238%" height="15" fill="rgb(221,25,37)" fg:x="6978" fg:w="2"/><text x="83.4995%" y="303.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="83.1804%" y="277" width="0.0238%" height="15" fill="rgb(215,99,47)" fg:x="6978" fg:w="2"/><text x="83.4995%" y="287.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="83.1804%" y="261" width="0.0238%" height="15" fill="rgb(219,154,44)" fg:x="6978" fg:w="2"/><text x="83.4995%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="83.2042%" y="245" width="0.0238%" height="15" fill="rgb(210,197,36)" fg:x="6980" fg:w="2"/><text x="83.5233%" y="255.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="83.2042%" y="229" width="0.0238%" height="15" fill="rgb(217,137,10)" fg:x="6980" fg:w="2"/><text x="83.5233%" y="239.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="83.2042%" y="213" width="0.0238%" height="15" fill="rgb(240,216,26)" fg:x="6980" fg:w="2"/><text x="83.5233%" y="223.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="83.2042%" y="197" width="0.0238%" height="15" fill="rgb(242,76,17)" fg:x="6980" fg:w="2"/><text x="83.5233%" y="207.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="83.2161%" y="181" width="0.0119%" height="15" fill="rgb(243,142,51)" fg:x="6981" fg:w="1"/><text x="83.5352%" y="191.50"/></g><g><title>parser::operator+ (43 samples, 0.51%)</title><rect x="82.7274%" y="677" width="0.5126%" height="15" fill="rgb(233,109,46)" fg:x="6940" fg:w="43"/><text x="83.0465%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (43 samples, 0.51%)</title><rect x="82.7274%" y="661" width="0.5126%" height="15" fill="rgb(252,45,32)" fg:x="6940" fg:w="43"/><text x="83.0465%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (43 samples, 0.51%)</title><rect x="82.7274%" y="645" width="0.5126%" height="15" fill="rgb(210,69,52)" fg:x="6940" fg:w="43"/><text x="83.0465%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (43 samples, 0.51%)</title><rect x="82.7274%" y="629" width="0.5126%" height="15" fill="rgb(242,30,2)" fg:x="6940" fg:w="43"/><text x="83.0465%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (43 samples, 0.51%)</title><rect x="82.7274%" y="613" width="0.5126%" height="15" fill="rgb(246,137,1)" fg:x="6940" fg:w="43"/><text x="83.0465%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (43 samples, 0.51%)</title><rect x="82.7274%" y="597" width="0.5126%" height="15" fill="rgb(221,205,25)" fg:x="6940" fg:w="43"/><text x="83.0465%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (43 samples, 0.51%)</title><rect x="82.7274%" y="581" width="0.5126%" height="15" fill="rgb(224,44,43)" fg:x="6940" fg:w="43"/><text x="83.0465%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (43 samples, 0.51%)</title><rect x="82.7274%" y="565" width="0.5126%" height="15" fill="rgb(209,81,13)" fg:x="6940" fg:w="43"/><text x="83.0465%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (43 samples, 0.51%)</title><rect x="82.7274%" y="549" width="0.5126%" height="15" fill="rgb(227,88,4)" fg:x="6940" fg:w="43"/><text x="83.0465%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (43 samples, 0.51%)</title><rect x="82.7274%" y="533" width="0.5126%" height="15" fill="rgb(228,118,49)" fg:x="6940" fg:w="43"/><text x="83.0465%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (43 samples, 0.51%)</title><rect x="82.7274%" y="517" width="0.5126%" height="15" fill="rgb(225,215,27)" fg:x="6940" fg:w="43"/><text x="83.0465%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (37 samples, 0.44%)</title><rect x="82.7989%" y="501" width="0.4411%" height="15" fill="rgb(235,226,1)" fg:x="6946" fg:w="37"/><text x="83.1180%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (37 samples, 0.44%)</title><rect x="82.7989%" y="485" width="0.4411%" height="15" fill="rgb(205,107,17)" fg:x="6946" fg:w="37"/><text x="83.1180%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (27 samples, 0.32%)</title><rect x="82.9181%" y="469" width="0.3219%" height="15" fill="rgb(247,85,8)" fg:x="6956" fg:w="27"/><text x="83.2372%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (27 samples, 0.32%)</title><rect x="82.9181%" y="453" width="0.3219%" height="15" fill="rgb(230,220,20)" fg:x="6956" fg:w="27"/><text x="83.2372%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="82.9896%" y="437" width="0.2503%" height="15" fill="rgb(237,22,6)" fg:x="6962" fg:w="21"/><text x="83.3087%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (21 samples, 0.25%)</title><rect x="82.9896%" y="421" width="0.2503%" height="15" fill="rgb(253,39,1)" fg:x="6962" fg:w="21"/><text x="83.3087%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="83.1088%" y="405" width="0.1311%" height="15" fill="rgb(251,206,50)" fg:x="6972" fg:w="11"/><text x="83.4279%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (11 samples, 0.13%)</title><rect x="83.1088%" y="389" width="0.1311%" height="15" fill="rgb(239,162,11)" fg:x="6972" fg:w="11"/><text x="83.4279%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="83.1804%" y="373" width="0.0596%" height="15" fill="rgb(234,164,6)" fg:x="6978" fg:w="5"/><text x="83.4995%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="83.1804%" y="357" width="0.0596%" height="15" fill="rgb(238,112,10)" fg:x="6978" fg:w="5"/><text x="83.4995%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="83.2042%" y="341" width="0.0358%" height="15" fill="rgb(232,78,29)" fg:x="6980" fg:w="3"/><text x="83.5233%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="83.2042%" y="325" width="0.0358%" height="15" fill="rgb(232,20,13)" fg:x="6980" fg:w="3"/><text x="83.5233%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="83.2042%" y="309" width="0.0358%" height="15" fill="rgb(222,175,9)" fg:x="6980" fg:w="3"/><text x="83.5233%" y="319.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="83.2042%" y="293" width="0.0358%" height="15" fill="rgb(233,61,14)" fg:x="6980" fg:w="3"/><text x="83.5233%" y="303.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="83.2042%" y="277" width="0.0358%" height="15" fill="rgb(224,152,29)" fg:x="6980" fg:w="3"/><text x="83.5233%" y="287.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="83.2042%" y="261" width="0.0358%" height="15" fill="rgb(232,26,6)" fg:x="6980" fg:w="3"/><text x="83.5233%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="83.2280%" y="245" width="0.0119%" height="15" fill="rgb(210,116,11)" fg:x="6982" fg:w="1"/><text x="83.5471%" y="255.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="83.2280%" y="229" width="0.0119%" height="15" fill="rgb(238,213,15)" fg:x="6982" fg:w="1"/><text x="83.5471%" y="239.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="83.2280%" y="213" width="0.0119%" height="15" fill="rgb(236,177,32)" fg:x="6982" fg:w="1"/><text x="83.5471%" y="223.50"/></g><g><title>&lt;helix_term::ui::editor::EditorView as helix_term::compositor::Component&gt;::handle_event (47 samples, 0.56%)</title><rect x="82.6916%" y="1029" width="0.5603%" height="15" fill="rgb(230,36,43)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="1039.50"/></g><g><title>helix_term::ui::editor::EditorView::insert_mode (47 samples, 0.56%)</title><rect x="82.6916%" y="1013" width="0.5603%" height="15" fill="rgb(212,76,23)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="1023.50"/></g><g><title>helix_term::commands::insert::insert_char (47 samples, 0.56%)</title><rect x="82.6916%" y="997" width="0.5603%" height="15" fill="rgb(225,168,24)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="1007.50"/></g><g><title>helix_view::document::Document::apply (47 samples, 0.56%)</title><rect x="82.6916%" y="981" width="0.5603%" height="15" fill="rgb(206,40,44)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="991.50"/></g><g><title>helix_view::document::Document::apply_impl (47 samples, 0.56%)</title><rect x="82.6916%" y="965" width="0.5603%" height="15" fill="rgb(251,213,6)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="975.50"/></g><g><title>helix_core::syntax::LanguageLayer::update (47 samples, 0.56%)</title><rect x="82.6916%" y="949" width="0.5603%" height="15" fill="rgb(220,7,47)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="959.50"/></g><g><title>helix_core::syntax::LanguageLayer::parse (47 samples, 0.56%)</title><rect x="82.6916%" y="933" width="0.5603%" height="15" fill="rgb(254,130,53)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="943.50"/></g><g><title>ts_parser_parse (47 samples, 0.56%)</title><rect x="82.6916%" y="917" width="0.5603%" height="15" fill="rgb(240,2,46)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="927.50"/></g><g><title>tree_sitter_haskell_external_scanner_scan (47 samples, 0.56%)</title><rect x="82.6916%" y="901" width="0.5603%" height="15" fill="rgb(252,144,40)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="911.50"/></g><g><title>eval::eval (47 samples, 0.56%)</title><rect x="82.6916%" y="885" width="0.5603%" height="15" fill="rgb(226,23,10)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="895.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (47 samples, 0.56%)</title><rect x="82.6916%" y="869" width="0.5603%" height="15" fill="rgb(212,204,35)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="879.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (47 samples, 0.56%)</title><rect x="82.6916%" y="853" width="0.5603%" height="15" fill="rgb(218,201,15)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="863.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (47 samples, 0.56%)</title><rect x="82.6916%" y="837" width="0.5603%" height="15" fill="rgb(224,197,5)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="847.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (47 samples, 0.56%)</title><rect x="82.6916%" y="821" width="0.5603%" height="15" fill="rgb(224,185,18)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="831.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (47 samples, 0.56%)</title><rect x="82.6916%" y="805" width="0.5603%" height="15" fill="rgb(251,71,45)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="815.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (47 samples, 0.56%)</title><rect x="82.6916%" y="789" width="0.5603%" height="15" fill="rgb(216,74,24)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="799.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (47 samples, 0.56%)</title><rect x="82.6916%" y="773" width="0.5603%" height="15" fill="rgb(250,36,51)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="783.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (47 samples, 0.56%)</title><rect x="82.6916%" y="757" width="0.5603%" height="15" fill="rgb(209,224,28)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (47 samples, 0.56%)</title><rect x="82.6916%" y="741" width="0.5603%" height="15" fill="rgb(228,5,10)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (47 samples, 0.56%)</title><rect x="82.6916%" y="725" width="0.5603%" height="15" fill="rgb(250,57,40)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="735.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic), std::function&lt;Result (State&amp;)&gt; (*)(symbolic::Symbolic)&gt;::_M_invoke (47 samples, 0.56%)</title><rect x="82.6916%" y="709" width="0.5603%" height="15" fill="rgb(228,194,41)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="719.50"/></g><g><title>logic::symop (47 samples, 0.56%)</title><rect x="82.6916%" y="693" width="0.5603%" height="15" fill="rgb(206,68,23)" fg:x="6937" fg:w="47"/><text x="83.0107%" y="703.50"/></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (1 samples, 0.01%)</title><rect x="83.2400%" y="677" width="0.0119%" height="15" fill="rgb(230,33,29)" fg:x="6983" fg:w="1"/><text x="83.5591%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="83.2400%" y="661" width="0.0119%" height="15" fill="rgb(210,39,32)" fg:x="6983" fg:w="1"/><text x="83.5591%" y="671.50"/></g><g><title>parser::either (1 samples, 0.01%)</title><rect x="83.2400%" y="645" width="0.0119%" height="15" fill="rgb(236,89,23)" fg:x="6983" fg:w="1"/><text x="83.5591%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="83.2400%" y="629" width="0.0119%" height="15" fill="rgb(218,52,52)" fg:x="6983" fg:w="1"/><text x="83.5591%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="83.2400%" y="613" width="0.0119%" height="15" fill="rgb(235,154,5)" fg:x="6983" fg:w="1"/><text x="83.5591%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="83.2400%" y="597" width="0.0119%" height="15" fill="rgb(223,168,9)" fg:x="6983" fg:w="1"/><text x="83.5591%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="83.2400%" y="581" width="0.0119%" height="15" fill="rgb(220,8,33)" fg:x="6983" fg:w="1"/><text x="83.5591%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="83.2400%" y="565" width="0.0119%" height="15" fill="rgb(216,176,3)" fg:x="6983" fg:w="1"/><text x="83.5591%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="83.2400%" y="549" width="0.0119%" height="15" fill="rgb(254,150,22)" fg:x="6983" fg:w="1"/><text x="83.5591%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="83.2400%" y="533" width="0.0119%" height="15" fill="rgb(231,61,53)" fg:x="6983" fg:w="1"/><text x="83.5591%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="83.2400%" y="517" width="0.0119%" height="15" fill="rgb(249,177,41)" fg:x="6983" fg:w="1"/><text x="83.5591%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="83.2400%" y="501" width="0.0119%" height="15" fill="rgb(221,122,7)" fg:x="6983" fg:w="1"/><text x="83.5591%" y="511.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="83.2400%" y="485" width="0.0119%" height="15" fill="rgb(215,115,7)" fg:x="6983" fg:w="1"/><text x="83.5591%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="83.2400%" y="469" width="0.0119%" height="15" fill="rgb(218,108,33)" fg:x="6983" fg:w="1"/><text x="83.5591%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="83.2400%" y="453" width="0.0119%" height="15" fill="rgb(221,205,39)" fg:x="6983" fg:w="1"/><text x="83.5591%" y="463.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="83.2400%" y="437" width="0.0119%" height="15" fill="rgb(220,171,18)" fg:x="6983" fg:w="1"/><text x="83.5591%" y="447.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="83.2400%" y="421" width="0.0119%" height="15" fill="rgb(236,188,29)" fg:x="6983" fg:w="1"/><text x="83.5591%" y="431.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="83.2400%" y="405" width="0.0119%" height="15" fill="rgb(239,29,5)" fg:x="6983" fg:w="1"/><text x="83.5591%" y="415.50"/></g><g><title>helix_term::compositor::Compositor::handle_event (194 samples, 2.31%)</title><rect x="82.6916%" y="1045" width="2.3126%" height="15" fill="rgb(236,114,44)" fg:x="6937" fg:w="194"/><text x="83.0107%" y="1055.50">.. </text></g><g><title>&lt;helix_term::ui::prompt::Prompt as helix_term::compositor::Component&gt;::handle_event (147 samples, 1.75%)</title><rect x="83.2519%" y="1029" width="1.7523%" height="15" fill="rgb(239,214,48)" fg:x="6984" fg:w="147"/><text x="83.5710%" y="1039.50"/></g><g><title>helix_term::commands::command_mode::_{{closure}} (147 samples, 1.75%)</title><rect x="83.2519%" y="1013" width="1.7523%" height="15" fill="rgb(241,56,8)" fg:x="6984" fg:w="147"/><text x="83.5710%" y="1023.50"/></g><g><title>helix_term::commands::cmd::open (147 samples, 1.75%)</title><rect x="83.2519%" y="997" width="1.7523%" height="15" fill="rgb(228,201,0)" fg:x="6984" fg:w="147"/><text x="83.5710%" y="1007.50"/></g><g><title>helix_view::editor::Editor::open (147 samples, 1.75%)</title><rect x="83.2519%" y="981" width="1.7523%" height="15" fill="rgb(226,219,34)" fg:x="6984" fg:w="147"/><text x="83.5710%" y="991.50"/></g><g><title>helix_view::document::Document::open (147 samples, 1.75%)</title><rect x="83.2519%" y="965" width="1.7523%" height="15" fill="rgb(209,204,54)" fg:x="6984" fg:w="147"/><text x="83.5710%" y="975.50"/></g><g><title>helix_view::document::Document::set_language (147 samples, 1.75%)</title><rect x="83.2519%" y="949" width="1.7523%" height="15" fill="rgb(251,160,17)" fg:x="6984" fg:w="147"/><text x="83.5710%" y="959.50"/></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (147 samples, 1.75%)</title><rect x="83.2519%" y="933" width="1.7523%" height="15" fill="rgb(235,15,25)" fg:x="6984" fg:w="147"/><text x="83.5710%" y="943.50"/></g><g><title>once_cell::imp::initialize_inner (147 samples, 1.75%)</title><rect x="83.2519%" y="917" width="1.7523%" height="15" fill="rgb(216,209,28)" fg:x="6984" fg:w="147"/><text x="83.5710%" y="927.50"/></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (147 samples, 1.75%)</title><rect x="83.2519%" y="901" width="1.7523%" height="15" fill="rgb(248,123,21)" fg:x="6984" fg:w="147"/><text x="83.5710%" y="911.50"/></g><g><title>helix_core::syntax::LanguageConfiguration::initialize_highlight (147 samples, 1.75%)</title><rect x="83.2519%" y="885" width="1.7523%" height="15" fill="rgb(226,138,44)" fg:x="6984" fg:w="147"/><text x="83.5710%" y="895.50"/></g><g><title>helix_core::syntax::HighlightConfiguration::new (147 samples, 1.75%)</title><rect x="83.2519%" y="869" width="1.7523%" height="15" fill="rgb(211,104,54)" fg:x="6984" fg:w="147"/><text x="83.5710%" y="879.50"/></g><g><title>tree_sitter::Query::new (147 samples, 1.75%)</title><rect x="83.2519%" y="853" width="1.7523%" height="15" fill="rgb(241,198,15)" fg:x="6984" fg:w="147"/><text x="83.5710%" y="863.50"/></g><g><title>ts_query_new (147 samples, 1.75%)</title><rect x="83.2519%" y="837" width="1.7523%" height="15" fill="rgb(227,155,54)" fg:x="6984" fg:w="147"/><text x="83.5710%" y="847.50"/></g><g><title>ts_query__analyze_patterns (147 samples, 1.75%)</title><rect x="83.2519%" y="821" width="1.7523%" height="15" fill="rgb(225,131,31)" fg:x="6984" fg:w="147"/><text x="83.5710%" y="831.50"/></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.05%)</title><rect x="84.9565%" y="805" width="0.0477%" height="15" fill="rgb(242,40,17)" fg:x="7127" fg:w="4"/><text x="85.2756%" y="815.50"/></g><g><title>&lt;walkdir::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="85.0042%" y="997" width="0.0238%" height="15" fill="rgb(254,57,35)" fg:x="7131" fg:w="2"/><text x="85.3233%" y="1007.50"/></g><g><title>walkdir::IntoIter::handle_entry (2 samples, 0.02%)</title><rect x="85.0042%" y="981" width="0.0238%" height="15" fill="rgb(240,64,32)" fg:x="7131" fg:w="2"/><text x="85.3233%" y="991.50"/></g><g><title>walkdir::IntoIter::push (2 samples, 0.02%)</title><rect x="85.0042%" y="965" width="0.0238%" height="15" fill="rgb(251,136,26)" fg:x="7131" fg:w="2"/><text x="85.3233%" y="975.50"/></g><g><title>std::sys::unix::fs::readdir (2 samples, 0.02%)</title><rect x="85.0042%" y="949" width="0.0238%" height="15" fill="rgb(208,60,54)" fg:x="7131" fg:w="2"/><text x="85.3233%" y="959.50"/></g><g><title>opendir_tail (2 samples, 0.02%)</title><rect x="85.0042%" y="933" width="0.0238%" height="15" fill="rgb(220,13,12)" fg:x="7131" fg:w="2"/><text x="85.3233%" y="943.50"/></g><g><title>__alloc_dir (2 samples, 0.02%)</title><rect x="85.0042%" y="917" width="0.0238%" height="15" fill="rgb(213,149,1)" fg:x="7131" fg:w="2"/><text x="85.3233%" y="927.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="85.0042%" y="901" width="0.0238%" height="15" fill="rgb(212,191,39)" fg:x="7131" fg:w="2"/><text x="85.3233%" y="911.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="85.0161%" y="885" width="0.0119%" height="15" fill="rgb(215,221,42)" fg:x="7132" fg:w="1"/><text x="85.3352%" y="895.50"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="85.0280%" y="933" width="0.0119%" height="15" fill="rgb(244,79,23)" fg:x="7133" fg:w="1"/><text x="85.3471%" y="943.50"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="85.0280%" y="949" width="0.0238%" height="15" fill="rgb(247,17,29)" fg:x="7133" fg:w="2"/><text x="85.3471%" y="959.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="85.0399%" y="933" width="0.0119%" height="15" fill="rgb(251,221,21)" fg:x="7134" fg:w="1"/><text x="85.3590%" y="943.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="85.0399%" y="917" width="0.0119%" height="15" fill="rgb(207,202,34)" fg:x="7134" fg:w="1"/><text x="85.3590%" y="927.50"/></g><g><title>core::ptr::drop_in_place&lt;ignore::gitignore::GitignoreBuilder&gt; (4 samples, 0.05%)</title><rect x="85.0280%" y="965" width="0.0477%" height="15" fill="rgb(217,4,34)" fg:x="7133" fg:w="4"/><text x="85.3471%" y="975.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="85.0519%" y="949" width="0.0238%" height="15" fill="rgb(253,17,16)" fg:x="7135" fg:w="2"/><text x="85.3710%" y="959.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="85.0638%" y="933" width="0.0119%" height="15" fill="rgb(223,91,48)" fg:x="7136" fg:w="1"/><text x="85.3829%" y="943.50"/></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="85.0757%" y="949" width="0.0238%" height="15" fill="rgb(244,191,22)" fg:x="7137" fg:w="2"/><text x="85.3948%" y="959.50"/></g><g><title>std::io::append_to_string (1 samples, 0.01%)</title><rect x="85.0876%" y="933" width="0.0119%" height="15" fill="rgb(211,107,14)" fg:x="7138" fg:w="1"/><text x="85.4067%" y="943.50"/></g><g><title>__libc_read (1 samples, 0.01%)</title><rect x="85.0876%" y="917" width="0.0119%" height="15" fill="rgb(232,81,23)" fg:x="7138" fg:w="1"/><text x="85.4067%" y="927.50"/></g><g><title>__pthread_enable_asynccancel (1 samples, 0.01%)</title><rect x="85.0876%" y="901" width="0.0119%" height="15" fill="rgb(237,126,14)" fg:x="7138" fg:w="1"/><text x="85.4067%" y="911.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="85.0995%" y="949" width="0.0238%" height="15" fill="rgb(230,65,39)" fg:x="7139" fg:w="2"/><text x="85.4186%" y="959.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="85.0995%" y="933" width="0.0238%" height="15" fill="rgb(208,106,41)" fg:x="7139" fg:w="2"/><text x="85.4186%" y="943.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.1353%" y="917" width="0.0119%" height="15" fill="rgb(206,125,25)" fg:x="7142" fg:w="1"/><text x="85.4544%" y="927.50"/></g><g><title>globset::glob::Parser::push_token (1 samples, 0.01%)</title><rect x="85.1472%" y="917" width="0.0119%" height="15" fill="rgb(250,24,29)" fg:x="7143" fg:w="1"/><text x="85.4663%" y="927.50"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="85.1472%" y="901" width="0.0119%" height="15" fill="rgb(226,49,32)" fg:x="7143" fg:w="1"/><text x="85.4663%" y="911.50"/></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="85.1472%" y="885" width="0.0119%" height="15" fill="rgb(217,110,16)" fg:x="7143" fg:w="1"/><text x="85.4663%" y="895.50"/></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="85.1472%" y="869" width="0.0119%" height="15" fill="rgb(252,16,53)" fg:x="7143" fg:w="1"/><text x="85.4663%" y="879.50"/></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="85.1472%" y="853" width="0.0119%" height="15" fill="rgb(238,163,11)" fg:x="7143" fg:w="1"/><text x="85.4663%" y="863.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="85.1472%" y="837" width="0.0119%" height="15" fill="rgb(206,210,1)" fg:x="7143" fg:w="1"/><text x="85.4663%" y="847.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="85.1591%" y="901" width="0.0119%" height="15" fill="rgb(229,8,25)" fg:x="7144" fg:w="1"/><text x="85.4782%" y="911.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="85.1949%" y="885" width="0.0358%" height="15" fill="rgb(247,155,23)" fg:x="7147" fg:w="3"/><text x="85.5140%" y="895.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="85.2068%" y="869" width="0.0238%" height="15" fill="rgb(207,26,7)" fg:x="7148" fg:w="2"/><text x="85.5259%" y="879.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="85.2307%" y="885" width="0.0358%" height="15" fill="rgb(215,179,12)" fg:x="7150" fg:w="3"/><text x="85.5498%" y="895.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="85.2545%" y="869" width="0.0119%" height="15" fill="rgb(238,208,11)" fg:x="7152" fg:w="1"/><text x="85.5736%" y="879.50"/></g><g><title>ignore::gitignore::GitignoreBuilder::add (21 samples, 0.25%)</title><rect x="85.0757%" y="965" width="0.2503%" height="15" fill="rgb(238,102,42)" fg:x="7137" fg:w="21"/><text x="85.3948%" y="975.50"/></g><g><title>ignore::gitignore::GitignoreBuilder::add_line (17 samples, 0.20%)</title><rect x="85.1234%" y="949" width="0.2026%" height="15" fill="rgb(239,35,9)" fg:x="7141" fg:w="17"/><text x="85.4425%" y="959.50"/></g><g><title>globset::glob::GlobBuilder::build (16 samples, 0.19%)</title><rect x="85.1353%" y="933" width="0.1907%" height="15" fill="rgb(244,182,30)" fg:x="7142" fg:w="16"/><text x="85.4544%" y="943.50"/></g><g><title>globset::glob::Tokens::tokens_to_regex (14 samples, 0.17%)</title><rect x="85.1591%" y="917" width="0.1669%" height="15" fill="rgb(232,181,23)" fg:x="7144" fg:w="14"/><text x="85.4782%" y="927.50"/></g><g><title>globset::glob::char_to_escaped_literal (13 samples, 0.15%)</title><rect x="85.1711%" y="901" width="0.1550%" height="15" fill="rgb(242,154,29)" fg:x="7145" fg:w="13"/><text x="85.4902%" y="911.50"/></g><g><title>regex_syntax::escape_into (5 samples, 0.06%)</title><rect x="85.2664%" y="885" width="0.0596%" height="15" fill="rgb(219,23,2)" fg:x="7153" fg:w="5"/><text x="85.5855%" y="895.50"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.05%)</title><rect x="85.2783%" y="869" width="0.0477%" height="15" fill="rgb(234,94,43)" fg:x="7154" fg:w="4"/><text x="85.5974%" y="879.50"/></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="85.2903%" y="853" width="0.0358%" height="15" fill="rgb(223,55,45)" fg:x="7155" fg:w="3"/><text x="85.6094%" y="863.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="85.3022%" y="837" width="0.0238%" height="15" fill="rgb(241,215,54)" fg:x="7156" fg:w="2"/><text x="85.6213%" y="847.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="85.3022%" y="821" width="0.0238%" height="15" fill="rgb(247,63,53)" fg:x="7156" fg:w="2"/><text x="85.6213%" y="831.50"/></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="85.3260%" y="949" width="0.0119%" height="15" fill="rgb(220,166,7)" fg:x="7158" fg:w="1"/><text x="85.6451%" y="959.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.3260%" y="933" width="0.0119%" height="15" fill="rgb(248,53,45)" fg:x="7158" fg:w="1"/><text x="85.6451%" y="943.50"/></g><g><title>ignore::gitignore::GitignoreBuilder::build (2 samples, 0.02%)</title><rect x="85.3260%" y="965" width="0.0238%" height="15" fill="rgb(224,207,20)" fg:x="7158" fg:w="2"/><text x="85.6451%" y="975.50"/></g><g><title>&lt;thread_local::ThreadLocal&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="85.3379%" y="949" width="0.0119%" height="15" fill="rgb(244,185,11)" fg:x="7159" fg:w="1"/><text x="85.6570%" y="959.50"/></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="85.3379%" y="933" width="0.0119%" height="15" fill="rgb(230,13,42)" fg:x="7159" fg:w="1"/><text x="85.6570%" y="943.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.3379%" y="917" width="0.0119%" height="15" fill="rgb(243,191,18)" fg:x="7159" fg:w="1"/><text x="85.6570%" y="927.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="85.3379%" y="901" width="0.0119%" height="15" fill="rgb(249,135,15)" fg:x="7159" fg:w="1"/><text x="85.6570%" y="911.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.3499%" y="949" width="0.0119%" height="15" fill="rgb(229,26,35)" fg:x="7160" fg:w="1"/><text x="85.6690%" y="959.50"/></g><g><title>helix_term::ui::completers::filename (32 samples, 0.38%)</title><rect x="85.0042%" y="1045" width="0.3815%" height="15" fill="rgb(216,191,16)" fg:x="7131" fg:w="32"/><text x="85.3233%" y="1055.50"/></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 0.38%)</title><rect x="85.0042%" y="1029" width="0.3815%" height="15" fill="rgb(242,18,7)" fg:x="7131" fg:w="32"/><text x="85.3233%" y="1039.50"/></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.38%)</title><rect x="85.0042%" y="1013" width="0.3815%" height="15" fill="rgb(205,128,17)" fg:x="7131" fg:w="32"/><text x="85.3233%" y="1023.50"/></g><g><title>ignore::dir::Ignore::add_child_path (30 samples, 0.36%)</title><rect x="85.0280%" y="997" width="0.3576%" height="15" fill="rgb(229,199,44)" fg:x="7133" fg:w="30"/><text x="85.3471%" y="1007.50"/></g><g><title>ignore::dir::create_gitignore (30 samples, 0.36%)</title><rect x="85.0280%" y="981" width="0.3576%" height="15" fill="rgb(234,222,3)" fg:x="7133" fg:w="30"/><text x="85.3471%" y="991.50"/></g><g><title>std::path::Path::_join (3 samples, 0.04%)</title><rect x="85.3499%" y="965" width="0.0358%" height="15" fill="rgb(220,170,20)" fg:x="7160" fg:w="3"/><text x="85.6690%" y="975.50"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="85.3618%" y="949" width="0.0238%" height="15" fill="rgb(207,138,8)" fg:x="7161" fg:w="2"/><text x="85.6809%" y="959.50"/></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="85.3618%" y="933" width="0.0238%" height="15" fill="rgb(244,130,36)" fg:x="7161" fg:w="2"/><text x="85.6809%" y="943.50"/></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="85.3737%" y="917" width="0.0119%" height="15" fill="rgb(207,197,52)" fg:x="7162" fg:w="1"/><text x="85.6928%" y="927.50"/></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="85.3737%" y="901" width="0.0119%" height="15" fill="rgb(206,9,21)" fg:x="7162" fg:w="1"/><text x="85.6928%" y="911.50"/></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.01%)</title><rect x="85.3856%" y="1013" width="0.0119%" height="15" fill="rgb(250,15,47)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="1023.50"/></g><g><title>once_cell::imp::initialize_inner (1 samples, 0.01%)</title><rect x="85.3856%" y="997" width="0.0119%" height="15" fill="rgb(235,202,14)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="1007.50"/></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.01%)</title><rect x="85.3856%" y="981" width="0.0119%" height="15" fill="rgb(211,180,47)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="991.50"/></g><g><title>helix_core::syntax::LanguageConfiguration::initialize_highlight (1 samples, 0.01%)</title><rect x="85.3856%" y="965" width="0.0119%" height="15" fill="rgb(209,61,11)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="975.50"/></g><g><title>helix_syntax::get_language (1 samples, 0.01%)</title><rect x="85.3856%" y="949" width="0.0119%" height="15" fill="rgb(243,197,29)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="959.50"/></g><g><title>libloading::os::unix::Library::open (1 samples, 0.01%)</title><rect x="85.3856%" y="933" width="0.0119%" height="15" fill="rgb(216,185,16)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="943.50"/></g><g><title>__dlopen_check (1 samples, 0.01%)</title><rect x="85.3856%" y="917" width="0.0119%" height="15" fill="rgb(248,5,15)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="927.50"/></g><g><title>_dlerror_run (1 samples, 0.01%)</title><rect x="85.3856%" y="901" width="0.0119%" height="15" fill="rgb(240,39,41)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="911.50"/></g><g><title>__GI__dl_catch_error (1 samples, 0.01%)</title><rect x="85.3856%" y="885" width="0.0119%" height="15" fill="rgb(224,220,43)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="895.50"/></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="85.3856%" y="869" width="0.0119%" height="15" fill="rgb(215,21,24)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="879.50"/></g><g><title>dlopen_doit (1 samples, 0.01%)</title><rect x="85.3856%" y="853" width="0.0119%" height="15" fill="rgb(220,102,8)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="863.50"/></g><g><title>_dl_open (1 samples, 0.01%)</title><rect x="85.3856%" y="837" width="0.0119%" height="15" fill="rgb(225,185,10)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="847.50"/></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="85.3856%" y="821" width="0.0119%" height="15" fill="rgb(212,108,24)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="831.50"/></g><g><title>dl_open_worker (1 samples, 0.01%)</title><rect x="85.3856%" y="805" width="0.0119%" height="15" fill="rgb(237,27,0)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="815.50"/></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="85.3856%" y="789" width="0.0119%" height="15" fill="rgb(212,106,38)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="799.50"/></g><g><title>_dl_init (1 samples, 0.01%)</title><rect x="85.3856%" y="773" width="0.0119%" height="15" fill="rgb(210,125,30)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="783.50"/></g><g><title>call_init (1 samples, 0.01%)</title><rect x="85.3856%" y="757" width="0.0119%" height="15" fill="rgb(215,219,1)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="767.50"/></g><g><title>__static_initialization_and_destruction_0 (1 samples, 0.01%)</title><rect x="85.3856%" y="741" width="0.0119%" height="15" fill="rgb(223,10,12)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="751.50"/></g><g><title>parser::operator+ (1 samples, 0.01%)</title><rect x="85.3856%" y="725" width="0.0119%" height="15" fill="rgb(245,40,34)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3856%" y="709" width="0.0119%" height="15" fill="rgb(211,185,19)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3856%" y="693" width="0.0119%" height="15" fill="rgb(243,190,43)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3856%" y="677" width="0.0119%" height="15" fill="rgb(232,208,29)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3856%" y="661" width="0.0119%" height="15" fill="rgb(234,134,27)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3856%" y="645" width="0.0119%" height="15" fill="rgb(225,41,29)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3856%" y="629" width="0.0119%" height="15" fill="rgb(241,214,44)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3856%" y="613" width="0.0119%" height="15" fill="rgb(205,219,41)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3856%" y="597" width="0.0119%" height="15" fill="rgb(226,15,26)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3856%" y="581" width="0.0119%" height="15" fill="rgb(210,83,41)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3856%" y="565" width="0.0119%" height="15" fill="rgb(247,9,39)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3856%" y="549" width="0.0119%" height="15" fill="rgb(209,37,30)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3856%" y="533" width="0.0119%" height="15" fill="rgb(248,170,46)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3856%" y="517" width="0.0119%" height="15" fill="rgb(237,129,44)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3856%" y="501" width="0.0119%" height="15" fill="rgb(225,117,51)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3856%" y="485" width="0.0119%" height="15" fill="rgb(212,165,2)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3856%" y="469" width="0.0119%" height="15" fill="rgb(213,53,45)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="479.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="85.3856%" y="453" width="0.0119%" height="15" fill="rgb(220,148,3)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="463.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.3856%" y="437" width="0.0119%" height="15" fill="rgb(228,37,29)" fg:x="7163" fg:w="1"/><text x="85.7047%" y="447.50"/></g><g><title>helix_view::document::Document::open (2 samples, 0.02%)</title><rect x="85.3856%" y="1045" width="0.0238%" height="15" fill="rgb(209,76,29)" fg:x="7163" fg:w="2"/><text x="85.7047%" y="1055.50"/></g><g><title>helix_view::document::Document::set_language (2 samples, 0.02%)</title><rect x="85.3856%" y="1029" width="0.0238%" height="15" fill="rgb(215,90,5)" fg:x="7163" fg:w="2"/><text x="85.7047%" y="1039.50"/></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="85.3975%" y="1013" width="0.0119%" height="15" fill="rgb(227,207,32)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="1023.50"/></g><g><title>helix_core::syntax::LanguageLayer::parse (1 samples, 0.01%)</title><rect x="85.3975%" y="997" width="0.0119%" height="15" fill="rgb(251,218,44)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="1007.50"/></g><g><title>ts_parser_parse (1 samples, 0.01%)</title><rect x="85.3975%" y="981" width="0.0119%" height="15" fill="rgb(211,44,16)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="991.50"/></g><g><title>tree_sitter_haskell_external_scanner_scan (1 samples, 0.01%)</title><rect x="85.3975%" y="965" width="0.0119%" height="15" fill="rgb(242,170,37)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="975.50"/></g><g><title>eval::eval (1 samples, 0.01%)</title><rect x="85.3975%" y="949" width="0.0119%" height="15" fill="rgb(205,181,22)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="959.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="85.3975%" y="933" width="0.0119%" height="15" fill="rgb(228,130,19)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="943.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="85.3975%" y="917" width="0.0119%" height="15" fill="rgb(228,9,15)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="927.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="85.3975%" y="901" width="0.0119%" height="15" fill="rgb(219,66,48)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="911.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="85.3975%" y="885" width="0.0119%" height="15" fill="rgb(234,203,10)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="895.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="85.3975%" y="869" width="0.0119%" height="15" fill="rgb(219,209,1)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="879.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="85.3975%" y="853" width="0.0119%" height="15" fill="rgb(206,167,9)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="863.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="85.3975%" y="837" width="0.0119%" height="15" fill="rgb(210,11,39)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="847.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="85.3975%" y="821" width="0.0119%" height="15" fill="rgb(251,90,47)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="831.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="85.3975%" y="805" width="0.0119%" height="15" fill="rgb(237,7,4)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="815.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="85.3975%" y="789" width="0.0119%" height="15" fill="rgb(232,205,47)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="799.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic), std::function&lt;Result (State&amp;)&gt; (*)(symbolic::Symbolic)&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="85.3975%" y="773" width="0.0119%" height="15" fill="rgb(215,86,48)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="783.50"/></g><g><title>logic::symop (1 samples, 0.01%)</title><rect x="85.3975%" y="757" width="0.0119%" height="15" fill="rgb(232,14,47)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="767.50"/></g><g><title>parser::operator+ (1 samples, 0.01%)</title><rect x="85.3975%" y="741" width="0.0119%" height="15" fill="rgb(240,28,46)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3975%" y="725" width="0.0119%" height="15" fill="rgb(224,85,5)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="735.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3975%" y="709" width="0.0119%" height="15" fill="rgb(219,34,25)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3975%" y="693" width="0.0119%" height="15" fill="rgb(247,137,45)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3975%" y="677" width="0.0119%" height="15" fill="rgb(237,121,47)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3975%" y="661" width="0.0119%" height="15" fill="rgb(247,148,27)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3975%" y="645" width="0.0119%" height="15" fill="rgb(220,44,0)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3975%" y="629" width="0.0119%" height="15" fill="rgb(236,61,29)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3975%" y="613" width="0.0119%" height="15" fill="rgb(244,180,35)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3975%" y="597" width="0.0119%" height="15" fill="rgb(242,14,54)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3975%" y="581" width="0.0119%" height="15" fill="rgb(206,24,45)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3975%" y="565" width="0.0119%" height="15" fill="rgb(215,211,6)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3975%" y="549" width="0.0119%" height="15" fill="rgb(207,56,2)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3975%" y="533" width="0.0119%" height="15" fill="rgb(220,135,9)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3975%" y="517" width="0.0119%" height="15" fill="rgb(214,145,52)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3975%" y="501" width="0.0119%" height="15" fill="rgb(241,83,53)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="511.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3975%" y="485" width="0.0119%" height="15" fill="rgb(222,66,13)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3975%" y="469" width="0.0119%" height="15" fill="rgb(239,164,54)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3975%" y="453" width="0.0119%" height="15" fill="rgb(216,189,13)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3975%" y="437" width="0.0119%" height="15" fill="rgb(228,212,51)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="447.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3975%" y="421" width="0.0119%" height="15" fill="rgb(207,190,21)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="431.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3975%" y="405" width="0.0119%" height="15" fill="rgb(245,28,35)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="415.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3975%" y="389" width="0.0119%" height="15" fill="rgb(239,23,40)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="399.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3975%" y="373" width="0.0119%" height="15" fill="rgb(242,10,51)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="383.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3975%" y="357" width="0.0119%" height="15" fill="rgb(207,186,5)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="367.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3975%" y="341" width="0.0119%" height="15" fill="rgb(242,21,16)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="351.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3975%" y="325" width="0.0119%" height="15" fill="rgb(237,0,53)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="335.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3975%" y="309" width="0.0119%" height="15" fill="rgb(215,8,52)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="319.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3975%" y="293" width="0.0119%" height="15" fill="rgb(248,62,44)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="303.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3975%" y="277" width="0.0119%" height="15" fill="rgb(224,83,15)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="287.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.3975%" y="261" width="0.0119%" height="15" fill="rgb(249,100,46)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="271.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.3975%" y="245" width="0.0119%" height="15" fill="rgb(213,35,48)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="255.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="85.3975%" y="229" width="0.0119%" height="15" fill="rgb(251,2,13)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="239.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.3975%" y="213" width="0.0119%" height="15" fill="rgb(212,132,21)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="223.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="85.3975%" y="197" width="0.0119%" height="15" fill="rgb(247,17,21)" fg:x="7164" fg:w="1"/><text x="85.7166%" y="207.50"/></g><g><title>parser::finish_if_valid (1 samples, 0.01%)</title><rect x="85.4095%" y="725" width="0.0119%" height="15" fill="rgb(220,177,38)" fg:x="7165" fg:w="1"/><text x="85.7286%" y="735.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="85.4095%" y="709" width="0.0119%" height="15" fill="rgb(233,219,21)" fg:x="7165" fg:w="1"/><text x="85.7286%" y="719.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="85.4214%" y="661" width="0.0119%" height="15" fill="rgb(246,17,7)" fg:x="7166" fg:w="1"/><text x="85.7405%" y="671.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.4214%" y="645" width="0.0119%" height="15" fill="rgb(212,4,22)" fg:x="7166" fg:w="1"/><text x="85.7405%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.4333%" y="661" width="0.0119%" height="15" fill="rgb(243,85,21)" fg:x="7167" fg:w="1"/><text x="85.7524%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.4333%" y="645" width="0.0119%" height="15" fill="rgb(232,218,2)" fg:x="7167" fg:w="1"/><text x="85.7524%" y="655.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="85.4333%" y="629" width="0.0119%" height="15" fill="rgb(253,168,47)" fg:x="7167" fg:w="1"/><text x="85.7524%" y="639.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.4333%" y="613" width="0.0119%" height="15" fill="rgb(238,101,25)" fg:x="7167" fg:w="1"/><text x="85.7524%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="85.4214%" y="677" width="0.0358%" height="15" fill="rgb(251,86,12)" fg:x="7166" fg:w="3"/><text x="85.7405%" y="687.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.4452%" y="661" width="0.0119%" height="15" fill="rgb(241,112,44)" fg:x="7168" fg:w="1"/><text x="85.7643%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.4452%" y="645" width="0.0119%" height="15" fill="rgb(224,28,25)" fg:x="7168" fg:w="1"/><text x="85.7643%" y="655.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="85.4452%" y="629" width="0.0119%" height="15" fill="rgb(209,201,1)" fg:x="7168" fg:w="1"/><text x="85.7643%" y="639.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.4452%" y="613" width="0.0119%" height="15" fill="rgb(231,30,22)" fg:x="7168" fg:w="1"/><text x="85.7643%" y="623.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="85.4452%" y="597" width="0.0119%" height="15" fill="rgb(247,96,31)" fg:x="7168" fg:w="1"/><text x="85.7643%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.4571%" y="613" width="0.0119%" height="15" fill="rgb(251,100,12)" fg:x="7169" fg:w="1"/><text x="85.7762%" y="623.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.4571%" y="597" width="0.0119%" height="15" fill="rgb(224,174,7)" fg:x="7169" fg:w="1"/><text x="85.7762%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.4571%" y="581" width="0.0119%" height="15" fill="rgb(231,168,19)" fg:x="7169" fg:w="1"/><text x="85.7762%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="85.4571%" y="565" width="0.0119%" height="15" fill="rgb(226,85,5)" fg:x="7169" fg:w="1"/><text x="85.7762%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.4571%" y="549" width="0.0119%" height="15" fill="rgb(210,215,5)" fg:x="7169" fg:w="1"/><text x="85.7762%" y="559.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="85.4571%" y="533" width="0.0119%" height="15" fill="rgb(233,70,8)" fg:x="7169" fg:w="1"/><text x="85.7762%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.4691%" y="581" width="0.0119%" height="15" fill="rgb(229,109,53)" fg:x="7170" fg:w="1"/><text x="85.7882%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.4691%" y="565" width="0.0119%" height="15" fill="rgb(213,125,35)" fg:x="7170" fg:w="1"/><text x="85.7882%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.4691%" y="549" width="0.0119%" height="15" fill="rgb(215,12,48)" fg:x="7170" fg:w="1"/><text x="85.7882%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.4691%" y="533" width="0.0119%" height="15" fill="rgb(207,12,38)" fg:x="7170" fg:w="1"/><text x="85.7882%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.4691%" y="517" width="0.0119%" height="15" fill="rgb(216,229,2)" fg:x="7170" fg:w="1"/><text x="85.7882%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="85.4691%" y="501" width="0.0119%" height="15" fill="rgb(229,209,31)" fg:x="7170" fg:w="1"/><text x="85.7882%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.4691%" y="485" width="0.0119%" height="15" fill="rgb(239,57,22)" fg:x="7170" fg:w="1"/><text x="85.7882%" y="495.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="85.4691%" y="469" width="0.0119%" height="15" fill="rgb(239,119,54)" fg:x="7170" fg:w="1"/><text x="85.7882%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.4810%" y="517" width="0.0119%" height="15" fill="rgb(231,80,45)" fg:x="7171" fg:w="1"/><text x="85.8001%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="85.4810%" y="501" width="0.0119%" height="15" fill="rgb(219,138,19)" fg:x="7171" fg:w="1"/><text x="85.8001%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.4810%" y="485" width="0.0119%" height="15" fill="rgb(216,53,26)" fg:x="7171" fg:w="1"/><text x="85.8001%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.4929%" y="517" width="0.0119%" height="15" fill="rgb(224,30,16)" fg:x="7172" fg:w="1"/><text x="85.8120%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.4929%" y="501" width="0.0119%" height="15" fill="rgb(224,151,24)" fg:x="7172" fg:w="1"/><text x="85.8120%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.4929%" y="485" width="0.0119%" height="15" fill="rgb(236,75,7)" fg:x="7172" fg:w="1"/><text x="85.8120%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="85.4929%" y="469" width="0.0119%" height="15" fill="rgb(248,106,42)" fg:x="7172" fg:w="1"/><text x="85.8120%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.4929%" y="453" width="0.0119%" height="15" fill="rgb(222,217,11)" fg:x="7172" fg:w="1"/><text x="85.8120%" y="463.50"/></g><g><title>parser::operator+ (8 samples, 0.10%)</title><rect x="85.4214%" y="725" width="0.0954%" height="15" fill="rgb(234,143,31)" fg:x="7166" fg:w="8"/><text x="85.7405%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="85.4214%" y="709" width="0.0954%" height="15" fill="rgb(237,148,28)" fg:x="7166" fg:w="8"/><text x="85.7405%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (8 samples, 0.10%)</title><rect x="85.4214%" y="693" width="0.0954%" height="15" fill="rgb(241,151,6)" fg:x="7166" fg:w="8"/><text x="85.7405%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="85.4571%" y="677" width="0.0596%" height="15" fill="rgb(226,55,18)" fg:x="7169" fg:w="5"/><text x="85.7762%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="85.4571%" y="661" width="0.0596%" height="15" fill="rgb(226,196,6)" fg:x="7169" fg:w="5"/><text x="85.7762%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="85.4571%" y="645" width="0.0596%" height="15" fill="rgb(251,228,11)" fg:x="7169" fg:w="5"/><text x="85.7762%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="85.4571%" y="629" width="0.0596%" height="15" fill="rgb(219,197,15)" fg:x="7169" fg:w="5"/><text x="85.7762%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="85.4691%" y="613" width="0.0477%" height="15" fill="rgb(243,105,44)" fg:x="7170" fg:w="4"/><text x="85.7882%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="85.4691%" y="597" width="0.0477%" height="15" fill="rgb(205,183,40)" fg:x="7170" fg:w="4"/><text x="85.7882%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="85.4810%" y="581" width="0.0358%" height="15" fill="rgb(232,138,46)" fg:x="7171" fg:w="3"/><text x="85.8001%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="85.4810%" y="565" width="0.0358%" height="15" fill="rgb(234,161,14)" fg:x="7171" fg:w="3"/><text x="85.8001%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="85.4810%" y="549" width="0.0358%" height="15" fill="rgb(238,211,18)" fg:x="7171" fg:w="3"/><text x="85.8001%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="85.4810%" y="533" width="0.0358%" height="15" fill="rgb(217,130,2)" fg:x="7171" fg:w="3"/><text x="85.8001%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5048%" y="517" width="0.0119%" height="15" fill="rgb(251,17,29)" fg:x="7173" fg:w="1"/><text x="85.8239%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.5048%" y="501" width="0.0119%" height="15" fill="rgb(243,18,0)" fg:x="7173" fg:w="1"/><text x="85.8239%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5048%" y="485" width="0.0119%" height="15" fill="rgb(227,220,45)" fg:x="7173" fg:w="1"/><text x="85.8239%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.5048%" y="469" width="0.0119%" height="15" fill="rgb(212,34,2)" fg:x="7173" fg:w="1"/><text x="85.8239%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5048%" y="453" width="0.0119%" height="15" fill="rgb(236,23,8)" fg:x="7173" fg:w="1"/><text x="85.8239%" y="463.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.5048%" y="437" width="0.0119%" height="15" fill="rgb(210,113,39)" fg:x="7173" fg:w="1"/><text x="85.8239%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5048%" y="421" width="0.0119%" height="15" fill="rgb(243,123,48)" fg:x="7173" fg:w="1"/><text x="85.8239%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.5048%" y="405" width="0.0119%" height="15" fill="rgb(223,175,36)" fg:x="7173" fg:w="1"/><text x="85.8239%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5048%" y="389" width="0.0119%" height="15" fill="rgb(226,100,30)" fg:x="7173" fg:w="1"/><text x="85.8239%" y="399.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.5048%" y="373" width="0.0119%" height="15" fill="rgb(221,225,39)" fg:x="7173" fg:w="1"/><text x="85.8239%" y="383.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5048%" y="357" width="0.0119%" height="15" fill="rgb(224,222,42)" fg:x="7173" fg:w="1"/><text x="85.8239%" y="367.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.5048%" y="341" width="0.0119%" height="15" fill="rgb(221,53,1)" fg:x="7173" fg:w="1"/><text x="85.8239%" y="351.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5048%" y="325" width="0.0119%" height="15" fill="rgb(216,187,48)" fg:x="7173" fg:w="1"/><text x="85.8239%" y="335.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="85.5048%" y="309" width="0.0119%" height="15" fill="rgb(220,108,2)" fg:x="7173" fg:w="1"/><text x="85.8239%" y="319.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.5048%" y="293" width="0.0119%" height="15" fill="rgb(216,13,42)" fg:x="7173" fg:w="1"/><text x="85.8239%" y="303.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="85.5048%" y="277" width="0.0119%" height="15" fill="rgb(205,14,29)" fg:x="7173" fg:w="1"/><text x="85.8239%" y="287.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5167%" y="725" width="0.0119%" height="15" fill="rgb(217,168,30)" fg:x="7174" fg:w="1"/><text x="85.8358%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5167%" y="709" width="0.0119%" height="15" fill="rgb(246,173,54)" fg:x="7174" fg:w="1"/><text x="85.8358%" y="719.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="85.5167%" y="693" width="0.0119%" height="15" fill="rgb(227,177,11)" fg:x="7174" fg:w="1"/><text x="85.8358%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5287%" y="709" width="0.0119%" height="15" fill="rgb(223,215,51)" fg:x="7175" fg:w="1"/><text x="85.8478%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5287%" y="693" width="0.0119%" height="15" fill="rgb(253,4,17)" fg:x="7175" fg:w="1"/><text x="85.8478%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5287%" y="677" width="0.0119%" height="15" fill="rgb(206,150,43)" fg:x="7175" fg:w="1"/><text x="85.8478%" y="687.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5287%" y="661" width="0.0119%" height="15" fill="rgb(241,100,52)" fg:x="7175" fg:w="1"/><text x="85.8478%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5287%" y="645" width="0.0119%" height="15" fill="rgb(234,120,21)" fg:x="7175" fg:w="1"/><text x="85.8478%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5287%" y="629" width="0.0119%" height="15" fill="rgb(231,60,11)" fg:x="7175" fg:w="1"/><text x="85.8478%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="85.5287%" y="613" width="0.0119%" height="15" fill="rgb(247,77,50)" fg:x="7175" fg:w="1"/><text x="85.8478%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="85.5406%" y="693" width="0.0119%" height="15" fill="rgb(251,199,54)" fg:x="7176" fg:w="1"/><text x="85.8597%" y="703.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="85.5406%" y="677" width="0.0119%" height="15" fill="rgb(212,120,38)" fg:x="7176" fg:w="1"/><text x="85.8597%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5525%" y="693" width="0.0119%" height="15" fill="rgb(250,161,37)" fg:x="7177" fg:w="1"/><text x="85.8716%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5525%" y="677" width="0.0119%" height="15" fill="rgb(232,158,45)" fg:x="7177" fg:w="1"/><text x="85.8716%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5525%" y="661" width="0.0119%" height="15" fill="rgb(233,114,2)" fg:x="7177" fg:w="1"/><text x="85.8716%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5525%" y="645" width="0.0119%" height="15" fill="rgb(248,139,0)" fg:x="7177" fg:w="1"/><text x="85.8716%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="85.5525%" y="629" width="0.0119%" height="15" fill="rgb(222,164,18)" fg:x="7177" fg:w="1"/><text x="85.8716%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="85.5525%" y="613" width="0.0119%" height="15" fill="rgb(221,140,42)" fg:x="7177" fg:w="1"/><text x="85.8716%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5644%" y="677" width="0.0119%" height="15" fill="rgb(209,186,11)" fg:x="7178" fg:w="1"/><text x="85.8835%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.5763%" y="629" width="0.0119%" height="15" fill="rgb(254,212,38)" fg:x="7179" fg:w="1"/><text x="85.8954%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="85.5883%" y="597" width="0.0119%" height="15" fill="rgb(219,156,31)" fg:x="7180" fg:w="1"/><text x="85.9074%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="85.5883%" y="581" width="0.0119%" height="15" fill="rgb(222,148,42)" fg:x="7180" fg:w="1"/><text x="85.9074%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="85.5763%" y="661" width="0.0358%" height="15" fill="rgb(225,65,5)" fg:x="7179" fg:w="3"/><text x="85.8954%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="85.5763%" y="645" width="0.0358%" height="15" fill="rgb(235,28,12)" fg:x="7179" fg:w="3"/><text x="85.8954%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="85.5883%" y="629" width="0.0238%" height="15" fill="rgb(245,58,4)" fg:x="7180" fg:w="2"/><text x="85.9074%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="85.5883%" y="613" width="0.0238%" height="15" fill="rgb(235,118,5)" fg:x="7180" fg:w="2"/><text x="85.9074%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6002%" y="597" width="0.0119%" height="15" fill="rgb(253,196,3)" fg:x="7181" fg:w="1"/><text x="85.9193%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6002%" y="581" width="0.0119%" height="15" fill="rgb(238,90,28)" fg:x="7181" fg:w="1"/><text x="85.9193%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="85.6002%" y="565" width="0.0119%" height="15" fill="rgb(254,227,4)" fg:x="7181" fg:w="1"/><text x="85.9193%" y="575.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="85.6002%" y="549" width="0.0119%" height="15" fill="rgb(237,114,35)" fg:x="7181" fg:w="1"/><text x="85.9193%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6121%" y="613" width="0.0119%" height="15" fill="rgb(221,147,29)" fg:x="7182" fg:w="1"/><text x="85.9312%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6121%" y="597" width="0.0119%" height="15" fill="rgb(216,201,17)" fg:x="7182" fg:w="1"/><text x="85.9312%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6121%" y="581" width="0.0119%" height="15" fill="rgb(251,46,50)" fg:x="7182" fg:w="1"/><text x="85.9312%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6121%" y="565" width="0.0119%" height="15" fill="rgb(216,143,48)" fg:x="7182" fg:w="1"/><text x="85.9312%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6121%" y="549" width="0.0119%" height="15" fill="rgb(224,62,51)" fg:x="7182" fg:w="1"/><text x="85.9312%" y="559.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="85.6121%" y="533" width="0.0119%" height="15" fill="rgb(232,152,20)" fg:x="7182" fg:w="1"/><text x="85.9312%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="85.5287%" y="725" width="0.1073%" height="15" fill="rgb(233,194,7)" fg:x="7175" fg:w="9"/><text x="85.8478%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="85.5406%" y="709" width="0.0954%" height="15" fill="rgb(207,33,22)" fg:x="7176" fg:w="8"/><text x="85.8597%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="85.5644%" y="693" width="0.0715%" height="15" fill="rgb(226,54,34)" fg:x="7178" fg:w="6"/><text x="85.8835%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="85.5763%" y="677" width="0.0596%" height="15" fill="rgb(227,161,47)" fg:x="7179" fg:w="5"/><text x="85.8954%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="85.6121%" y="661" width="0.0238%" height="15" fill="rgb(218,58,37)" fg:x="7182" fg:w="2"/><text x="85.9312%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="85.6121%" y="645" width="0.0238%" height="15" fill="rgb(208,173,18)" fg:x="7182" fg:w="2"/><text x="85.9312%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="85.6121%" y="629" width="0.0238%" height="15" fill="rgb(230,159,11)" fg:x="7182" fg:w="2"/><text x="85.9312%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6240%" y="613" width="0.0119%" height="15" fill="rgb(238,90,51)" fg:x="7183" fg:w="1"/><text x="85.9431%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6240%" y="597" width="0.0119%" height="15" fill="rgb(225,97,36)" fg:x="7183" fg:w="1"/><text x="85.9431%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6240%" y="581" width="0.0119%" height="15" fill="rgb(211,205,42)" fg:x="7183" fg:w="1"/><text x="85.9431%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6240%" y="565" width="0.0119%" height="15" fill="rgb(219,152,7)" fg:x="7183" fg:w="1"/><text x="85.9431%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6240%" y="549" width="0.0119%" height="15" fill="rgb(222,79,10)" fg:x="7183" fg:w="1"/><text x="85.9431%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6240%" y="533" width="0.0119%" height="15" fill="rgb(242,13,11)" fg:x="7183" fg:w="1"/><text x="85.9431%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6240%" y="517" width="0.0119%" height="15" fill="rgb(231,143,41)" fg:x="7183" fg:w="1"/><text x="85.9431%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6240%" y="501" width="0.0119%" height="15" fill="rgb(222,147,19)" fg:x="7183" fg:w="1"/><text x="85.9431%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6240%" y="485" width="0.0119%" height="15" fill="rgb(235,5,39)" fg:x="7183" fg:w="1"/><text x="85.9431%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6240%" y="469" width="0.0119%" height="15" fill="rgb(246,155,51)" fg:x="7183" fg:w="1"/><text x="85.9431%" y="479.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6240%" y="453" width="0.0119%" height="15" fill="rgb(218,157,4)" fg:x="7183" fg:w="1"/><text x="85.9431%" y="463.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="85.6240%" y="437" width="0.0119%" height="15" fill="rgb(226,184,4)" fg:x="7183" fg:w="1"/><text x="85.9431%" y="447.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6360%" y="677" width="0.0119%" height="15" fill="rgb(210,103,26)" fg:x="7184" fg:w="1"/><text x="85.9551%" y="687.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="85.6360%" y="661" width="0.0119%" height="15" fill="rgb(228,23,31)" fg:x="7184" fg:w="1"/><text x="85.9551%" y="671.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.6360%" y="645" width="0.0119%" height="15" fill="rgb(205,176,34)" fg:x="7184" fg:w="1"/><text x="85.9551%" y="655.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="85.6360%" y="629" width="0.0119%" height="15" fill="rgb(246,213,37)" fg:x="7184" fg:w="1"/><text x="85.9551%" y="639.50"/></g><g><title>parser::either (2 samples, 0.02%)</title><rect x="85.6360%" y="693" width="0.0238%" height="15" fill="rgb(213,52,45)" fg:x="7184" fg:w="2"/><text x="85.9551%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6479%" y="677" width="0.0119%" height="15" fill="rgb(249,9,52)" fg:x="7185" fg:w="1"/><text x="85.9670%" y="687.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="85.6479%" y="661" width="0.0119%" height="15" fill="rgb(205,97,16)" fg:x="7185" fg:w="1"/><text x="85.9670%" y="671.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.6479%" y="645" width="0.0119%" height="15" fill="rgb(214,11,46)" fg:x="7185" fg:w="1"/><text x="85.9670%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6598%" y="661" width="0.0119%" height="15" fill="rgb(221,66,18)" fg:x="7186" fg:w="1"/><text x="85.9789%" y="671.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6598%" y="645" width="0.0119%" height="15" fill="rgb(213,49,1)" fg:x="7186" fg:w="1"/><text x="85.9789%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), not_(std::function&lt;bool (unsigned int)&gt;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6598%" y="629" width="0.0119%" height="15" fill="rgb(232,75,51)" fg:x="7186" fg:w="1"/><text x="85.9789%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6598%" y="613" width="0.0119%" height="15" fill="rgb(208,218,40)" fg:x="7186" fg:w="1"/><text x="85.9789%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6717%" y="629" width="0.0119%" height="15" fill="rgb(206,144,50)" fg:x="7187" fg:w="1"/><text x="85.9908%" y="639.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6717%" y="613" width="0.0119%" height="15" fill="rgb(216,9,51)" fg:x="7187" fg:w="1"/><text x="85.9908%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="85.6717%" y="597" width="0.0119%" height="15" fill="rgb(226,6,53)" fg:x="7187" fg:w="1"/><text x="85.9908%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="85.6717%" y="581" width="0.0119%" height="15" fill="rgb(216,9,50)" fg:x="7187" fg:w="1"/><text x="85.9908%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="85.6598%" y="677" width="0.0358%" height="15" fill="rgb(214,101,31)" fg:x="7186" fg:w="3"/><text x="85.9789%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="85.6717%" y="661" width="0.0238%" height="15" fill="rgb(247,85,17)" fg:x="7187" fg:w="2"/><text x="85.9908%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="85.6717%" y="645" width="0.0238%" height="15" fill="rgb(248,138,25)" fg:x="7187" fg:w="2"/><text x="85.9908%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6836%" y="629" width="0.0119%" height="15" fill="rgb(225,146,20)" fg:x="7188" fg:w="1"/><text x="86.0027%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="85.6836%" y="613" width="0.0119%" height="15" fill="rgb(224,184,17)" fg:x="7188" fg:w="1"/><text x="86.0027%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.6956%" y="677" width="0.0119%" height="15" fill="rgb(231,10,20)" fg:x="7189" fg:w="1"/><text x="86.0147%" y="687.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="85.6956%" y="661" width="0.0119%" height="15" fill="rgb(210,93,37)" fg:x="7189" fg:w="1"/><text x="86.0147%" y="671.50"/></g><g><title>helix_view::editor::Editor::open (26 samples, 0.31%)</title><rect x="85.4095%" y="1045" width="0.3099%" height="15" fill="rgb(226,84,42)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="1055.50"/></g><g><title>helix_view::document::Document::open (26 samples, 0.31%)</title><rect x="85.4095%" y="1029" width="0.3099%" height="15" fill="rgb(253,192,7)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="1039.50"/></g><g><title>helix_view::document::Document::set_language (26 samples, 0.31%)</title><rect x="85.4095%" y="1013" width="0.3099%" height="15" fill="rgb(214,107,27)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="1023.50"/></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (26 samples, 0.31%)</title><rect x="85.4095%" y="997" width="0.3099%" height="15" fill="rgb(238,146,21)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="1007.50"/></g><g><title>helix_core::syntax::LanguageLayer::parse (26 samples, 0.31%)</title><rect x="85.4095%" y="981" width="0.3099%" height="15" fill="rgb(209,136,30)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="991.50"/></g><g><title>ts_parser_parse (26 samples, 0.31%)</title><rect x="85.4095%" y="965" width="0.3099%" height="15" fill="rgb(226,60,22)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="975.50"/></g><g><title>tree_sitter_haskell_external_scanner_scan (26 samples, 0.31%)</title><rect x="85.4095%" y="949" width="0.3099%" height="15" fill="rgb(243,92,26)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="959.50"/></g><g><title>eval::eval (26 samples, 0.31%)</title><rect x="85.4095%" y="933" width="0.3099%" height="15" fill="rgb(211,85,33)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="943.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="85.4095%" y="917" width="0.3099%" height="15" fill="rgb(243,187,44)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="927.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="85.4095%" y="901" width="0.3099%" height="15" fill="rgb(251,172,23)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="911.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="85.4095%" y="885" width="0.3099%" height="15" fill="rgb(254,162,50)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="895.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="85.4095%" y="869" width="0.3099%" height="15" fill="rgb(239,14,53)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="879.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="85.4095%" y="853" width="0.3099%" height="15" fill="rgb(242,208,8)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="863.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="85.4095%" y="837" width="0.3099%" height="15" fill="rgb(225,61,41)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="847.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="85.4095%" y="821" width="0.3099%" height="15" fill="rgb(219,154,6)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="831.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="85.4095%" y="805" width="0.3099%" height="15" fill="rgb(227,223,44)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="815.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="85.4095%" y="789" width="0.3099%" height="15" fill="rgb(220,188,6)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="799.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="85.4095%" y="773" width="0.3099%" height="15" fill="rgb(216,65,22)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="783.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic), std::function&lt;Result (State&amp;)&gt; (*)(symbolic::Symbolic)&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="85.4095%" y="757" width="0.3099%" height="15" fill="rgb(236,66,46)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="767.50"/></g><g><title>logic::symop (26 samples, 0.31%)</title><rect x="85.4095%" y="741" width="0.3099%" height="15" fill="rgb(211,150,52)" fg:x="7165" fg:w="26"/><text x="85.7286%" y="751.50"/></g><g><title>std::function&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;)&gt;::operator (7 samples, 0.08%)</title><rect x="85.6360%" y="725" width="0.0834%" height="15" fill="rgb(253,89,19)" fg:x="7184" fg:w="7"/><text x="85.9551%" y="735.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (std::function&lt;Result (State&amp;)&gt;), parser::iff(std::function&lt;bool (State&amp;)&gt;)::{lambda(std::function&lt;Result (State&amp;)&gt;)#1}&gt;::_M_invoke (7 samples, 0.08%)</title><rect x="85.6360%" y="709" width="0.0834%" height="15" fill="rgb(245,4,1)" fg:x="7184" fg:w="7"/><text x="85.9551%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="85.6598%" y="693" width="0.0596%" height="15" fill="rgb(230,109,16)" fg:x="7186" fg:w="5"/><text x="85.9789%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.7075%" y="677" width="0.0119%" height="15" fill="rgb(213,7,47)" fg:x="7190" fg:w="1"/><text x="86.0266%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.7075%" y="661" width="0.0119%" height="15" fill="rgb(242,148,14)" fg:x="7190" fg:w="1"/><text x="86.0266%" y="671.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="85.7075%" y="645" width="0.0119%" height="15" fill="rgb(238,51,34)" fg:x="7190" fg:w="1"/><text x="86.0266%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="85.7075%" y="629" width="0.0119%" height="15" fill="rgb(222,49,22)" fg:x="7190" fg:w="1"/><text x="86.0266%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="85.7075%" y="613" width="0.0119%" height="15" fill="rgb(237,102,50)" fg:x="7190" fg:w="1"/><text x="86.0266%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.7075%" y="597" width="0.0119%" height="15" fill="rgb(237,195,8)" fg:x="7190" fg:w="1"/><text x="86.0266%" y="607.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="85.7075%" y="581" width="0.0119%" height="15" fill="rgb(245,60,18)" fg:x="7190" fg:w="1"/><text x="86.0266%" y="591.50"/></g><g><title>hx::main (5 samples, 0.06%)</title><rect x="85.7194%" y="1045" width="0.0596%" height="15" fill="rgb(253,74,32)" fg:x="7191" fg:w="5"/><text x="86.0385%" y="1055.50"/></g><g><title>tokio::runtime::builder::Builder::build (5 samples, 0.06%)</title><rect x="85.7194%" y="1029" width="0.0596%" height="15" fill="rgb(240,91,39)" fg:x="7191" fg:w="5"/><text x="86.0385%" y="1039.50"/></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch (5 samples, 0.06%)</title><rect x="85.7194%" y="1013" width="0.0596%" height="15" fill="rgb(221,162,34)" fg:x="7191" fg:w="5"/><text x="86.0385%" y="1023.50"/></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (5 samples, 0.06%)</title><rect x="85.7194%" y="997" width="0.0596%" height="15" fill="rgb(223,32,2)" fg:x="7191" fg:w="5"/><text x="86.0385%" y="1007.50"/></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn (5 samples, 0.06%)</title><rect x="85.7194%" y="981" width="0.0596%" height="15" fill="rgb(245,220,46)" fg:x="7191" fg:w="5"/><text x="86.0385%" y="991.50"/></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (4 samples, 0.05%)</title><rect x="85.7313%" y="965" width="0.0477%" height="15" fill="rgb(216,38,33)" fg:x="7192" fg:w="4"/><text x="86.0504%" y="975.50"/></g><g><title>syscall (4 samples, 0.05%)</title><rect x="85.7313%" y="949" width="0.0477%" height="15" fill="rgb(210,123,14)" fg:x="7192" fg:w="4"/><text x="86.0504%" y="959.50"/></g><g><title>aho_corasick::nfa::Compiler&lt;S&gt;::add_state (2 samples, 0.02%)</title><rect x="85.7909%" y="981" width="0.0238%" height="15" fill="rgb(214,38,47)" fg:x="7197" fg:w="2"/><text x="86.1100%" y="991.50"/></g><g><title>__calloc (2 samples, 0.02%)</title><rect x="85.7909%" y="965" width="0.0238%" height="15" fill="rgb(244,180,16)" fg:x="7197" fg:w="2"/><text x="86.1100%" y="975.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="85.7909%" y="949" width="0.0238%" height="15" fill="rgb(252,21,32)" fg:x="7197" fg:w="2"/><text x="86.1100%" y="959.50"/></g><g><title>ignore::gitignore::GitignoreBuilder::build (4 samples, 0.05%)</title><rect x="85.7790%" y="1045" width="0.0477%" height="15" fill="rgb(245,218,31)" fg:x="7196" fg:w="4"/><text x="86.0981%" y="1055.50"/></g><g><title>globset::GlobSetBuilder::build (4 samples, 0.05%)</title><rect x="85.7790%" y="1029" width="0.0477%" height="15" fill="rgb(247,81,18)" fg:x="7196" fg:w="4"/><text x="86.0981%" y="1039.50"/></g><g><title>aho_corasick::ahocorasick::AhoCorasick::new_auto_configured (4 samples, 0.05%)</title><rect x="85.7790%" y="1013" width="0.0477%" height="15" fill="rgb(220,151,1)" fg:x="7196" fg:w="4"/><text x="86.0981%" y="1023.50"/></g><g><title>aho_corasick::nfa::Builder::build (4 samples, 0.05%)</title><rect x="85.7790%" y="997" width="0.0477%" height="15" fill="rgb(211,157,11)" fg:x="7196" fg:w="4"/><text x="86.0981%" y="1007.50"/></g><g><title>aho_corasick::prefilter::Builder::build (1 samples, 0.01%)</title><rect x="85.8148%" y="981" width="0.0119%" height="15" fill="rgb(239,46,30)" fg:x="7199" fg:w="1"/><text x="86.1339%" y="991.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="85.8267%" y="1045" width="0.0119%" height="15" fill="rgb(236,144,43)" fg:x="7200" fg:w="1"/><text x="86.1458%" y="1055.50"/></g><g><title>parser::finish_if_valid (1 samples, 0.01%)</title><rect x="85.8386%" y="1045" width="0.0119%" height="15" fill="rgb(206,71,45)" fg:x="7201" fg:w="1"/><text x="86.1577%" y="1055.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="85.8624%" y="1029" width="0.0119%" height="15" fill="rgb(240,85,31)" fg:x="7203" fg:w="1"/><text x="86.1815%" y="1039.50"/></g><g><title>regex::compile::Compiler::c (2 samples, 0.02%)</title><rect x="85.8744%" y="1013" width="0.0238%" height="15" fill="rgb(221,43,52)" fg:x="7204" fg:w="2"/><text x="86.1935%" y="1023.50"/></g><g><title>regex::compile::Compiler::fill (1 samples, 0.01%)</title><rect x="85.8863%" y="997" width="0.0119%" height="15" fill="rgb(243,106,22)" fg:x="7205" fg:w="1"/><text x="86.2054%" y="1007.50"/></g><g><title>regex::compile::Compiler::c_capture (1 samples, 0.01%)</title><rect x="85.8982%" y="1013" width="0.0119%" height="15" fill="rgb(209,138,38)" fg:x="7206" fg:w="1"/><text x="86.2173%" y="1023.50"/></g><g><title>regex::compile::Compiler::c (1 samples, 0.01%)</title><rect x="85.8982%" y="997" width="0.0119%" height="15" fill="rgb(216,63,40)" fg:x="7206" fg:w="1"/><text x="86.2173%" y="1007.50"/></g><g><title>regex::compile::Compiler::c_alternate (1 samples, 0.01%)</title><rect x="85.8982%" y="981" width="0.0119%" height="15" fill="rgb(206,115,21)" fg:x="7206" fg:w="1"/><text x="86.2173%" y="991.50"/></g><g><title>regex::compile::Compiler::c (1 samples, 0.01%)</title><rect x="85.8982%" y="965" width="0.0119%" height="15" fill="rgb(235,53,44)" fg:x="7206" fg:w="1"/><text x="86.2173%" y="975.50"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="85.8982%" y="949" width="0.0119%" height="15" fill="rgb(244,160,14)" fg:x="7206" fg:w="1"/><text x="86.2173%" y="959.50"/></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="85.8982%" y="933" width="0.0119%" height="15" fill="rgb(223,16,19)" fg:x="7206" fg:w="1"/><text x="86.2173%" y="943.50"/></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="85.8982%" y="917" width="0.0119%" height="15" fill="rgb(242,63,42)" fg:x="7206" fg:w="1"/><text x="86.2173%" y="927.50"/></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="85.8982%" y="901" width="0.0119%" height="15" fill="rgb(209,66,49)" fg:x="7206" fg:w="1"/><text x="86.2173%" y="911.50"/></g><g><title>__calloc (1 samples, 0.01%)</title><rect x="85.9101%" y="997" width="0.0119%" height="15" fill="rgb(207,126,46)" fg:x="7207" fg:w="1"/><text x="86.2292%" y="1007.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="85.9101%" y="981" width="0.0119%" height="15" fill="rgb(218,160,41)" fg:x="7207" fg:w="1"/><text x="86.2292%" y="991.50"/></g><g><title>regex::compile::Compiler::compile (5 samples, 0.06%)</title><rect x="85.8744%" y="1029" width="0.0596%" height="15" fill="rgb(234,125,46)" fg:x="7204" fg:w="5"/><text x="86.1935%" y="1039.50"/></g><g><title>regex::compile::Compiler::compile_finish (2 samples, 0.02%)</title><rect x="85.9101%" y="1013" width="0.0238%" height="15" fill="rgb(205,66,36)" fg:x="7207" fg:w="2"/><text x="86.2292%" y="1023.50"/></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="85.9220%" y="997" width="0.0119%" height="15" fill="rgb(220,135,16)" fg:x="7208" fg:w="1"/><text x="86.2411%" y="1007.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.9220%" y="981" width="0.0119%" height="15" fill="rgb(214,217,54)" fg:x="7208" fg:w="1"/><text x="86.2411%" y="991.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="85.9220%" y="965" width="0.0119%" height="15" fill="rgb(206,30,9)" fg:x="7208" fg:w="1"/><text x="86.2411%" y="975.50"/></g><g><title>__memset_avx2_erms (1 samples, 0.01%)</title><rect x="85.9340%" y="997" width="0.0119%" height="15" fill="rgb(207,196,5)" fg:x="7209" fg:w="1"/><text x="86.2531%" y="1007.50"/></g><g><title>regex::compile::Compiler::new (3 samples, 0.04%)</title><rect x="85.9340%" y="1029" width="0.0358%" height="15" fill="rgb(227,116,12)" fg:x="7209" fg:w="3"/><text x="86.2531%" y="1039.50"/></g><g><title>__calloc (3 samples, 0.04%)</title><rect x="85.9340%" y="1013" width="0.0358%" height="15" fill="rgb(235,227,13)" fg:x="7209" fg:w="3"/><text x="86.2531%" y="1023.50"/></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="85.9459%" y="997" width="0.0238%" height="15" fill="rgb(238,212,29)" fg:x="7210" fg:w="2"/><text x="86.2650%" y="1007.50"/></g><g><title>regex::literal::imp::LiteralSearcher::prefixes (1 samples, 0.01%)</title><rect x="85.9697%" y="1029" width="0.0119%" height="15" fill="rgb(230,152,17)" fg:x="7212" fg:w="1"/><text x="86.2888%" y="1039.50"/></g><g><title>regex::literal::imp::LiteralSearcher::new (1 samples, 0.01%)</title><rect x="85.9697%" y="1013" width="0.0119%" height="15" fill="rgb(220,197,1)" fg:x="7212" fg:w="1"/><text x="86.2888%" y="1023.50"/></g><g><title>regex::literal::imp::Memmem::new (1 samples, 0.01%)</title><rect x="85.9697%" y="997" width="0.0119%" height="15" fill="rgb(229,227,40)" fg:x="7212" fg:w="1"/><text x="86.2888%" y="1007.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="85.9697%" y="981" width="0.0119%" height="15" fill="rgb(227,179,16)" fg:x="7212" fg:w="1"/><text x="86.2888%" y="991.50"/></g><g><title>regex_syntax::hir::literal::Literals::union_suffixes (1 samples, 0.01%)</title><rect x="85.9816%" y="1029" width="0.0119%" height="15" fill="rgb(246,116,44)" fg:x="7213" fg:w="1"/><text x="86.3007%" y="1039.50"/></g><g><title>regex_syntax::hir::literal::suffixes (1 samples, 0.01%)</title><rect x="85.9816%" y="1013" width="0.0119%" height="15" fill="rgb(205,191,4)" fg:x="7213" fg:w="1"/><text x="86.3007%" y="1023.50"/></g><g><title>regex_syntax::hir::literal::Literals::cross_product (1 samples, 0.01%)</title><rect x="85.9816%" y="997" width="0.0119%" height="15" fill="rgb(245,69,19)" fg:x="7213" fg:w="1"/><text x="86.3007%" y="1007.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="85.9936%" y="981" width="0.0119%" height="15" fill="rgb(230,29,26)" fg:x="7214" fg:w="1"/><text x="86.3127%" y="991.50"/></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (2 samples, 0.02%)</title><rect x="85.9936%" y="1013" width="0.0238%" height="15" fill="rgb(239,192,26)" fg:x="7214" fg:w="2"/><text x="86.3127%" y="1023.50"/></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="85.9936%" y="997" width="0.0238%" height="15" fill="rgb(219,92,16)" fg:x="7214" fg:w="2"/><text x="86.3127%" y="1007.50"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="86.0055%" y="981" width="0.0119%" height="15" fill="rgb(246,147,43)" fg:x="7215" fg:w="1"/><text x="86.3246%" y="991.50"/></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="86.0055%" y="965" width="0.0119%" height="15" fill="rgb(222,147,11)" fg:x="7215" fg:w="1"/><text x="86.3246%" y="975.50"/></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="86.0055%" y="949" width="0.0119%" height="15" fill="rgb(243,71,8)" fg:x="7215" fg:w="1"/><text x="86.3246%" y="959.50"/></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="86.0055%" y="933" width="0.0119%" height="15" fill="rgb(250,36,12)" fg:x="7215" fg:w="1"/><text x="86.3246%" y="943.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="86.0055%" y="917" width="0.0119%" height="15" fill="rgb(207,168,14)" fg:x="7215" fg:w="1"/><text x="86.3246%" y="927.50"/></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (1 samples, 0.01%)</title><rect x="86.0293%" y="997" width="0.0119%" height="15" fill="rgb(254,210,51)" fg:x="7217" fg:w="1"/><text x="86.3484%" y="1007.50"/></g><g><title>regex_syntax::ast::parse::NestLimiter&lt;P&gt;::check (1 samples, 0.01%)</title><rect x="86.0412%" y="997" width="0.0119%" height="15" fill="rgb(236,152,38)" fg:x="7218" fg:w="1"/><text x="86.3603%" y="1007.50"/></g><g><title>regex_syntax::ast::visitor::visit (1 samples, 0.01%)</title><rect x="86.0412%" y="981" width="0.0119%" height="15" fill="rgb(240,164,36)" fg:x="7218" fg:w="1"/><text x="86.3603%" y="991.50"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="86.0412%" y="965" width="0.0119%" height="15" fill="rgb(210,171,36)" fg:x="7218" fg:w="1"/><text x="86.3603%" y="975.50"/></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="86.0412%" y="949" width="0.0119%" height="15" fill="rgb(254,156,34)" fg:x="7218" fg:w="1"/><text x="86.3603%" y="959.50"/></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="86.0412%" y="933" width="0.0119%" height="15" fill="rgb(216,204,23)" fg:x="7218" fg:w="1"/><text x="86.3603%" y="943.50"/></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="86.0412%" y="917" width="0.0119%" height="15" fill="rgb(230,75,38)" fg:x="7218" fg:w="1"/><text x="86.3603%" y="927.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="86.0412%" y="901" width="0.0119%" height="15" fill="rgb(248,197,25)" fg:x="7218" fg:w="1"/><text x="86.3603%" y="911.50"/></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump (1 samples, 0.01%)</title><rect x="86.0532%" y="997" width="0.0119%" height="15" fill="rgb(234,121,26)" fg:x="7219" fg:w="1"/><text x="86.3723%" y="1007.50"/></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::char (1 samples, 0.01%)</title><rect x="86.0532%" y="981" width="0.0119%" height="15" fill="rgb(220,41,36)" fg:x="7219" fg:w="1"/><text x="86.3723%" y="991.50"/></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_set_class (1 samples, 0.01%)</title><rect x="86.0651%" y="997" width="0.0119%" height="15" fill="rgb(227,33,32)" fg:x="7220" fg:w="1"/><text x="86.3842%" y="1007.50"/></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::pop_class (1 samples, 0.01%)</title><rect x="86.0651%" y="981" width="0.0119%" height="15" fill="rgb(208,214,54)" fg:x="7220" fg:w="1"/><text x="86.3842%" y="991.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="86.0651%" y="965" width="0.0119%" height="15" fill="rgb(205,37,38)" fg:x="7220" fg:w="1"/><text x="86.3842%" y="975.50"/></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (6 samples, 0.07%)</title><rect x="86.0174%" y="1013" width="0.0715%" height="15" fill="rgb(252,2,0)" fg:x="7216" fg:w="6"/><text x="86.3365%" y="1023.50"/></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::push_group (1 samples, 0.01%)</title><rect x="86.0770%" y="997" width="0.0119%" height="15" fill="rgb(212,171,10)" fg:x="7221" fg:w="1"/><text x="86.3961%" y="1007.50"/></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_group (1 samples, 0.01%)</title><rect x="86.0770%" y="981" width="0.0119%" height="15" fill="rgb(239,35,46)" fg:x="7221" fg:w="1"/><text x="86.3961%" y="991.50"/></g><g><title>regex::exec::ExecBuilder::build (24 samples, 0.29%)</title><rect x="85.8505%" y="1045" width="0.2861%" height="15" fill="rgb(209,34,42)" fg:x="7202" fg:w="24"/><text x="86.1696%" y="1055.50"/></g><g><title>regex_syntax::parser::Parser::parse (12 samples, 0.14%)</title><rect x="85.9936%" y="1029" width="0.1430%" height="15" fill="rgb(237,9,4)" fg:x="7214" fg:w="12"/><text x="86.3127%" y="1039.50"/></g><g><title>regex_syntax::ast::visitor::visit (4 samples, 0.05%)</title><rect x="86.0889%" y="1013" width="0.0477%" height="15" fill="rgb(254,55,38)" fg:x="7222" fg:w="4"/><text x="86.4080%" y="1023.50"/></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (3 samples, 0.04%)</title><rect x="86.1008%" y="997" width="0.0358%" height="15" fill="rgb(222,95,29)" fg:x="7223" fg:w="3"/><text x="86.4199%" y="1007.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="86.1247%" y="981" width="0.0119%" height="15" fill="rgb(241,218,37)" fg:x="7225" fg:w="1"/><text x="86.4438%" y="991.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="86.1247%" y="965" width="0.0119%" height="15" fill="rgb(225,89,28)" fg:x="7225" fg:w="1"/><text x="86.4438%" y="975.50"/></g><g><title>ropey::iter::Chunks::next_impl (1 samples, 0.01%)</title><rect x="86.1366%" y="1045" width="0.0119%" height="15" fill="rgb(231,17,25)" fg:x="7226" fg:w="1"/><text x="86.4557%" y="1055.50"/></g><g><title>stack_node_release (1 samples, 0.01%)</title><rect x="86.1485%" y="1045" width="0.0119%" height="15" fill="rgb(206,216,48)" fg:x="7227" fg:w="1"/><text x="86.4676%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="86.1604%" y="1045" width="0.0238%" height="15" fill="rgb(247,190,28)" fg:x="7228" fg:w="2"/><text x="86.4795%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="86.1843%" y="1045" width="0.0238%" height="15" fill="rgb(216,196,12)" fg:x="7230" fg:w="2"/><text x="86.5034%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="86.2081%" y="1045" width="0.0238%" height="15" fill="rgb(232,114,19)" fg:x="7232" fg:w="2"/><text x="86.5272%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.2320%" y="1045" width="0.0119%" height="15" fill="rgb(240,60,14)" fg:x="7234" fg:w="1"/><text x="86.5511%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.2439%" y="1045" width="0.0119%" height="15" fill="rgb(250,108,9)" fg:x="7235" fg:w="1"/><text x="86.5630%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.2558%" y="1045" width="0.0119%" height="15" fill="rgb(227,228,21)" fg:x="7236" fg:w="1"/><text x="86.5749%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_invoke (1 samples, 0.01%)</title><rect x="86.2677%" y="1045" width="0.0119%" height="15" fill="rgb(254,16,52)" fg:x="7237" fg:w="1"/><text x="86.5868%" y="1055.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), std::function&lt;bool (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.2797%" y="1045" width="0.0119%" height="15" fill="rgb(222,58,2)" fg:x="7238" fg:w="1"/><text x="86.5988%" y="1055.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.2916%" y="1045" width="0.0119%" height="15" fill="rgb(253,68,14)" fg:x="7239" fg:w="1"/><text x="86.6107%" y="1055.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.3035%" y="1045" width="0.0119%" height="15" fill="rgb(226,96,17)" fg:x="7240" fg:w="1"/><text x="86.6226%" y="1055.50"/></g><g><title>std::sys::unix::fs::DirEntry::file_type (1 samples, 0.01%)</title><rect x="86.3154%" y="1045" width="0.0119%" height="15" fill="rgb(227,199,2)" fg:x="7241" fg:w="1"/><text x="86.6345%" y="1055.50"/></g><g><title>std::sys::unix::os::getenv (1 samples, 0.01%)</title><rect x="86.3273%" y="1045" width="0.0119%" height="15" fill="rgb(228,227,48)" fg:x="7242" fg:w="1"/><text x="86.6464%" y="1055.50"/></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="86.3393%" y="1045" width="0.0119%" height="15" fill="rgb(249,183,0)" fg:x="7243" fg:w="1"/><text x="86.6584%" y="1055.50"/></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="86.3512%" y="997" width="0.0119%" height="15" fill="rgb(250,89,38)" fg:x="7244" fg:w="1"/><text x="86.6703%" y="1007.50"/></g><g><title>&lt;crossterm::event::stream::EventStream as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.01%)</title><rect x="86.3512%" y="981" width="0.0119%" height="15" fill="rgb(240,227,8)" fg:x="7244" fg:w="1"/><text x="86.6703%" y="991.50"/></g><g><title>crossterm::event::poll_internal (1 samples, 0.01%)</title><rect x="86.3512%" y="965" width="0.0119%" height="15" fill="rgb(242,197,35)" fg:x="7244" fg:w="1"/><text x="86.6703%" y="975.50"/></g><g><title>crossterm::event::read::InternalEventReader::poll (1 samples, 0.01%)</title><rect x="86.3512%" y="949" width="0.0119%" height="15" fill="rgb(224,37,41)" fg:x="7244" fg:w="1"/><text x="86.6703%" y="959.50"/></g><g><title>&lt;crossterm::event::source::unix::UnixInternalEventSource as crossterm::event::source::EventSource&gt;::try_read (1 samples, 0.01%)</title><rect x="86.3512%" y="933" width="0.0119%" height="15" fill="rgb(236,127,7)" fg:x="7244" fg:w="1"/><text x="86.6703%" y="943.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="86.3631%" y="709" width="0.0119%" height="15" fill="rgb(230,62,52)" fg:x="7245" fg:w="1"/><text x="86.6822%" y="719.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="86.3631%" y="693" width="0.0119%" height="15" fill="rgb(235,114,23)" fg:x="7245" fg:w="1"/><text x="86.6822%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="86.3631%" y="773" width="0.0238%" height="15" fill="rgb(211,55,40)" fg:x="7245" fg:w="2"/><text x="86.6822%" y="783.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="86.3631%" y="757" width="0.0238%" height="15" fill="rgb(228,123,1)" fg:x="7245" fg:w="2"/><text x="86.6822%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="86.3631%" y="741" width="0.0238%" height="15" fill="rgb(244,208,8)" fg:x="7245" fg:w="2"/><text x="86.6822%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="86.3631%" y="725" width="0.0238%" height="15" fill="rgb(237,118,14)" fg:x="7245" fg:w="2"/><text x="86.6822%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.3750%" y="709" width="0.0119%" height="15" fill="rgb(219,170,13)" fg:x="7246" fg:w="1"/><text x="86.6941%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.3750%" y="693" width="0.0119%" height="15" fill="rgb(212,39,43)" fg:x="7246" fg:w="1"/><text x="86.6941%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.3750%" y="677" width="0.0119%" height="15" fill="rgb(244,191,2)" fg:x="7246" fg:w="1"/><text x="86.6941%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.3750%" y="661" width="0.0119%" height="15" fill="rgb(219,201,46)" fg:x="7246" fg:w="1"/><text x="86.6941%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.3750%" y="645" width="0.0119%" height="15" fill="rgb(218,82,7)" fg:x="7246" fg:w="1"/><text x="86.6941%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.3750%" y="629" width="0.0119%" height="15" fill="rgb(208,192,8)" fg:x="7246" fg:w="1"/><text x="86.6941%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.3750%" y="613" width="0.0119%" height="15" fill="rgb(244,54,32)" fg:x="7246" fg:w="1"/><text x="86.6941%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="86.3869%" y="741" width="0.0119%" height="15" fill="rgb(240,43,52)" fg:x="7247" fg:w="1"/><text x="86.7060%" y="751.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), parser::skipspace::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="86.3869%" y="725" width="0.0119%" height="15" fill="rgb(233,134,29)" fg:x="7247" fg:w="1"/><text x="86.7060%" y="735.50"/></g><g><title>cond::peek (1 samples, 0.01%)</title><rect x="86.3869%" y="709" width="0.0119%" height="15" fill="rgb(236,128,10)" fg:x="7247" fg:w="1"/><text x="86.7060%" y="719.50"/></g><g><title>cond::peeks (1 samples, 0.01%)</title><rect x="86.3869%" y="693" width="0.0119%" height="15" fill="rgb(207,46,54)" fg:x="7247" fg:w="1"/><text x="86.7060%" y="703.50"/></g><g><title>eval::eval (4 samples, 0.05%)</title><rect x="86.3631%" y="821" width="0.0477%" height="15" fill="rgb(248,140,35)" fg:x="7245" fg:w="4"/><text x="86.6822%" y="831.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (4 samples, 0.05%)</title><rect x="86.3631%" y="805" width="0.0477%" height="15" fill="rgb(241,103,35)" fg:x="7245" fg:w="4"/><text x="86.6822%" y="815.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (4 samples, 0.05%)</title><rect x="86.3631%" y="789" width="0.0477%" height="15" fill="rgb(223,19,48)" fg:x="7245" fg:w="4"/><text x="86.6822%" y="799.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="86.3869%" y="773" width="0.0238%" height="15" fill="rgb(238,177,46)" fg:x="7247" fg:w="2"/><text x="86.7060%" y="783.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="86.3869%" y="757" width="0.0238%" height="15" fill="rgb(213,102,15)" fg:x="7247" fg:w="2"/><text x="86.7060%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="86.3989%" y="741" width="0.0119%" height="15" fill="rgb(254,135,52)" fg:x="7248" fg:w="1"/><text x="86.7180%" y="751.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.3989%" y="725" width="0.0119%" height="15" fill="rgb(240,59,6)" fg:x="7248" fg:w="1"/><text x="86.7180%" y="735.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State)&gt; &gt;(std::function&lt;Result (State)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.3989%" y="709" width="0.0119%" height="15" fill="rgb(207,226,5)" fg:x="7248" fg:w="1"/><text x="86.7180%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.3989%" y="693" width="0.0119%" height="15" fill="rgb(208,167,17)" fg:x="7248" fg:w="1"/><text x="86.7180%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4108%" y="789" width="0.0119%" height="15" fill="rgb(254,94,10)" fg:x="7249" fg:w="1"/><text x="86.7299%" y="799.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4108%" y="773" width="0.0119%" height="15" fill="rgb(229,33,11)" fg:x="7249" fg:w="1"/><text x="86.7299%" y="783.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4108%" y="757" width="0.0119%" height="15" fill="rgb(249,145,48)" fg:x="7249" fg:w="1"/><text x="86.7299%" y="767.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="86.4108%" y="741" width="0.0119%" height="15" fill="rgb(253,68,54)" fg:x="7249" fg:w="1"/><text x="86.7299%" y="751.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="86.4108%" y="725" width="0.0119%" height="15" fill="rgb(223,27,42)" fg:x="7249" fg:w="1"/><text x="86.7299%" y="735.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="86.4227%" y="725" width="0.0119%" height="15" fill="rgb(235,123,13)" fg:x="7250" fg:w="1"/><text x="86.7418%" y="735.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="86.4227%" y="709" width="0.0119%" height="15" fill="rgb(244,154,7)" fg:x="7250" fg:w="1"/><text x="86.7418%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="86.4227%" y="757" width="0.0238%" height="15" fill="rgb(214,30,25)" fg:x="7250" fg:w="2"/><text x="86.7418%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="86.4227%" y="741" width="0.0238%" height="15" fill="rgb(252,189,13)" fg:x="7250" fg:w="2"/><text x="86.7418%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4346%" y="725" width="0.0119%" height="15" fill="rgb(234,27,40)" fg:x="7251" fg:w="1"/><text x="86.7537%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4346%" y="709" width="0.0119%" height="15" fill="rgb(252,199,25)" fg:x="7251" fg:w="1"/><text x="86.7537%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4346%" y="693" width="0.0119%" height="15" fill="rgb(234,207,20)" fg:x="7251" fg:w="1"/><text x="86.7537%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4346%" y="677" width="0.0119%" height="15" fill="rgb(244,220,10)" fg:x="7251" fg:w="1"/><text x="86.7537%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4346%" y="661" width="0.0119%" height="15" fill="rgb(247,68,23)" fg:x="7251" fg:w="1"/><text x="86.7537%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="86.4346%" y="645" width="0.0119%" height="15" fill="rgb(254,61,4)" fg:x="7251" fg:w="1"/><text x="86.7537%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="86.4346%" y="629" width="0.0119%" height="15" fill="rgb(245,208,35)" fg:x="7251" fg:w="1"/><text x="86.7537%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="86.4108%" y="821" width="0.0477%" height="15" fill="rgb(235,90,11)" fg:x="7249" fg:w="4"/><text x="86.7299%" y="831.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="86.4108%" y="805" width="0.0477%" height="15" fill="rgb(239,139,43)" fg:x="7249" fg:w="4"/><text x="86.7299%" y="815.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="86.4227%" y="789" width="0.0358%" height="15" fill="rgb(209,187,9)" fg:x="7250" fg:w="3"/><text x="86.7418%" y="799.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="86.4227%" y="773" width="0.0358%" height="15" fill="rgb(241,30,6)" fg:x="7250" fg:w="3"/><text x="86.7418%" y="783.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4465%" y="757" width="0.0119%" height="15" fill="rgb(216,104,1)" fg:x="7252" fg:w="1"/><text x="86.7656%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4465%" y="741" width="0.0119%" height="15" fill="rgb(238,55,39)" fg:x="7252" fg:w="1"/><text x="86.7656%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4465%" y="725" width="0.0119%" height="15" fill="rgb(226,151,41)" fg:x="7252" fg:w="1"/><text x="86.7656%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4465%" y="709" width="0.0119%" height="15" fill="rgb(228,73,40)" fg:x="7252" fg:w="1"/><text x="86.7656%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4465%" y="693" width="0.0119%" height="15" fill="rgb(215,81,0)" fg:x="7252" fg:w="1"/><text x="86.7656%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4465%" y="677" width="0.0119%" height="15" fill="rgb(209,52,39)" fg:x="7252" fg:w="1"/><text x="86.7656%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4465%" y="661" width="0.0119%" height="15" fill="rgb(221,127,5)" fg:x="7252" fg:w="1"/><text x="86.7656%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4465%" y="645" width="0.0119%" height="15" fill="rgb(213,215,6)" fg:x="7252" fg:w="1"/><text x="86.7656%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4465%" y="629" width="0.0119%" height="15" fill="rgb(214,118,13)" fg:x="7252" fg:w="1"/><text x="86.7656%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="86.4465%" y="613" width="0.0119%" height="15" fill="rgb(207,205,41)" fg:x="7252" fg:w="1"/><text x="86.7656%" y="623.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="86.4465%" y="597" width="0.0119%" height="15" fill="rgb(218,208,45)" fg:x="7252" fg:w="1"/><text x="86.7656%" y="607.50"/></g><g><title>tree_sitter_haskell_external_scanner_scan (10 samples, 0.12%)</title><rect x="86.3631%" y="837" width="0.1192%" height="15" fill="rgb(244,81,54)" fg:x="7245" fg:w="10"/><text x="86.6822%" y="847.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="86.4585%" y="821" width="0.0238%" height="15" fill="rgb(244,175,1)" fg:x="7253" fg:w="2"/><text x="86.7776%" y="831.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="86.4585%" y="805" width="0.0238%" height="15" fill="rgb(232,128,28)" fg:x="7253" fg:w="2"/><text x="86.7776%" y="815.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="86.4585%" y="789" width="0.0238%" height="15" fill="rgb(234,83,13)" fg:x="7253" fg:w="2"/><text x="86.7776%" y="799.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="86.4585%" y="773" width="0.0238%" height="15" fill="rgb(233,222,35)" fg:x="7253" fg:w="2"/><text x="86.7776%" y="783.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="86.4585%" y="757" width="0.0238%" height="15" fill="rgb(244,204,21)" fg:x="7253" fg:w="2"/><text x="86.7776%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4704%" y="741" width="0.0119%" height="15" fill="rgb(225,121,40)" fg:x="7254" fg:w="1"/><text x="86.7895%" y="751.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="86.4704%" y="725" width="0.0119%" height="15" fill="rgb(231,89,18)" fg:x="7254" fg:w="1"/><text x="86.7895%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4704%" y="709" width="0.0119%" height="15" fill="rgb(205,41,50)" fg:x="7254" fg:w="1"/><text x="86.7895%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4704%" y="693" width="0.0119%" height="15" fill="rgb(254,25,22)" fg:x="7254" fg:w="1"/><text x="86.7895%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="86.4704%" y="677" width="0.0119%" height="15" fill="rgb(208,44,21)" fg:x="7254" fg:w="1"/><text x="86.7895%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4704%" y="661" width="0.0119%" height="15" fill="rgb(237,59,53)" fg:x="7254" fg:w="1"/><text x="86.7895%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="86.4704%" y="645" width="0.0119%" height="15" fill="rgb(233,24,36)" fg:x="7254" fg:w="1"/><text x="86.7895%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4704%" y="629" width="0.0119%" height="15" fill="rgb(216,92,41)" fg:x="7254" fg:w="1"/><text x="86.7895%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="86.4704%" y="613" width="0.0119%" height="15" fill="rgb(225,158,49)" fg:x="7254" fg:w="1"/><text x="86.7895%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4704%" y="597" width="0.0119%" height="15" fill="rgb(244,11,16)" fg:x="7254" fg:w="1"/><text x="86.7895%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="86.4704%" y="581" width="0.0119%" height="15" fill="rgb(208,215,38)" fg:x="7254" fg:w="1"/><text x="86.7895%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4704%" y="565" width="0.0119%" height="15" fill="rgb(250,69,53)" fg:x="7254" fg:w="1"/><text x="86.7895%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="86.4704%" y="549" width="0.0119%" height="15" fill="rgb(240,187,52)" fg:x="7254" fg:w="1"/><text x="86.7895%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="86.4704%" y="533" width="0.0119%" height="15" fill="rgb(235,22,25)" fg:x="7254" fg:w="1"/><text x="86.7895%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="86.4704%" y="517" width="0.0119%" height="15" fill="rgb(213,173,22)" fg:x="7254" fg:w="1"/><text x="86.7895%" y="527.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="86.4704%" y="501" width="0.0119%" height="15" fill="rgb(218,47,0)" fg:x="7254" fg:w="1"/><text x="86.7895%" y="511.50"/></g><g><title>ts_language_table_entry (2 samples, 0.02%)</title><rect x="86.4823%" y="837" width="0.0238%" height="15" fill="rgb(254,157,11)" fg:x="7255" fg:w="2"/><text x="86.8014%" y="847.50"/></g><g><title>helix_term::ui::editor::EditorView::handle_keymap_event (13 samples, 0.15%)</title><rect x="86.3631%" y="949" width="0.1550%" height="15" fill="rgb(233,154,6)" fg:x="7245" fg:w="13"/><text x="86.6822%" y="959.50"/></g><g><title>helix_term::commands::open (13 samples, 0.15%)</title><rect x="86.3631%" y="933" width="0.1550%" height="15" fill="rgb(233,207,47)" fg:x="7245" fg:w="13"/><text x="86.6822%" y="943.50"/></g><g><title>helix_view::document::Document::apply (13 samples, 0.15%)</title><rect x="86.3631%" y="917" width="0.1550%" height="15" fill="rgb(249,128,18)" fg:x="7245" fg:w="13"/><text x="86.6822%" y="927.50"/></g><g><title>helix_view::document::Document::apply_impl (13 samples, 0.15%)</title><rect x="86.3631%" y="901" width="0.1550%" height="15" fill="rgb(211,27,42)" fg:x="7245" fg:w="13"/><text x="86.6822%" y="911.50"/></g><g><title>helix_core::syntax::LanguageLayer::update (13 samples, 0.15%)</title><rect x="86.3631%" y="885" width="0.1550%" height="15" fill="rgb(240,163,26)" fg:x="7245" fg:w="13"/><text x="86.6822%" y="895.50"/></g><g><title>helix_core::syntax::LanguageLayer::parse (13 samples, 0.15%)</title><rect x="86.3631%" y="869" width="0.1550%" height="15" fill="rgb(232,118,46)" fg:x="7245" fg:w="13"/><text x="86.6822%" y="879.50"/></g><g><title>ts_parser_parse (13 samples, 0.15%)</title><rect x="86.3631%" y="853" width="0.1550%" height="15" fill="rgb(238,158,34)" fg:x="7245" fg:w="13"/><text x="86.6822%" y="863.50"/></g><g><title>ts_stack_remove_version (1 samples, 0.01%)</title><rect x="86.5061%" y="837" width="0.0119%" height="15" fill="rgb(254,99,45)" fg:x="7257" fg:w="1"/><text x="86.8252%" y="847.50"/></g><g><title>stack_node_release (1 samples, 0.01%)</title><rect x="86.5061%" y="821" width="0.0119%" height="15" fill="rgb(247,205,20)" fg:x="7257" fg:w="1"/><text x="86.8252%" y="831.50"/></g><g><title>stack_node_release (1 samples, 0.01%)</title><rect x="86.5061%" y="805" width="0.0119%" height="15" fill="rgb(240,20,41)" fg:x="7257" fg:w="1"/><text x="86.8252%" y="815.50"/></g><g><title>ts_subtree_release (1 samples, 0.01%)</title><rect x="86.5061%" y="789" width="0.0119%" height="15" fill="rgb(231,22,43)" fg:x="7257" fg:w="1"/><text x="86.8252%" y="799.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="87.0068%" y="757" width="0.0238%" height="15" fill="rgb(207,86,33)" fg:x="7299" fg:w="2"/><text x="87.3259%" y="767.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="87.0068%" y="741" width="0.0238%" height="15" fill="rgb(231,148,5)" fg:x="7299" fg:w="2"/><text x="87.3259%" y="751.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State)&gt; &gt;(std::function&lt;Result (State)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="87.0068%" y="725" width="0.0238%" height="15" fill="rgb(253,77,28)" fg:x="7299" fg:w="2"/><text x="87.3259%" y="735.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="87.0068%" y="709" width="0.0238%" height="15" fill="rgb(253,227,9)" fg:x="7299" fg:w="2"/><text x="87.3259%" y="719.50"/></g><g><title>cond::consumes (1 samples, 0.01%)</title><rect x="87.0306%" y="725" width="0.0119%" height="15" fill="rgb(235,4,18)" fg:x="7301" fg:w="1"/><text x="87.3497%" y="735.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="87.0306%" y="709" width="0.0119%" height="15" fill="rgb(205,206,45)" fg:x="7301" fg:w="1"/><text x="87.3497%" y="719.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="87.0306%" y="693" width="0.0119%" height="15" fill="rgb(252,34,0)" fg:x="7301" fg:w="1"/><text x="87.3497%" y="703.50"/></g><g><title>logic::count_indent (3 samples, 0.04%)</title><rect x="87.0306%" y="741" width="0.0358%" height="15" fill="rgb(213,56,7)" fg:x="7301" fg:w="3"/><text x="87.3497%" y="751.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="87.0426%" y="725" width="0.0238%" height="15" fill="rgb(227,74,29)" fg:x="7302" fg:w="2"/><text x="87.3617%" y="735.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (2 samples, 0.02%)</title><rect x="87.0426%" y="709" width="0.0238%" height="15" fill="rgb(221,32,48)" fg:x="7302" fg:w="2"/><text x="87.3617%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="87.0426%" y="693" width="0.0238%" height="15" fill="rgb(230,205,25)" fg:x="7302" fg:w="2"/><text x="87.3617%" y="703.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="87.0545%" y="677" width="0.0119%" height="15" fill="rgb(215,110,9)" fg:x="7303" fg:w="1"/><text x="87.3736%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_invoke (1 samples, 0.01%)</title><rect x="87.0664%" y="693" width="0.0119%" height="15" fill="rgb(245,220,47)" fg:x="7304" fg:w="1"/><text x="87.3855%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="87.0664%" y="677" width="0.0119%" height="15" fill="rgb(224,117,5)" fg:x="7304" fg:w="1"/><text x="87.3855%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="87.0664%" y="709" width="0.0238%" height="15" fill="rgb(242,208,25)" fg:x="7304" fg:w="2"/><text x="87.3855%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="87.0783%" y="693" width="0.0119%" height="15" fill="rgb(226,12,37)" fg:x="7305" fg:w="1"/><text x="87.3974%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="87.1022%" y="693" width="0.0238%" height="15" fill="rgb(224,221,22)" fg:x="7307" fg:w="2"/><text x="87.4213%" y="703.50"/></g><g><title>ts_lexer__mark_end (1 samples, 0.01%)</title><rect x="87.1141%" y="677" width="0.0119%" height="15" fill="rgb(239,38,44)" fg:x="7308" fg:w="1"/><text x="87.4332%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="87.1379%" y="677" width="0.0119%" height="15" fill="rgb(218,25,46)" fg:x="7310" fg:w="1"/><text x="87.4570%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="87.1379%" y="661" width="0.0119%" height="15" fill="rgb(206,137,51)" fg:x="7310" fg:w="1"/><text x="87.4570%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_invoke (3 samples, 0.04%)</title><rect x="87.1498%" y="677" width="0.0358%" height="15" fill="rgb(233,174,3)" fg:x="7311" fg:w="3"/><text x="87.4689%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="87.1737%" y="661" width="0.0119%" height="15" fill="rgb(207,224,43)" fg:x="7313" fg:w="1"/><text x="87.4928%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (7 samples, 0.08%)</title><rect x="87.1260%" y="693" width="0.0834%" height="15" fill="rgb(230,46,27)" fg:x="7309" fg:w="7"/><text x="87.4451%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="87.1856%" y="677" width="0.0238%" height="15" fill="rgb(251,215,32)" fg:x="7314" fg:w="2"/><text x="87.5047%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="87.2094%" y="693" width="0.0119%" height="15" fill="rgb(244,219,19)" fg:x="7316" fg:w="1"/><text x="87.5285%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="87.2094%" y="677" width="0.0119%" height="15" fill="rgb(242,125,36)" fg:x="7316" fg:w="1"/><text x="87.5285%" y="687.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="87.2094%" y="661" width="0.0119%" height="15" fill="rgb(251,211,12)" fg:x="7316" fg:w="1"/><text x="87.5285%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="87.2214%" y="677" width="0.0119%" height="15" fill="rgb(209,179,33)" fg:x="7317" fg:w="1"/><text x="87.5405%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="87.2214%" y="661" width="0.0119%" height="15" fill="rgb(205,161,48)" fg:x="7317" fg:w="1"/><text x="87.5405%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="87.2810%" y="661" width="0.0119%" height="15" fill="rgb(241,139,8)" fg:x="7322" fg:w="1"/><text x="87.6001%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic), std::function&lt;Result (State&amp;)&gt; (*)(symbolic::Symbolic)&gt;::_M_manager (1 samples, 0.01%)</title><rect x="87.2810%" y="645" width="0.0119%" height="15" fill="rgb(246,159,53)" fg:x="7322" fg:w="1"/><text x="87.6001%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (6 samples, 0.07%)</title><rect x="87.2333%" y="677" width="0.0715%" height="15" fill="rgb(212,62,27)" fg:x="7318" fg:w="6"/><text x="87.5524%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="87.2929%" y="661" width="0.0119%" height="15" fill="rgb(216,168,18)" fg:x="7323" fg:w="1"/><text x="87.6120%" y="671.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="87.2929%" y="645" width="0.0119%" height="15" fill="rgb(228,136,50)" fg:x="7323" fg:w="1"/><text x="87.6120%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="87.3048%" y="661" width="0.0119%" height="15" fill="rgb(237,19,45)" fg:x="7324" fg:w="1"/><text x="87.6239%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_invoke (1 samples, 0.01%)</title><rect x="87.3048%" y="645" width="0.0119%" height="15" fill="rgb(249,150,28)" fg:x="7324" fg:w="1"/><text x="87.6239%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="87.3167%" y="661" width="0.0238%" height="15" fill="rgb(236,179,39)" fg:x="7325" fg:w="2"/><text x="87.6358%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (28 samples, 0.33%)</title><rect x="87.0664%" y="741" width="0.3338%" height="15" fill="rgb(250,113,27)" fg:x="7304" fg:w="28"/><text x="87.3855%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (28 samples, 0.33%)</title><rect x="87.0664%" y="725" width="0.3338%" height="15" fill="rgb(223,13,14)" fg:x="7304" fg:w="28"/><text x="87.3855%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (26 samples, 0.31%)</title><rect x="87.0902%" y="709" width="0.3099%" height="15" fill="rgb(226,68,24)" fg:x="7306" fg:w="26"/><text x="87.4093%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (15 samples, 0.18%)</title><rect x="87.2214%" y="693" width="0.1788%" height="15" fill="rgb(239,40,50)" fg:x="7317" fg:w="15"/><text x="87.5405%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (8 samples, 0.10%)</title><rect x="87.3048%" y="677" width="0.0954%" height="15" fill="rgb(209,187,0)" fg:x="7324" fg:w="8"/><text x="87.6239%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (5 samples, 0.06%)</title><rect x="87.3406%" y="661" width="0.0596%" height="15" fill="rgb(240,61,8)" fg:x="7327" fg:w="5"/><text x="87.6597%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="87.3644%" y="645" width="0.0358%" height="15" fill="rgb(236,137,5)" fg:x="7329" fg:w="3"/><text x="87.6835%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="87.3763%" y="629" width="0.0238%" height="15" fill="rgb(247,214,21)" fg:x="7330" fg:w="2"/><text x="87.6954%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.4121%" y="709" width="0.0119%" height="15" fill="rgb(244,115,25)" fg:x="7333" fg:w="1"/><text x="87.7312%" y="719.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="87.4121%" y="693" width="0.0119%" height="15" fill="rgb(230,58,38)" fg:x="7333" fg:w="1"/><text x="87.7312%" y="703.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="87.4240%" y="693" width="0.0119%" height="15" fill="rgb(206,122,6)" fg:x="7334" fg:w="1"/><text x="87.7431%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.4359%" y="661" width="0.0119%" height="15" fill="rgb(217,135,53)" fg:x="7335" fg:w="1"/><text x="87.7550%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="87.4359%" y="645" width="0.0119%" height="15" fill="rgb(225,120,8)" fg:x="7335" fg:w="1"/><text x="87.7550%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="87.4478%" y="661" width="0.0119%" height="15" fill="rgb(226,3,30)" fg:x="7336" fg:w="1"/><text x="87.7669%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.4598%" y="629" width="0.0119%" height="15" fill="rgb(214,159,38)" fg:x="7337" fg:w="1"/><text x="87.7789%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="87.4717%" y="597" width="0.0119%" height="15" fill="rgb(242,182,47)" fg:x="7338" fg:w="1"/><text x="87.7908%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.4836%" y="581" width="0.0119%" height="15" fill="rgb(245,202,26)" fg:x="7339" fg:w="1"/><text x="87.8027%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="87.4598%" y="645" width="0.0477%" height="15" fill="rgb(226,163,3)" fg:x="7337" fg:w="4"/><text x="87.7789%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="87.4717%" y="629" width="0.0358%" height="15" fill="rgb(219,4,4)" fg:x="7338" fg:w="3"/><text x="87.7908%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="87.4717%" y="613" width="0.0358%" height="15" fill="rgb(223,85,4)" fg:x="7338" fg:w="3"/><text x="87.7908%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="87.4836%" y="597" width="0.0238%" height="15" fill="rgb(242,170,11)" fg:x="7339" fg:w="2"/><text x="87.8027%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="87.4955%" y="581" width="0.0119%" height="15" fill="rgb(221,97,42)" fg:x="7340" fg:w="1"/><text x="87.8146%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="87.4359%" y="677" width="0.0954%" height="15" fill="rgb(231,206,45)" fg:x="7335" fg:w="8"/><text x="87.7550%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="87.4598%" y="661" width="0.0715%" height="15" fill="rgb(216,23,48)" fg:x="7337" fg:w="6"/><text x="87.7789%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="87.5075%" y="645" width="0.0238%" height="15" fill="rgb(225,49,9)" fg:x="7341" fg:w="2"/><text x="87.8266%" y="655.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="87.5075%" y="629" width="0.0238%" height="15" fill="rgb(247,24,47)" fg:x="7341" fg:w="2"/><text x="87.8266%" y="639.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="87.5075%" y="613" width="0.0238%" height="15" fill="rgb(253,145,10)" fg:x="7341" fg:w="2"/><text x="87.8266%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.5313%" y="661" width="0.0119%" height="15" fill="rgb(206,62,10)" fg:x="7343" fg:w="1"/><text x="87.8504%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="87.5313%" y="645" width="0.0119%" height="15" fill="rgb(224,159,31)" fg:x="7343" fg:w="1"/><text x="87.8504%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="87.5313%" y="677" width="0.0238%" height="15" fill="rgb(234,184,15)" fg:x="7343" fg:w="2"/><text x="87.8504%" y="687.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="87.5432%" y="661" width="0.0119%" height="15" fill="rgb(237,101,1)" fg:x="7344" fg:w="1"/><text x="87.8623%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="87.4359%" y="693" width="0.1430%" height="15" fill="rgb(211,99,29)" fg:x="7335" fg:w="12"/><text x="87.7550%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="87.5551%" y="677" width="0.0238%" height="15" fill="rgb(250,167,3)" fg:x="7345" fg:w="2"/><text x="87.8742%" y="687.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="87.5551%" y="661" width="0.0238%" height="15" fill="rgb(225,58,6)" fg:x="7345" fg:w="2"/><text x="87.8742%" y="671.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="87.5551%" y="645" width="0.0238%" height="15" fill="rgb(251,161,21)" fg:x="7345" fg:w="2"/><text x="87.8742%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.5790%" y="677" width="0.0119%" height="15" fill="rgb(253,203,35)" fg:x="7347" fg:w="1"/><text x="87.8981%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="87.5790%" y="661" width="0.0119%" height="15" fill="rgb(214,220,52)" fg:x="7347" fg:w="1"/><text x="87.8981%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="87.4240%" y="709" width="0.1788%" height="15" fill="rgb(235,216,33)" fg:x="7334" fg:w="15"/><text x="87.7431%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="87.5790%" y="693" width="0.0238%" height="15" fill="rgb(231,79,26)" fg:x="7347" fg:w="2"/><text x="87.8981%" y="703.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="87.5909%" y="677" width="0.0119%" height="15" fill="rgb(244,218,10)" fg:x="7348" fg:w="1"/><text x="87.9100%" y="687.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="87.6028%" y="693" width="0.0238%" height="15" fill="rgb(238,15,9)" fg:x="7349" fg:w="2"/><text x="87.9219%" y="703.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="87.6028%" y="677" width="0.0238%" height="15" fill="rgb(235,112,15)" fg:x="7349" fg:w="2"/><text x="87.9219%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.6267%" y="677" width="0.0119%" height="15" fill="rgb(239,126,18)" fg:x="7351" fg:w="1"/><text x="87.9458%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="87.6267%" y="661" width="0.0119%" height="15" fill="rgb(253,171,19)" fg:x="7351" fg:w="1"/><text x="87.9458%" y="671.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="87.6386%" y="677" width="0.0119%" height="15" fill="rgb(237,218,25)" fg:x="7352" fg:w="1"/><text x="87.9577%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.6505%" y="661" width="0.0119%" height="15" fill="rgb(213,88,46)" fg:x="7353" fg:w="1"/><text x="87.9696%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="87.6505%" y="645" width="0.0119%" height="15" fill="rgb(222,124,54)" fg:x="7353" fg:w="1"/><text x="87.9696%" y="655.50"/></g><g><title>__GI___libc_free (5 samples, 0.06%)</title><rect x="87.6624%" y="645" width="0.0596%" height="15" fill="rgb(209,206,42)" fg:x="7354" fg:w="5"/><text x="87.9815%" y="655.50"/></g><g><title>_int_free (4 samples, 0.05%)</title><rect x="87.6743%" y="629" width="0.0477%" height="15" fill="rgb(219,25,49)" fg:x="7355" fg:w="4"/><text x="87.9934%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="87.6624%" y="661" width="0.0715%" height="15" fill="rgb(228,207,53)" fg:x="7354" fg:w="6"/><text x="87.9815%" y="671.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="87.7220%" y="645" width="0.0119%" height="15" fill="rgb(224,3,4)" fg:x="7359" fg:w="1"/><text x="88.0411%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="87.7339%" y="661" width="0.0119%" height="15" fill="rgb(254,206,26)" fg:x="7360" fg:w="1"/><text x="88.0530%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="87.7339%" y="645" width="0.0119%" height="15" fill="rgb(209,4,26)" fg:x="7360" fg:w="1"/><text x="88.0530%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="87.7339%" y="629" width="0.0119%" height="15" fill="rgb(243,193,32)" fg:x="7360" fg:w="1"/><text x="88.0530%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="87.7339%" y="613" width="0.0119%" height="15" fill="rgb(225,150,36)" fg:x="7360" fg:w="1"/><text x="88.0530%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="87.7339%" y="597" width="0.0119%" height="15" fill="rgb(225,131,26)" fg:x="7360" fg:w="1"/><text x="88.0530%" y="607.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="87.7339%" y="581" width="0.0119%" height="15" fill="rgb(236,126,12)" fg:x="7360" fg:w="1"/><text x="88.0530%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.7459%" y="645" width="0.0119%" height="15" fill="rgb(238,167,44)" fg:x="7361" fg:w="1"/><text x="88.0650%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="87.7459%" y="629" width="0.0119%" height="15" fill="rgb(238,153,31)" fg:x="7361" fg:w="1"/><text x="88.0650%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="87.7459%" y="661" width="0.0238%" height="15" fill="rgb(254,41,51)" fg:x="7361" fg:w="2"/><text x="88.0650%" y="671.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="87.7578%" y="645" width="0.0119%" height="15" fill="rgb(224,100,52)" fg:x="7362" fg:w="1"/><text x="88.0769%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="87.6505%" y="677" width="0.1311%" height="15" fill="rgb(246,226,38)" fg:x="7353" fg:w="11"/><text x="87.9696%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::check_indent(std::function&lt;bool (unsigned short)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="87.7697%" y="661" width="0.0119%" height="15" fill="rgb(252,21,43)" fg:x="7363" fg:w="1"/><text x="88.0888%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.7697%" y="645" width="0.0119%" height="15" fill="rgb(250,44,8)" fg:x="7363" fg:w="1"/><text x="88.0888%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="87.7697%" y="629" width="0.0119%" height="15" fill="rgb(224,200,45)" fg:x="7363" fg:w="1"/><text x="88.0888%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.7816%" y="661" width="0.0119%" height="15" fill="rgb(208,75,52)" fg:x="7364" fg:w="1"/><text x="88.1007%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="87.7816%" y="645" width="0.0119%" height="15" fill="rgb(213,167,20)" fg:x="7364" fg:w="1"/><text x="88.1007%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.7935%" y="645" width="0.0119%" height="15" fill="rgb(236,163,42)" fg:x="7365" fg:w="1"/><text x="88.1126%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="87.7935%" y="629" width="0.0119%" height="15" fill="rgb(210,98,31)" fg:x="7365" fg:w="1"/><text x="88.1126%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="87.7935%" y="661" width="0.0238%" height="15" fill="rgb(246,166,15)" fg:x="7365" fg:w="2"/><text x="88.1126%" y="671.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="87.8055%" y="645" width="0.0119%" height="15" fill="rgb(214,114,7)" fg:x="7366" fg:w="1"/><text x="88.1246%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="87.8293%" y="629" width="0.0119%" height="15" fill="rgb(217,202,34)" fg:x="7368" fg:w="1"/><text x="88.1484%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="87.8412%" y="613" width="0.0119%" height="15" fill="rgb(227,226,29)" fg:x="7369" fg:w="1"/><text x="88.1603%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="87.8531%" y="597" width="0.0238%" height="15" fill="rgb(254,65,44)" fg:x="7370" fg:w="2"/><text x="88.1722%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="87.8651%" y="581" width="0.0119%" height="15" fill="rgb(213,150,32)" fg:x="7371" fg:w="1"/><text x="88.1842%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.8651%" y="565" width="0.0119%" height="15" fill="rgb(208,86,46)" fg:x="7371" fg:w="1"/><text x="88.1842%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="87.8770%" y="597" width="0.0119%" height="15" fill="rgb(222,75,3)" fg:x="7372" fg:w="1"/><text x="88.1961%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="87.8531%" y="613" width="0.0477%" height="15" fill="rgb(225,213,9)" fg:x="7370" fg:w="4"/><text x="88.1722%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="87.8889%" y="597" width="0.0119%" height="15" fill="rgb(209,199,10)" fg:x="7373" fg:w="1"/><text x="88.2080%" y="607.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="87.8889%" y="581" width="0.0119%" height="15" fill="rgb(213,18,17)" fg:x="7373" fg:w="1"/><text x="88.2080%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="87.9008%" y="597" width="0.0119%" height="15" fill="rgb(243,79,44)" fg:x="7374" fg:w="1"/><text x="88.2199%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="87.7816%" y="677" width="0.1430%" height="15" fill="rgb(226,20,5)" fg:x="7364" fg:w="12"/><text x="88.1007%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="87.8174%" y="661" width="0.1073%" height="15" fill="rgb(217,52,31)" fg:x="7367" fg:w="9"/><text x="88.1365%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="87.8174%" y="645" width="0.1073%" height="15" fill="rgb(229,42,7)" fg:x="7367" fg:w="9"/><text x="88.1365%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="87.8412%" y="629" width="0.0834%" height="15" fill="rgb(206,118,29)" fg:x="7369" fg:w="7"/><text x="88.1603%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="87.9008%" y="613" width="0.0238%" height="15" fill="rgb(248,132,44)" fg:x="7374" fg:w="2"/><text x="88.2199%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="87.9127%" y="597" width="0.0119%" height="15" fill="rgb(231,56,33)" fg:x="7375" fg:w="1"/><text x="88.2318%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="87.9127%" y="581" width="0.0119%" height="15" fill="rgb(208,31,11)" fg:x="7375" fg:w="1"/><text x="88.2318%" y="591.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="87.9127%" y="565" width="0.0119%" height="15" fill="rgb(216,56,33)" fg:x="7375" fg:w="1"/><text x="88.2318%" y="575.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="87.9247%" y="661" width="0.0238%" height="15" fill="rgb(213,100,0)" fg:x="7376" fg:w="2"/><text x="88.2438%" y="671.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="87.9247%" y="645" width="0.0238%" height="15" fill="rgb(236,166,18)" fg:x="7376" fg:w="2"/><text x="88.2438%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (29 samples, 0.35%)</title><rect x="87.6267%" y="693" width="0.3457%" height="15" fill="rgb(251,132,12)" fg:x="7351" fg:w="29"/><text x="87.9458%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="87.9247%" y="677" width="0.0477%" height="15" fill="rgb(216,117,7)" fg:x="7376" fg:w="4"/><text x="88.2438%" y="687.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="87.9485%" y="661" width="0.0238%" height="15" fill="rgb(243,184,8)" fg:x="7378" fg:w="2"/><text x="88.2676%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.9723%" y="677" width="0.0119%" height="15" fill="rgb(212,91,32)" fg:x="7380" fg:w="1"/><text x="88.2914%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="87.9723%" y="661" width="0.0119%" height="15" fill="rgb(224,147,15)" fg:x="7380" fg:w="1"/><text x="88.2914%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.9962%" y="661" width="0.0119%" height="15" fill="rgb(228,84,10)" fg:x="7382" fg:w="1"/><text x="88.3153%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="87.9962%" y="645" width="0.0119%" height="15" fill="rgb(221,161,22)" fg:x="7382" fg:w="1"/><text x="88.3153%" y="655.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="88.0081%" y="661" width="0.0119%" height="15" fill="rgb(250,132,20)" fg:x="7383" fg:w="1"/><text x="88.3272%" y="671.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="88.0439%" y="581" width="0.0119%" height="15" fill="rgb(209,161,12)" fg:x="7386" fg:w="1"/><text x="88.3630%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="88.0200%" y="645" width="0.0477%" height="15" fill="rgb(232,142,42)" fg:x="7384" fg:w="4"/><text x="88.3391%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="88.0200%" y="629" width="0.0477%" height="15" fill="rgb(240,228,27)" fg:x="7384" fg:w="4"/><text x="88.3391%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="88.0200%" y="613" width="0.0477%" height="15" fill="rgb(243,0,31)" fg:x="7384" fg:w="4"/><text x="88.3391%" y="623.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="88.0319%" y="597" width="0.0358%" height="15" fill="rgb(237,100,15)" fg:x="7385" fg:w="3"/><text x="88.3510%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.0558%" y="581" width="0.0119%" height="15" fill="rgb(230,26,48)" fg:x="7387" fg:w="1"/><text x="88.3749%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.0677%" y="613" width="0.0119%" height="15" fill="rgb(215,7,13)" fg:x="7388" fg:w="1"/><text x="88.3868%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.0677%" y="597" width="0.0119%" height="15" fill="rgb(227,172,5)" fg:x="7388" fg:w="1"/><text x="88.3868%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), cond::eq(unsigned int)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.0677%" y="581" width="0.0119%" height="15" fill="rgb(248,206,14)" fg:x="7388" fg:w="1"/><text x="88.3868%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="88.0796%" y="581" width="0.0119%" height="15" fill="rgb(231,62,54)" fg:x="7389" fg:w="1"/><text x="88.3987%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="88.0200%" y="661" width="0.0834%" height="15" fill="rgb(222,136,26)" fg:x="7384" fg:w="7"/><text x="88.3391%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="88.0677%" y="645" width="0.0358%" height="15" fill="rgb(211,115,42)" fg:x="7388" fg:w="3"/><text x="88.3868%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="88.0677%" y="629" width="0.0358%" height="15" fill="rgb(234,5,17)" fg:x="7388" fg:w="3"/><text x="88.3868%" y="639.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="88.0796%" y="613" width="0.0238%" height="15" fill="rgb(233,67,14)" fg:x="7389" fg:w="2"/><text x="88.3987%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator|(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="88.0796%" y="597" width="0.0238%" height="15" fill="rgb(225,133,51)" fg:x="7389" fg:w="2"/><text x="88.3987%" y="607.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.0915%" y="581" width="0.0119%" height="15" fill="rgb(206,107,40)" fg:x="7390" fg:w="1"/><text x="88.4106%" y="591.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="88.0915%" y="565" width="0.0119%" height="15" fill="rgb(210,56,9)" fg:x="7390" fg:w="1"/><text x="88.4106%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="88.1035%" y="661" width="0.0358%" height="15" fill="rgb(222,204,4)" fg:x="7391" fg:w="3"/><text x="88.4226%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="88.1035%" y="645" width="0.0358%" height="15" fill="rgb(210,168,3)" fg:x="7391" fg:w="3"/><text x="88.4226%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="88.1035%" y="629" width="0.0358%" height="15" fill="rgb(246,183,26)" fg:x="7391" fg:w="3"/><text x="88.4226%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="88.1035%" y="613" width="0.0358%" height="15" fill="rgb(228,27,31)" fg:x="7391" fg:w="3"/><text x="88.4226%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="88.1035%" y="597" width="0.0358%" height="15" fill="rgb(206,8,2)" fg:x="7391" fg:w="3"/><text x="88.4226%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (3 samples, 0.04%)</title><rect x="88.1035%" y="581" width="0.0358%" height="15" fill="rgb(251,229,16)" fg:x="7391" fg:w="3"/><text x="88.4226%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="87.9843%" y="677" width="0.1669%" height="15" fill="rgb(208,84,44)" fg:x="7381" fg:w="14"/><text x="88.3034%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.1392%" y="661" width="0.0119%" height="15" fill="rgb(221,228,13)" fg:x="7394" fg:w="1"/><text x="88.4583%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="88.1392%" y="645" width="0.0119%" height="15" fill="rgb(248,42,47)" fg:x="7394" fg:w="1"/><text x="88.4583%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="88.1392%" y="629" width="0.0119%" height="15" fill="rgb(222,124,41)" fg:x="7394" fg:w="1"/><text x="88.4583%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="87.9723%" y="693" width="0.2026%" height="15" fill="rgb(244,191,35)" fg:x="7380" fg:w="17"/><text x="88.2914%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="88.1512%" y="677" width="0.0238%" height="15" fill="rgb(222,223,54)" fg:x="7395" fg:w="2"/><text x="88.4703%" y="687.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="88.1512%" y="661" width="0.0238%" height="15" fill="rgb(248,178,42)" fg:x="7395" fg:w="2"/><text x="88.4703%" y="671.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="88.1512%" y="645" width="0.0238%" height="15" fill="rgb(238,21,24)" fg:x="7395" fg:w="2"/><text x="88.4703%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="88.1750%" y="677" width="0.0119%" height="15" fill="rgb(227,134,7)" fg:x="7397" fg:w="1"/><text x="88.4941%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="88.1750%" y="661" width="0.0119%" height="15" fill="rgb(205,191,1)" fg:x="7397" fg:w="1"/><text x="88.4941%" y="671.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="88.1869%" y="677" width="0.0119%" height="15" fill="rgb(222,166,30)" fg:x="7398" fg:w="1"/><text x="88.5060%" y="687.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="88.1988%" y="677" width="0.0119%" height="15" fill="rgb(229,94,26)" fg:x="7399" fg:w="1"/><text x="88.5179%" y="687.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="88.2108%" y="645" width="0.0119%" height="15" fill="rgb(246,97,2)" fg:x="7400" fg:w="1"/><text x="88.5299%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="88.2227%" y="629" width="0.0119%" height="15" fill="rgb(252,112,53)" fg:x="7401" fg:w="1"/><text x="88.5418%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="88.2227%" y="613" width="0.0119%" height="15" fill="rgb(225,52,38)" fg:x="7401" fg:w="1"/><text x="88.5418%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="88.2346%" y="629" width="0.0119%" height="15" fill="rgb(215,203,24)" fg:x="7402" fg:w="1"/><text x="88.5537%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="88.2584%" y="613" width="0.0119%" height="15" fill="rgb(210,122,52)" fg:x="7404" fg:w="1"/><text x="88.5775%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.2704%" y="613" width="0.0119%" height="15" fill="rgb(209,161,44)" fg:x="7405" fg:w="1"/><text x="88.5895%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.2704%" y="597" width="0.0119%" height="15" fill="rgb(221,97,16)" fg:x="7405" fg:w="1"/><text x="88.5895%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="88.2227%" y="645" width="0.0715%" height="15" fill="rgb(209,87,13)" fg:x="7401" fg:w="6"/><text x="88.5418%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="88.2465%" y="629" width="0.0477%" height="15" fill="rgb(242,1,21)" fg:x="7403" fg:w="4"/><text x="88.5656%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.2823%" y="613" width="0.0119%" height="15" fill="rgb(251,170,41)" fg:x="7406" fg:w="1"/><text x="88.6014%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="88.2823%" y="597" width="0.0119%" height="15" fill="rgb(227,201,10)" fg:x="7406" fg:w="1"/><text x="88.6014%" y="607.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="88.2108%" y="677" width="0.0954%" height="15" fill="rgb(231,100,29)" fg:x="7400" fg:w="8"/><text x="88.5299%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="88.2108%" y="661" width="0.0954%" height="15" fill="rgb(226,31,35)" fg:x="7400" fg:w="8"/><text x="88.5299%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.2942%" y="645" width="0.0119%" height="15" fill="rgb(254,99,26)" fg:x="7407" fg:w="1"/><text x="88.6133%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="88.2942%" y="629" width="0.0119%" height="15" fill="rgb(217,228,17)" fg:x="7407" fg:w="1"/><text x="88.6133%" y="639.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="88.3061%" y="661" width="0.0238%" height="15" fill="rgb(226,132,8)" fg:x="7408" fg:w="2"/><text x="88.6252%" y="671.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="88.3061%" y="645" width="0.0238%" height="15" fill="rgb(220,202,47)" fg:x="7408" fg:w="2"/><text x="88.6252%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="88.1750%" y="693" width="0.1669%" height="15" fill="rgb(245,194,10)" fg:x="7397" fg:w="14"/><text x="88.4941%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="88.3061%" y="677" width="0.0358%" height="15" fill="rgb(225,44,52)" fg:x="7408" fg:w="3"/><text x="88.6252%" y="687.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="88.3300%" y="661" width="0.0119%" height="15" fill="rgb(235,10,4)" fg:x="7410" fg:w="1"/><text x="88.6491%" y="671.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="88.3538%" y="677" width="0.0358%" height="15" fill="rgb(244,32,23)" fg:x="7412" fg:w="3"/><text x="88.6729%" y="687.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="88.3657%" y="661" width="0.0238%" height="15" fill="rgb(210,115,0)" fg:x="7413" fg:w="2"/><text x="88.6848%" y="671.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="88.3896%" y="677" width="0.0119%" height="15" fill="rgb(246,72,16)" fg:x="7415" fg:w="1"/><text x="88.7087%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.4015%" y="645" width="0.0119%" height="15" fill="rgb(223,32,10)" fg:x="7416" fg:w="1"/><text x="88.7206%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.4015%" y="629" width="0.0119%" height="15" fill="rgb(223,97,52)" fg:x="7416" fg:w="1"/><text x="88.7206%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.4015%" y="613" width="0.0119%" height="15" fill="rgb(238,69,38)" fg:x="7416" fg:w="1"/><text x="88.7206%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="88.4015%" y="597" width="0.0119%" height="15" fill="rgb(226,61,1)" fg:x="7416" fg:w="1"/><text x="88.7206%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="88.4015%" y="677" width="0.0238%" height="15" fill="rgb(244,56,14)" fg:x="7416" fg:w="2"/><text x="88.7206%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="88.4015%" y="661" width="0.0238%" height="15" fill="rgb(242,164,18)" fg:x="7416" fg:w="2"/><text x="88.7206%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.4134%" y="645" width="0.0119%" height="15" fill="rgb(217,130,28)" fg:x="7417" fg:w="1"/><text x="88.7325%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="88.4134%" y="629" width="0.0119%" height="15" fill="rgb(218,118,52)" fg:x="7417" fg:w="1"/><text x="88.7325%" y="639.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="88.4372%" y="661" width="0.0358%" height="15" fill="rgb(251,112,38)" fg:x="7419" fg:w="3"/><text x="88.7563%" y="671.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="88.4492%" y="645" width="0.0238%" height="15" fill="rgb(239,14,50)" fg:x="7420" fg:w="2"/><text x="88.7683%" y="655.50"/></g><g><title>__GI___libc_free (4 samples, 0.05%)</title><rect x="88.4730%" y="645" width="0.0477%" height="15" fill="rgb(228,141,54)" fg:x="7422" fg:w="4"/><text x="88.7921%" y="655.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="88.4849%" y="629" width="0.0358%" height="15" fill="rgb(236,128,15)" fg:x="7423" fg:w="3"/><text x="88.8040%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="88.5207%" y="645" width="0.0238%" height="15" fill="rgb(206,140,54)" fg:x="7426" fg:w="2"/><text x="88.8398%" y="655.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="88.5445%" y="629" width="0.0238%" height="15" fill="rgb(240,0,44)" fg:x="7428" fg:w="2"/><text x="88.8636%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="88.5564%" y="613" width="0.0119%" height="15" fill="rgb(243,207,23)" fg:x="7429" fg:w="1"/><text x="88.8755%" y="623.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="88.5684%" y="629" width="0.0119%" height="15" fill="rgb(247,202,1)" fg:x="7430" fg:w="1"/><text x="88.8875%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="88.5803%" y="629" width="0.0119%" height="15" fill="rgb(239,83,27)" fg:x="7431" fg:w="1"/><text x="88.8994%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="88.5922%" y="597" width="0.0119%" height="15" fill="rgb(219,205,7)" fg:x="7432" fg:w="1"/><text x="88.9113%" y="607.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="88.6041%" y="597" width="0.0119%" height="15" fill="rgb(249,184,22)" fg:x="7433" fg:w="1"/><text x="88.9232%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.6160%" y="597" width="0.0119%" height="15" fill="rgb(230,150,14)" fg:x="7434" fg:w="1"/><text x="88.9351%" y="607.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::read_while(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.6160%" y="581" width="0.0119%" height="15" fill="rgb(240,118,34)" fg:x="7434" fg:w="1"/><text x="88.9351%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="88.6160%" y="565" width="0.0119%" height="15" fill="rgb(227,162,21)" fg:x="7434" fg:w="1"/><text x="88.9351%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.6280%" y="597" width="0.0119%" height="15" fill="rgb(219,14,9)" fg:x="7435" fg:w="1"/><text x="88.9471%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.6280%" y="581" width="0.0119%" height="15" fill="rgb(223,226,16)" fg:x="7435" fg:w="1"/><text x="88.9471%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.6280%" y="565" width="0.0119%" height="15" fill="rgb(246,161,37)" fg:x="7435" fg:w="1"/><text x="88.9471%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="88.5922%" y="629" width="0.0596%" height="15" fill="rgb(205,221,43)" fg:x="7432" fg:w="5"/><text x="88.9113%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="88.5922%" y="613" width="0.0596%" height="15" fill="rgb(228,216,26)" fg:x="7432" fg:w="5"/><text x="88.9113%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.6399%" y="597" width="0.0119%" height="15" fill="rgb(251,33,17)" fg:x="7436" fg:w="1"/><text x="88.9590%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="88.6399%" y="581" width="0.0119%" height="15" fill="rgb(246,126,36)" fg:x="7436" fg:w="1"/><text x="88.9590%" y="591.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="88.6637%" y="613" width="0.0119%" height="15" fill="rgb(217,160,24)" fg:x="7438" fg:w="1"/><text x="88.9828%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="88.6518%" y="629" width="0.0358%" height="15" fill="rgb(211,64,12)" fg:x="7437" fg:w="3"/><text x="88.9709%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="88.6756%" y="613" width="0.0119%" height="15" fill="rgb(238,47,36)" fg:x="7439" fg:w="1"/><text x="88.9947%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (13 samples, 0.15%)</title><rect x="88.5445%" y="645" width="0.1550%" height="15" fill="rgb(210,157,42)" fg:x="7428" fg:w="13"/><text x="88.8636%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::seq(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.6876%" y="629" width="0.0119%" height="15" fill="rgb(242,84,39)" fg:x="7440" fg:w="1"/><text x="89.0067%" y="639.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="88.6876%" y="613" width="0.0119%" height="15" fill="rgb(207,65,41)" fg:x="7440" fg:w="1"/><text x="89.0067%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="88.6995%" y="629" width="0.0119%" height="15" fill="rgb(246,97,27)" fg:x="7441" fg:w="1"/><text x="89.0186%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="88.6995%" y="613" width="0.0119%" height="15" fill="rgb(229,9,43)" fg:x="7441" fg:w="1"/><text x="89.0186%" y="623.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="88.7114%" y="629" width="0.0119%" height="15" fill="rgb(211,82,44)" fg:x="7442" fg:w="1"/><text x="89.0305%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (22 samples, 0.26%)</title><rect x="88.4730%" y="661" width="0.2622%" height="15" fill="rgb(253,45,54)" fg:x="7422" fg:w="22"/><text x="88.7921%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="88.6995%" y="645" width="0.0358%" height="15" fill="rgb(235,94,32)" fg:x="7441" fg:w="3"/><text x="89.0186%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="88.7233%" y="629" width="0.0119%" height="15" fill="rgb(252,143,1)" fg:x="7443" fg:w="1"/><text x="89.0424%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;symbolic::Symbolic&gt;(symbolic::Symbolic (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (symbolic::Symbolic)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.7352%" y="661" width="0.0119%" height="15" fill="rgb(239,164,4)" fg:x="7444" fg:w="1"/><text x="89.0543%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="88.7352%" y="645" width="0.0119%" height="15" fill="rgb(222,25,39)" fg:x="7444" fg:w="1"/><text x="89.0543%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="88.7352%" y="629" width="0.0119%" height="15" fill="rgb(234,175,9)" fg:x="7444" fg:w="1"/><text x="89.0543%" y="639.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="88.7472%" y="645" width="0.0238%" height="15" fill="rgb(247,200,41)" fg:x="7445" fg:w="2"/><text x="89.0663%" y="655.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="88.7472%" y="629" width="0.0238%" height="15" fill="rgb(245,101,27)" fg:x="7445" fg:w="2"/><text x="89.0663%" y="639.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="88.7710%" y="645" width="0.0119%" height="15" fill="rgb(221,29,7)" fg:x="7447" fg:w="1"/><text x="89.0901%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (31 samples, 0.37%)</title><rect x="88.4253%" y="677" width="0.3695%" height="15" fill="rgb(240,184,10)" fg:x="7418" fg:w="31"/><text x="88.7444%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="88.7472%" y="661" width="0.0477%" height="15" fill="rgb(251,85,15)" fg:x="7445" fg:w="4"/><text x="89.0663%" y="671.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="88.7829%" y="645" width="0.0119%" height="15" fill="rgb(252,84,16)" fg:x="7448" fg:w="1"/><text x="89.1020%" y="655.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="88.7949%" y="661" width="0.0119%" height="15" fill="rgb(233,136,6)" fg:x="7449" fg:w="1"/><text x="89.1140%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="88.7949%" y="677" width="0.0238%" height="15" fill="rgb(226,169,30)" fg:x="7449" fg:w="2"/><text x="89.1140%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.8068%" y="661" width="0.0119%" height="15" fill="rgb(241,83,18)" fg:x="7450" fg:w="1"/><text x="89.1259%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.8068%" y="645" width="0.0119%" height="15" fill="rgb(239,151,5)" fg:x="7450" fg:w="1"/><text x="89.1259%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.8068%" y="629" width="0.0119%" height="15" fill="rgb(238,56,13)" fg:x="7450" fg:w="1"/><text x="89.1259%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.8068%" y="613" width="0.0119%" height="15" fill="rgb(224,100,0)" fg:x="7450" fg:w="1"/><text x="89.1259%" y="623.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.8068%" y="597" width="0.0119%" height="15" fill="rgb(231,168,26)" fg:x="7450" fg:w="1"/><text x="89.1259%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="88.8187%" y="661" width="0.0119%" height="15" fill="rgb(238,110,3)" fg:x="7451" fg:w="1"/><text x="89.1378%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="88.8187%" y="645" width="0.0119%" height="15" fill="rgb(216,190,1)" fg:x="7451" fg:w="1"/><text x="89.1378%" y="655.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="88.8425%" y="597" width="0.0119%" height="15" fill="rgb(208,130,52)" fg:x="7453" fg:w="1"/><text x="89.1616%" y="607.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="88.8545%" y="565" width="0.0119%" height="15" fill="rgb(233,74,12)" fg:x="7454" fg:w="1"/><text x="89.1736%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="88.8545%" y="581" width="0.0238%" height="15" fill="rgb(248,12,15)" fg:x="7454" fg:w="2"/><text x="89.1736%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="88.8664%" y="565" width="0.0119%" height="15" fill="rgb(228,18,29)" fg:x="7455" fg:w="1"/><text x="89.1855%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="88.8306%" y="645" width="0.0715%" height="15" fill="rgb(206,153,11)" fg:x="7452" fg:w="6"/><text x="89.1497%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="88.8306%" y="629" width="0.0715%" height="15" fill="rgb(216,50,30)" fg:x="7452" fg:w="6"/><text x="89.1497%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="88.8425%" y="613" width="0.0596%" height="15" fill="rgb(217,20,39)" fg:x="7453" fg:w="5"/><text x="89.1616%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="88.8545%" y="597" width="0.0477%" height="15" fill="rgb(232,130,46)" fg:x="7454" fg:w="4"/><text x="89.1736%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="88.8783%" y="581" width="0.0238%" height="15" fill="rgb(233,141,43)" fg:x="7456" fg:w="2"/><text x="89.1974%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="88.8783%" y="565" width="0.0238%" height="15" fill="rgb(240,64,34)" fg:x="7456" fg:w="2"/><text x="89.1974%" y="575.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="88.8902%" y="549" width="0.0119%" height="15" fill="rgb(230,28,31)" fg:x="7457" fg:w="1"/><text x="89.2093%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="88.8306%" y="661" width="0.0954%" height="15" fill="rgb(223,56,30)" fg:x="7452" fg:w="8"/><text x="89.1497%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="88.9021%" y="645" width="0.0238%" height="15" fill="rgb(248,134,16)" fg:x="7458" fg:w="2"/><text x="89.2212%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="88.9141%" y="629" width="0.0119%" height="15" fill="rgb(206,202,4)" fg:x="7459" fg:w="1"/><text x="89.2332%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="88.9141%" y="613" width="0.0119%" height="15" fill="rgb(219,116,48)" fg:x="7459" fg:w="1"/><text x="89.2332%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="88.9260%" y="645" width="0.0119%" height="15" fill="rgb(224,122,46)" fg:x="7460" fg:w="1"/><text x="89.2451%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="88.9379%" y="629" width="0.0119%" height="15" fill="rgb(219,114,47)" fg:x="7461" fg:w="1"/><text x="89.2570%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.9498%" y="581" width="0.0119%" height="15" fill="rgb(244,60,44)" fg:x="7462" fg:w="1"/><text x="89.2689%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.9498%" y="565" width="0.0119%" height="15" fill="rgb(243,226,25)" fg:x="7462" fg:w="1"/><text x="89.2689%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="88.9498%" y="549" width="0.0119%" height="15" fill="rgb(243,101,52)" fg:x="7462" fg:w="1"/><text x="89.2689%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="88.9498%" y="613" width="0.0238%" height="15" fill="rgb(207,69,25)" fg:x="7462" fg:w="2"/><text x="89.2689%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="88.9498%" y="597" width="0.0238%" height="15" fill="rgb(222,204,53)" fg:x="7462" fg:w="2"/><text x="89.2689%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.9617%" y="581" width="0.0119%" height="15" fill="rgb(234,84,49)" fg:x="7463" fg:w="1"/><text x="89.2808%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="88.9617%" y="565" width="0.0119%" height="15" fill="rgb(233,77,41)" fg:x="7463" fg:w="1"/><text x="89.2808%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.9737%" y="613" width="0.0119%" height="15" fill="rgb(221,200,42)" fg:x="7464" fg:w="1"/><text x="89.2928%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.9737%" y="597" width="0.0119%" height="15" fill="rgb(221,29,35)" fg:x="7464" fg:w="1"/><text x="89.2928%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="88.9498%" y="629" width="0.0477%" height="15" fill="rgb(221,71,22)" fg:x="7462" fg:w="4"/><text x="89.2689%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.9856%" y="613" width="0.0119%" height="15" fill="rgb(216,162,23)" fg:x="7465" fg:w="1"/><text x="89.3047%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="88.9856%" y="597" width="0.0119%" height="15" fill="rgb(248,32,48)" fg:x="7465" fg:w="1"/><text x="89.3047%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="88.9379%" y="645" width="0.0715%" height="15" fill="rgb(241,156,30)" fg:x="7461" fg:w="6"/><text x="89.2570%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.9975%" y="629" width="0.0119%" height="15" fill="rgb(237,196,46)" fg:x="7466" fg:w="1"/><text x="89.3166%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="88.9975%" y="613" width="0.0119%" height="15" fill="rgb(216,2,6)" fg:x="7466" fg:w="1"/><text x="89.3166%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="88.9260%" y="661" width="0.0954%" height="15" fill="rgb(214,47,16)" fg:x="7460" fg:w="8"/><text x="89.2451%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="89.0094%" y="645" width="0.0119%" height="15" fill="rgb(240,123,13)" fg:x="7467" fg:w="1"/><text x="89.3285%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="89.0094%" y="629" width="0.0119%" height="15" fill="rgb(206,47,48)" fg:x="7467" fg:w="1"/><text x="89.3285%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="89.0094%" y="613" width="0.0119%" height="15" fill="rgb(252,88,27)" fg:x="7467" fg:w="1"/><text x="89.3285%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="89.0213%" y="565" width="0.0119%" height="15" fill="rgb(218,105,30)" fg:x="7468" fg:w="1"/><text x="89.3404%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="89.0213%" y="661" width="0.0238%" height="15" fill="rgb(227,52,46)" fg:x="7468" fg:w="2"/><text x="89.3404%" y="671.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="89.0213%" y="645" width="0.0238%" height="15" fill="rgb(222,190,21)" fg:x="7468" fg:w="2"/><text x="89.3404%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="89.0213%" y="629" width="0.0238%" height="15" fill="rgb(205,86,20)" fg:x="7468" fg:w="2"/><text x="89.3404%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="89.0213%" y="613" width="0.0238%" height="15" fill="rgb(233,45,1)" fg:x="7468" fg:w="2"/><text x="89.3404%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="89.0213%" y="597" width="0.0238%" height="15" fill="rgb(208,39,6)" fg:x="7468" fg:w="2"/><text x="89.3404%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="89.0213%" y="581" width="0.0238%" height="15" fill="rgb(211,178,22)" fg:x="7468" fg:w="2"/><text x="89.3404%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="89.0333%" y="565" width="0.0119%" height="15" fill="rgb(227,112,23)" fg:x="7469" fg:w="1"/><text x="89.3524%" y="575.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="89.0452%" y="645" width="0.0119%" height="15" fill="rgb(214,41,4)" fg:x="7470" fg:w="1"/><text x="89.3643%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="89.0452%" y="629" width="0.0119%" height="15" fill="rgb(219,144,46)" fg:x="7470" fg:w="1"/><text x="89.3643%" y="639.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="89.0571%" y="645" width="0.0119%" height="15" fill="rgb(253,176,50)" fg:x="7471" fg:w="1"/><text x="89.3762%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="89.0690%" y="629" width="0.0119%" height="15" fill="rgb(206,123,1)" fg:x="7472" fg:w="1"/><text x="89.3881%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="89.0690%" y="613" width="0.0119%" height="15" fill="rgb(250,111,32)" fg:x="7472" fg:w="1"/><text x="89.3881%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="89.0690%" y="597" width="0.0119%" height="15" fill="rgb(229,17,49)" fg:x="7472" fg:w="1"/><text x="89.3881%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="89.0690%" y="581" width="0.0119%" height="15" fill="rgb(250,123,19)" fg:x="7472" fg:w="1"/><text x="89.3881%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="89.0690%" y="565" width="0.0119%" height="15" fill="rgb(220,124,20)" fg:x="7472" fg:w="1"/><text x="89.3881%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="89.0690%" y="549" width="0.0119%" height="15" fill="rgb(242,85,25)" fg:x="7472" fg:w="1"/><text x="89.3881%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="89.0690%" y="645" width="0.0238%" height="15" fill="rgb(245,217,7)" fg:x="7472" fg:w="2"/><text x="89.3881%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="89.0809%" y="629" width="0.0119%" height="15" fill="rgb(242,50,25)" fg:x="7473" fg:w="1"/><text x="89.4000%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="89.0809%" y="613" width="0.0119%" height="15" fill="rgb(251,210,24)" fg:x="7473" fg:w="1"/><text x="89.4000%" y="623.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="89.0929%" y="629" width="0.0119%" height="15" fill="rgb(238,24,8)" fg:x="7474" fg:w="1"/><text x="89.4120%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="89.1048%" y="597" width="0.0119%" height="15" fill="rgb(211,96,19)" fg:x="7475" fg:w="1"/><text x="89.4239%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="89.1048%" y="581" width="0.0119%" height="15" fill="rgb(222,186,12)" fg:x="7475" fg:w="1"/><text x="89.4239%" y="591.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="89.1048%" y="565" width="0.0119%" height="15" fill="rgb(212,70,49)" fg:x="7475" fg:w="1"/><text x="89.4239%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="89.1048%" y="613" width="0.0238%" height="15" fill="rgb(238,69,49)" fg:x="7475" fg:w="2"/><text x="89.4239%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="89.1167%" y="597" width="0.0119%" height="15" fill="rgb(225,13,3)" fg:x="7476" fg:w="1"/><text x="89.4358%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="89.1167%" y="581" width="0.0119%" height="15" fill="rgb(229,188,14)" fg:x="7476" fg:w="1"/><text x="89.4358%" y="591.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="89.1167%" y="565" width="0.0119%" height="15" fill="rgb(218,58,16)" fg:x="7476" fg:w="1"/><text x="89.4358%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="89.1048%" y="629" width="0.0358%" height="15" fill="rgb(206,213,49)" fg:x="7475" fg:w="3"/><text x="89.4239%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="89.1286%" y="613" width="0.0119%" height="15" fill="rgb(225,152,48)" fg:x="7477" fg:w="1"/><text x="89.4477%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="89.1286%" y="597" width="0.0119%" height="15" fill="rgb(216,103,42)" fg:x="7477" fg:w="1"/><text x="89.4477%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="89.0929%" y="645" width="0.0596%" height="15" fill="rgb(212,214,39)" fg:x="7474" fg:w="5"/><text x="89.4120%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="89.1405%" y="629" width="0.0119%" height="15" fill="rgb(249,52,41)" fg:x="7478" fg:w="1"/><text x="89.4596%" y="639.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="89.1405%" y="613" width="0.0119%" height="15" fill="rgb(212,173,53)" fg:x="7478" fg:w="1"/><text x="89.4596%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="89.1644%" y="629" width="0.0238%" height="15" fill="rgb(232,222,21)" fg:x="7480" fg:w="2"/><text x="89.4835%" y="639.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="89.1644%" y="613" width="0.0238%" height="15" fill="rgb(206,228,31)" fg:x="7480" fg:w="2"/><text x="89.4835%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="89.1882%" y="565" width="0.0119%" height="15" fill="rgb(231,121,16)" fg:x="7482" fg:w="1"/><text x="89.5073%" y="575.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="89.2001%" y="549" width="0.0119%" height="15" fill="rgb(241,3,23)" fg:x="7483" fg:w="1"/><text x="89.5192%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="89.1882%" y="581" width="0.0477%" height="15" fill="rgb(220,68,37)" fg:x="7482" fg:w="4"/><text x="89.5073%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="89.2001%" y="565" width="0.0358%" height="15" fill="rgb(212,23,49)" fg:x="7483" fg:w="3"/><text x="89.5192%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="89.2121%" y="549" width="0.0238%" height="15" fill="rgb(231,38,8)" fg:x="7484" fg:w="2"/><text x="89.5312%" y="559.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="89.2359%" y="565" width="0.0119%" height="15" fill="rgb(222,137,29)" fg:x="7486" fg:w="1"/><text x="89.5550%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="89.1882%" y="629" width="0.0715%" height="15" fill="rgb(239,8,6)" fg:x="7482" fg:w="6"/><text x="89.5073%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="89.1882%" y="613" width="0.0715%" height="15" fill="rgb(224,142,47)" fg:x="7482" fg:w="6"/><text x="89.5073%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="89.1882%" y="597" width="0.0715%" height="15" fill="rgb(226,67,29)" fg:x="7482" fg:w="6"/><text x="89.5073%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="89.2359%" y="581" width="0.0238%" height="15" fill="rgb(212,144,29)" fg:x="7486" fg:w="2"/><text x="89.5550%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="89.2478%" y="565" width="0.0119%" height="15" fill="rgb(252,2,51)" fg:x="7487" fg:w="1"/><text x="89.5669%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="89.2597%" y="597" width="0.0119%" height="15" fill="rgb(246,103,52)" fg:x="7488" fg:w="1"/><text x="89.5788%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="89.2717%" y="565" width="0.0119%" height="15" fill="rgb(229,229,35)" fg:x="7489" fg:w="1"/><text x="89.5908%" y="575.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="89.2836%" y="565" width="0.0119%" height="15" fill="rgb(209,83,15)" fg:x="7490" fg:w="1"/><text x="89.6027%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="89.2955%" y="565" width="0.0119%" height="15" fill="rgb(218,54,16)" fg:x="7491" fg:w="1"/><text x="89.6146%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="89.2955%" y="549" width="0.0119%" height="15" fill="rgb(205,2,26)" fg:x="7491" fg:w="1"/><text x="89.6146%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="89.2717%" y="581" width="0.0477%" height="15" fill="rgb(248,180,0)" fg:x="7489" fg:w="4"/><text x="89.5908%" y="591.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator&amp;(std::function&lt;bool (State&amp;)&gt; const&amp;, std::function&lt;bool (State&amp;)&gt; const&amp;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="89.3074%" y="565" width="0.0119%" height="15" fill="rgb(231,136,16)" fg:x="7492" fg:w="1"/><text x="89.6265%" y="575.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="89.3074%" y="549" width="0.0119%" height="15" fill="rgb(215,90,4)" fg:x="7492" fg:w="1"/><text x="89.6265%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="89.2717%" y="597" width="0.0596%" height="15" fill="rgb(251,131,3)" fg:x="7489" fg:w="5"/><text x="89.5908%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="89.3193%" y="581" width="0.0119%" height="15" fill="rgb(244,47,21)" fg:x="7493" fg:w="1"/><text x="89.6384%" y="591.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="89.3193%" y="565" width="0.0119%" height="15" fill="rgb(231,115,9)" fg:x="7493" fg:w="1"/><text x="89.6384%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (164 samples, 1.95%)</title><rect x="87.4002%" y="741" width="1.9549%" height="15" fill="rgb(241,119,20)" fg:x="7332" fg:w="164"/><text x="87.7193%" y="751.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (164 samples, 1.95%)</title><rect x="87.4002%" y="725" width="1.9549%" height="15" fill="rgb(224,99,0)" fg:x="7332" fg:w="164"/><text x="87.7193%" y="735.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (147 samples, 1.75%)</title><rect x="87.6028%" y="709" width="1.7523%" height="15" fill="rgb(219,213,18)" fg:x="7349" fg:w="147"/><text x="87.9219%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (85 samples, 1.01%)</title><rect x="88.3419%" y="693" width="1.0132%" height="15" fill="rgb(209,71,34)" fg:x="7411" fg:w="85"/><text x="88.6610%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (45 samples, 0.54%)</title><rect x="88.8187%" y="677" width="0.5364%" height="15" fill="rgb(245,203,20)" fg:x="7451" fg:w="45"/><text x="89.1378%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="89.0452%" y="661" width="0.3099%" height="15" fill="rgb(221,44,20)" fg:x="7470" fg:w="26"/><text x="89.3643%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="89.1525%" y="645" width="0.2026%" height="15" fill="rgb(229,97,0)" fg:x="7479" fg:w="17"/><text x="89.4716%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="89.2597%" y="629" width="0.0954%" height="15" fill="rgb(206,56,49)" fg:x="7488" fg:w="8"/><text x="89.5788%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="89.2597%" y="613" width="0.0954%" height="15" fill="rgb(208,216,41)" fg:x="7488" fg:w="8"/><text x="89.5788%" y="623.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="89.3313%" y="597" width="0.0238%" height="15" fill="rgb(231,31,6)" fg:x="7494" fg:w="2"/><text x="89.6504%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="89.3432%" y="581" width="0.0119%" height="15" fill="rgb(239,88,23)" fg:x="7495" fg:w="1"/><text x="89.6623%" y="591.50"/></g><g><title>logic::post_end_semicolon (1 samples, 0.01%)</title><rect x="89.3551%" y="709" width="0.0119%" height="15" fill="rgb(227,111,45)" fg:x="7496" fg:w="1"/><text x="89.6742%" y="719.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="89.3670%" y="693" width="0.0119%" height="15" fill="rgb(207,167,18)" fg:x="7497" fg:w="1"/><text x="89.6861%" y="703.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="89.3789%" y="693" width="0.0119%" height="15" fill="rgb(253,127,17)" fg:x="7498" fg:w="1"/><text x="89.6980%" y="703.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="89.3909%" y="693" width="0.0119%" height="15" fill="rgb(211,229,9)" fg:x="7499" fg:w="1"/><text x="89.7100%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="89.3670%" y="709" width="0.0596%" height="15" fill="rgb(249,25,14)" fg:x="7497" fg:w="5"/><text x="89.6861%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="89.4028%" y="693" width="0.0238%" height="15" fill="rgb(237,177,4)" fg:x="7500" fg:w="2"/><text x="89.7219%" y="703.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="89.4028%" y="677" width="0.0238%" height="15" fill="rgb(248,163,50)" fg:x="7500" fg:w="2"/><text x="89.7219%" y="687.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="89.4386%" y="693" width="0.0119%" height="15" fill="rgb(246,67,42)" fg:x="7503" fg:w="1"/><text x="89.7577%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_invoke (205 samples, 2.44%)</title><rect x="87.0306%" y="757" width="2.4437%" height="15" fill="rgb(228,136,45)" fg:x="7301" fg:w="205"/><text x="87.3497%" y="767.50">.. </text></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;Result (State&amp;)&gt; (*)(unsigned int)&gt;::_M_invoke (10 samples, 0.12%)</title><rect x="89.3551%" y="741" width="0.1192%" height="15" fill="rgb(218,93,4)" fg:x="7496" fg:w="10"/><text x="89.6742%" y="751.50"/></g><g><title>logic::immediate (10 samples, 0.12%)</title><rect x="89.3551%" y="725" width="0.1192%" height="15" fill="rgb(209,82,29)" fg:x="7496" fg:w="10"/><text x="89.6742%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="89.4266%" y="709" width="0.0477%" height="15" fill="rgb(213,219,38)" fg:x="7502" fg:w="4"/><text x="89.7457%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="89.4505%" y="693" width="0.0238%" height="15" fill="rgb(233,212,17)" fg:x="7504" fg:w="2"/><text x="89.7696%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="89.4505%" y="677" width="0.0238%" height="15" fill="rgb(225,65,3)" fg:x="7504" fg:w="2"/><text x="89.7696%" y="687.50"/></g><g><title>state::column (1 samples, 0.01%)</title><rect x="89.4862%" y="741" width="0.0119%" height="15" fill="rgb(226,25,1)" fg:x="7507" fg:w="1"/><text x="89.8053%" y="751.50"/></g><g><title>ts_lexer__eof (1 samples, 0.01%)</title><rect x="89.4862%" y="725" width="0.0119%" height="15" fill="rgb(229,83,27)" fg:x="7507" fg:w="1"/><text x="89.8053%" y="735.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::column(unsigned int)::{lambda(State&amp;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="89.4743%" y="757" width="0.0358%" height="15" fill="rgb(245,80,47)" fg:x="7506" fg:w="3"/><text x="89.7934%" y="767.50"/></g><g><title>ts_lexer__get_column (1 samples, 0.01%)</title><rect x="89.4982%" y="741" width="0.0119%" height="15" fill="rgb(213,79,27)" fg:x="7508" fg:w="1"/><text x="89.8173%" y="751.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="89.5578%" y="709" width="0.0119%" height="15" fill="rgb(232,38,28)" fg:x="7513" fg:w="1"/><text x="89.8769%" y="719.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="89.5578%" y="693" width="0.0119%" height="15" fill="rgb(253,63,39)" fg:x="7513" fg:w="1"/><text x="89.8769%" y="703.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="89.5816%" y="661" width="0.0238%" height="15" fill="rgb(222,204,17)" fg:x="7515" fg:w="2"/><text x="89.9007%" y="671.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="89.5816%" y="645" width="0.0238%" height="15" fill="rgb(254,135,49)" fg:x="7515" fg:w="2"/><text x="89.9007%" y="655.50"/></g><g><title>cond::peeks (5 samples, 0.06%)</title><rect x="89.5578%" y="725" width="0.0596%" height="15" fill="rgb(226,203,24)" fg:x="7513" fg:w="5"/><text x="89.8769%" y="735.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="89.5697%" y="709" width="0.0477%" height="15" fill="rgb(225,2,17)" fg:x="7514" fg:w="4"/><text x="89.8888%" y="719.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (4 samples, 0.05%)</title><rect x="89.5697%" y="693" width="0.0477%" height="15" fill="rgb(234,135,43)" fg:x="7514" fg:w="4"/><text x="89.8888%" y="703.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="89.5816%" y="677" width="0.0358%" height="15" fill="rgb(224,14,46)" fg:x="7515" fg:w="3"/><text x="89.9007%" y="687.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="89.6054%" y="661" width="0.0119%" height="15" fill="rgb(206,42,0)" fg:x="7517" fg:w="1"/><text x="89.9245%" y="671.50"/></g><g><title>state::advance (1 samples, 0.01%)</title><rect x="89.6174%" y="725" width="0.0119%" height="15" fill="rgb(244,38,23)" fg:x="7518" fg:w="1"/><text x="89.9365%" y="735.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="89.6293%" y="709" width="0.0119%" height="15" fill="rgb(230,25,21)" fg:x="7519" fg:w="1"/><text x="89.9484%" y="719.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="89.6293%" y="693" width="0.0119%" height="15" fill="rgb(252,217,28)" fg:x="7519" fg:w="1"/><text x="89.9484%" y="703.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="89.6412%" y="709" width="0.0119%" height="15" fill="rgb(251,4,49)" fg:x="7520" fg:w="1"/><text x="89.9603%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="89.6531%" y="709" width="0.0238%" height="15" fill="rgb(217,126,31)" fg:x="7521" fg:w="2"/><text x="89.9722%" y="719.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="89.6531%" y="693" width="0.0238%" height="15" fill="rgb(242,181,33)" fg:x="7521" fg:w="2"/><text x="89.9722%" y="703.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="89.6650%" y="677" width="0.0119%" height="15" fill="rgb(241,108,6)" fg:x="7522" fg:w="1"/><text x="89.9841%" y="687.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="89.6770%" y="677" width="0.0238%" height="15" fill="rgb(238,87,39)" fg:x="7523" fg:w="2"/><text x="89.9961%" y="687.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="89.6770%" y="661" width="0.0238%" height="15" fill="rgb(244,101,49)" fg:x="7523" fg:w="2"/><text x="89.9961%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="89.6293%" y="725" width="0.0834%" height="15" fill="rgb(211,43,42)" fg:x="7519" fg:w="7"/><text x="89.9484%" y="735.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (3 samples, 0.04%)</title><rect x="89.6770%" y="709" width="0.0358%" height="15" fill="rgb(210,93,2)" fg:x="7523" fg:w="3"/><text x="89.9961%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="89.6770%" y="693" width="0.0358%" height="15" fill="rgb(242,149,32)" fg:x="7523" fg:w="3"/><text x="89.9961%" y="703.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="89.7008%" y="677" width="0.0119%" height="15" fill="rgb(228,1,6)" fg:x="7525" fg:w="1"/><text x="90.0199%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="89.7127%" y="725" width="0.0358%" height="15" fill="rgb(221,0,20)" fg:x="7526" fg:w="3"/><text x="90.0318%" y="735.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_invoke (3 samples, 0.04%)</title><rect x="89.7127%" y="709" width="0.0358%" height="15" fill="rgb(230,39,32)" fg:x="7526" fg:w="3"/><text x="90.0318%" y="719.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="89.7246%" y="693" width="0.0238%" height="15" fill="rgb(240,89,38)" fg:x="7527" fg:w="2"/><text x="90.0437%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="89.7485%" y="725" width="0.0238%" height="15" fill="rgb(208,221,23)" fg:x="7529" fg:w="2"/><text x="90.0676%" y="735.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="89.7604%" y="709" width="0.0119%" height="15" fill="rgb(220,145,29)" fg:x="7530" fg:w="1"/><text x="90.0795%" y="719.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="89.7604%" y="693" width="0.0119%" height="15" fill="rgb(219,146,23)" fg:x="7530" fg:w="1"/><text x="90.0795%" y="703.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="89.7604%" y="677" width="0.0119%" height="15" fill="rgb(244,114,49)" fg:x="7530" fg:w="1"/><text x="90.0795%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (235 samples, 2.80%)</title><rect x="86.9830%" y="773" width="2.8013%" height="15" fill="rgb(221,17,10)" fg:x="7297" fg:w="235"/><text x="87.3021%" y="783.50">..e </text></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (23 samples, 0.27%)</title><rect x="89.5101%" y="757" width="0.2742%" height="15" fill="rgb(228,133,21)" fg:x="7509" fg:w="23"/><text x="89.8292%" y="767.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (22 samples, 0.26%)</title><rect x="89.5220%" y="741" width="0.2622%" height="15" fill="rgb(218,81,30)" fg:x="7510" fg:w="22"/><text x="89.8411%" y="751.50"/></g><g><title>ts_lexer__advance (1 samples, 0.01%)</title><rect x="89.7723%" y="725" width="0.0119%" height="15" fill="rgb(240,29,36)" fg:x="7531" fg:w="1"/><text x="90.0914%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="89.7962%" y="757" width="0.0119%" height="15" fill="rgb(246,0,36)" fg:x="7533" fg:w="1"/><text x="90.1153%" y="767.50"/></g><g><title>ts_lexer__mark_end (1 samples, 0.01%)</title><rect x="89.7962%" y="741" width="0.0119%" height="15" fill="rgb(217,79,8)" fg:x="7533" fg:w="1"/><text x="90.1153%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="89.8081%" y="757" width="0.0238%" height="15" fill="rgb(229,124,44)" fg:x="7534" fg:w="2"/><text x="90.1272%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (2 samples, 0.02%)</title><rect x="89.8081%" y="741" width="0.0238%" height="15" fill="rgb(210,187,22)" fg:x="7534" fg:w="2"/><text x="90.1272%" y="751.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="89.8200%" y="725" width="0.0119%" height="15" fill="rgb(212,115,40)" fg:x="7535" fg:w="1"/><text x="90.1391%" y="735.50"/></g><g><title>[haskell.so] (1 samples, 0.01%)</title><rect x="89.8200%" y="709" width="0.0119%" height="15" fill="rgb(210,2,54)" fg:x="7535" fg:w="1"/><text x="90.1391%" y="719.50"/></g><g><title>cond::peeks (3 samples, 0.04%)</title><rect x="89.8915%" y="693" width="0.0358%" height="15" fill="rgb(227,168,43)" fg:x="7541" fg:w="3"/><text x="90.2106%" y="703.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="89.8915%" y="677" width="0.0358%" height="15" fill="rgb(249,92,8)" fg:x="7541" fg:w="3"/><text x="90.2106%" y="687.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="89.8915%" y="661" width="0.0358%" height="15" fill="rgb(239,111,35)" fg:x="7541" fg:w="3"/><text x="90.2106%" y="671.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="89.9273%" y="677" width="0.0238%" height="15" fill="rgb(230,126,13)" fg:x="7544" fg:w="2"/><text x="90.2464%" y="687.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="89.9273%" y="661" width="0.0238%" height="15" fill="rgb(243,116,33)" fg:x="7544" fg:w="2"/><text x="90.2464%" y="671.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="89.9511%" y="661" width="0.0238%" height="15" fill="rgb(246,103,21)" fg:x="7546" fg:w="2"/><text x="90.2702%" y="671.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="89.9630%" y="645" width="0.0119%" height="15" fill="rgb(237,53,26)" fg:x="7547" fg:w="1"/><text x="90.2821%" y="655.50"/></g><g><title>operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt; (5 samples, 0.06%)</title><rect x="89.9273%" y="693" width="0.0596%" height="15" fill="rgb(213,121,15)" fg:x="7544" fg:w="5"/><text x="90.2464%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="89.9511%" y="677" width="0.0358%" height="15" fill="rgb(251,83,35)" fg:x="7546" fg:w="3"/><text x="90.2702%" y="687.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="89.9750%" y="661" width="0.0119%" height="15" fill="rgb(222,79,8)" fg:x="7548" fg:w="1"/><text x="90.2941%" y="671.50"/></g><g><title>operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;@plt (1 samples, 0.01%)</title><rect x="89.9869%" y="693" width="0.0119%" height="15" fill="rgb(217,74,36)" fg:x="7549" fg:w="1"/><text x="90.3060%" y="703.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="89.9988%" y="677" width="0.0358%" height="15" fill="rgb(221,14,30)" fg:x="7550" fg:w="3"/><text x="90.3179%" y="687.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="89.9988%" y="661" width="0.0358%" height="15" fill="rgb(216,221,5)" fg:x="7550" fg:w="3"/><text x="90.3179%" y="671.50"/></g><g><title>cond::peek (13 samples, 0.15%)</title><rect x="89.8915%" y="709" width="0.1550%" height="15" fill="rgb(236,118,16)" fg:x="7541" fg:w="13"/><text x="90.2106%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="89.9988%" y="693" width="0.0477%" height="15" fill="rgb(243,91,43)" fg:x="7550" fg:w="4"/><text x="90.3179%" y="703.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="90.0346%" y="677" width="0.0119%" height="15" fill="rgb(231,110,7)" fg:x="7553" fg:w="1"/><text x="90.3537%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="90.0465%" y="709" width="0.0119%" height="15" fill="rgb(217,80,6)" fg:x="7554" fg:w="1"/><text x="90.3656%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="90.0465%" y="693" width="0.0119%" height="15" fill="rgb(251,116,7)" fg:x="7554" fg:w="1"/><text x="90.3656%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="90.0584%" y="693" width="0.0119%" height="15" fill="rgb(236,70,22)" fg:x="7555" fg:w="1"/><text x="90.3775%" y="703.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="90.0584%" y="677" width="0.0119%" height="15" fill="rgb(245,13,10)" fg:x="7555" fg:w="1"/><text x="90.3775%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="90.0703%" y="677" width="0.0119%" height="15" fill="rgb(233,146,34)" fg:x="7556" fg:w="1"/><text x="90.3894%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="90.0703%" y="661" width="0.0119%" height="15" fill="rgb(241,196,34)" fg:x="7556" fg:w="1"/><text x="90.3894%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="90.0584%" y="709" width="0.0477%" height="15" fill="rgb(207,150,20)" fg:x="7555" fg:w="4"/><text x="90.3775%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="90.0703%" y="693" width="0.0358%" height="15" fill="rgb(251,27,52)" fg:x="7556" fg:w="3"/><text x="90.3894%" y="703.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="90.0823%" y="677" width="0.0238%" height="15" fill="rgb(221,76,2)" fg:x="7557" fg:w="2"/><text x="90.4014%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (23 samples, 0.27%)</title><rect x="89.8438%" y="741" width="0.2742%" height="15" fill="rgb(242,94,41)" fg:x="7537" fg:w="23"/><text x="90.1629%" y="751.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), parser::skipspace::{lambda(State&amp;)#1}&gt;::_M_invoke (22 samples, 0.26%)</title><rect x="89.8558%" y="725" width="0.2622%" height="15" fill="rgb(245,9,8)" fg:x="7538" fg:w="22"/><text x="90.1749%" y="735.50"/></g><g><title>ts_lexer__get_lookahead (1 samples, 0.01%)</title><rect x="90.1061%" y="709" width="0.0119%" height="15" fill="rgb(236,139,26)" fg:x="7559" fg:w="1"/><text x="90.4252%" y="719.50"/></g><g><title>ts_decode_utf8 (1 samples, 0.01%)</title><rect x="90.1061%" y="693" width="0.0119%" height="15" fill="rgb(249,11,18)" fg:x="7559" fg:w="1"/><text x="90.4252%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="90.1180%" y="741" width="0.0119%" height="15" fill="rgb(206,175,35)" fg:x="7560" fg:w="1"/><text x="90.4371%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_invoke (1 samples, 0.01%)</title><rect x="90.1180%" y="725" width="0.0119%" height="15" fill="rgb(231,3,46)" fg:x="7560" fg:w="1"/><text x="90.4371%" y="735.50"/></g><g><title>parser::as_char_parser (5 samples, 0.06%)</title><rect x="90.1299%" y="725" width="0.0596%" height="15" fill="rgb(243,27,8)" fg:x="7561" fg:w="5"/><text x="90.4490%" y="735.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="90.1657%" y="709" width="0.0238%" height="15" fill="rgb(223,53,13)" fg:x="7564" fg:w="2"/><text x="90.4848%" y="719.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="90.1657%" y="693" width="0.0238%" height="15" fill="rgb(248,68,15)" fg:x="7564" fg:w="2"/><text x="90.4848%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="90.1895%" y="725" width="0.0119%" height="15" fill="rgb(216,61,26)" fg:x="7566" fg:w="1"/><text x="90.5086%" y="735.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="90.1895%" y="709" width="0.0119%" height="15" fill="rgb(213,201,24)" fg:x="7566" fg:w="1"/><text x="90.5086%" y="719.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="90.1895%" y="693" width="0.0119%" height="15" fill="rgb(214,20,17)" fg:x="7566" fg:w="1"/><text x="90.5086%" y="703.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_invoke (1 samples, 0.01%)</title><rect x="90.2015%" y="725" width="0.0119%" height="15" fill="rgb(206,21,46)" fg:x="7567" fg:w="1"/><text x="90.5206%" y="735.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State)&gt; &gt;(std::function&lt;Result (State)&gt;)::{lambda(auto:1)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="90.2015%" y="709" width="0.0119%" height="15" fill="rgb(234,222,24)" fg:x="7567" fg:w="1"/><text x="90.5206%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State), const_&lt;State, Result&gt;(Result)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="90.2015%" y="693" width="0.0119%" height="15" fill="rgb(221,25,26)" fg:x="7567" fg:w="1"/><text x="90.5206%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (8 samples, 0.10%)</title><rect x="90.1299%" y="741" width="0.0954%" height="15" fill="rgb(241,148,26)" fg:x="7561" fg:w="8"/><text x="90.4490%" y="751.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="90.2134%" y="725" width="0.0119%" height="15" fill="rgb(248,119,35)" fg:x="7568" fg:w="1"/><text x="90.5325%" y="735.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State)&gt; &gt;(std::function&lt;Result (State)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="90.2134%" y="709" width="0.0119%" height="15" fill="rgb(239,126,23)" fg:x="7568" fg:w="1"/><text x="90.5325%" y="719.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="90.2134%" y="693" width="0.0119%" height="15" fill="rgb(247,120,25)" fg:x="7568" fg:w="1"/><text x="90.5325%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="90.2372%" y="725" width="0.0119%" height="15" fill="rgb(220,93,32)" fg:x="7570" fg:w="1"/><text x="90.5563%" y="735.50"/></g><g><title>cond::after_error (1 samples, 0.01%)</title><rect x="90.2372%" y="709" width="0.0119%" height="15" fill="rgb(236,46,26)" fg:x="7570" fg:w="1"/><text x="90.5563%" y="719.50"/></g><g><title>parser::as_char_parser (4 samples, 0.05%)</title><rect x="90.2730%" y="709" width="0.0477%" height="15" fill="rgb(229,20,45)" fg:x="7573" fg:w="4"/><text x="90.5921%" y="719.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="90.2968%" y="693" width="0.0238%" height="15" fill="rgb(225,168,41)" fg:x="7575" fg:w="2"/><text x="90.6159%" y="703.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="90.2968%" y="677" width="0.0238%" height="15" fill="rgb(253,123,20)" fg:x="7575" fg:w="2"/><text x="90.6159%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_invoke (1 samples, 0.01%)</title><rect x="90.3207%" y="709" width="0.0119%" height="15" fill="rgb(244,17,29)" fg:x="7577" fg:w="1"/><text x="90.6398%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function&lt;std::function&lt;Result (State)&gt;, void, void&gt; (1 samples, 0.01%)</title><rect x="90.3207%" y="693" width="0.0119%" height="15" fill="rgb(242,196,24)" fg:x="7577" fg:w="1"/><text x="90.6398%" y="703.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="90.3207%" y="677" width="0.0119%" height="15" fill="rgb(210,113,45)" fg:x="7577" fg:w="1"/><text x="90.6398%" y="687.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="90.3207%" y="661" width="0.0119%" height="15" fill="rgb(205,129,3)" fg:x="7577" fg:w="1"/><text x="90.6398%" y="671.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="90.3326%" y="693" width="0.0358%" height="15" fill="rgb(232,74,10)" fg:x="7578" fg:w="3"/><text x="90.6517%" y="703.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="90.3326%" y="677" width="0.0358%" height="15" fill="rgb(251,63,43)" fg:x="7578" fg:w="3"/><text x="90.6517%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;std::function&lt;Result (State)&gt; (unsigned int)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="90.3326%" y="709" width="0.0477%" height="15" fill="rgb(228,215,15)" fg:x="7578" fg:w="4"/><text x="90.6517%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State)&gt; &gt;(std::function&lt;Result (State)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="90.3683%" y="693" width="0.0119%" height="15" fill="rgb(233,179,38)" fg:x="7581" fg:w="1"/><text x="90.6874%" y="703.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="90.3683%" y="677" width="0.0119%" height="15" fill="rgb(227,187,9)" fg:x="7581" fg:w="1"/><text x="90.6874%" y="687.50"/></g><g><title>eval::eval (289 samples, 3.44%)</title><rect x="86.9472%" y="821" width="3.4450%" height="15" fill="rgb(231,89,27)" fg:x="7294" fg:w="289"/><text x="87.2663%" y="831.50">..val </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (287 samples, 3.42%)</title><rect x="86.9710%" y="805" width="3.4211%" height="15" fill="rgb(225,117,1)" fg:x="7296" fg:w="287"/><text x="87.2901%" y="815.50">..ke </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (286 samples, 3.41%)</title><rect x="86.9830%" y="789" width="3.4092%" height="15" fill="rgb(239,120,49)" fg:x="7297" fg:w="286"/><text x="87.3021%" y="799.50">..ke </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (51 samples, 0.61%)</title><rect x="89.7842%" y="773" width="0.6079%" height="15" fill="rgb(236,137,37)" fg:x="7532" fg:w="51"/><text x="90.1033%" y="783.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (47 samples, 0.56%)</title><rect x="89.8319%" y="757" width="0.5603%" height="15" fill="rgb(239,73,42)" fg:x="7536" fg:w="47"/><text x="90.1510%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (14 samples, 0.17%)</title><rect x="90.2253%" y="741" width="0.1669%" height="15" fill="rgb(207,169,6)" fg:x="7569" fg:w="14"/><text x="90.5444%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (12 samples, 0.14%)</title><rect x="90.2491%" y="725" width="0.1430%" height="15" fill="rgb(228,171,10)" fg:x="7571" fg:w="12"/><text x="90.5682%" y="735.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="90.3803%" y="709" width="0.0119%" height="15" fill="rgb(217,228,47)" fg:x="7582" fg:w="1"/><text x="90.6994%" y="719.50"/></g><g><title>std::_Function_base::~_Function_base (3 samples, 0.04%)</title><rect x="90.4041%" y="789" width="0.0358%" height="15" fill="rgb(227,116,17)" fg:x="7584" fg:w="3"/><text x="90.7232%" y="799.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="90.4518%" y="773" width="0.0238%" height="15" fill="rgb(245,128,36)" fg:x="7588" fg:w="2"/><text x="90.7709%" y="783.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="90.4637%" y="757" width="0.0119%" height="15" fill="rgb(221,139,3)" fg:x="7589" fg:w="1"/><text x="90.7828%" y="767.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="90.4756%" y="773" width="0.0119%" height="15" fill="rgb(207,59,54)" fg:x="7590" fg:w="1"/><text x="90.7947%" y="783.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="90.4875%" y="757" width="0.0238%" height="15" fill="rgb(231,129,12)" fg:x="7591" fg:w="2"/><text x="90.8066%" y="767.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="90.4875%" y="741" width="0.0238%" height="15" fill="rgb(235,49,17)" fg:x="7591" fg:w="2"/><text x="90.8066%" y="751.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="90.5114%" y="757" width="0.0238%" height="15" fill="rgb(229,175,11)" fg:x="7593" fg:w="2"/><text x="90.8305%" y="767.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="90.5352%" y="741" width="0.0238%" height="15" fill="rgb(206,187,30)" fg:x="7595" fg:w="2"/><text x="90.8543%" y="751.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="90.5471%" y="725" width="0.0119%" height="15" fill="rgb(214,39,19)" fg:x="7596" fg:w="1"/><text x="90.8662%" y="735.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="90.5710%" y="725" width="0.0119%" height="15" fill="rgb(243,92,46)" fg:x="7598" fg:w="1"/><text x="90.8901%" y="735.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="90.5829%" y="709" width="0.0119%" height="15" fill="rgb(240,125,36)" fg:x="7599" fg:w="1"/><text x="90.9020%" y="719.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="90.5829%" y="693" width="0.0119%" height="15" fill="rgb(217,193,45)" fg:x="7599" fg:w="1"/><text x="90.9020%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="90.5829%" y="725" width="0.0238%" height="15" fill="rgb(230,127,16)" fg:x="7599" fg:w="2"/><text x="90.9020%" y="735.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="90.5948%" y="709" width="0.0119%" height="15" fill="rgb(208,161,0)" fg:x="7600" fg:w="1"/><text x="90.9139%" y="719.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="90.6067%" y="709" width="0.0119%" height="15" fill="rgb(251,69,39)" fg:x="7601" fg:w="1"/><text x="90.9258%" y="719.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="90.6067%" y="693" width="0.0119%" height="15" fill="rgb(229,86,22)" fg:x="7601" fg:w="1"/><text x="90.9258%" y="703.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="90.6187%" y="693" width="0.0119%" height="15" fill="rgb(223,67,43)" fg:x="7602" fg:w="1"/><text x="90.9378%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="90.6187%" y="709" width="0.0238%" height="15" fill="rgb(254,80,31)" fg:x="7602" fg:w="2"/><text x="90.9378%" y="719.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="90.6306%" y="693" width="0.0119%" height="15" fill="rgb(225,149,52)" fg:x="7603" fg:w="1"/><text x="90.9497%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="90.6425%" y="693" width="0.0119%" height="15" fill="rgb(214,169,18)" fg:x="7604" fg:w="1"/><text x="90.9616%" y="703.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="90.6425%" y="677" width="0.0119%" height="15" fill="rgb(236,224,43)" fg:x="7604" fg:w="1"/><text x="90.9616%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="90.6544%" y="677" width="0.0119%" height="15" fill="rgb(251,125,34)" fg:x="7605" fg:w="1"/><text x="90.9735%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="90.6544%" y="661" width="0.0119%" height="15" fill="rgb(224,39,44)" fg:x="7605" fg:w="1"/><text x="90.9735%" y="671.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="90.6663%" y="677" width="0.0119%" height="15" fill="rgb(206,111,46)" fg:x="7606" fg:w="1"/><text x="90.9854%" y="687.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="90.6783%" y="645" width="0.0238%" height="15" fill="rgb(227,147,50)" fg:x="7607" fg:w="2"/><text x="90.9974%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="90.6902%" y="629" width="0.0119%" height="15" fill="rgb(239,144,36)" fg:x="7608" fg:w="1"/><text x="91.0093%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="90.7140%" y="629" width="0.0119%" height="15" fill="rgb(216,17,19)" fg:x="7610" fg:w="1"/><text x="91.0331%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="90.7140%" y="613" width="0.0119%" height="15" fill="rgb(211,192,29)" fg:x="7610" fg:w="1"/><text x="91.0331%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="90.6783%" y="661" width="0.0596%" height="15" fill="rgb(238,195,20)" fg:x="7607" fg:w="5"/><text x="90.9974%" y="671.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::consume_until(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#2}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="90.7021%" y="645" width="0.0358%" height="15" fill="rgb(213,210,42)" fg:x="7609" fg:w="3"/><text x="91.0212%" y="655.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="90.7260%" y="629" width="0.0119%" height="15" fill="rgb(244,4,49)" fg:x="7611" fg:w="1"/><text x="91.0451%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="90.6783%" y="677" width="0.0715%" height="15" fill="rgb(254,106,42)" fg:x="7607" fg:w="6"/><text x="90.9974%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="90.7379%" y="661" width="0.0119%" height="15" fill="rgb(222,182,12)" fg:x="7612" fg:w="1"/><text x="91.0570%" y="671.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="90.7498%" y="661" width="0.0238%" height="15" fill="rgb(228,160,15)" fg:x="7613" fg:w="2"/><text x="91.0689%" y="671.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="90.7498%" y="645" width="0.0238%" height="15" fill="rgb(243,149,43)" fg:x="7613" fg:w="2"/><text x="91.0689%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (21 samples, 0.25%)</title><rect x="90.5352%" y="757" width="0.2503%" height="15" fill="rgb(245,150,32)" fg:x="7595" fg:w="21"/><text x="90.8543%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (19 samples, 0.23%)</title><rect x="90.5591%" y="741" width="0.2265%" height="15" fill="rgb(205,43,19)" fg:x="7597" fg:w="19"/><text x="90.8782%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="90.6067%" y="725" width="0.1788%" height="15" fill="rgb(249,189,35)" fg:x="7601" fg:w="15"/><text x="90.9258%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="90.6425%" y="709" width="0.1430%" height="15" fill="rgb(223,9,0)" fg:x="7604" fg:w="12"/><text x="90.9616%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="90.6544%" y="693" width="0.1311%" height="15" fill="rgb(213,142,45)" fg:x="7605" fg:w="11"/><text x="90.9735%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="90.7498%" y="677" width="0.0358%" height="15" fill="rgb(208,148,2)" fg:x="7613" fg:w="3"/><text x="91.0689%" y="687.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="90.7736%" y="661" width="0.0119%" height="15" fill="rgb(207,191,42)" fg:x="7615" fg:w="1"/><text x="91.0927%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="90.4875%" y="773" width="0.3099%" height="15" fill="rgb(215,218,38)" fg:x="7591" fg:w="26"/><text x="90.8066%" y="783.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="90.7856%" y="757" width="0.0119%" height="15" fill="rgb(223,195,24)" fg:x="7616" fg:w="1"/><text x="91.1047%" y="767.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="90.7856%" y="741" width="0.0119%" height="15" fill="rgb(254,60,30)" fg:x="7616" fg:w="1"/><text x="91.1047%" y="751.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="90.7856%" y="725" width="0.0119%" height="15" fill="rgb(223,2,9)" fg:x="7616" fg:w="1"/><text x="91.1047%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="90.7975%" y="773" width="0.0238%" height="15" fill="rgb(253,134,46)" fg:x="7617" fg:w="2"/><text x="91.1166%" y="783.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="90.7975%" y="757" width="0.0238%" height="15" fill="rgb(206,209,20)" fg:x="7617" fg:w="2"/><text x="91.1166%" y="767.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="90.8213%" y="757" width="0.0119%" height="15" fill="rgb(253,104,42)" fg:x="7619" fg:w="1"/><text x="91.1404%" y="767.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="90.8213%" y="741" width="0.0119%" height="15" fill="rgb(223,47,23)" fg:x="7619" fg:w="1"/><text x="91.1404%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="90.8213%" y="773" width="0.0358%" height="15" fill="rgb(247,148,44)" fg:x="7619" fg:w="3"/><text x="91.1404%" y="783.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="90.8332%" y="757" width="0.0238%" height="15" fill="rgb(221,224,16)" fg:x="7620" fg:w="2"/><text x="91.1523%" y="767.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::column(unsigned int)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="90.8571%" y="773" width="0.0119%" height="15" fill="rgb(252,103,29)" fg:x="7622" fg:w="1"/><text x="91.1762%" y="783.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="90.8690%" y="757" width="0.0119%" height="15" fill="rgb(244,185,34)" fg:x="7623" fg:w="1"/><text x="91.1881%" y="767.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="90.8809%" y="725" width="0.0238%" height="15" fill="rgb(218,18,50)" fg:x="7624" fg:w="2"/><text x="91.2000%" y="735.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="90.9048%" y="709" width="0.0119%" height="15" fill="rgb(234,105,8)" fg:x="7626" fg:w="1"/><text x="91.2239%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (41 samples, 0.49%)</title><rect x="90.4399%" y="789" width="0.4887%" height="15" fill="rgb(249,51,19)" fg:x="7587" fg:w="41"/><text x="90.7590%" y="799.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="90.8690%" y="773" width="0.0596%" height="15" fill="rgb(233,132,7)" fg:x="7623" fg:w="5"/><text x="91.1881%" y="783.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="90.8809%" y="757" width="0.0477%" height="15" fill="rgb(229,181,43)" fg:x="7624" fg:w="4"/><text x="91.2000%" y="767.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="90.8809%" y="741" width="0.0477%" height="15" fill="rgb(223,20,7)" fg:x="7624" fg:w="4"/><text x="91.2000%" y="751.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="90.9048%" y="725" width="0.0238%" height="15" fill="rgb(245,13,34)" fg:x="7626" fg:w="2"/><text x="91.2239%" y="735.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="90.9167%" y="709" width="0.0119%" height="15" fill="rgb(242,0,53)" fg:x="7627" fg:w="1"/><text x="91.2358%" y="719.50"/></g><g><title>__GI___libc_free (4 samples, 0.05%)</title><rect x="90.9286%" y="773" width="0.0477%" height="15" fill="rgb(233,115,19)" fg:x="7628" fg:w="4"/><text x="91.2477%" y="783.50"/></g><g><title>_int_free (4 samples, 0.05%)</title><rect x="90.9286%" y="757" width="0.0477%" height="15" fill="rgb(216,170,26)" fg:x="7628" fg:w="4"/><text x="91.2477%" y="767.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="90.9763%" y="773" width="0.0119%" height="15" fill="rgb(233,13,0)" fg:x="7632" fg:w="1"/><text x="91.2954%" y="783.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="90.9882%" y="741" width="0.0119%" height="15" fill="rgb(228,79,21)" fg:x="7633" fg:w="1"/><text x="91.3073%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="90.9882%" y="773" width="0.0238%" height="15" fill="rgb(244,17,41)" fg:x="7633" fg:w="2"/><text x="91.3073%" y="783.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="90.9882%" y="757" width="0.0238%" height="15" fill="rgb(253,152,11)" fg:x="7633" fg:w="2"/><text x="91.3073%" y="767.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="91.0001%" y="741" width="0.0119%" height="15" fill="rgb(254,94,47)" fg:x="7634" fg:w="1"/><text x="91.3192%" y="751.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="91.0120%" y="757" width="0.0119%" height="15" fill="rgb(239,66,43)" fg:x="7635" fg:w="1"/><text x="91.3311%" y="767.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="91.0120%" y="741" width="0.0119%" height="15" fill="rgb(251,25,22)" fg:x="7635" fg:w="1"/><text x="91.3311%" y="751.50"/></g><g><title>std::_Function_base::~_Function_base@plt (1 samples, 0.01%)</title><rect x="91.0240%" y="725" width="0.0119%" height="15" fill="rgb(227,65,46)" fg:x="7636" fg:w="1"/><text x="91.3431%" y="735.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="91.0359%" y="709" width="0.0238%" height="15" fill="rgb(240,180,32)" fg:x="7637" fg:w="2"/><text x="91.3550%" y="719.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="91.0478%" y="693" width="0.0119%" height="15" fill="rgb(242,11,35)" fg:x="7638" fg:w="1"/><text x="91.3669%" y="703.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="91.0597%" y="693" width="0.0238%" height="15" fill="rgb(221,41,49)" fg:x="7639" fg:w="2"/><text x="91.3788%" y="703.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="91.0716%" y="677" width="0.0119%" height="15" fill="rgb(253,80,52)" fg:x="7640" fg:w="1"/><text x="91.3907%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="91.0597%" y="709" width="0.0358%" height="15" fill="rgb(232,152,28)" fg:x="7639" fg:w="3"/><text x="91.3788%" y="719.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="91.0836%" y="693" width="0.0119%" height="15" fill="rgb(219,110,12)" fg:x="7641" fg:w="1"/><text x="91.4027%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="91.0955%" y="677" width="0.0119%" height="15" fill="rgb(218,98,43)" fg:x="7642" fg:w="1"/><text x="91.4146%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="91.0955%" y="661" width="0.0119%" height="15" fill="rgb(253,96,49)" fg:x="7642" fg:w="1"/><text x="91.4146%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="91.0955%" y="693" width="0.0238%" height="15" fill="rgb(238,132,17)" fg:x="7642" fg:w="2"/><text x="91.4146%" y="703.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="91.1074%" y="677" width="0.0119%" height="15" fill="rgb(208,82,25)" fg:x="7643" fg:w="1"/><text x="91.4265%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="91.1074%" y="661" width="0.0119%" height="15" fill="rgb(237,77,13)" fg:x="7643" fg:w="1"/><text x="91.4265%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="91.1074%" y="645" width="0.0119%" height="15" fill="rgb(230,6,11)" fg:x="7643" fg:w="1"/><text x="91.4265%" y="655.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="91.1193%" y="677" width="0.0238%" height="15" fill="rgb(207,29,48)" fg:x="7644" fg:w="2"/><text x="91.4384%" y="687.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="91.1193%" y="661" width="0.0238%" height="15" fill="rgb(247,105,22)" fg:x="7644" fg:w="2"/><text x="91.4384%" y="671.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="91.1432%" y="661" width="0.0119%" height="15" fill="rgb(223,114,44)" fg:x="7646" fg:w="1"/><text x="91.4623%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="91.1432%" y="677" width="0.0238%" height="15" fill="rgb(242,3,46)" fg:x="7646" fg:w="2"/><text x="91.4623%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="91.1551%" y="661" width="0.0119%" height="15" fill="rgb(243,197,8)" fg:x="7647" fg:w="1"/><text x="91.4742%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="91.1551%" y="645" width="0.0119%" height="15" fill="rgb(238,171,27)" fg:x="7647" fg:w="1"/><text x="91.4742%" y="655.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="91.1551%" y="629" width="0.0119%" height="15" fill="rgb(254,144,27)" fg:x="7647" fg:w="1"/><text x="91.4742%" y="639.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="91.1670%" y="661" width="0.0358%" height="15" fill="rgb(216,203,36)" fg:x="7648" fg:w="3"/><text x="91.4861%" y="671.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="91.1789%" y="645" width="0.0238%" height="15" fill="rgb(247,27,26)" fg:x="7649" fg:w="2"/><text x="91.4980%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="91.0240%" y="741" width="0.1907%" height="15" fill="rgb(234,180,24)" fg:x="7636" fg:w="16"/><text x="91.3431%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="91.0359%" y="725" width="0.1788%" height="15" fill="rgb(221,50,43)" fg:x="7637" fg:w="15"/><text x="91.3550%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="91.0955%" y="709" width="0.1192%" height="15" fill="rgb(236,50,6)" fg:x="7642" fg:w="10"/><text x="91.4146%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="91.1193%" y="693" width="0.0954%" height="15" fill="rgb(245,172,32)" fg:x="7644" fg:w="8"/><text x="91.4384%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="91.1670%" y="677" width="0.0477%" height="15" fill="rgb(207,54,46)" fg:x="7648" fg:w="4"/><text x="91.4861%" y="687.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="91.2028%" y="661" width="0.0119%" height="15" fill="rgb(218,67,44)" fg:x="7651" fg:w="1"/><text x="91.5219%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (18 samples, 0.21%)</title><rect x="91.0240%" y="757" width="0.2146%" height="15" fill="rgb(208,152,22)" fg:x="7636" fg:w="18"/><text x="91.3431%" y="767.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="91.2147%" y="741" width="0.0238%" height="15" fill="rgb(243,177,0)" fg:x="7652" fg:w="2"/><text x="91.5338%" y="751.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="91.2147%" y="725" width="0.0238%" height="15" fill="rgb(212,75,12)" fg:x="7652" fg:w="2"/><text x="91.5338%" y="735.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="91.2147%" y="709" width="0.0238%" height="15" fill="rgb(212,129,29)" fg:x="7652" fg:w="2"/><text x="91.5338%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (20 samples, 0.24%)</title><rect x="91.0120%" y="773" width="0.2384%" height="15" fill="rgb(241,229,35)" fg:x="7635" fg:w="20"/><text x="91.3311%" y="783.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="91.2385%" y="757" width="0.0119%" height="15" fill="rgb(232,49,32)" fg:x="7654" fg:w="1"/><text x="91.5576%" y="767.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="91.2385%" y="741" width="0.0119%" height="15" fill="rgb(243,119,48)" fg:x="7654" fg:w="1"/><text x="91.5576%" y="751.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="91.2504%" y="757" width="0.0119%" height="15" fill="rgb(212,205,30)" fg:x="7655" fg:w="1"/><text x="91.5695%" y="767.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="91.2504%" y="741" width="0.0119%" height="15" fill="rgb(218,175,42)" fg:x="7655" fg:w="1"/><text x="91.5695%" y="751.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="91.2624%" y="757" width="0.0119%" height="15" fill="rgb(230,156,27)" fg:x="7656" fg:w="1"/><text x="91.5815%" y="767.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="91.2743%" y="757" width="0.0119%" height="15" fill="rgb(254,32,43)" fg:x="7657" fg:w="1"/><text x="91.5934%" y="767.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="91.2862%" y="757" width="0.0119%" height="15" fill="rgb(246,89,34)" fg:x="7658" fg:w="1"/><text x="91.6053%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="91.2981%" y="757" width="0.0119%" height="15" fill="rgb(247,162,17)" fg:x="7659" fg:w="1"/><text x="91.6172%" y="767.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="91.2981%" y="741" width="0.0119%" height="15" fill="rgb(219,71,37)" fg:x="7659" fg:w="1"/><text x="91.6172%" y="751.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="91.2981%" y="725" width="0.0119%" height="15" fill="rgb(210,184,7)" fg:x="7659" fg:w="1"/><text x="91.6172%" y="735.50"/></g><g><title>__GI___libc_free (4 samples, 0.05%)</title><rect x="91.3100%" y="741" width="0.0477%" height="15" fill="rgb(245,16,32)" fg:x="7660" fg:w="4"/><text x="91.6291%" y="751.50"/></g><g><title>_int_free (4 samples, 0.05%)</title><rect x="91.3100%" y="725" width="0.0477%" height="15" fill="rgb(209,62,7)" fg:x="7660" fg:w="4"/><text x="91.6291%" y="735.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="91.3577%" y="725" width="0.0238%" height="15" fill="rgb(215,16,15)" fg:x="7664" fg:w="2"/><text x="91.6768%" y="735.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="91.3697%" y="709" width="0.0119%" height="15" fill="rgb(223,60,14)" fg:x="7665" fg:w="1"/><text x="91.6888%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="91.3577%" y="741" width="0.0358%" height="15" fill="rgb(244,134,12)" fg:x="7664" fg:w="3"/><text x="91.6768%" y="751.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="91.3816%" y="725" width="0.0119%" height="15" fill="rgb(224,3,41)" fg:x="7666" fg:w="1"/><text x="91.7007%" y="735.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="91.3935%" y="725" width="0.0238%" height="15" fill="rgb(213,84,2)" fg:x="7667" fg:w="2"/><text x="91.7126%" y="735.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="91.3935%" y="709" width="0.0238%" height="15" fill="rgb(213,216,27)" fg:x="7667" fg:w="2"/><text x="91.7126%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="91.3100%" y="757" width="0.1192%" height="15" fill="rgb(218,76,35)" fg:x="7660" fg:w="10"/><text x="91.6291%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="91.3935%" y="741" width="0.0358%" height="15" fill="rgb(253,89,24)" fg:x="7667" fg:w="3"/><text x="91.7126%" y="751.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="91.4173%" y="725" width="0.0119%" height="15" fill="rgb(217,188,40)" fg:x="7669" fg:w="1"/><text x="91.7364%" y="735.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="91.4293%" y="741" width="0.0119%" height="15" fill="rgb(237,79,38)" fg:x="7670" fg:w="1"/><text x="91.7484%" y="751.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="91.4412%" y="725" width="0.0119%" height="15" fill="rgb(215,116,13)" fg:x="7671" fg:w="1"/><text x="91.7603%" y="735.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="91.4531%" y="709" width="0.0119%" height="15" fill="rgb(249,66,35)" fg:x="7672" fg:w="1"/><text x="91.7722%" y="719.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="91.4769%" y="693" width="0.0119%" height="15" fill="rgb(253,86,18)" fg:x="7674" fg:w="1"/><text x="91.7960%" y="703.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="91.4769%" y="677" width="0.0119%" height="15" fill="rgb(209,175,36)" fg:x="7674" fg:w="1"/><text x="91.7960%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="91.4889%" y="693" width="0.0119%" height="15" fill="rgb(253,149,3)" fg:x="7675" fg:w="1"/><text x="91.8080%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="91.4889%" y="677" width="0.0119%" height="15" fill="rgb(242,124,49)" fg:x="7675" fg:w="1"/><text x="91.8080%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="91.4889%" y="661" width="0.0119%" height="15" fill="rgb(219,171,24)" fg:x="7675" fg:w="1"/><text x="91.8080%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="91.5008%" y="677" width="0.0119%" height="15" fill="rgb(216,121,30)" fg:x="7676" fg:w="1"/><text x="91.8199%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="91.5008%" y="661" width="0.0119%" height="15" fill="rgb(234,165,21)" fg:x="7676" fg:w="1"/><text x="91.8199%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="91.4650%" y="709" width="0.0596%" height="15" fill="rgb(234,103,40)" fg:x="7673" fg:w="5"/><text x="91.7841%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="91.5008%" y="693" width="0.0238%" height="15" fill="rgb(250,137,24)" fg:x="7676" fg:w="2"/><text x="91.8199%" y="703.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="91.5127%" y="677" width="0.0119%" height="15" fill="rgb(253,22,21)" fg:x="7677" fg:w="1"/><text x="91.8318%" y="687.50"/></g><g><title>__GI___libc_free (6 samples, 0.07%)</title><rect x="91.5246%" y="693" width="0.0715%" height="15" fill="rgb(243,22,5)" fg:x="7678" fg:w="6"/><text x="91.8437%" y="703.50"/></g><g><title>_int_free (6 samples, 0.07%)</title><rect x="91.5246%" y="677" width="0.0715%" height="15" fill="rgb(212,56,7)" fg:x="7678" fg:w="6"/><text x="91.8437%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="91.5961%" y="677" width="0.0119%" height="15" fill="rgb(223,190,49)" fg:x="7684" fg:w="1"/><text x="91.9152%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="91.5961%" y="661" width="0.0119%" height="15" fill="rgb(221,110,35)" fg:x="7684" fg:w="1"/><text x="91.9152%" y="671.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="91.6081%" y="677" width="0.0119%" height="15" fill="rgb(212,113,34)" fg:x="7685" fg:w="1"/><text x="91.9272%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="91.6200%" y="661" width="0.0119%" height="15" fill="rgb(216,125,47)" fg:x="7686" fg:w="1"/><text x="91.9391%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="91.6200%" y="645" width="0.0119%" height="15" fill="rgb(251,112,19)" fg:x="7686" fg:w="1"/><text x="91.9391%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="91.6200%" y="677" width="0.0238%" height="15" fill="rgb(254,200,41)" fg:x="7686" fg:w="2"/><text x="91.9391%" y="687.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="91.6319%" y="661" width="0.0119%" height="15" fill="rgb(225,17,42)" fg:x="7687" fg:w="1"/><text x="91.9510%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="91.6557%" y="661" width="0.0119%" height="15" fill="rgb(208,105,35)" fg:x="7689" fg:w="1"/><text x="91.9748%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="91.6557%" y="645" width="0.0119%" height="15" fill="rgb(210,125,51)" fg:x="7689" fg:w="1"/><text x="91.9748%" y="655.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="91.6677%" y="661" width="0.0119%" height="15" fill="rgb(227,213,18)" fg:x="7690" fg:w="1"/><text x="91.9868%" y="671.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="91.6796%" y="661" width="0.0119%" height="15" fill="rgb(221,174,32)" fg:x="7691" fg:w="1"/><text x="91.9987%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="91.6915%" y="613" width="0.0119%" height="15" fill="rgb(234,23,1)" fg:x="7692" fg:w="1"/><text x="92.0106%" y="623.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="91.7034%" y="597" width="0.0238%" height="15" fill="rgb(209,65,17)" fg:x="7693" fg:w="2"/><text x="92.0225%" y="607.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="91.7034%" y="581" width="0.0238%" height="15" fill="rgb(206,224,31)" fg:x="7693" fg:w="2"/><text x="92.0225%" y="591.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="91.7273%" y="597" width="0.0119%" height="15" fill="rgb(230,20,38)" fg:x="7695" fg:w="1"/><text x="92.0464%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="91.7034%" y="613" width="0.0477%" height="15" fill="rgb(211,9,41)" fg:x="7693" fg:w="4"/><text x="92.0225%" y="623.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="91.7392%" y="597" width="0.0119%" height="15" fill="rgb(233,214,4)" fg:x="7696" fg:w="1"/><text x="92.0583%" y="607.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="91.7511%" y="597" width="0.0119%" height="15" fill="rgb(225,60,54)" fg:x="7697" fg:w="1"/><text x="92.0702%" y="607.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="91.7511%" y="581" width="0.0119%" height="15" fill="rgb(206,228,35)" fg:x="7697" fg:w="1"/><text x="92.0702%" y="591.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="91.7630%" y="597" width="0.0119%" height="15" fill="rgb(212,178,50)" fg:x="7698" fg:w="1"/><text x="92.0821%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="91.6915%" y="661" width="0.1073%" height="15" fill="rgb(206,192,33)" fg:x="7692" fg:w="9"/><text x="92.0106%" y="671.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (9 samples, 0.11%)</title><rect x="91.6915%" y="645" width="0.1073%" height="15" fill="rgb(238,210,1)" fg:x="7692" fg:w="9"/><text x="92.0106%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (9 samples, 0.11%)</title><rect x="91.6915%" y="629" width="0.1073%" height="15" fill="rgb(205,65,52)" fg:x="7692" fg:w="9"/><text x="92.0106%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="91.7511%" y="613" width="0.0477%" height="15" fill="rgb(237,204,51)" fg:x="7697" fg:w="4"/><text x="92.0702%" y="623.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="91.7749%" y="597" width="0.0238%" height="15" fill="rgb(213,119,51)" fg:x="7699" fg:w="2"/><text x="92.0940%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="91.6438%" y="677" width="0.1788%" height="15" fill="rgb(244,156,37)" fg:x="7688" fg:w="15"/><text x="91.9629%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="91.7988%" y="661" width="0.0238%" height="15" fill="rgb(249,96,18)" fg:x="7701" fg:w="2"/><text x="92.1179%" y="671.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="91.7988%" y="645" width="0.0238%" height="15" fill="rgb(231,65,11)" fg:x="7701" fg:w="2"/><text x="92.1179%" y="655.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="91.7988%" y="629" width="0.0238%" height="15" fill="rgb(240,187,2)" fg:x="7701" fg:w="2"/><text x="92.1179%" y="639.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="91.8345%" y="661" width="0.0119%" height="15" fill="rgb(242,121,39)" fg:x="7704" fg:w="1"/><text x="92.1536%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="91.8345%" y="645" width="0.0119%" height="15" fill="rgb(233,205,18)" fg:x="7704" fg:w="1"/><text x="92.1536%" y="655.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="91.8465%" y="661" width="0.0119%" height="15" fill="rgb(219,67,33)" fg:x="7705" fg:w="1"/><text x="92.1656%" y="671.50"/></g><g><title>operator delete@plt (1 samples, 0.01%)</title><rect x="91.8584%" y="661" width="0.0119%" height="15" fill="rgb(227,84,12)" fg:x="7706" fg:w="1"/><text x="92.1775%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (38 samples, 0.45%)</title><rect x="91.4531%" y="725" width="0.4530%" height="15" fill="rgb(227,42,52)" fg:x="7672" fg:w="38"/><text x="91.7722%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (32 samples, 0.38%)</title><rect x="91.5246%" y="709" width="0.3815%" height="15" fill="rgb(231,27,28)" fg:x="7678" fg:w="32"/><text x="91.8437%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="91.5961%" y="693" width="0.3099%" height="15" fill="rgb(238,42,2)" fg:x="7684" fg:w="26"/><text x="91.9152%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (7 samples, 0.08%)</title><rect x="91.8226%" y="677" width="0.0834%" height="15" fill="rgb(215,15,9)" fg:x="7703" fg:w="7"/><text x="92.1417%" y="687.50"/></g><g><title>std::_Function_base::~_Function_base (3 samples, 0.04%)</title><rect x="91.8703%" y="661" width="0.0358%" height="15" fill="rgb(205,195,15)" fg:x="7707" fg:w="3"/><text x="92.1894%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (42 samples, 0.50%)</title><rect x="91.4293%" y="757" width="0.5007%" height="15" fill="rgb(233,143,2)" fg:x="7670" fg:w="42"/><text x="91.7484%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (41 samples, 0.49%)</title><rect x="91.4412%" y="741" width="0.4887%" height="15" fill="rgb(207,108,8)" fg:x="7671" fg:w="41"/><text x="91.7603%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="91.9061%" y="725" width="0.0238%" height="15" fill="rgb(214,53,21)" fg:x="7710" fg:w="2"/><text x="92.2252%" y="735.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="91.9061%" y="709" width="0.0238%" height="15" fill="rgb(238,212,36)" fg:x="7710" fg:w="2"/><text x="92.2252%" y="719.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="91.9180%" y="693" width="0.0119%" height="15" fill="rgb(218,151,47)" fg:x="7711" fg:w="1"/><text x="92.2371%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="91.9299%" y="741" width="0.0119%" height="15" fill="rgb(245,160,3)" fg:x="7712" fg:w="1"/><text x="92.2490%" y="751.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="91.9418%" y="741" width="0.0119%" height="15" fill="rgb(238,106,19)" fg:x="7713" fg:w="1"/><text x="92.2609%" y="751.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="91.9537%" y="741" width="0.0119%" height="15" fill="rgb(207,206,9)" fg:x="7714" fg:w="1"/><text x="92.2728%" y="751.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="91.9776%" y="725" width="0.0119%" height="15" fill="rgb(254,40,10)" fg:x="7716" fg:w="1"/><text x="92.2967%" y="735.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="91.9776%" y="709" width="0.0119%" height="15" fill="rgb(245,81,8)" fg:x="7716" fg:w="1"/><text x="92.2967%" y="719.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="91.9895%" y="725" width="0.0119%" height="15" fill="rgb(214,119,17)" fg:x="7717" fg:w="1"/><text x="92.3086%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="91.9657%" y="741" width="0.0954%" height="15" fill="rgb(245,100,39)" fg:x="7715" fg:w="8"/><text x="92.2848%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (5 samples, 0.06%)</title><rect x="92.0014%" y="725" width="0.0596%" height="15" fill="rgb(243,105,16)" fg:x="7718" fg:w="5"/><text x="92.3205%" y="735.50"/></g><g><title>__GI___libc_free (5 samples, 0.06%)</title><rect x="92.0014%" y="709" width="0.0596%" height="15" fill="rgb(214,53,2)" fg:x="7718" fg:w="5"/><text x="92.3205%" y="719.50"/></g><g><title>_int_free (4 samples, 0.05%)</title><rect x="92.0134%" y="693" width="0.0477%" height="15" fill="rgb(251,54,50)" fg:x="7719" fg:w="4"/><text x="92.3325%" y="703.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="92.0610%" y="725" width="0.0119%" height="15" fill="rgb(244,121,37)" fg:x="7723" fg:w="1"/><text x="92.3801%" y="735.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="92.0610%" y="709" width="0.0119%" height="15" fill="rgb(236,158,39)" fg:x="7723" fg:w="1"/><text x="92.3801%" y="719.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="92.0730%" y="725" width="0.0119%" height="15" fill="rgb(226,25,37)" fg:x="7724" fg:w="1"/><text x="92.3921%" y="735.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="92.0849%" y="709" width="0.0238%" height="15" fill="rgb(222,71,46)" fg:x="7725" fg:w="2"/><text x="92.4040%" y="719.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="92.1087%" y="693" width="0.0119%" height="15" fill="rgb(209,27,29)" fg:x="7727" fg:w="1"/><text x="92.4278%" y="703.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="92.1087%" y="677" width="0.0119%" height="15" fill="rgb(210,196,17)" fg:x="7727" fg:w="1"/><text x="92.4278%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="92.1206%" y="677" width="0.0119%" height="15" fill="rgb(236,76,23)" fg:x="7728" fg:w="1"/><text x="92.4397%" y="687.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="92.1206%" y="661" width="0.0119%" height="15" fill="rgb(214,33,32)" fg:x="7728" fg:w="1"/><text x="92.4397%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="92.1326%" y="677" width="0.0358%" height="15" fill="rgb(243,16,26)" fg:x="7729" fg:w="3"/><text x="92.4517%" y="687.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="92.1326%" y="661" width="0.0358%" height="15" fill="rgb(241,30,48)" fg:x="7729" fg:w="3"/><text x="92.4517%" y="671.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="92.1326%" y="645" width="0.0358%" height="15" fill="rgb(241,106,1)" fg:x="7729" fg:w="3"/><text x="92.4517%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="92.1206%" y="693" width="0.0596%" height="15" fill="rgb(230,62,29)" fg:x="7728" fg:w="5"/><text x="92.4397%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="92.1683%" y="677" width="0.0119%" height="15" fill="rgb(207,166,53)" fg:x="7732" fg:w="1"/><text x="92.4874%" y="687.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="92.1683%" y="661" width="0.0119%" height="15" fill="rgb(244,54,13)" fg:x="7732" fg:w="1"/><text x="92.4874%" y="671.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="92.1683%" y="645" width="0.0119%" height="15" fill="rgb(205,144,19)" fg:x="7732" fg:w="1"/><text x="92.4874%" y="655.50"/></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="92.2041%" y="677" width="0.0358%" height="15" fill="rgb(225,165,45)" fg:x="7735" fg:w="3"/><text x="92.5232%" y="687.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="92.2160%" y="661" width="0.0238%" height="15" fill="rgb(220,140,6)" fg:x="7736" fg:w="2"/><text x="92.5351%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="92.2398%" y="661" width="0.0119%" height="15" fill="rgb(234,69,14)" fg:x="7738" fg:w="1"/><text x="92.5589%" y="671.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="92.2637%" y="645" width="0.0119%" height="15" fill="rgb(243,24,33)" fg:x="7740" fg:w="1"/><text x="92.5828%" y="655.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="92.2756%" y="629" width="0.0119%" height="15" fill="rgb(253,100,43)" fg:x="7741" fg:w="1"/><text x="92.5947%" y="639.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="92.2756%" y="613" width="0.0119%" height="15" fill="rgb(221,168,15)" fg:x="7741" fg:w="1"/><text x="92.5947%" y="623.50"/></g><g><title>__GI___libc_free (4 samples, 0.05%)</title><rect x="92.2875%" y="613" width="0.0477%" height="15" fill="rgb(237,15,11)" fg:x="7742" fg:w="4"/><text x="92.6066%" y="623.50"/></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="92.2994%" y="597" width="0.0358%" height="15" fill="rgb(229,207,40)" fg:x="7743" fg:w="3"/><text x="92.6185%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="92.3471%" y="597" width="0.0119%" height="15" fill="rgb(246,125,48)" fg:x="7747" fg:w="1"/><text x="92.6662%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="92.2756%" y="645" width="0.0954%" height="15" fill="rgb(231,65,10)" fg:x="7741" fg:w="8"/><text x="92.5947%" y="655.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (7 samples, 0.08%)</title><rect x="92.2875%" y="629" width="0.0834%" height="15" fill="rgb(222,152,40)" fg:x="7742" fg:w="7"/><text x="92.6066%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="92.3352%" y="613" width="0.0358%" height="15" fill="rgb(214,12,30)" fg:x="7746" fg:w="3"/><text x="92.6543%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="92.3590%" y="597" width="0.0119%" height="15" fill="rgb(239,80,41)" fg:x="7748" fg:w="1"/><text x="92.6781%" y="607.50"/></g><g><title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="92.3590%" y="581" width="0.0119%" height="15" fill="rgb(206,175,27)" fg:x="7748" fg:w="1"/><text x="92.6781%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="92.2518%" y="661" width="0.1311%" height="15" fill="rgb(222,43,39)" fg:x="7739" fg:w="11"/><text x="92.5709%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="92.3710%" y="645" width="0.0119%" height="15" fill="rgb(243,47,50)" fg:x="7749" fg:w="1"/><text x="92.6901%" y="655.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="92.3710%" y="629" width="0.0119%" height="15" fill="rgb(243,61,21)" fg:x="7749" fg:w="1"/><text x="92.6901%" y="639.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="92.3829%" y="645" width="0.0238%" height="15" fill="rgb(208,172,5)" fg:x="7750" fg:w="2"/><text x="92.7020%" y="655.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="92.3829%" y="629" width="0.0238%" height="15" fill="rgb(219,24,25)" fg:x="7750" fg:w="2"/><text x="92.7020%" y="639.50"/></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="92.4067%" y="645" width="0.0119%" height="15" fill="rgb(235,42,41)" fg:x="7752" fg:w="1"/><text x="92.7258%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (28 samples, 0.33%)</title><rect x="92.1087%" y="709" width="0.3338%" height="15" fill="rgb(226,190,24)" fg:x="7727" fg:w="28"/><text x="92.4278%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (22 samples, 0.26%)</title><rect x="92.1802%" y="693" width="0.2622%" height="15" fill="rgb(216,55,27)" fg:x="7733" fg:w="22"/><text x="92.4993%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (17 samples, 0.20%)</title><rect x="92.2398%" y="677" width="0.2026%" height="15" fill="rgb(231,77,14)" fg:x="7738" fg:w="17"/><text x="92.5589%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (5 samples, 0.06%)</title><rect x="92.3829%" y="661" width="0.0596%" height="15" fill="rgb(208,108,34)" fg:x="7750" fg:w="5"/><text x="92.7020%" y="671.50"/></g><g><title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="92.4186%" y="645" width="0.0238%" height="15" fill="rgb(228,183,52)" fg:x="7753" fg:w="2"/><text x="92.7377%" y="655.50"/></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="92.4425%" y="693" width="0.0238%" height="15" fill="rgb(224,152,1)" fg:x="7755" fg:w="2"/><text x="92.7616%" y="703.50"/></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="92.4425%" y="677" width="0.0238%" height="15" fill="rgb(246,115,8)" fg:x="7755" fg:w="2"/><text x="92.7616%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (175 samples, 2.09%)</title><rect x="90.3922%" y="821" width="2.0861%" height="15" fill="rgb(211,76,13)" fg:x="7583" fg:w="175"/><text x="90.7113%" y="831.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (175 samples, 2.09%)</title><rect x="90.3922%" y="805" width="2.0861%" height="15" fill="rgb(233,214,49)" fg:x="7583" fg:w="175"/><text x="90.7113%" y="815.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (130 samples, 1.55%)</title><rect x="90.9286%" y="789" width="1.5496%" height="15" fill="rgb(223,44,51)" fg:x="7628" fg:w="130"/><text x="91.2477%" y="799.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (103 samples, 1.23%)</title><rect x="91.2504%" y="773" width="1.2278%" height="15" fill="rgb(225,111,51)" fg:x="7655" fg:w="103"/><text x="91.5695%" y="783.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (46 samples, 0.55%)</title><rect x="91.9299%" y="757" width="0.5483%" height="15" fill="rgb(231,185,26)" fg:x="7712" fg:w="46"/><text x="92.2490%" y="767.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (35 samples, 0.42%)</title><rect x="92.0610%" y="741" width="0.4172%" height="15" fill="rgb(233,111,30)" fg:x="7723" fg:w="35"/><text x="92.3801%" y="751.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (33 samples, 0.39%)</title><rect x="92.0849%" y="725" width="0.3934%" height="15" fill="rgb(250,1,47)" fg:x="7725" fg:w="33"/><text x="92.4040%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="92.4425%" y="709" width="0.0358%" height="15" fill="rgb(254,210,3)" fg:x="7755" fg:w="3"/><text x="92.7616%" y="719.50"/></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="92.4663%" y="693" width="0.0119%" height="15" fill="rgb(234,14,22)" fg:x="7757" fg:w="1"/><text x="92.7854%" y="703.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="92.5021%" y="789" width="0.0119%" height="15" fill="rgb(221,117,4)" fg:x="7760" fg:w="1"/><text x="92.8212%" y="799.50"/></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="92.5021%" y="773" width="0.0119%" height="15" fill="rgb(251,147,27)" fg:x="7760" fg:w="1"/><text x="92.8212%" y="783.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="92.5259%" y="757" width="0.0119%" height="15" fill="rgb(226,52,11)" fg:x="7762" fg:w="1"/><text x="92.8450%" y="767.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="92.5259%" y="741" width="0.0119%" height="15" fill="rgb(229,222,5)" fg:x="7762" fg:w="1"/><text x="92.8450%" y="751.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="92.5378%" y="725" width="0.0834%" height="15" fill="rgb(232,76,2)" fg:x="7763" fg:w="7"/><text x="92.8569%" y="735.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="92.5498%" y="709" width="0.0715%" height="15" fill="rgb(242,108,2)" fg:x="7764" fg:w="6"/><text x="92.8689%" y="719.50"/></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="92.5498%" y="693" width="0.0715%" height="15" fill="rgb(213,165,6)" fg:x="7764" fg:w="6"/><text x="92.8689%" y="703.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="92.6213%" y="677" width="0.0119%" height="15" fill="rgb(222,24,42)" fg:x="7770" fg:w="1"/><text x="92.9404%" y="687.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="92.6213%" y="661" width="0.0119%" height="15" fill="rgb(242,170,24)" fg:x="7770" fg:w="1"/><text x="92.9404%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="92.6332%" y="629" width="0.0119%" height="15" fill="rgb(209,110,40)" fg:x="7771" fg:w="1"/><text x="92.9523%" y="639.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="92.6332%" y="613" width="0.0119%" height="15" fill="rgb(233,146,36)" fg:x="7771" fg:w="1"/><text x="92.9523%" y="623.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="92.6332%" y="597" width="0.0119%" height="15" fill="rgb(229,33,32)" fg:x="7771" fg:w="1"/><text x="92.9523%" y="607.50"/></g><g><title>operator new (10 samples, 0.12%)</title><rect x="92.6451%" y="613" width="0.1192%" height="15" fill="rgb(225,55,34)" fg:x="7772" fg:w="10"/><text x="92.9642%" y="623.50"/></g><g><title>__GI___libc_malloc (10 samples, 0.12%)</title><rect x="92.6451%" y="597" width="0.1192%" height="15" fill="rgb(217,32,50)" fg:x="7772" fg:w="10"/><text x="92.9642%" y="607.50"/></g><g><title>_int_malloc (8 samples, 0.10%)</title><rect x="92.6690%" y="581" width="0.0954%" height="15" fill="rgb(206,110,53)" fg:x="7774" fg:w="8"/><text x="92.9881%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="92.7643%" y="549" width="0.0119%" height="15" fill="rgb(247,25,10)" fg:x="7782" fg:w="1"/><text x="93.0834%" y="559.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="92.7643%" y="533" width="0.0119%" height="15" fill="rgb(226,67,48)" fg:x="7782" fg:w="1"/><text x="93.0834%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="92.7882%" y="485" width="0.0119%" height="15" fill="rgb(239,73,28)" fg:x="7784" fg:w="1"/><text x="93.1073%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="92.7882%" y="469" width="0.0119%" height="15" fill="rgb(234,200,41)" fg:x="7784" fg:w="1"/><text x="93.1073%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="92.7882%" y="501" width="0.0358%" height="15" fill="rgb(233,76,35)" fg:x="7784" fg:w="3"/><text x="93.1073%" y="511.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), cond::consume_until(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#2}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="92.8001%" y="485" width="0.0238%" height="15" fill="rgb(238,166,31)" fg:x="7785" fg:w="2"/><text x="93.1192%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="92.8120%" y="469" width="0.0119%" height="15" fill="rgb(219,218,51)" fg:x="7786" fg:w="1"/><text x="93.1311%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="92.8120%" y="453" width="0.0119%" height="15" fill="rgb(221,82,53)" fg:x="7786" fg:w="1"/><text x="93.1311%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="92.7763%" y="533" width="0.0954%" height="15" fill="rgb(218,179,13)" fg:x="7783" fg:w="8"/><text x="93.0954%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (7 samples, 0.08%)</title><rect x="92.7882%" y="517" width="0.0834%" height="15" fill="rgb(210,53,38)" fg:x="7784" fg:w="7"/><text x="93.1073%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="92.8239%" y="501" width="0.0477%" height="15" fill="rgb(214,167,31)" fg:x="7787" fg:w="4"/><text x="93.1430%" y="511.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="92.8239%" y="485" width="0.0477%" height="15" fill="rgb(223,26,5)" fg:x="7787" fg:w="4"/><text x="93.1430%" y="495.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="92.8239%" y="469" width="0.0477%" height="15" fill="rgb(218,95,23)" fg:x="7787" fg:w="4"/><text x="93.1430%" y="479.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (27 samples, 0.32%)</title><rect x="92.6213%" y="693" width="0.3219%" height="15" fill="rgb(248,205,45)" fg:x="7770" fg:w="27"/><text x="92.9404%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (26 samples, 0.31%)</title><rect x="92.6332%" y="677" width="0.3099%" height="15" fill="rgb(211,76,6)" fg:x="7771" fg:w="26"/><text x="92.9523%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (26 samples, 0.31%)</title><rect x="92.6332%" y="661" width="0.3099%" height="15" fill="rgb(250,176,29)" fg:x="7771" fg:w="26"/><text x="92.9523%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (26 samples, 0.31%)</title><rect x="92.6332%" y="645" width="0.3099%" height="15" fill="rgb(240,107,31)" fg:x="7771" fg:w="26"/><text x="92.9523%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (25 samples, 0.30%)</title><rect x="92.6451%" y="629" width="0.2980%" height="15" fill="rgb(229,215,17)" fg:x="7772" fg:w="25"/><text x="92.9642%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (15 samples, 0.18%)</title><rect x="92.7643%" y="613" width="0.1788%" height="15" fill="rgb(240,79,8)" fg:x="7782" fg:w="15"/><text x="93.0834%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="92.7643%" y="597" width="0.1788%" height="15" fill="rgb(243,110,48)" fg:x="7782" fg:w="15"/><text x="93.0834%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (15 samples, 0.18%)</title><rect x="92.7643%" y="581" width="0.1788%" height="15" fill="rgb(236,201,9)" fg:x="7782" fg:w="15"/><text x="93.0834%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="92.7643%" y="565" width="0.1788%" height="15" fill="rgb(220,87,26)" fg:x="7782" fg:w="15"/><text x="93.0834%" y="575.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (14 samples, 0.17%)</title><rect x="92.7763%" y="549" width="0.1669%" height="15" fill="rgb(212,118,27)" fg:x="7783" fg:w="14"/><text x="93.0954%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (6 samples, 0.07%)</title><rect x="92.8716%" y="533" width="0.0715%" height="15" fill="rgb(244,178,50)" fg:x="7791" fg:w="6"/><text x="93.1907%" y="543.50"/></g><g><title>operator new (6 samples, 0.07%)</title><rect x="92.8716%" y="517" width="0.0715%" height="15" fill="rgb(215,204,7)" fg:x="7791" fg:w="6"/><text x="93.1907%" y="527.50"/></g><g><title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="92.8716%" y="501" width="0.0715%" height="15" fill="rgb(214,122,43)" fg:x="7791" fg:w="6"/><text x="93.1907%" y="511.50"/></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="92.8955%" y="485" width="0.0477%" height="15" fill="rgb(251,178,26)" fg:x="7793" fg:w="4"/><text x="93.2146%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (28 samples, 0.33%)</title><rect x="92.6213%" y="709" width="0.3338%" height="15" fill="rgb(210,7,35)" fg:x="7770" fg:w="28"/><text x="92.9404%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="92.9431%" y="693" width="0.0119%" height="15" fill="rgb(227,164,54)" fg:x="7797" fg:w="1"/><text x="93.2622%" y="703.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="92.9431%" y="677" width="0.0119%" height="15" fill="rgb(205,18,34)" fg:x="7797" fg:w="1"/><text x="93.2622%" y="687.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="92.9670%" y="693" width="0.0238%" height="15" fill="rgb(239,50,19)" fg:x="7799" fg:w="2"/><text x="93.2861%" y="703.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="92.9670%" y="677" width="0.0238%" height="15" fill="rgb(224,85,6)" fg:x="7799" fg:w="2"/><text x="93.2861%" y="687.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::with&lt;unsigned int&gt;(unsigned int (&amp;)(State&amp;))::{lambda(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;)#1}::operator()(std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;) const::{lambda(State&amp;)#1}&gt;::_M_manager (4 samples, 0.05%)</title><rect x="92.9551%" y="709" width="0.0477%" height="15" fill="rgb(252,167,34)" fg:x="7798" fg:w="4"/><text x="93.2742%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), std::function&lt;Result (State&amp;)&gt; (*)(unsigned int)&gt;::_M_manager (1 samples, 0.01%)</title><rect x="92.9908%" y="693" width="0.0119%" height="15" fill="rgb(243,180,35)" fg:x="7801" fg:w="1"/><text x="93.3099%" y="703.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (33 samples, 0.39%)</title><rect x="92.6213%" y="725" width="0.3934%" height="15" fill="rgb(213,214,53)" fg:x="7770" fg:w="33"/><text x="92.9404%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="93.0027%" y="709" width="0.0119%" height="15" fill="rgb(244,39,37)" fg:x="7802" fg:w="1"/><text x="93.3218%" y="719.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="93.0027%" y="693" width="0.0119%" height="15" fill="rgb(215,141,14)" fg:x="7802" fg:w="1"/><text x="93.3218%" y="703.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="93.0027%" y="677" width="0.0119%" height="15" fill="rgb(210,2,42)" fg:x="7802" fg:w="1"/><text x="93.3218%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::column(unsigned int)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="93.0147%" y="709" width="0.0119%" height="15" fill="rgb(252,189,47)" fg:x="7803" fg:w="1"/><text x="93.3338%" y="719.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="93.0623%" y="677" width="0.0238%" height="15" fill="rgb(222,154,47)" fg:x="7807" fg:w="2"/><text x="93.3814%" y="687.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="93.0623%" y="661" width="0.0238%" height="15" fill="rgb(228,20,37)" fg:x="7807" fg:w="2"/><text x="93.3814%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (49 samples, 0.58%)</title><rect x="92.5378%" y="741" width="0.5841%" height="15" fill="rgb(236,17,4)" fg:x="7763" fg:w="49"/><text x="92.8569%" y="751.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (9 samples, 0.11%)</title><rect x="93.0147%" y="725" width="0.1073%" height="15" fill="rgb(222,211,31)" fg:x="7803" fg:w="9"/><text x="93.3338%" y="735.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), operator*&lt;State&amp;, std::pair&lt;bool, unsigned int&gt;, bool&gt;(bool (&amp;)(std::pair&lt;bool, unsigned int&gt;), std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (8 samples, 0.10%)</title><rect x="93.0266%" y="709" width="0.0954%" height="15" fill="rgb(218,134,25)" fg:x="7804" fg:w="8"/><text x="93.3457%" y="719.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="93.0623%" y="693" width="0.0596%" height="15" fill="rgb(218,97,43)" fg:x="7807" fg:w="5"/><text x="93.3814%" y="703.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (3 samples, 0.04%)</title><rect x="93.0862%" y="677" width="0.0358%" height="15" fill="rgb(234,163,32)" fg:x="7809" fg:w="3"/><text x="93.4053%" y="687.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="93.0862%" y="661" width="0.0358%" height="15" fill="rgb(251,171,42)" fg:x="7809" fg:w="3"/><text x="93.4053%" y="671.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="93.1100%" y="645" width="0.0119%" height="15" fill="rgb(223,104,12)" fg:x="7811" fg:w="1"/><text x="93.4291%" y="655.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="93.1100%" y="629" width="0.0119%" height="15" fill="rgb(225,29,49)" fg:x="7811" fg:w="1"/><text x="93.4291%" y="639.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="93.1339%" y="725" width="0.0238%" height="15" fill="rgb(253,77,7)" fg:x="7813" fg:w="2"/><text x="93.4530%" y="735.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="93.1339%" y="709" width="0.0238%" height="15" fill="rgb(213,81,26)" fg:x="7813" fg:w="2"/><text x="93.4530%" y="719.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="93.1577%" y="709" width="0.0119%" height="15" fill="rgb(246,126,6)" fg:x="7815" fg:w="1"/><text x="93.4768%" y="719.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), state::mark(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="93.1577%" y="693" width="0.0119%" height="15" fill="rgb(232,186,21)" fg:x="7815" fg:w="1"/><text x="93.4768%" y="703.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="93.1577%" y="677" width="0.0119%" height="15" fill="rgb(215,126,18)" fg:x="7815" fg:w="1"/><text x="93.4768%" y="687.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="93.1577%" y="661" width="0.0119%" height="15" fill="rgb(210,47,5)" fg:x="7815" fg:w="1"/><text x="93.4768%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="93.1696%" y="693" width="0.0119%" height="15" fill="rgb(240,70,6)" fg:x="7816" fg:w="1"/><text x="93.4887%" y="703.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="93.1696%" y="677" width="0.0119%" height="15" fill="rgb(230,99,49)" fg:x="7816" fg:w="1"/><text x="93.4887%" y="687.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="93.1696%" y="661" width="0.0119%" height="15" fill="rgb(212,57,36)" fg:x="7816" fg:w="1"/><text x="93.4887%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (11 samples, 0.13%)</title><rect x="93.2054%" y="597" width="0.1311%" height="15" fill="rgb(243,14,50)" fg:x="7819" fg:w="11"/><text x="93.5245%" y="607.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="93.2054%" y="581" width="0.1311%" height="15" fill="rgb(240,2,53)" fg:x="7819" fg:w="11"/><text x="93.5245%" y="591.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="93.2054%" y="565" width="0.1311%" height="15" fill="rgb(208,47,53)" fg:x="7819" fg:w="11"/><text x="93.5245%" y="575.50"/></g><g><title>_int_malloc (11 samples, 0.13%)</title><rect x="93.2054%" y="549" width="0.1311%" height="15" fill="rgb(235,186,39)" fg:x="7819" fg:w="11"/><text x="93.5245%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="93.3484%" y="565" width="0.0119%" height="15" fill="rgb(212,35,47)" fg:x="7831" fg:w="1"/><text x="93.6675%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="93.3484%" y="549" width="0.0119%" height="15" fill="rgb(248,59,37)" fg:x="7831" fg:w="1"/><text x="93.6675%" y="559.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="93.3604%" y="549" width="0.0834%" height="15" fill="rgb(223,186,16)" fg:x="7832" fg:w="7"/><text x="93.6795%" y="559.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="93.3604%" y="533" width="0.0834%" height="15" fill="rgb(215,106,35)" fg:x="7832" fg:w="7"/><text x="93.6795%" y="543.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="93.3604%" y="517" width="0.0834%" height="15" fill="rgb(217,141,29)" fg:x="7832" fg:w="7"/><text x="93.6795%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="93.4438%" y="485" width="0.0119%" height="15" fill="rgb(221,227,46)" fg:x="7839" fg:w="1"/><text x="93.7629%" y="495.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="93.4438%" y="469" width="0.0119%" height="15" fill="rgb(212,36,41)" fg:x="7839" fg:w="1"/><text x="93.7629%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="93.4438%" y="533" width="0.0238%" height="15" fill="rgb(222,35,11)" fg:x="7839" fg:w="2"/><text x="93.7629%" y="543.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="93.4438%" y="517" width="0.0238%" height="15" fill="rgb(232,165,33)" fg:x="7839" fg:w="2"/><text x="93.7629%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="93.4438%" y="501" width="0.0238%" height="15" fill="rgb(211,38,20)" fg:x="7839" fg:w="2"/><text x="93.7629%" y="511.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="93.4557%" y="485" width="0.0119%" height="15" fill="rgb(230,7,36)" fg:x="7840" fg:w="1"/><text x="93.7748%" y="495.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="93.4557%" y="469" width="0.0119%" height="15" fill="rgb(213,128,35)" fg:x="7840" fg:w="1"/><text x="93.7748%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="93.4438%" y="549" width="0.0477%" height="15" fill="rgb(218,11,14)" fg:x="7839" fg:w="4"/><text x="93.7629%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="93.4676%" y="533" width="0.0238%" height="15" fill="rgb(249,105,7)" fg:x="7841" fg:w="2"/><text x="93.7867%" y="543.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="93.4676%" y="517" width="0.0238%" height="15" fill="rgb(226,125,21)" fg:x="7841" fg:w="2"/><text x="93.7867%" y="527.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="93.4676%" y="501" width="0.0238%" height="15" fill="rgb(239,90,47)" fg:x="7841" fg:w="2"/><text x="93.7867%" y="511.50"/></g><g><title>std::_Function_handler&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int), const_&lt;unsigned int, std::function&lt;Result (State&amp;)&gt; &gt;(std::function&lt;Result (State&amp;)&gt;)::{lambda(auto:1)#1}&gt;::_M_manager (29 samples, 0.35%)</title><rect x="93.1815%" y="661" width="0.3457%" height="15" fill="rgb(226,19,1)" fg:x="7817" fg:w="29"/><text x="93.5006%" y="671.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (29 samples, 0.35%)</title><rect x="93.1815%" y="645" width="0.3457%" height="15" fill="rgb(205,117,40)" fg:x="7817" fg:w="29"/><text x="93.5006%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (29 samples, 0.35%)</title><rect x="93.1815%" y="629" width="0.3457%" height="15" fill="rgb(234,6,54)" fg:x="7817" fg:w="29"/><text x="93.5006%" y="639.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (29 samples, 0.35%)</title><rect x="93.1815%" y="613" width="0.3457%" height="15" fill="rgb(239,73,32)" fg:x="7817" fg:w="29"/><text x="93.5006%" y="623.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="93.3365%" y="597" width="0.1907%" height="15" fill="rgb(226,197,12)" fg:x="7830" fg:w="16"/><text x="93.6556%" y="607.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (16 samples, 0.19%)</title><rect x="93.3365%" y="581" width="0.1907%" height="15" fill="rgb(226,53,42)" fg:x="7830" fg:w="16"/><text x="93.6556%" y="591.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (14 samples, 0.17%)</title><rect x="93.3604%" y="565" width="0.1669%" height="15" fill="rgb(234,99,30)" fg:x="7832" fg:w="14"/><text x="93.6795%" y="575.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="93.4915%" y="549" width="0.0358%" height="15" fill="rgb(237,175,49)" fg:x="7843" fg:w="3"/><text x="93.8106%" y="559.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (30 samples, 0.36%)</title><rect x="93.1815%" y="677" width="0.3576%" height="15" fill="rgb(228,75,42)" fg:x="7817" fg:w="30"/><text x="93.5006%" y="687.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::consume_if(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="93.5272%" y="661" width="0.0119%" height="15" fill="rgb(223,162,48)" fg:x="7846" fg:w="1"/><text x="93.8463%" y="671.50"/></g><g><title>std::function&lt;bool (unsigned int)&gt;::function (1 samples, 0.01%)</title><rect x="93.5272%" y="645" width="0.0119%" height="15" fill="rgb(221,192,29)" fg:x="7846" fg:w="1"/><text x="93.8463%" y="655.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (32 samples, 0.38%)</title><rect x="93.1696%" y="709" width="0.3815%" height="15" fill="rgb(249,150,41)" fg:x="7816" fg:w="32"/><text x="93.4887%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (31 samples, 0.37%)</title><rect x="93.1815%" y="693" width="0.3695%" height="15" fill="rgb(243,107,34)" fg:x="7817" fg:w="31"/><text x="93.5006%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="93.5392%" y="677" width="0.0119%" height="15" fill="rgb(214,227,11)" fg:x="7847" fg:w="1"/><text x="93.8583%" y="687.50"/></g><g><title>operator new@plt (1 samples, 0.01%)</title><rect x="93.5392%" y="661" width="0.0119%" height="15" fill="rgb(209,37,13)" fg:x="7847" fg:w="1"/><text x="93.8583%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="93.5749%" y="677" width="0.0238%" height="15" fill="rgb(249,124,20)" fg:x="7850" fg:w="2"/><text x="93.8940%" y="687.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), parser::skipspace::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="93.5749%" y="661" width="0.0238%" height="15" fill="rgb(228,28,2)" fg:x="7850" fg:w="2"/><text x="93.8940%" y="671.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="93.5988%" y="661" width="0.0238%" height="15" fill="rgb(244,55,1)" fg:x="7852" fg:w="2"/><text x="93.9179%" y="671.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="93.5988%" y="645" width="0.0238%" height="15" fill="rgb(216,26,19)" fg:x="7852" fg:w="2"/><text x="93.9179%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="93.6226%" y="661" width="0.1430%" height="15" fill="rgb(209,162,10)" fg:x="7854" fg:w="12"/><text x="93.9417%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (12 samples, 0.14%)</title><rect x="93.6226%" y="645" width="0.1430%" height="15" fill="rgb(235,168,42)" fg:x="7854" fg:w="12"/><text x="93.9417%" y="655.50"/></g><g><title>operator new (12 samples, 0.14%)</title><rect x="93.6226%" y="629" width="0.1430%" height="15" fill="rgb(240,24,14)" fg:x="7854" fg:w="12"/><text x="93.9417%" y="639.50"/></g><g><title>__GI___libc_malloc (12 samples, 0.14%)</title><rect x="93.6226%" y="613" width="0.1430%" height="15" fill="rgb(224,107,11)" fg:x="7854" fg:w="12"/><text x="93.9417%" y="623.50"/></g><g><title>_int_malloc (12 samples, 0.14%)</title><rect x="93.6226%" y="597" width="0.1430%" height="15" fill="rgb(226,48,4)" fg:x="7854" fg:w="12"/><text x="93.9417%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="93.5988%" y="677" width="0.1907%" height="15" fill="rgb(254,31,21)" fg:x="7852" fg:w="16"/><text x="93.9179%" y="687.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="93.7656%" y="661" width="0.0238%" height="15" fill="rgb(205,156,19)" fg:x="7866" fg:w="2"/><text x="94.0847%" y="671.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), bool (*)(State&amp;)&gt;::_M_manager (1 samples, 0.01%)</title><rect x="93.7776%" y="645" width="0.0119%" height="15" fill="rgb(216,73,31)" fg:x="7867" fg:w="1"/><text x="94.0967%" y="655.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="93.7895%" y="661" width="0.0238%" height="15" fill="rgb(237,88,35)" fg:x="7868" fg:w="2"/><text x="94.1086%" y="671.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="93.8014%" y="645" width="0.0119%" height="15" fill="rgb(254,79,48)" fg:x="7869" fg:w="1"/><text x="94.1205%" y="655.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="93.8014%" y="629" width="0.0119%" height="15" fill="rgb(211,66,36)" fg:x="7869" fg:w="1"/><text x="94.1205%" y="639.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="93.8133%" y="629" width="0.0358%" height="15" fill="rgb(222,13,1)" fg:x="7870" fg:w="3"/><text x="94.1324%" y="639.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="93.8133%" y="613" width="0.0358%" height="15" fill="rgb(221,216,41)" fg:x="7870" fg:w="3"/><text x="94.1324%" y="623.50"/></g><g><title>operator new (14 samples, 0.17%)</title><rect x="93.8491%" y="597" width="0.1669%" height="15" fill="rgb(220,10,17)" fg:x="7873" fg:w="14"/><text x="94.1682%" y="607.50"/></g><g><title>__GI___libc_malloc (14 samples, 0.17%)</title><rect x="93.8491%" y="581" width="0.1669%" height="15" fill="rgb(242,43,35)" fg:x="7873" fg:w="14"/><text x="94.1682%" y="591.50"/></g><g><title>_int_malloc (12 samples, 0.14%)</title><rect x="93.8729%" y="565" width="0.1430%" height="15" fill="rgb(216,182,18)" fg:x="7875" fg:w="12"/><text x="94.1920%" y="575.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="94.0279%" y="533" width="0.0119%" height="15" fill="rgb(246,217,36)" fg:x="7888" fg:w="1"/><text x="94.3470%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="94.0279%" y="517" width="0.0119%" height="15" fill="rgb(208,107,8)" fg:x="7888" fg:w="1"/><text x="94.3470%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="94.0279%" y="549" width="0.0238%" height="15" fill="rgb(208,189,15)" fg:x="7888" fg:w="2"/><text x="94.3470%" y="559.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="94.0398%" y="533" width="0.0119%" height="15" fill="rgb(211,70,9)" fg:x="7889" fg:w="1"/><text x="94.3589%" y="543.50"/></g><g><title>memcpy@plt (1 samples, 0.01%)</title><rect x="94.0398%" y="517" width="0.0119%" height="15" fill="rgb(217,95,34)" fg:x="7889" fg:w="1"/><text x="94.3589%" y="527.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (10 samples, 0.12%)</title><rect x="94.0160%" y="581" width="0.1192%" height="15" fill="rgb(240,223,2)" fg:x="7887" fg:w="10"/><text x="94.3351%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="94.0160%" y="565" width="0.1192%" height="15" fill="rgb(231,18,6)" fg:x="7887" fg:w="10"/><text x="94.3351%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (7 samples, 0.08%)</title><rect x="94.0517%" y="549" width="0.0834%" height="15" fill="rgb(254,44,46)" fg:x="7890" fg:w="7"/><text x="94.3708%" y="559.50"/></g><g><title>operator new (7 samples, 0.08%)</title><rect x="94.0517%" y="533" width="0.0834%" height="15" fill="rgb(223,222,46)" fg:x="7890" fg:w="7"/><text x="94.3708%" y="543.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="94.0517%" y="517" width="0.0834%" height="15" fill="rgb(229,163,13)" fg:x="7890" fg:w="7"/><text x="94.3708%" y="527.50"/></g><g><title>_int_malloc (7 samples, 0.08%)</title><rect x="94.0517%" y="501" width="0.0834%" height="15" fill="rgb(220,208,13)" fg:x="7890" fg:w="7"/><text x="94.3708%" y="511.50"/></g><g><title>operator new (4 samples, 0.05%)</title><rect x="94.1590%" y="533" width="0.0477%" height="15" fill="rgb(244,28,53)" fg:x="7899" fg:w="4"/><text x="94.4781%" y="543.50"/></g><g><title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="94.1590%" y="517" width="0.0477%" height="15" fill="rgb(243,138,0)" fg:x="7899" fg:w="4"/><text x="94.4781%" y="527.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="94.1948%" y="501" width="0.0119%" height="15" fill="rgb(209,90,49)" fg:x="7902" fg:w="1"/><text x="94.5139%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="94.2067%" y="517" width="0.0238%" height="15" fill="rgb(247,114,18)" fg:x="7903" fg:w="2"/><text x="94.5258%" y="527.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="94.2186%" y="501" width="0.0119%" height="15" fill="rgb(221,14,46)" fg:x="7904" fg:w="1"/><text x="94.5377%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="94.2425%" y="485" width="0.0358%" height="15" fill="rgb(215,29,23)" fg:x="7906" fg:w="3"/><text x="94.5616%" y="495.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (3 samples, 0.04%)</title><rect x="94.2425%" y="469" width="0.0358%" height="15" fill="rgb(241,37,25)" fg:x="7906" fg:w="3"/><text x="94.5616%" y="479.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (3 samples, 0.04%)</title><rect x="94.2425%" y="453" width="0.0358%" height="15" fill="rgb(225,17,22)" fg:x="7906" fg:w="3"/><text x="94.5616%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="94.2544%" y="437" width="0.0238%" height="15" fill="rgb(241,182,7)" fg:x="7907" fg:w="2"/><text x="94.5735%" y="447.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="94.2544%" y="421" width="0.0238%" height="15" fill="rgb(248,125,10)" fg:x="7907" fg:w="2"/><text x="94.5735%" y="431.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="94.2544%" y="405" width="0.0238%" height="15" fill="rgb(250,3,37)" fg:x="7907" fg:w="2"/><text x="94.5735%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (6 samples, 0.07%)</title><rect x="94.2305%" y="517" width="0.0715%" height="15" fill="rgb(237,102,7)" fg:x="7905" fg:w="6"/><text x="94.5496%" y="527.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (6 samples, 0.07%)</title><rect x="94.2305%" y="501" width="0.0715%" height="15" fill="rgb(235,5,5)" fg:x="7905" fg:w="6"/><text x="94.5496%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="94.2782%" y="485" width="0.0238%" height="15" fill="rgb(249,147,38)" fg:x="7909" fg:w="2"/><text x="94.5973%" y="495.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.02%)</title><rect x="94.2782%" y="469" width="0.0238%" height="15" fill="rgb(221,25,18)" fg:x="7909" fg:w="2"/><text x="94.5973%" y="479.50"/></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="94.2782%" y="453" width="0.0238%" height="15" fill="rgb(211,88,9)" fg:x="7909" fg:w="2"/><text x="94.5973%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (45 samples, 0.54%)</title><rect x="93.7895%" y="677" width="0.5364%" height="15" fill="rgb(219,62,54)" fg:x="7868" fg:w="45"/><text x="94.1086%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (43 samples, 0.51%)</title><rect x="93.8133%" y="661" width="0.5126%" height="15" fill="rgb(243,133,46)" fg:x="7870" fg:w="43"/><text x="94.1324%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (43 samples, 0.51%)</title><rect x="93.8133%" y="645" width="0.5126%" height="15" fill="rgb(214,168,53)" fg:x="7870" fg:w="43"/><text x="94.1324%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (40 samples, 0.48%)</title><rect x="93.8491%" y="629" width="0.4768%" height="15" fill="rgb(250,58,7)" fg:x="7873" fg:w="40"/><text x="94.1682%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (40 samples, 0.48%)</title><rect x="93.8491%" y="613" width="0.4768%" height="15" fill="rgb(249,131,5)" fg:x="7873" fg:w="40"/><text x="94.1682%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (26 samples, 0.31%)</title><rect x="94.0160%" y="597" width="0.3099%" height="15" fill="rgb(234,40,44)" fg:x="7887" fg:w="26"/><text x="94.3351%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (16 samples, 0.19%)</title><rect x="94.1352%" y="581" width="0.1907%" height="15" fill="rgb(225,188,42)" fg:x="7897" fg:w="16"/><text x="94.4543%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (15 samples, 0.18%)</title><rect x="94.1471%" y="565" width="0.1788%" height="15" fill="rgb(218,201,51)" fg:x="7898" fg:w="15"/><text x="94.4662%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (15 samples, 0.18%)</title><rect x="94.1471%" y="549" width="0.1788%" height="15" fill="rgb(214,209,38)" fg:x="7898" fg:w="15"/><text x="94.4662%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="94.2067%" y="533" width="0.1192%" height="15" fill="rgb(217,0,20)" fg:x="7903" fg:w="10"/><text x="94.5258%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="94.3021%" y="517" width="0.0238%" height="15" fill="rgb(248,183,46)" fg:x="7911" fg:w="2"/><text x="94.6212%" y="527.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="94.3021%" y="501" width="0.0238%" height="15" fill="rgb(208,99,41)" fg:x="7911" fg:w="2"/><text x="94.6212%" y="511.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="94.3021%" y="485" width="0.0238%" height="15" fill="rgb(210,189,49)" fg:x="7911" fg:w="2"/><text x="94.6212%" y="495.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="94.3259%" y="661" width="0.0238%" height="15" fill="rgb(239,191,42)" fg:x="7913" fg:w="2"/><text x="94.6450%" y="671.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="94.3259%" y="645" width="0.0238%" height="15" fill="rgb(240,138,26)" fg:x="7913" fg:w="2"/><text x="94.6450%" y="655.50"/></g><g><title>operator new (3 samples, 0.04%)</title><rect x="94.3497%" y="629" width="0.0358%" height="15" fill="rgb(234,45,22)" fg:x="7915" fg:w="3"/><text x="94.6688%" y="639.50"/></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="94.3497%" y="613" width="0.0358%" height="15" fill="rgb(228,43,35)" fg:x="7915" fg:w="3"/><text x="94.6688%" y="623.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="94.3736%" y="597" width="0.0119%" height="15" fill="rgb(215,201,54)" fg:x="7917" fg:w="1"/><text x="94.6927%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (7 samples, 0.08%)</title><rect x="94.3497%" y="645" width="0.0834%" height="15" fill="rgb(209,60,31)" fg:x="7915" fg:w="7"/><text x="94.6688%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (4 samples, 0.05%)</title><rect x="94.3855%" y="629" width="0.0477%" height="15" fill="rgb(232,66,12)" fg:x="7918" fg:w="4"/><text x="94.7046%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (4 samples, 0.05%)</title><rect x="94.3855%" y="613" width="0.0477%" height="15" fill="rgb(244,78,24)" fg:x="7918" fg:w="4"/><text x="94.7046%" y="623.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="94.4093%" y="597" width="0.0238%" height="15" fill="rgb(249,65,27)" fg:x="7920" fg:w="2"/><text x="94.7284%" y="607.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="94.4093%" y="581" width="0.0238%" height="15" fill="rgb(208,218,19)" fg:x="7920" fg:w="2"/><text x="94.7284%" y="591.50"/></g><g><title>std::_Function_handler&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;), cond::peeks(std::function&lt;bool (unsigned int)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="94.4451%" y="629" width="0.0119%" height="15" fill="rgb(212,181,38)" fg:x="7923" fg:w="1"/><text x="94.7642%" y="639.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="94.4451%" y="613" width="0.0119%" height="15" fill="rgb(207,118,40)" fg:x="7923" fg:w="1"/><text x="94.7642%" y="623.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="94.4451%" y="597" width="0.0119%" height="15" fill="rgb(207,126,20)" fg:x="7923" fg:w="1"/><text x="94.7642%" y="607.50"/></g><g><title>operator new (11 samples, 0.13%)</title><rect x="94.4570%" y="565" width="0.1311%" height="15" fill="rgb(232,15,46)" fg:x="7924" fg:w="11"/><text x="94.7761%" y="575.50"/></g><g><title>__GI___libc_malloc (11 samples, 0.13%)</title><rect x="94.4570%" y="549" width="0.1311%" height="15" fill="rgb(254,33,30)" fg:x="7924" fg:w="11"/><text x="94.7761%" y="559.50"/></g><g><title>_int_malloc (9 samples, 0.11%)</title><rect x="94.4809%" y="533" width="0.1073%" height="15" fill="rgb(233,92,20)" fg:x="7926" fg:w="9"/><text x="94.8000%" y="543.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="94.6001%" y="533" width="0.0119%" height="15" fill="rgb(225,195,54)" fg:x="7936" fg:w="1"/><text x="94.9192%" y="543.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="94.6001%" y="517" width="0.0119%" height="15" fill="rgb(208,196,7)" fg:x="7936" fg:w="1"/><text x="94.9192%" y="527.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="94.6120%" y="501" width="0.0119%" height="15" fill="rgb(253,19,35)" fg:x="7937" fg:w="1"/><text x="94.9311%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="94.6120%" y="485" width="0.0119%" height="15" fill="rgb(228,180,1)" fg:x="7937" fg:w="1"/><text x="94.9311%" y="495.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="94.6001%" y="549" width="0.0358%" height="15" fill="rgb(248,35,18)" fg:x="7936" fg:w="3"/><text x="94.9192%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (2 samples, 0.02%)</title><rect x="94.6120%" y="533" width="0.0238%" height="15" fill="rgb(220,34,8)" fg:x="7937" fg:w="2"/><text x="94.9311%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="94.6120%" y="517" width="0.0238%" height="15" fill="rgb(219,223,17)" fg:x="7937" fg:w="2"/><text x="94.9311%" y="527.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="94.6239%" y="501" width="0.0119%" height="15" fill="rgb(223,183,15)" fg:x="7938" fg:w="1"/><text x="94.9430%" y="511.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="94.6239%" y="485" width="0.0119%" height="15" fill="rgb(253,184,45)" fg:x="7938" fg:w="1"/><text x="94.9430%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="94.6358%" y="501" width="0.0119%" height="15" fill="rgb(207,97,29)" fg:x="7939" fg:w="1"/><text x="94.9549%" y="511.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="94.6358%" y="485" width="0.0119%" height="15" fill="rgb(250,170,27)" fg:x="7939" fg:w="1"/><text x="94.9549%" y="495.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="94.6478%" y="469" width="0.0238%" height="15" fill="rgb(206,178,17)" fg:x="7940" fg:w="2"/><text x="94.9669%" y="479.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="94.6478%" y="453" width="0.0238%" height="15" fill="rgb(213,92,46)" fg:x="7940" fg:w="2"/><text x="94.9669%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (3 samples, 0.04%)</title><rect x="94.6478%" y="485" width="0.0358%" height="15" fill="rgb(223,114,30)" fg:x="7940" fg:w="3"/><text x="94.9669%" y="495.50"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="94.6716%" y="469" width="0.0119%" height="15" fill="rgb(207,228,9)" fg:x="7942" fg:w="1"/><text x="94.9907%" y="479.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="94.6716%" y="453" width="0.0119%" height="15" fill="rgb(205,70,25)" fg:x="7942" fg:w="1"/><text x="94.9907%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::effect(std::function&lt;void (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="94.6954%" y="453" width="0.0238%" height="15" fill="rgb(252,45,30)" fg:x="7944" fg:w="2"/><text x="95.0145%" y="463.50"/></g><g><title>std::_Function_handler&lt;void (State&amp;), std::function&lt;Result (State&amp;)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="94.6954%" y="437" width="0.0238%" height="15" fill="rgb(219,185,54)" fg:x="7944" fg:w="2"/><text x="95.0145%" y="447.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="94.6954%" y="421" width="0.0238%" height="15" fill="rgb(219,208,54)" fg:x="7944" fg:w="2"/><text x="95.0145%" y="431.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="94.6954%" y="405" width="0.0238%" height="15" fill="rgb(207,164,54)" fg:x="7944" fg:w="2"/><text x="95.0145%" y="415.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (5 samples, 0.06%)</title><rect x="94.6835%" y="485" width="0.0596%" height="15" fill="rgb(240,155,22)" fg:x="7943" fg:w="5"/><text x="95.0026%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (5 samples, 0.06%)</title><rect x="94.6835%" y="469" width="0.0596%" height="15" fill="rgb(217,127,14)" fg:x="7943" fg:w="5"/><text x="95.0026%" y="479.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::finish(syms::Sym, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda(auto:1)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="94.7193%" y="453" width="0.0238%" height="15" fill="rgb(232,179,42)" fg:x="7946" fg:w="2"/><text x="95.0384%" y="463.50"/></g><g><title>operator new (2 samples, 0.02%)</title><rect x="94.7193%" y="437" width="0.0238%" height="15" fill="rgb(247,55,45)" fg:x="7946" fg:w="2"/><text x="95.0384%" y="447.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="94.7193%" y="421" width="0.0238%" height="15" fill="rgb(217,11,18)" fg:x="7946" fg:w="2"/><text x="95.0384%" y="431.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (10 samples, 0.12%)</title><rect x="94.6478%" y="501" width="0.1192%" height="15" fill="rgb(227,127,4)" fg:x="7940" fg:w="10"/><text x="94.9669%" y="511.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (2 samples, 0.02%)</title><rect x="94.7431%" y="485" width="0.0238%" height="15" fill="rgb(217,97,45)" fg:x="7948" fg:w="2"/><text x="95.0622%" y="495.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="94.7550%" y="469" width="0.0119%" height="15" fill="rgb(250,135,20)" fg:x="7949" fg:w="1"/><text x="95.0741%" y="479.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="94.7550%" y="453" width="0.0119%" height="15" fill="rgb(224,213,26)" fg:x="7949" fg:w="1"/><text x="95.0741%" y="463.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (27 samples, 0.32%)</title><rect x="94.4570%" y="581" width="0.3219%" height="15" fill="rgb(237,86,25)" fg:x="7924" fg:w="27"/><text x="94.7761%" y="591.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (16 samples, 0.19%)</title><rect x="94.5882%" y="565" width="0.1907%" height="15" fill="rgb(251,105,18)" fg:x="7935" fg:w="16"/><text x="94.9073%" y="575.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="94.6358%" y="549" width="0.1430%" height="15" fill="rgb(246,124,25)" fg:x="7939" fg:w="12"/><text x="94.9549%" y="559.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (12 samples, 0.14%)</title><rect x="94.6358%" y="533" width="0.1430%" height="15" fill="rgb(210,90,3)" fg:x="7939" fg:w="12"/><text x="94.9549%" y="543.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (12 samples, 0.14%)</title><rect x="94.6358%" y="517" width="0.1430%" height="15" fill="rgb(249,40,31)" fg:x="7939" fg:w="12"/><text x="94.9549%" y="527.50"/></g><g><title>std::function&lt;bool (State&amp;)&gt;::function (1 samples, 0.01%)</title><rect x="94.7670%" y="501" width="0.0119%" height="15" fill="rgb(231,228,1)" fg:x="7950" fg:w="1"/><text x="95.0861%" y="511.50"/></g><g><title>std::_Function_handler&lt;bool (State&amp;), cond::sym(syms::Sym)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="94.7670%" y="485" width="0.0119%" height="15" fill="rgb(242,25,49)" fg:x="7950" fg:w="1"/><text x="95.0861%" y="495.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (191 samples, 2.28%)</title><rect x="92.5140%" y="789" width="2.2768%" height="15" fill="rgb(224,142,22)" fg:x="7761" fg:w="191"/><text x="92.8331%" y="799.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (191 samples, 2.28%)</title><rect x="92.5140%" y="773" width="2.2768%" height="15" fill="rgb(228,106,29)" fg:x="7761" fg:w="191"/><text x="92.8331%" y="783.50">.. </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (189 samples, 2.25%)</title><rect x="92.5378%" y="757" width="2.2530%" height="15" fill="rgb(207,2,15)" fg:x="7763" fg:w="189"/><text x="92.8569%" y="767.50">.. </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (140 samples, 1.67%)</title><rect x="93.1219%" y="741" width="1.6689%" height="15" fill="rgb(231,43,37)" fg:x="7812" fg:w="140"/><text x="93.4410%" y="751.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (137 samples, 1.63%)</title><rect x="93.1577%" y="725" width="1.6331%" height="15" fill="rgb(245,193,12)" fg:x="7815" fg:w="137"/><text x="93.4768%" y="735.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (104 samples, 1.24%)</title><rect x="93.5511%" y="709" width="1.2397%" height="15" fill="rgb(246,9,49)" fg:x="7848" fg:w="104"/><text x="93.8702%" y="719.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (103 samples, 1.23%)</title><rect x="93.5630%" y="693" width="1.2278%" height="15" fill="rgb(218,50,36)" fg:x="7849" fg:w="103"/><text x="93.8821%" y="703.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (39 samples, 0.46%)</title><rect x="94.3259%" y="677" width="0.4649%" height="15" fill="rgb(225,206,16)" fg:x="7913" fg:w="39"/><text x="94.6450%" y="687.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (37 samples, 0.44%)</title><rect x="94.3497%" y="661" width="0.4411%" height="15" fill="rgb(242,52,5)" fg:x="7915" fg:w="37"/><text x="94.6688%" y="671.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_manager (30 samples, 0.36%)</title><rect x="94.4332%" y="645" width="0.3576%" height="15" fill="rgb(217,158,11)" fg:x="7922" fg:w="30"/><text x="94.7523%" y="655.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (28 samples, 0.33%)</title><rect x="94.4570%" y="629" width="0.3338%" height="15" fill="rgb(242,144,22)" fg:x="7924" fg:w="28"/><text x="94.7761%" y="639.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (28 samples, 0.33%)</title><rect x="94.4570%" y="613" width="0.3338%" height="15" fill="rgb(236,191,3)" fg:x="7924" fg:w="28"/><text x="94.7761%" y="623.50"/></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (28 samples, 0.33%)</title><rect x="94.4570%" y="597" width="0.3338%" height="15" fill="rgb(241,22,19)" fg:x="7924" fg:w="28"/><text x="94.7761%" y="607.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), std::function&lt;Result (State)&gt; &gt;::_M_manager (1 samples, 0.01%)</title><rect x="94.7789%" y="581" width="0.0119%" height="15" fill="rgb(205,217,44)" fg:x="7951" fg:w="1"/><text x="95.0980%" y="591.50"/></g><g><title>operator new (1 samples, 0.01%)</title><rect x="94.7789%" y="565" width="0.0119%" height="15" fill="rgb(231,53,3)" fg:x="7951" fg:w="1"/><text x="95.0980%" y="575.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="94.7789%" y="549" width="0.0119%" height="15" fill="rgb(207,13,22)" fg:x="7951" fg:w="1"/><text x="95.0980%" y="559.50"/></g><g><title>tree_sitter_haskell_external_scanner_scan (661 samples, 7.88%)</title><rect x="86.9234%" y="837" width="7.8794%" height="15" fill="rgb(234,62,29)" fg:x="7292" fg:w="661"/><text x="87.2425%" y="847.50">..ner_scan </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function (195 samples, 2.32%)</title><rect x="92.4782%" y="821" width="2.3245%" height="15" fill="rgb(226,175,44)" fg:x="7758" fg:w="195"/><text x="92.7973%" y="831.50">..n </text></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (193 samples, 2.30%)</title><rect x="92.5021%" y="805" width="2.3006%" height="15" fill="rgb(239,177,6)" fg:x="7760" fg:w="193"/><text x="92.8212%" y="815.50">.. </text></g><g><title>std::function&lt;Result (State&amp;)&gt;::function@plt (1 samples, 0.01%)</title><rect x="94.7908%" y="789" width="0.0119%" height="15" fill="rgb(249,125,15)" fg:x="7952" fg:w="1"/><text x="95.1099%" y="799.50"/></g><g><title>ts_external_scanner_state_eq (1 samples, 0.01%)</title><rect x="94.8027%" y="837" width="0.0119%" height="15" fill="rgb(210,201,5)" fg:x="7953" fg:w="1"/><text x="95.1218%" y="847.50"/></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="94.8027%" y="821" width="0.0119%" height="15" fill="rgb(210,14,6)" fg:x="7953" fg:w="1"/><text x="95.1218%" y="831.50"/></g><g><title>ts_language_table_entry (46 samples, 0.55%)</title><rect x="94.8146%" y="837" width="0.5483%" height="15" fill="rgb(239,141,15)" fg:x="7954" fg:w="46"/><text x="95.1337%" y="847.50"/></g><g><title>ts_lexer__eof (1 samples, 0.01%)</title><rect x="95.4226%" y="821" width="0.0119%" height="15" fill="rgb(235,75,9)" fg:x="8005" fg:w="1"/><text x="95.7417%" y="831.50"/></g><g><title>ts_lexer__get_lookahead (1 samples, 0.01%)</title><rect x="95.4345%" y="821" width="0.0119%" height="15" fill="rgb(246,122,37)" fg:x="8006" fg:w="1"/><text x="95.7536%" y="831.50"/></g><g><title>ts_lex (8 samples, 0.10%)</title><rect x="95.3630%" y="837" width="0.0954%" height="15" fill="rgb(235,75,52)" fg:x="8000" fg:w="8"/><text x="95.6821%" y="847.50"/></g><g><title>ts_lexer__mark_end (1 samples, 0.01%)</title><rect x="95.4464%" y="821" width="0.0119%" height="15" fill="rgb(235,179,12)" fg:x="8007" fg:w="1"/><text x="95.7655%" y="831.50"/></g><g><title>ts_lex_keywords (2 samples, 0.02%)</title><rect x="95.4583%" y="837" width="0.0238%" height="15" fill="rgb(223,20,9)" fg:x="8008" fg:w="2"/><text x="95.7774%" y="847.50"/></g><g><title>ts_lexer_finish (4 samples, 0.05%)</title><rect x="95.4822%" y="837" width="0.0477%" height="15" fill="rgb(223,75,22)" fg:x="8010" fg:w="4"/><text x="95.8013%" y="847.50"/></g><g><title>ts_lexer_start (2 samples, 0.02%)</title><rect x="95.5299%" y="837" width="0.0238%" height="15" fill="rgb(248,148,18)" fg:x="8014" fg:w="2"/><text x="95.8490%" y="847.50"/></g><g><title>ts_lexer__get_lookahead (1 samples, 0.01%)</title><rect x="95.5418%" y="821" width="0.0119%" height="15" fill="rgb(225,103,8)" fg:x="8015" fg:w="1"/><text x="95.8609%" y="831.50"/></g><g><title>ts_decode_utf8 (1 samples, 0.01%)</title><rect x="95.5418%" y="805" width="0.0119%" height="15" fill="rgb(237,168,17)" fg:x="8015" fg:w="1"/><text x="95.8609%" y="815.50"/></g><g><title>ts_parser__breakdown_top_of_stack (3 samples, 0.04%)</title><rect x="95.5537%" y="837" width="0.0358%" height="15" fill="rgb(215,192,38)" fg:x="8016" fg:w="3"/><text x="95.8728%" y="847.50"/></g><g><title>ts_stack_pop_pending (3 samples, 0.04%)</title><rect x="95.5537%" y="821" width="0.0358%" height="15" fill="rgb(237,69,28)" fg:x="8016" fg:w="3"/><text x="95.8728%" y="831.50"/></g><g><title>ts_subtree_array_copy (1 samples, 0.01%)</title><rect x="95.5775%" y="805" width="0.0119%" height="15" fill="rgb(254,167,32)" fg:x="8018" fg:w="1"/><text x="95.8966%" y="815.50"/></g><g><title>__calloc (1 samples, 0.01%)</title><rect x="95.5775%" y="789" width="0.0119%" height="15" fill="rgb(250,81,30)" fg:x="8018" fg:w="1"/><text x="95.8966%" y="799.50"/></g><g><title>ts_parser__can_reuse_first_leaf.isra.0 (3 samples, 0.04%)</title><rect x="95.5895%" y="837" width="0.0358%" height="15" fill="rgb(240,68,52)" fg:x="8019" fg:w="3"/><text x="95.9086%" y="847.50"/></g><g><title>ts_parser__do_all_potential_reductions (1 samples, 0.01%)</title><rect x="95.6252%" y="837" width="0.0119%" height="15" fill="rgb(205,97,42)" fg:x="8022" fg:w="1"/><text x="95.9443%" y="847.50"/></g><g><title>ts_language_table_entry (1 samples, 0.01%)</title><rect x="95.6252%" y="821" width="0.0119%" height="15" fill="rgb(217,10,22)" fg:x="8022" fg:w="1"/><text x="95.9443%" y="831.50"/></g><g><title>ts_language_table_entry (1 samples, 0.01%)</title><rect x="95.6371%" y="821" width="0.0119%" height="15" fill="rgb(216,21,26)" fg:x="8023" fg:w="1"/><text x="95.9562%" y="831.50"/></g><g><title>ts_stack__add_slice (1 samples, 0.01%)</title><rect x="95.6491%" y="805" width="0.0119%" height="15" fill="rgb(239,0,36)" fg:x="8024" fg:w="1"/><text x="95.9682%" y="815.50"/></g><g><title>ts_stack_pop_count (2 samples, 0.02%)</title><rect x="95.6491%" y="821" width="0.0238%" height="15" fill="rgb(216,162,28)" fg:x="8024" fg:w="2"/><text x="95.9682%" y="831.50"/></g><g><title>ts_subtree_retain (1 samples, 0.01%)</title><rect x="95.6610%" y="805" width="0.0119%" height="15" fill="rgb(246,22,39)" fg:x="8025" fg:w="1"/><text x="95.9801%" y="815.50"/></g><g><title>ts_parser__recover (4 samples, 0.05%)</title><rect x="95.6371%" y="837" width="0.0477%" height="15" fill="rgb(222,84,49)" fg:x="8023" fg:w="4"/><text x="95.9562%" y="847.50"/></g><g><title>ts_stack_renumber_version (1 samples, 0.01%)</title><rect x="95.6729%" y="821" width="0.0119%" height="15" fill="rgb(250,38,34)" fg:x="8026" fg:w="1"/><text x="95.9920%" y="831.50"/></g><g><title>ts_stack_error_cost (1 samples, 0.01%)</title><rect x="95.6848%" y="821" width="0.0119%" height="15" fill="rgb(236,0,38)" fg:x="8027" fg:w="1"/><text x="96.0039%" y="831.50"/></g><g><title>ts_stack_is_paused (1 samples, 0.01%)</title><rect x="95.6967%" y="821" width="0.0119%" height="15" fill="rgb(237,205,54)" fg:x="8028" fg:w="1"/><text x="96.0158%" y="831.50"/></g><g><title>ts_parser__version_status (3 samples, 0.04%)</title><rect x="95.6848%" y="837" width="0.0358%" height="15" fill="rgb(221,80,35)" fg:x="8027" fg:w="3"/><text x="96.0039%" y="847.50"/></g><g><title>ts_stack_node_count_since_error (1 samples, 0.01%)</title><rect x="95.7087%" y="821" width="0.0119%" height="15" fill="rgb(237,204,22)" fg:x="8029" fg:w="1"/><text x="96.0278%" y="831.50"/></g><g><title>ts_stack_is_active (1 samples, 0.01%)</title><rect x="95.7206%" y="837" width="0.0119%" height="15" fill="rgb(213,108,15)" fg:x="8030" fg:w="1"/><text x="96.0397%" y="847.50"/></g><g><title>ts_stack_is_halted (2 samples, 0.02%)</title><rect x="95.7325%" y="837" width="0.0238%" height="15" fill="rgb(251,187,9)" fg:x="8031" fg:w="2"/><text x="96.0516%" y="847.50"/></g><g><title>stack_node_add_link (5 samples, 0.06%)</title><rect x="95.7683%" y="821" width="0.0596%" height="15" fill="rgb(250,61,9)" fg:x="8034" fg:w="5"/><text x="96.0874%" y="831.50"/></g><g><title>ts_stack_can_merge (5 samples, 0.06%)</title><rect x="95.8279%" y="821" width="0.0596%" height="15" fill="rgb(230,131,33)" fg:x="8039" fg:w="5"/><text x="96.1470%" y="831.50"/></g><g><title>ts_stack_merge (15 samples, 0.18%)</title><rect x="95.7563%" y="837" width="0.1788%" height="15" fill="rgb(239,117,11)" fg:x="8033" fg:w="15"/><text x="96.0754%" y="847.50"/></g><g><title>ts_stack_remove_version (4 samples, 0.05%)</title><rect x="95.8875%" y="821" width="0.0477%" height="15" fill="rgb(222,112,44)" fg:x="8044" fg:w="4"/><text x="96.2066%" y="831.50"/></g><g><title>stack_node_release (4 samples, 0.05%)</title><rect x="95.8875%" y="805" width="0.0477%" height="15" fill="rgb(251,33,25)" fg:x="8044" fg:w="4"/><text x="96.2066%" y="815.50"/></g><g><title>ts_subtree_release (3 samples, 0.04%)</title><rect x="95.8994%" y="789" width="0.0358%" height="15" fill="rgb(208,171,34)" fg:x="8045" fg:w="3"/><text x="96.2185%" y="799.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="95.9232%" y="773" width="0.0119%" height="15" fill="rgb(250,166,54)" fg:x="8047" fg:w="1"/><text x="96.2423%" y="783.50"/></g><g><title>ts_stack_pause (1 samples, 0.01%)</title><rect x="95.9352%" y="837" width="0.0119%" height="15" fill="rgb(212,148,2)" fg:x="8048" fg:w="1"/><text x="96.2543%" y="847.50"/></g><g><title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="96.0305%" y="821" width="0.0834%" height="15" fill="rgb(224,92,39)" fg:x="8056" fg:w="7"/><text x="96.3496%" y="831.50"/></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="96.0544%" y="805" width="0.0596%" height="15" fill="rgb(250,28,16)" fg:x="8058" fg:w="5"/><text x="96.3735%" y="815.50"/></g><g><title>unlink_chunk.isra.2 (1 samples, 0.01%)</title><rect x="96.1020%" y="789" width="0.0119%" height="15" fill="rgb(227,128,26)" fg:x="8062" fg:w="1"/><text x="96.4211%" y="799.50"/></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="96.1140%" y="821" width="0.0238%" height="15" fill="rgb(248,66,7)" fg:x="8063" fg:w="2"/><text x="96.4331%" y="831.50"/></g><g><title>ts_stack__add_slice (3 samples, 0.04%)</title><rect x="96.1378%" y="821" width="0.0358%" height="15" fill="rgb(215,124,51)" fg:x="8065" fg:w="3"/><text x="96.4569%" y="831.50"/></g><g><title>ts_subtree_retain (2 samples, 0.02%)</title><rect x="96.1497%" y="805" width="0.0238%" height="15" fill="rgb(207,91,1)" fg:x="8066" fg:w="2"/><text x="96.4688%" y="815.50"/></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="96.1736%" y="789" width="0.0119%" height="15" fill="rgb(217,207,38)" fg:x="8068" fg:w="1"/><text x="96.4927%" y="799.50"/></g><g><title>ts_subtree_array_copy (2 samples, 0.02%)</title><rect x="96.1736%" y="821" width="0.0238%" height="15" fill="rgb(240,118,9)" fg:x="8068" fg:w="2"/><text x="96.4927%" y="831.50"/></g><g><title>__calloc (2 samples, 0.02%)</title><rect x="96.1736%" y="805" width="0.0238%" height="15" fill="rgb(224,147,4)" fg:x="8068" fg:w="2"/><text x="96.4927%" y="815.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="96.1855%" y="789" width="0.0119%" height="15" fill="rgb(205,105,13)" fg:x="8069" fg:w="1"/><text x="96.5046%" y="799.50"/></g><g><title>ts_subtree_array_reverse (2 samples, 0.02%)</title><rect x="96.1974%" y="821" width="0.0238%" height="15" fill="rgb(251,78,39)" fg:x="8070" fg:w="2"/><text x="96.5165%" y="831.50"/></g><g><title>ts_stack_pop_count (27 samples, 0.32%)</title><rect x="95.9471%" y="837" width="0.3219%" height="15" fill="rgb(225,60,44)" fg:x="8049" fg:w="27"/><text x="96.2662%" y="847.50"/></g><g><title>ts_subtree_retain (4 samples, 0.05%)</title><rect x="96.2212%" y="821" width="0.0477%" height="15" fill="rgb(221,228,40)" fg:x="8072" fg:w="4"/><text x="96.5403%" y="831.50"/></g><g><title>ts_stack_position (1 samples, 0.01%)</title><rect x="96.2689%" y="837" width="0.0119%" height="15" fill="rgb(215,104,30)" fg:x="8076" fg:w="1"/><text x="96.5880%" y="847.50"/></g><g><title>ts_stack_push (2 samples, 0.02%)</title><rect x="96.2808%" y="837" width="0.0238%" height="15" fill="rgb(206,183,3)" fg:x="8077" fg:w="2"/><text x="96.5999%" y="847.50"/></g><g><title>ts_stack_record_summary (1 samples, 0.01%)</title><rect x="96.3047%" y="837" width="0.0119%" height="15" fill="rgb(236,199,25)" fg:x="8079" fg:w="1"/><text x="96.6238%" y="847.50"/></g><g><title>ts_stack_remove_version (5 samples, 0.06%)</title><rect x="96.3166%" y="837" width="0.0596%" height="15" fill="rgb(230,107,29)" fg:x="8080" fg:w="5"/><text x="96.6357%" y="847.50"/></g><g><title>stack_node_release (5 samples, 0.06%)</title><rect x="96.3166%" y="821" width="0.0596%" height="15" fill="rgb(216,12,37)" fg:x="8080" fg:w="5"/><text x="96.6357%" y="831.50"/></g><g><title>ts_subtree_release (4 samples, 0.05%)</title><rect x="96.3285%" y="805" width="0.0477%" height="15" fill="rgb(238,165,28)" fg:x="8081" fg:w="4"/><text x="96.6476%" y="815.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="96.3643%" y="789" width="0.0119%" height="15" fill="rgb(226,173,5)" fg:x="8084" fg:w="1"/><text x="96.6834%" y="799.50"/></g><g><title>ts_stack_renumber_version (5 samples, 0.06%)</title><rect x="96.3762%" y="837" width="0.0596%" height="15" fill="rgb(229,9,37)" fg:x="8085" fg:w="5"/><text x="96.6953%" y="847.50"/></g><g><title>stack_node_release (5 samples, 0.06%)</title><rect x="96.3762%" y="821" width="0.0596%" height="15" fill="rgb(252,194,43)" fg:x="8085" fg:w="5"/><text x="96.6953%" y="831.50"/></g><g><title>ts_subtree_release (2 samples, 0.02%)</title><rect x="96.4120%" y="805" width="0.0238%" height="15" fill="rgb(215,58,45)" fg:x="8088" fg:w="2"/><text x="96.7311%" y="815.50"/></g><g><title>ts_stack_state (1 samples, 0.01%)</title><rect x="96.4358%" y="837" width="0.0119%" height="15" fill="rgb(218,34,51)" fg:x="8090" fg:w="1"/><text x="96.7549%" y="847.50"/></g><g><title>ts_subtree_balance (1 samples, 0.01%)</title><rect x="96.4477%" y="837" width="0.0119%" height="15" fill="rgb(230,104,27)" fg:x="8091" fg:w="1"/><text x="96.7668%" y="847.50"/></g><g><title>ts_subtree_external_scanner_state_eq (1 samples, 0.01%)</title><rect x="96.4596%" y="837" width="0.0119%" height="15" fill="rgb(250,9,6)" fg:x="8092" fg:w="1"/><text x="96.7787%" y="847.50"/></g><g><title>ts_subtree_make_mut (1 samples, 0.01%)</title><rect x="96.4716%" y="837" width="0.0119%" height="15" fill="rgb(245,10,16)" fg:x="8093" fg:w="1"/><text x="96.7907%" y="847.50"/></g><g><title>ts_subtree_clone (1 samples, 0.01%)</title><rect x="96.4716%" y="821" width="0.0119%" height="15" fill="rgb(227,182,27)" fg:x="8093" fg:w="1"/><text x="96.7907%" y="831.50"/></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="96.4716%" y="805" width="0.0119%" height="15" fill="rgb(225,91,37)" fg:x="8093" fg:w="1"/><text x="96.7907%" y="815.50"/></g><g><title>ts_subtree_new_leaf (1 samples, 0.01%)</title><rect x="96.4835%" y="837" width="0.0119%" height="15" fill="rgb(240,16,41)" fg:x="8094" fg:w="1"/><text x="96.8026%" y="847.50"/></g><g><title>ts_language_symbol_metadata (1 samples, 0.01%)</title><rect x="96.4954%" y="821" width="0.0119%" height="15" fill="rgb(214,108,54)" fg:x="8095" fg:w="1"/><text x="96.8145%" y="831.50"/></g><g><title>ts_subtree_new_node (15 samples, 0.18%)</title><rect x="96.4954%" y="837" width="0.1788%" height="15" fill="rgb(253,65,28)" fg:x="8095" fg:w="15"/><text x="96.8145%" y="847.50"/></g><g><title>ts_subtree_summarize_children (14 samples, 0.17%)</title><rect x="96.5073%" y="821" width="0.1669%" height="15" fill="rgb(246,105,4)" fg:x="8096" fg:w="14"/><text x="96.8264%" y="831.50"/></g><g><title>ts_language_symbol_metadata (1 samples, 0.01%)</title><rect x="96.6623%" y="805" width="0.0119%" height="15" fill="rgb(223,163,37)" fg:x="8109" fg:w="1"/><text x="96.9814%" y="815.50"/></g><g><title>ts_subtree_release (2 samples, 0.02%)</title><rect x="96.6742%" y="837" width="0.0238%" height="15" fill="rgb(206,202,31)" fg:x="8110" fg:w="2"/><text x="96.9933%" y="847.50"/></g><g><title>ts_parser_parse (855 samples, 10.19%)</title><rect x="86.5181%" y="853" width="10.1919%" height="15" fill="rgb(241,202,54)" fg:x="7258" fg:w="855"/><text x="86.8372%" y="863.50">..parser_parse </text></g><g><title>ts_subtree_retain (1 samples, 0.01%)</title><rect x="96.6981%" y="837" width="0.0119%" height="15" fill="rgb(220,22,45)" fg:x="8112" fg:w="1"/><text x="97.0172%" y="847.50"/></g><g><title>helix_term::compositor::Compositor::handle_event (869 samples, 10.36%)</title><rect x="86.3631%" y="981" width="10.3588%" height="15" fill="rgb(234,215,40)" fg:x="7245" fg:w="869"/><text x="86.6822%" y="991.50">..handle_event </text></g><g><title>&lt;helix_term::ui::editor::EditorView as helix_term::compositor::Component&gt;::handle_event (869 samples, 10.36%)</title><rect x="86.3631%" y="965" width="10.3588%" height="15" fill="rgb(220,3,5)" fg:x="7245" fg:w="869"/><text x="86.6822%" y="975.50">..handle_event </text></g><g><title>helix_term::ui::editor::EditorView::insert_mode (856 samples, 10.20%)</title><rect x="86.5181%" y="949" width="10.2038%" height="15" fill="rgb(210,8,15)" fg:x="7258" fg:w="856"/><text x="86.8372%" y="959.50">..insert_mode </text></g><g><title>helix_term::commands::insert::insert_char (856 samples, 10.20%)</title><rect x="86.5181%" y="933" width="10.2038%" height="15" fill="rgb(218,113,45)" fg:x="7258" fg:w="856"/><text x="86.8372%" y="943.50">..::insert_char </text></g><g><title>helix_view::document::Document::apply (856 samples, 10.20%)</title><rect x="86.5181%" y="917" width="10.2038%" height="15" fill="rgb(249,208,10)" fg:x="7258" fg:w="856"/><text x="86.8372%" y="927.50">..ment::apply </text></g><g><title>helix_view::document::Document::apply_impl (856 samples, 10.20%)</title><rect x="86.5181%" y="901" width="10.2038%" height="15" fill="rgb(250,145,17)" fg:x="7258" fg:w="856"/><text x="86.8372%" y="911.50">..::apply_impl </text></g><g><title>helix_core::syntax::LanguageLayer::update (856 samples, 10.20%)</title><rect x="86.5181%" y="885" width="10.2038%" height="15" fill="rgb(254,24,13)" fg:x="7258" fg:w="856"/><text x="86.8372%" y="895.50">..ayer::update </text></g><g><title>helix_core::syntax::LanguageLayer::parse (856 samples, 10.20%)</title><rect x="86.5181%" y="869" width="10.2038%" height="15" fill="rgb(244,36,15)" fg:x="7258" fg:w="856"/><text x="86.8372%" y="879.50">..Layer::parse </text></g><g><title>ts_tree_delete (1 samples, 0.01%)</title><rect x="96.7100%" y="853" width="0.0119%" height="15" fill="rgb(228,168,26)" fg:x="8113" fg:w="1"/><text x="97.0291%" y="863.50"/></g><g><title>ts_subtree_release (1 samples, 0.01%)</title><rect x="96.7100%" y="837" width="0.0119%" height="15" fill="rgb(214,145,10)" fg:x="8113" fg:w="1"/><text x="97.0291%" y="847.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="96.7100%" y="821" width="0.0119%" height="15" fill="rgb(232,59,25)" fg:x="8113" fg:w="1"/><text x="97.0291%" y="831.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="96.7100%" y="805" width="0.0119%" height="15" fill="rgb(254,181,2)" fg:x="8113" fg:w="1"/><text x="97.0291%" y="815.50"/></g><g><title>&lt;tree_sitter::QueryCaptures&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="96.7338%" y="885" width="0.0358%" height="15" fill="rgb(221,139,49)" fg:x="8115" fg:w="3"/><text x="97.0529%" y="895.50"/></g><g><title>ts_query_cursor_next_capture (2 samples, 0.02%)</title><rect x="96.7457%" y="869" width="0.0238%" height="15" fill="rgb(235,84,36)" fg:x="8116" fg:w="2"/><text x="97.0648%" y="879.50"/></g><g><title>&lt;helix_core::syntax::HighlightIter&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="96.7219%" y="901" width="0.0596%" height="15" fill="rgb(254,32,49)" fg:x="8114" fg:w="5"/><text x="97.0410%" y="911.50"/></g><g><title>arc_swap::debt::list::LocalNode::with (1 samples, 0.01%)</title><rect x="96.7696%" y="885" width="0.0119%" height="15" fill="rgb(214,136,49)" fg:x="8118" fg:w="1"/><text x="97.0887%" y="895.50"/></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load::_{{closure}} (1 samples, 0.01%)</title><rect x="96.7696%" y="869" width="0.0119%" height="15" fill="rgb(206,113,54)" fg:x="8118" fg:w="1"/><text x="97.0887%" y="879.50"/></g><g><title>helix_term::ui::editor::EditorView::doc_syntax_highlights (6 samples, 0.07%)</title><rect x="96.7219%" y="933" width="0.0715%" height="15" fill="rgb(226,78,17)" fg:x="8114" fg:w="6"/><text x="97.0410%" y="943.50"/></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.07%)</title><rect x="96.7219%" y="917" width="0.0715%" height="15" fill="rgb(249,189,19)" fg:x="8114" fg:w="6"/><text x="97.0410%" y="927.50"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="96.7815%" y="901" width="0.0119%" height="15" fill="rgb(211,82,26)" fg:x="8119" fg:w="1"/><text x="97.1006%" y="911.50"/></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="96.7815%" y="885" width="0.0119%" height="15" fill="rgb(206,131,52)" fg:x="8119" fg:w="1"/><text x="97.1006%" y="895.50"/></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="96.7815%" y="869" width="0.0119%" height="15" fill="rgb(223,51,24)" fg:x="8119" fg:w="1"/><text x="97.1006%" y="879.50"/></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="96.7815%" y="853" width="0.0119%" height="15" fill="rgb(235,93,36)" fg:x="8119" fg:w="1"/><text x="97.1006%" y="863.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="96.7815%" y="837" width="0.0119%" height="15" fill="rgb(219,118,14)" fg:x="8119" fg:w="1"/><text x="97.1006%" y="847.50"/></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="96.7815%" y="821" width="0.0119%" height="15" fill="rgb(240,145,10)" fg:x="8119" fg:w="1"/><text x="97.1006%" y="831.50"/></g><g><title>helix_term::ui::editor::EditorView::render_focused_view_elements (1 samples, 0.01%)</title><rect x="96.7934%" y="933" width="0.0119%" height="15" fill="rgb(241,104,15)" fg:x="8120" fg:w="1"/><text x="97.1125%" y="943.50"/></g><g><title>helix_view::view::View::screen_coords_at_pos (1 samples, 0.01%)</title><rect x="96.7934%" y="917" width="0.0119%" height="15" fill="rgb(248,117,21)" fg:x="8120" fg:w="1"/><text x="97.1125%" y="927.50"/></g><g><title>&lt;helix_core::graphemes::RopeGraphemes as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="96.7934%" y="901" width="0.0119%" height="15" fill="rgb(250,184,34)" fg:x="8120" fg:w="1"/><text x="97.1125%" y="911.50"/></g><g><title>unicode_segmentation::grapheme::GraphemeCursor::next_boundary (1 samples, 0.01%)</title><rect x="96.7934%" y="885" width="0.0119%" height="15" fill="rgb(218,169,23)" fg:x="8120" fg:w="1"/><text x="97.1125%" y="895.50"/></g><g><title>helix_term::ui::editor::EditorView::render_gutter (1 samples, 0.01%)</title><rect x="96.8053%" y="933" width="0.0119%" height="15" fill="rgb(214,33,53)" fg:x="8121" fg:w="1"/><text x="97.1244%" y="943.50"/></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="96.8053%" y="917" width="0.0119%" height="15" fill="rgb(239,78,4)" fg:x="8121" fg:w="1"/><text x="97.1244%" y="927.50"/></g><g><title>helix_core::graphemes::nth_prev_grapheme_boundary (1 samples, 0.01%)</title><rect x="96.8053%" y="901" width="0.0119%" height="15" fill="rgb(250,25,23)" fg:x="8121" fg:w="1"/><text x="97.1244%" y="911.50"/></g><g><title>ropey::slice::RopeSlice::char_to_byte (1 samples, 0.01%)</title><rect x="96.8053%" y="885" width="0.0119%" height="15" fill="rgb(220,205,51)" fg:x="8121" fg:w="1"/><text x="97.1244%" y="895.50"/></g><g><title>&lt;helix_core::graphemes::RopeGraphemes as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="96.8411%" y="917" width="0.0596%" height="15" fill="rgb(252,115,2)" fg:x="8124" fg:w="5"/><text x="97.1602%" y="927.50"/></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.04%)</title><rect x="96.8649%" y="901" width="0.0358%" height="15" fill="rgb(222,106,48)" fg:x="8126" fg:w="3"/><text x="97.1840%" y="911.50"/></g><g><title>ropey::slice::RopeSlice::char_to_byte (2 samples, 0.02%)</title><rect x="96.9484%" y="853" width="0.0238%" height="15" fill="rgb(225,77,33)" fg:x="8133" fg:w="2"/><text x="97.2675%" y="863.50"/></g><g><title>ropey::slice::RopeSlice::get_chunk_at_char (1 samples, 0.01%)</title><rect x="96.9603%" y="837" width="0.0119%" height="15" fill="rgb(250,135,2)" fg:x="8134" fg:w="1"/><text x="97.2794%" y="847.50"/></g><g><title>helix_core::graphemes::nth_next_grapheme_boundary (7 samples, 0.08%)</title><rect x="96.9007%" y="869" width="0.0834%" height="15" fill="rgb(221,217,54)" fg:x="8129" fg:w="7"/><text x="97.2198%" y="879.50"/></g><g><title>unicode_segmentation::grapheme::GraphemeCursor::next_boundary (1 samples, 0.01%)</title><rect x="96.9722%" y="853" width="0.0119%" height="15" fill="rgb(233,12,6)" fg:x="8135" fg:w="1"/><text x="97.2913%" y="863.50"/></g><g><title>&lt;helix_core::syntax::Merge&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.13%)</title><rect x="96.9007%" y="917" width="0.1311%" height="15" fill="rgb(251,10,27)" fg:x="8129" fg:w="11"/><text x="97.2198%" y="927.50"/></g><g><title>&lt;helix_core::syntax::Merge&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.13%)</title><rect x="96.9007%" y="901" width="0.1311%" height="15" fill="rgb(214,20,35)" fg:x="8129" fg:w="11"/><text x="97.2198%" y="911.50"/></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.13%)</title><rect x="96.9007%" y="885" width="0.1311%" height="15" fill="rgb(249,13,18)" fg:x="8129" fg:w="11"/><text x="97.2198%" y="895.50"/></g><g><title>ropey::slice::RopeSlice::byte_to_char (4 samples, 0.05%)</title><rect x="96.9841%" y="869" width="0.0477%" height="15" fill="rgb(251,115,18)" fg:x="8136" fg:w="4"/><text x="97.3032%" y="879.50"/></g><g><title>helix_tui::buffer::Buffer::set_stringn (1 samples, 0.01%)</title><rect x="97.0318%" y="917" width="0.0119%" height="15" fill="rgb(219,91,11)" fg:x="8140" fg:w="1"/><text x="97.3509%" y="927.50"/></g><g><title>&lt;helix_term::ui::editor::EditorView as helix_term::compositor::Component&gt;::render (31 samples, 0.37%)</title><rect x="96.7219%" y="965" width="0.3695%" height="15" fill="rgb(238,130,14)" fg:x="8114" fg:w="31"/><text x="97.0410%" y="975.50"/></g><g><title>helix_term::ui::editor::EditorView::render_view (31 samples, 0.37%)</title><rect x="96.7219%" y="949" width="0.3695%" height="15" fill="rgb(216,197,46)" fg:x="8114" fg:w="31"/><text x="97.0410%" y="959.50"/></g><g><title>helix_term::ui::editor::EditorView::render_text_highlights (23 samples, 0.27%)</title><rect x="96.8173%" y="933" width="0.2742%" height="15" fill="rgb(239,113,46)" fg:x="8122" fg:w="23"/><text x="97.1364%" y="943.50"/></g><g><title>ropey::slice::RopeSlice::get_slice (4 samples, 0.05%)</title><rect x="97.0437%" y="917" width="0.0477%" height="15" fill="rgb(220,76,52)" fg:x="8141" fg:w="4"/><text x="97.3628%" y="927.50"/></g><g><title>ropey::slice::RopeSlice::new_with_range (4 samples, 0.05%)</title><rect x="97.0437%" y="901" width="0.0477%" height="15" fill="rgb(247,167,28)" fg:x="8141" fg:w="4"/><text x="97.3628%" y="911.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="97.0914%" y="853" width="0.0119%" height="15" fill="rgb(228,6,44)" fg:x="8145" fg:w="1"/><text x="97.4105%" y="863.50"/></g><g><title>tokio::park::thread::CachedParkThread::block_on (903 samples, 10.76%)</title><rect x="86.3512%" y="1045" width="10.7641%" height="15" fill="rgb(214,75,23)" fg:x="7244" fg:w="903"/><text x="86.6703%" y="1055.50">..ead::block_on </text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (903 samples, 10.76%)</title><rect x="86.3512%" y="1029" width="10.7641%" height="15" fill="rgb(241,211,28)" fg:x="7244" fg:w="903"/><text x="86.6703%" y="1039.50">..:Future&gt;::poll </text></g><g><title>helix_term::application::Application::run::{{closure}} (903 samples, 10.76%)</title><rect x="86.3512%" y="1013" width="10.7641%" height="15" fill="rgb(216,147,39)" fg:x="7244" fg:w="903"/><text x="86.6703%" y="1023.50">..:{{closure}} </text></g><g><title>helix_term::application::Application::handle_terminal_events (902 samples, 10.75%)</title><rect x="86.3631%" y="997" width="10.7522%" height="15" fill="rgb(237,121,45)" fg:x="7245" fg:w="902"/><text x="86.6822%" y="1007.50">..rminal_events </text></g><g><title>helix_term::compositor::Compositor::render (33 samples, 0.39%)</title><rect x="96.7219%" y="981" width="0.3934%" height="15" fill="rgb(214,115,15)" fg:x="8114" fg:w="33"/><text x="97.0410%" y="991.50"/></g><g><title>helix_term::ui::prompt::Prompt::render_prompt (2 samples, 0.02%)</title><rect x="97.0914%" y="965" width="0.0238%" height="15" fill="rgb(253,132,27)" fg:x="8145" fg:w="2"/><text x="97.4105%" y="975.50"/></g><g><title>&lt;helix_tui::widgets::paragraph::Paragraph as helix_tui::widgets::Widget&gt;::render (2 samples, 0.02%)</title><rect x="97.0914%" y="949" width="0.0238%" height="15" fill="rgb(222,56,1)" fg:x="8145" fg:w="2"/><text x="97.4105%" y="959.50"/></g><g><title>&lt;helix_tui::widgets::reflow::WordWrapper as helix_tui::widgets::reflow::LineComposer&gt;::next_line (2 samples, 0.02%)</title><rect x="97.0914%" y="933" width="0.0238%" height="15" fill="rgb(216,99,46)" fg:x="8145" fg:w="2"/><text x="97.4105%" y="943.50"/></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="97.0914%" y="917" width="0.0238%" height="15" fill="rgb(232,1,9)" fg:x="8145" fg:w="2"/><text x="97.4105%" y="927.50"/></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="97.0914%" y="901" width="0.0238%" height="15" fill="rgb(215,41,52)" fg:x="8145" fg:w="2"/><text x="97.4105%" y="911.50"/></g><g><title>__GI___libc_realloc (2 samples, 0.02%)</title><rect x="97.0914%" y="885" width="0.0238%" height="15" fill="rgb(223,107,41)" fg:x="8145" fg:w="2"/><text x="97.4105%" y="895.50"/></g><g><title>_int_realloc (2 samples, 0.02%)</title><rect x="97.0914%" y="869" width="0.0238%" height="15" fill="rgb(208,151,32)" fg:x="8145" fg:w="2"/><text x="97.4105%" y="879.50"/></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="97.1033%" y="853" width="0.0119%" height="15" fill="rgb(229,32,3)" fg:x="8146" fg:w="1"/><text x="97.4224%" y="863.50"/></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="97.1033%" y="837" width="0.0119%" height="15" fill="rgb(234,186,36)" fg:x="8146" fg:w="1"/><text x="97.4224%" y="847.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="97.1153%" y="965" width="0.0119%" height="15" fill="rgb(216,9,5)" fg:x="8147" fg:w="1"/><text x="97.4344%" y="975.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="97.1153%" y="949" width="0.0119%" height="15" fill="rgb(226,151,21)" fg:x="8147" fg:w="1"/><text x="97.4344%" y="959.50"/></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="97.1153%" y="997" width="0.0238%" height="15" fill="rgb(210,130,28)" fg:x="8147" fg:w="2"/><text x="97.4344%" y="1007.50"/></g><g><title>core::ptr::drop_in_place&lt;helix_term::application::Application&gt; (2 samples, 0.02%)</title><rect x="97.1153%" y="981" width="0.0238%" height="15" fill="rgb(239,58,31)" fg:x="8147" fg:w="2"/><text x="97.4344%" y="991.50"/></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="97.1272%" y="965" width="0.0119%" height="15" fill="rgb(213,14,0)" fg:x="8148" fg:w="1"/><text x="97.4463%" y="975.50"/></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="97.1272%" y="949" width="0.0119%" height="15" fill="rgb(228,97,38)" fg:x="8148" fg:w="1"/><text x="97.4463%" y="959.50"/></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex::pool::Pool&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="97.1272%" y="933" width="0.0119%" height="15" fill="rgb(248,9,13)" fg:x="8148" fg:w="1"/><text x="97.4463%" y="943.50"/></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="97.1272%" y="917" width="0.0119%" height="15" fill="rgb(233,149,17)" fg:x="8148" fg:w="1"/><text x="97.4463%" y="927.50"/></g><g><title>core::ptr::drop_in_place&lt;regex::prog::Program&gt; (1 samples, 0.01%)</title><rect x="97.1272%" y="901" width="0.0119%" height="15" fill="rgb(233,127,53)" fg:x="8148" fg:w="1"/><text x="97.4463%" y="911.50"/></g><g><title>tokio::runtime::Runtime::block_on (18 samples, 0.21%)</title><rect x="97.1153%" y="1045" width="0.2146%" height="15" fill="rgb(207,120,37)" fg:x="8147" fg:w="18"/><text x="97.4344%" y="1055.50"/></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (18 samples, 0.21%)</title><rect x="97.1153%" y="1029" width="0.2146%" height="15" fill="rgb(210,65,38)" fg:x="8147" fg:w="18"/><text x="97.4344%" y="1039.50"/></g><g><title>tokio::park::thread::CachedParkThread::block_on (18 samples, 0.21%)</title><rect x="97.1153%" y="1013" width="0.2146%" height="15" fill="rgb(229,206,39)" fg:x="8147" fg:w="18"/><text x="97.4344%" y="1023.50"/></g><g><title>tokio::park::thread::Inner::park (16 samples, 0.19%)</title><rect x="97.1391%" y="997" width="0.1907%" height="15" fill="rgb(237,11,35)" fg:x="8149" fg:w="16"/><text x="97.4582%" y="1007.50"/></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (16 samples, 0.19%)</title><rect x="97.1391%" y="981" width="0.1907%" height="15" fill="rgb(237,159,38)" fg:x="8149" fg:w="16"/><text x="97.4582%" y="991.50"/></g><g><title>syscall (15 samples, 0.18%)</title><rect x="97.1510%" y="965" width="0.1788%" height="15" fill="rgb(239,79,36)" fg:x="8150" fg:w="15"/><text x="97.4701%" y="975.50"/></g><g><title>helix_term::ui::editor::EditorView::handle_keymap_event (1 samples, 0.01%)</title><rect x="97.3418%" y="933" width="0.0119%" height="15" fill="rgb(231,163,51)" fg:x="8166" fg:w="1"/><text x="97.6609%" y="943.50"/></g><g><title>helix_term::keymap::Keymap::get (1 samples, 0.01%)</title><rect x="97.3418%" y="917" width="0.0119%" height="15" fill="rgb(226,68,29)" fg:x="8166" fg:w="1"/><text x="97.6609%" y="927.50"/></g><g><title>helix_term::keymap::KeyTrie::search (1 samples, 0.01%)</title><rect x="97.3418%" y="901" width="0.0119%" height="15" fill="rgb(250,192,3)" fg:x="8166" fg:w="1"/><text x="97.6609%" y="911.50"/></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="97.3418%" y="885" width="0.0119%" height="15" fill="rgb(206,11,13)" fg:x="8166" fg:w="1"/><text x="97.6609%" y="895.50"/></g><g><title>helix_core::position::visual_coords_at_pos (1 samples, 0.01%)</title><rect x="97.3537%" y="917" width="0.0119%" height="15" fill="rgb(234,128,26)" fg:x="8167" fg:w="1"/><text x="97.6728%" y="927.50"/></g><g><title>ropey::slice::RopeSlice::slice (1 samples, 0.01%)</title><rect x="97.3537%" y="901" width="0.0119%" height="15" fill="rgb(226,134,12)" fg:x="8167" fg:w="1"/><text x="97.6728%" y="911.50"/></g><g><title>ropey::slice::RopeSlice::new_with_range (1 samples, 0.01%)</title><rect x="97.3537%" y="885" width="0.0119%" height="15" fill="rgb(240,60,15)" fg:x="8167" fg:w="1"/><text x="97.6728%" y="895.50"/></g><g><title>helix_term::compositor::Compositor::handle_event (3 samples, 0.04%)</title><rect x="97.3418%" y="965" width="0.0358%" height="15" fill="rgb(222,112,11)" fg:x="8166" fg:w="3"/><text x="97.6609%" y="975.50"/></g><g><title>&lt;helix_term::ui::editor::EditorView as helix_term::compositor::Component&gt;::handle_event (3 samples, 0.04%)</title><rect x="97.3418%" y="949" width="0.0358%" height="15" fill="rgb(231,207,44)" fg:x="8166" fg:w="3"/><text x="97.6609%" y="959.50"/></g><g><title>helix_view::view::View::offset_coords_to_in_view (2 samples, 0.02%)</title><rect x="97.3537%" y="933" width="0.0238%" height="15" fill="rgb(250,222,54)" fg:x="8167" fg:w="2"/><text x="97.6728%" y="943.50"/></g><g><title>helix_view::document::Document::selection (1 samples, 0.01%)</title><rect x="97.3656%" y="917" width="0.0119%" height="15" fill="rgb(243,223,15)" fg:x="8168" fg:w="1"/><text x="97.6847%" y="927.50"/></g><g><title>helix_term::ui::editor::EditorView::render_view (1 samples, 0.01%)</title><rect x="97.3894%" y="933" width="0.0119%" height="15" fill="rgb(239,2,5)" fg:x="8170" fg:w="1"/><text x="97.7085%" y="943.50"/></g><g><title>&lt;helix_term::ui::editor::EditorView as helix_term::compositor::Component&gt;::render (9 samples, 0.11%)</title><rect x="97.3894%" y="949" width="0.1073%" height="15" fill="rgb(241,83,27)" fg:x="8170" fg:w="9"/><text x="97.7085%" y="959.50"/></g><g><title>helix_tui::buffer::Buffer::set_style (8 samples, 0.10%)</title><rect x="97.4014%" y="933" width="0.0954%" height="15" fill="rgb(223,175,51)" fg:x="8171" fg:w="8"/><text x="97.7205%" y="943.50"/></g><g><title>helix_term::ui::prompt::Prompt::render_prompt (1 samples, 0.01%)</title><rect x="97.4967%" y="949" width="0.0119%" height="15" fill="rgb(209,11,47)" fg:x="8179" fg:w="1"/><text x="97.8158%" y="959.50"/></g><g><title>helix_term::commands::command_mode::{{closure}} (1 samples, 0.01%)</title><rect x="97.4967%" y="933" width="0.0119%" height="15" fill="rgb(249,60,43)" fg:x="8179" fg:w="1"/><text x="97.8158%" y="943.50"/></g><g><title>&lt;helix_tui::backend::crossterm::CrosstermBackend&lt;W&gt; as helix_tui::backend::Backend&gt;::draw (2 samples, 0.02%)</title><rect x="97.6517%" y="933" width="0.0238%" height="15" fill="rgb(244,84,47)" fg:x="8192" fg:w="2"/><text x="97.9708%" y="943.50"/></g><g><title>crossterm::command::write_command_ansi (2 samples, 0.02%)</title><rect x="97.6517%" y="917" width="0.0238%" height="15" fill="rgb(241,110,24)" fg:x="8192" fg:w="2"/><text x="97.9708%" y="927.50"/></g><g><title>core::fmt::write (2 samples, 0.02%)</title><rect x="97.6517%" y="901" width="0.0238%" height="15" fill="rgb(236,79,1)" fg:x="8192" fg:w="2"/><text x="97.9708%" y="911.50"/></g><g><title>&lt;crossterm::command::write_command_ansi::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="97.6517%" y="885" width="0.0238%" height="15" fill="rgb(210,152,4)" fg:x="8192" fg:w="2"/><text x="97.9708%" y="895.50"/></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (2 samples, 0.02%)</title><rect x="97.6517%" y="869" width="0.0238%" height="15" fill="rgb(218,71,19)" fg:x="8192" fg:w="2"/><text x="97.9708%" y="879.50"/></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="97.6636%" y="853" width="0.0119%" height="15" fill="rgb(207,161,51)" fg:x="8193" fg:w="1"/><text x="97.9827%" y="863.50"/></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.12%)</title><rect x="97.9735%" y="917" width="0.1192%" height="15" fill="rgb(219,84,54)" fg:x="8219" fg:w="10"/><text x="98.2926%" y="927.50"/></g><g><title>helix_term::application::Application::handle_terminal_events (64 samples, 0.76%)</title><rect x="97.3418%" y="981" width="0.7629%" height="15" fill="rgb(243,172,34)" fg:x="8166" fg:w="64"/><text x="97.6609%" y="991.50"/></g><g><title>helix_term::compositor::Compositor::render (61 samples, 0.73%)</title><rect x="97.3775%" y="965" width="0.7271%" height="15" fill="rgb(233,181,1)" fg:x="8169" fg:w="61"/><text x="97.6966%" y="975.50"/></g><g><title>helix_tui::terminal::Terminal&lt;B&gt;::draw (50 samples, 0.60%)</title><rect x="97.5086%" y="949" width="0.5960%" height="15" fill="rgb(236,21,18)" fg:x="8180" fg:w="50"/><text x="97.8277%" y="959.50"/></g><g><title>helix_tui::buffer::Buffer::diff (36 samples, 0.43%)</title><rect x="97.6755%" y="933" width="0.4291%" height="15" fill="rgb(244,165,15)" fg:x="8194" fg:w="36"/><text x="97.9946%" y="943.50"/></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="98.0927%" y="917" width="0.0119%" height="15" fill="rgb(235,75,19)" fg:x="8229" fg:w="1"/><text x="98.4118%" y="927.50"/></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (66 samples, 0.79%)</title><rect x="97.3298%" y="1045" width="0.7867%" height="15" fill="rgb(217,229,29)" fg:x="8165" fg:w="66"/><text x="97.6489%" y="1055.50"/></g><g><title>tokio::park::thread::CachedParkThread::block_on (66 samples, 0.79%)</title><rect x="97.3298%" y="1029" width="0.7867%" height="15" fill="rgb(250,200,19)" fg:x="8165" fg:w="66"/><text x="97.6489%" y="1039.50"/></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (66 samples, 0.79%)</title><rect x="97.3298%" y="1013" width="0.7867%" height="15" fill="rgb(218,195,36)" fg:x="8165" fg:w="66"/><text x="97.6489%" y="1023.50"/></g><g><title>helix_term::application::Application::run::{{closure}} (66 samples, 0.79%)</title><rect x="97.3298%" y="997" width="0.7867%" height="15" fill="rgb(206,183,32)" fg:x="8165" fg:w="66"/><text x="97.6489%" y="1007.50"/></g><g><title>helix_term::compositor::Compositor::render (1 samples, 0.01%)</title><rect x="98.1047%" y="981" width="0.0119%" height="15" fill="rgb(235,151,53)" fg:x="8230" fg:w="1"/><text x="98.4238%" y="991.50"/></g><g><title>helix_tui::terminal::Terminal&lt;B&gt;::draw (1 samples, 0.01%)</title><rect x="98.1047%" y="965" width="0.0119%" height="15" fill="rgb(244,120,37)" fg:x="8230" fg:w="1"/><text x="98.4238%" y="975.50"/></g><g><title>&lt;helix_tui::backend::crossterm::CrosstermBackend&lt;W&gt; as helix_tui::backend::Backend&gt;::draw (1 samples, 0.01%)</title><rect x="98.1047%" y="949" width="0.0119%" height="15" fill="rgb(209,96,41)" fg:x="8230" fg:w="1"/><text x="98.4238%" y="959.50"/></g><g><title>crossterm::command::write_command_ansi (1 samples, 0.01%)</title><rect x="98.1047%" y="933" width="0.0119%" height="15" fill="rgb(208,229,20)" fg:x="8230" fg:w="1"/><text x="98.4238%" y="943.50"/></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="98.1047%" y="917" width="0.0119%" height="15" fill="rgb(208,153,33)" fg:x="8230" fg:w="1"/><text x="98.4238%" y="927.50"/></g><g><title>&lt;crossterm::command::write_command_ansi::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="98.1047%" y="901" width="0.0119%" height="15" fill="rgb(223,196,8)" fg:x="8230" fg:w="1"/><text x="98.4238%" y="911.50"/></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="98.1047%" y="885" width="0.0119%" height="15" fill="rgb(241,75,49)" fg:x="8230" fg:w="1"/><text x="98.4238%" y="895.50"/></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="98.1047%" y="869" width="0.0119%" height="15" fill="rgb(212,52,42)" fg:x="8230" fg:w="1"/><text x="98.4238%" y="879.50"/></g><g><title>ts_node_end_byte (1 samples, 0.01%)</title><rect x="98.1166%" y="1045" width="0.0119%" height="15" fill="rgb(220,148,43)" fg:x="8231" fg:w="1"/><text x="98.4357%" y="1055.50"/></g><g><title>ts_subtree_array_remove_trailing_extras (1 samples, 0.01%)</title><rect x="98.1285%" y="1045" width="0.0119%" height="15" fill="rgb(228,88,15)" fg:x="8232" fg:w="1"/><text x="98.4476%" y="1055.50"/></g><g><title>ts_subtree_new_node (1 samples, 0.01%)</title><rect x="98.1404%" y="1045" width="0.0119%" height="15" fill="rgb(213,87,14)" fg:x="8233" fg:w="1"/><text x="98.4595%" y="1055.50"/></g><g><title>ts_subtree_release (2 samples, 0.02%)</title><rect x="98.1523%" y="1045" width="0.0238%" height="15" fill="rgb(220,198,31)" fg:x="8234" fg:w="2"/><text x="98.4714%" y="1055.50"/></g><g><title>ts_tree_cursor_current_status (1 samples, 0.01%)</title><rect x="98.1762%" y="1045" width="0.0119%" height="15" fill="rgb(223,165,38)" fg:x="8236" fg:w="1"/><text x="98.4953%" y="1055.50"/></g><g><title>unicode_segmentation::grapheme::GraphemeCursor::grapheme_category (1 samples, 0.01%)</title><rect x="98.1881%" y="1045" width="0.0119%" height="15" fill="rgb(247,56,48)" fg:x="8237" fg:w="1"/><text x="98.5072%" y="1055.50"/></g><g><title>unicode_segmentation::grapheme::GraphemeCursor::next_boundary (1 samples, 0.01%)</title><rect x="98.2000%" y="1045" width="0.0119%" height="15" fill="rgb(222,150,13)" fg:x="8238" fg:w="1"/><text x="98.5191%" y="1055.50"/></g><g><title>[unknown] (6,958 samples, 82.94%)</title><rect x="15.2819%" y="1061" width="82.9419%" height="15" fill="rgb(218,214,11)" fg:x="1282" fg:w="6958"/><text x="15.6010%" y="1071.50">[unknown] </text></g><g><title>unlink_chunk.isra.2 (1 samples, 0.01%)</title><rect x="98.2119%" y="1045" width="0.0119%" height="15" fill="rgb(246,111,16)" fg:x="8239" fg:w="1"/><text x="98.5310%" y="1055.50"/></g><g><title>__GI___ctype_init (1 samples, 0.01%)</title><rect x="98.7245%" y="1029" width="0.0119%" height="15" fill="rgb(250,127,26)" fg:x="8282" fg:w="1"/><text x="99.0436%" y="1039.50"/></g><g><title>crossterm::event::poll_internal (5 samples, 0.06%)</title><rect x="98.7484%" y="981" width="0.0596%" height="15" fill="rgb(237,156,23)" fg:x="8284" fg:w="5"/><text x="99.0675%" y="991.50"/></g><g><title>crossterm::event::read::InternalEventReader::poll (5 samples, 0.06%)</title><rect x="98.7484%" y="965" width="0.0596%" height="15" fill="rgb(215,143,51)" fg:x="8284" fg:w="5"/><text x="99.0675%" y="975.50"/></g><g><title>&lt;crossterm::event::source::unix::UnixInternalEventSource as crossterm::event::source::EventSource&gt;::try_read (5 samples, 0.06%)</title><rect x="98.7484%" y="949" width="0.0596%" height="15" fill="rgb(209,119,39)" fg:x="8284" fg:w="5"/><text x="99.0675%" y="959.50"/></g><g><title>epoll_wait (5 samples, 0.06%)</title><rect x="98.7484%" y="933" width="0.0596%" height="15" fill="rgb(228,181,16)" fg:x="8284" fg:w="5"/><text x="99.0675%" y="943.50"/></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="98.8080%" y="965" width="0.0119%" height="15" fill="rgb(236,113,51)" fg:x="8289" fg:w="1"/><text x="99.1271%" y="975.50"/></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (17 samples, 0.20%)</title><rect x="98.7364%" y="1013" width="0.2026%" height="15" fill="rgb(223,132,1)" fg:x="8283" fg:w="17"/><text x="99.0555%" y="1023.50"/></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17 samples, 0.20%)</title><rect x="98.7364%" y="997" width="0.2026%" height="15" fill="rgb(227,4,54)" fg:x="8283" fg:w="17"/><text x="99.0555%" y="1007.50"/></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::recv (11 samples, 0.13%)</title><rect x="98.8080%" y="981" width="0.1311%" height="15" fill="rgb(254,72,52)" fg:x="8289" fg:w="11"/><text x="99.1271%" y="991.50"/></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (10 samples, 0.12%)</title><rect x="98.8199%" y="965" width="0.1192%" height="15" fill="rgb(252,104,52)" fg:x="8290" fg:w="10"/><text x="99.1390%" y="975.50"/></g><g><title>syscall (9 samples, 0.11%)</title><rect x="98.8318%" y="949" width="0.1073%" height="15" fill="rgb(251,146,26)" fg:x="8291" fg:w="9"/><text x="99.1509%" y="959.50"/></g><g><title>__GI___clone (61 samples, 0.73%)</title><rect x="98.2239%" y="1061" width="0.7271%" height="15" fill="rgb(214,146,19)" fg:x="8240" fg:w="61"/><text x="98.5430%" y="1071.50"/></g><g><title>start_thread (21 samples, 0.25%)</title><rect x="98.7007%" y="1045" width="0.2503%" height="15" fill="rgb(242,222,1)" fg:x="8280" fg:w="21"/><text x="99.0198%" y="1055.50"/></g><g><title>std::sys::unix::thread::Thread::new::thread_start (18 samples, 0.21%)</title><rect x="98.7364%" y="1029" width="0.2146%" height="15" fill="rgb(220,178,32)" fg:x="8283" fg:w="18"/><text x="99.0555%" y="1039.50"/></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.01%)</title><rect x="98.9391%" y="1013" width="0.0119%" height="15" fill="rgb(220,50,48)" fg:x="8300" fg:w="1"/><text x="99.2582%" y="1023.50"/></g><g><title>__sigaltstack (1 samples, 0.01%)</title><rect x="98.9391%" y="997" width="0.0119%" height="15" fill="rgb(207,117,22)" fg:x="8300" fg:w="1"/><text x="99.2582%" y="1007.50"/></g><g><title>_start (6 samples, 0.07%)</title><rect x="98.9510%" y="1061" width="0.0715%" height="15" fill="rgb(247,195,50)" fg:x="8301" fg:w="6"/><text x="99.2701%" y="1071.50"/></g><g><title>_dl_start (1 samples, 0.01%)</title><rect x="99.0106%" y="1045" width="0.0119%" height="15" fill="rgb(206,50,39)" fg:x="8306" fg:w="1"/><text x="99.3297%" y="1055.50"/></g><g><title>_dl_sysdep_start (1 samples, 0.01%)</title><rect x="99.0106%" y="1029" width="0.0119%" height="15" fill="rgb(236,141,29)" fg:x="8306" fg:w="1"/><text x="99.3297%" y="1039.50"/></g><g><title>dl_main (1 samples, 0.01%)</title><rect x="99.0106%" y="1013" width="0.0119%" height="15" fill="rgb(247,18,44)" fg:x="8306" fg:w="1"/><text x="99.3297%" y="1023.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either(std::function&lt;bool (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="99.0225%" y="1061" width="0.0119%" height="15" fill="rgb(243,179,46)" fg:x="8307" fg:w="1"/><text x="99.3416%" y="1071.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::operator+(std::function&lt;Result (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;)::{lambda(State&amp;)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="99.0344%" y="1061" width="0.0119%" height="15" fill="rgb(241,178,53)" fg:x="8308" fg:w="1"/><text x="99.3535%" y="1071.50"/></g><g><title>std::_Function_handler&lt;bool (unsigned int), operator|(std::function&lt;bool (unsigned int)&gt; const&amp;, std::function&lt;bool (unsigned int)&gt; const&amp;)::{lambda(unsigned int)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="99.0464%" y="1061" width="0.0119%" height="15" fill="rgb(236,100,9)" fg:x="8309" fg:w="1"/><text x="99.3655%" y="1071.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (6 samples, 0.07%)</title><rect x="99.0583%" y="1045" width="0.0715%" height="15" fill="rgb(208,180,29)" fg:x="8310" fg:w="6"/><text x="99.3774%" y="1055.50"/></g><g><title>tree_sitter_haskell_external_scanner_deserialize (2 samples, 0.02%)</title><rect x="99.1298%" y="1045" width="0.0238%" height="15" fill="rgb(241,204,36)" fg:x="8316" fg:w="2"/><text x="99.4489%" y="1055.50"/></g><g><title>tree_sitter_haskell_external_scanner_scan (1 samples, 0.01%)</title><rect x="99.1537%" y="1045" width="0.0119%" height="15" fill="rgb(248,106,5)" fg:x="8318" fg:w="1"/><text x="99.4728%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;Result (State&amp;)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;Result (State&amp;)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="99.1656%" y="1029" width="0.0119%" height="15" fill="rgb(245,13,49)" fg:x="8319" fg:w="1"/><text x="99.4847%" y="1039.50"/></g><g><title>hx (8,321 samples, 99.19%)</title><rect x="0.0000%" y="1077" width="99.1894%" height="15" fill="rgb(221,209,34)" fg:x="0" fg:w="8321"/><text x="0.3191%" y="1087.50">hx </text></g><g><title>ts_external_scanner_states (11 samples, 0.13%)</title><rect x="99.0583%" y="1061" width="0.1311%" height="15" fill="rgb(224,83,31)" fg:x="8310" fg:w="11"/><text x="99.3774%" y="1071.50"/></g><g><title>ts_external_scanner_states (2 samples, 0.02%)</title><rect x="99.1656%" y="1045" width="0.0238%" height="15" fill="rgb(218,63,22)" fg:x="8319" fg:w="2"/><text x="99.4847%" y="1055.50"/></g><g><title>std::_Function_handler&lt;Result (State&amp;), parser::either&lt;std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result&gt;(std::function&lt;std::pair&lt;bool, unsigned int&gt; (State&amp;)&gt;, std::function&lt;std::function&lt;Result (State&amp;)&gt; (unsigned int)&gt;, Result)::{lambda(State&amp;)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="99.1775%" y="1029" width="0.0119%" height="15" fill="rgb(214,167,5)" fg:x="8320" fg:w="1"/><text x="99.4966%" y="1039.50"/></g><g><title>[[heap]] (1 samples, 0.01%)</title><rect x="99.1894%" y="1061" width="0.0119%" height="15" fill="rgb(243,13,0)" fg:x="8321" fg:w="1"/><text x="99.5085%" y="1071.50"/></g><g><title>tokio::io::driver::Driver::turn (1 samples, 0.01%)</title><rect x="99.1894%" y="1045" width="0.0119%" height="15" fill="rgb(237,20,46)" fg:x="8321" fg:w="1"/><text x="99.5085%" y="1055.50"/></g><g><title>__calloc (1 samples, 0.01%)</title><rect x="99.2013%" y="1045" width="0.0119%" height="15" fill="rgb(240,94,48)" fg:x="8322" fg:w="1"/><text x="99.5204%" y="1055.50"/></g><g><title>[anon] (2 samples, 0.02%)</title><rect x="99.2013%" y="1061" width="0.0238%" height="15" fill="rgb(205,160,17)" fg:x="8322" fg:w="2"/><text x="99.5204%" y="1071.50"/></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.01%)</title><rect x="99.2133%" y="1045" width="0.0119%" height="15" fill="rgb(234,42,33)" fg:x="8323" fg:w="1"/><text x="99.5324%" y="1055.50"/></g><g><title>__libc_thread_freeres (1 samples, 0.01%)</title><rect x="99.2252%" y="1045" width="0.0119%" height="15" fill="rgb(215,166,5)" fg:x="8324" fg:w="1"/><text x="99.5443%" y="1055.50"/></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="99.2252%" y="1061" width="0.0238%" height="15" fill="rgb(215,9,6)" fg:x="8324" fg:w="2"/><text x="99.5443%" y="1071.50"/></g><g><title>tokio::io::driver::Driver::turn (1 samples, 0.01%)</title><rect x="99.2371%" y="1045" width="0.0119%" height="15" fill="rgb(212,53,6)" fg:x="8325" fg:w="1"/><text x="99.5562%" y="1055.50"/></g><g><title>__GI___call_tls_dtors (1 samples, 0.01%)</title><rect x="99.2490%" y="1029" width="0.0119%" height="15" fill="rgb(249,157,19)" fg:x="8326" fg:w="1"/><text x="99.5681%" y="1039.50"/></g><g><title>std::thread::local::fast::destroy_value (1 samples, 0.01%)</title><rect x="99.2490%" y="1013" width="0.0119%" height="15" fill="rgb(222,212,45)" fg:x="8326" fg:w="1"/><text x="99.5681%" y="1023.50"/></g><g><title>__malloc_arena_thread_freeres (1 samples, 0.01%)</title><rect x="99.2609%" y="1029" width="0.0119%" height="15" fill="rgb(232,155,17)" fg:x="8327" fg:w="1"/><text x="99.5800%" y="1039.50"/></g><g><title>__GI_munmap (17 samples, 0.20%)</title><rect x="99.2848%" y="1013" width="0.2026%" height="15" fill="rgb(212,159,50)" fg:x="8329" fg:w="17"/><text x="99.6039%" y="1023.50"/></g><g><title>arena_get2.part.4 (1 samples, 0.01%)</title><rect x="99.4874%" y="933" width="0.0119%" height="15" fill="rgb(247,71,8)" fg:x="8346" fg:w="1"/><text x="99.8065%" y="943.50"/></g><g><title>std::sys::unix::thread::guard::current (2 samples, 0.02%)</title><rect x="99.4874%" y="997" width="0.0238%" height="15" fill="rgb(239,128,29)" fg:x="8346" fg:w="2"/><text x="99.8065%" y="1007.50"/></g><g><title>__pthread_getattr_np (2 samples, 0.02%)</title><rect x="99.4874%" y="981" width="0.0238%" height="15" fill="rgb(227,117,11)" fg:x="8346" fg:w="2"/><text x="99.8065%" y="991.50"/></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="99.4874%" y="965" width="0.0238%" height="15" fill="rgb(247,183,4)" fg:x="8346" fg:w="2"/><text x="99.8065%" y="975.50"/></g><g><title>tcache_init.part.6 (2 samples, 0.02%)</title><rect x="99.4874%" y="949" width="0.0238%" height="15" fill="rgb(211,161,41)" fg:x="8346" fg:w="2"/><text x="99.8065%" y="959.50"/></g><g><title>get_free_list (1 samples, 0.01%)</title><rect x="99.4993%" y="933" width="0.0119%" height="15" fill="rgb(250,157,52)" fg:x="8347" fg:w="1"/><text x="99.8184%" y="943.50"/></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::handle::Handle&gt; (1 samples, 0.01%)</title><rect x="99.5113%" y="981" width="0.0119%" height="15" fill="rgb(249,118,26)" fg:x="8348" fg:w="1"/><text x="99.8304%" y="991.50"/></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="99.5113%" y="965" width="0.0119%" height="15" fill="rgb(234,52,37)" fg:x="8348" fg:w="1"/><text x="99.8304%" y="975.50"/></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="99.5113%" y="949" width="0.0119%" height="15" fill="rgb(237,188,45)" fg:x="8348" fg:w="1"/><text x="99.8304%" y="959.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="99.5113%" y="933" width="0.0119%" height="15" fill="rgb(241,3,40)" fg:x="8348" fg:w="1"/><text x="99.8304%" y="943.50"/></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="99.5113%" y="917" width="0.0119%" height="15" fill="rgb(246,192,7)" fg:x="8348" fg:w="1"/><text x="99.8304%" y="927.50"/></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (6 samples, 0.07%)</title><rect x="99.5351%" y="965" width="0.0715%" height="15" fill="rgb(206,168,17)" fg:x="8350" fg:w="6"/><text x="99.8542%" y="975.50"/></g><g><title>syscall (6 samples, 0.07%)</title><rect x="99.5351%" y="949" width="0.0715%" height="15" fill="rgb(208,124,33)" fg:x="8350" fg:w="6"/><text x="99.8542%" y="959.50"/></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (4 samples, 0.05%)</title><rect x="99.6066%" y="965" width="0.0477%" height="15" fill="rgb(226,186,11)" fg:x="8356" fg:w="4"/><text x="99.9257%" y="975.50"/></g><g><title>syscall (4 samples, 0.05%)</title><rect x="99.6066%" y="949" width="0.0477%" height="15" fill="rgb(218,223,1)" fg:x="8356" fg:w="4"/><text x="99.9257%" y="959.50"/></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::shutdown (1 samples, 0.01%)</title><rect x="99.6543%" y="885" width="0.0119%" height="15" fill="rgb(254,65,21)" fg:x="8360" fg:w="1"/><text x="99.9734%" y="895.50"/></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (1 samples, 0.01%)</title><rect x="99.6543%" y="869" width="0.0119%" height="15" fill="rgb(239,63,32)" fg:x="8360" fg:w="1"/><text x="99.9734%" y="879.50"/></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (1 samples, 0.01%)</title><rect x="99.6543%" y="853" width="0.0119%" height="15" fill="rgb(219,85,29)" fg:x="8360" fg:w="1"/><text x="99.9734%" y="863.50"/></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.01%)</title><rect x="99.6662%" y="885" width="0.0119%" height="15" fill="rgb(246,74,32)" fg:x="8361" fg:w="1"/><text x="99.9853%" y="895.50"/></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (13 samples, 0.15%)</title><rect x="99.6901%" y="853" width="0.1550%" height="15" fill="rgb(251,20,52)" fg:x="8363" fg:w="13"/><text x="100.0092%" y="863.50"/></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_internal (13 samples, 0.15%)</title><rect x="99.6901%" y="837" width="0.1550%" height="15" fill="rgb(222,160,46)" fg:x="8363" fg:w="13"/><text x="100.0092%" y="847.50"/></g><g><title>tokio::io::driver::Driver::turn (13 samples, 0.15%)</title><rect x="99.6901%" y="821" width="0.1550%" height="15" fill="rgb(230,68,24)" fg:x="8363" fg:w="13"/><text x="100.0092%" y="831.50"/></g><g><title>epoll_wait (11 samples, 0.13%)</title><rect x="99.7139%" y="805" width="0.1311%" height="15" fill="rgb(233,83,32)" fg:x="8365" fg:w="11"/><text x="100.0330%" y="815.50"/></g><g><title>__libc_disable_asynccancel (1 samples, 0.01%)</title><rect x="99.8331%" y="789" width="0.0119%" height="15" fill="rgb(253,79,36)" fg:x="8375" fg:w="1"/><text x="100.1522%" y="799.50"/></g><g><title>__GI___clone (62 samples, 0.74%)</title><rect x="99.2490%" y="1061" width="0.7391%" height="15" fill="rgb(224,125,51)" fg:x="8326" fg:w="62"/><text x="99.5681%" y="1071.50"/></g><g><title>start_thread (62 samples, 0.74%)</title><rect x="99.2490%" y="1045" width="0.7391%" height="15" fill="rgb(254,158,3)" fg:x="8326" fg:w="62"/><text x="99.5681%" y="1055.50"/></g><g><title>std::sys::unix::thread::Thread::new::thread_start (60 samples, 0.72%)</title><rect x="99.2729%" y="1029" width="0.7152%" height="15" fill="rgb(243,226,3)" fg:x="8328" fg:w="60"/><text x="99.5920%" y="1039.50"/></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (42 samples, 0.50%)</title><rect x="99.4874%" y="1013" width="0.5007%" height="15" fill="rgb(208,37,10)" fg:x="8346" fg:w="42"/><text x="99.8065%" y="1023.50"/></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (40 samples, 0.48%)</title><rect x="99.5113%" y="997" width="0.4768%" height="15" fill="rgb(227,35,6)" fg:x="8348" fg:w="40"/><text x="99.8304%" y="1007.50"/></g><g><title>tokio::runtime::blocking::pool::Inner::run (39 samples, 0.46%)</title><rect x="99.5232%" y="981" width="0.4649%" height="15" fill="rgb(236,35,38)" fg:x="8349" fg:w="39"/><text x="99.8423%" y="991.50"/></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (28 samples, 0.33%)</title><rect x="99.6543%" y="965" width="0.3338%" height="15" fill="rgb(247,165,26)" fg:x="8360" fg:w="28"/><text x="99.9734%" y="975.50"/></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (28 samples, 0.33%)</title><rect x="99.6543%" y="949" width="0.3338%" height="15" fill="rgb(251,131,20)" fg:x="8360" fg:w="28"/><text x="99.9734%" y="959.50"/></g><g><title>tokio::runtime::thread_pool::worker::run (28 samples, 0.33%)</title><rect x="99.6543%" y="933" width="0.3338%" height="15" fill="rgb(248,168,52)" fg:x="8360" fg:w="28"/><text x="99.9734%" y="943.50"/></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (28 samples, 0.33%)</title><rect x="99.6543%" y="917" width="0.3338%" height="15" fill="rgb(241,220,45)" fg:x="8360" fg:w="28"/><text x="99.9734%" y="927.50"/></g><g><title>tokio::runtime::thread_pool::worker::Context::run (28 samples, 0.33%)</title><rect x="99.6543%" y="901" width="0.3338%" height="15" fill="rgb(240,85,44)" fg:x="8360" fg:w="28"/><text x="99.9734%" y="911.50"/></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (26 samples, 0.31%)</title><rect x="99.6781%" y="885" width="0.3099%" height="15" fill="rgb(223,69,47)" fg:x="8362" fg:w="26"/><text x="99.9972%" y="895.50"/></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (25 samples, 0.30%)</title><rect x="99.6901%" y="869" width="0.2980%" height="15" fill="rgb(221,209,17)" fg:x="8363" fg:w="25"/><text x="100.0092%" y="879.50"/></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (12 samples, 0.14%)</title><rect x="99.8450%" y="853" width="0.1430%" height="15" fill="rgb(224,194,24)" fg:x="8376" fg:w="12"/><text x="100.1641%" y="863.50"/></g><g><title>syscall (10 samples, 0.12%)</title><rect x="99.8689%" y="837" width="0.1192%" height="15" fill="rgb(249,43,24)" fg:x="8378" fg:w="10"/><text x="100.1880%" y="847.50"/></g><g><title>all (8,389 samples, 100%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(245,78,29)" fg:x="0" fg:w="8389"/><text x="0.3191%" y="1103.50">all </text></g><g><title>tokio-runtime-w (68 samples, 0.81%)</title><rect x="99.1894%" y="1077" width="0.8106%" height="15" fill="rgb(241,167,34)" fg:x="8321" fg:w="68"/><text x="99.5085%" y="1087.50"/></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="99.9881%" y="1061" width="0.0119%" height="15" fill="rgb(225,91,27)" fg:x="8388" fg:w="1"/><text x="100.3072%" y="1071.50"/></g></svg></svg>